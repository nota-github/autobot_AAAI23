11/08 06:33:12 PM | args = Namespace(output_dir='result/test/test5/', loaded_model_path='./checkpoints/cifar10/densenet_40.pt', resume=False, test_only=False, mode='prune', batch_size=64, nb_batches=200, Mflops_target=167.41, lr=0.6, momentum=0.9, beta=6, gamma=0.2, gpu='5', num_workers=4, dataset='cifar10', arch='densenet_40', save_plot=False, seed=1, lr_finetuning=0.02, epoch_finetuning=200, wd=0.002, data_dir='./data/cifar10/', print_freq=200, num_classes=10, device_ids=[5], device=device(type='cuda', index=0), name_base='')
11/08 06:33:19 PM | ----------------------------------------
11/08 06:33:19 PM | ==> Building model...
11/08 06:33:19 PM | ----------------------------------------
11/08 06:33:19 PM | ==> Loading weights into the model...
11/08 06:33:19 PM | ----------------------------------------
11/08 06:33:19 PM | DenseNet(
  (conv1): Conv2d(3, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (dense1): Sequential(
    (0): DenseBasicBlock(
      (bn1): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(24, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (1): DenseBasicBlock(
      (bn1): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(36, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (2): DenseBasicBlock(
      (bn1): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (3): DenseBasicBlock(
      (bn1): BatchNorm2d(60, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(60, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (4): DenseBasicBlock(
      (bn1): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(72, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (5): DenseBasicBlock(
      (bn1): BatchNorm2d(84, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(84, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (6): DenseBasicBlock(
      (bn1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(96, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (7): DenseBasicBlock(
      (bn1): BatchNorm2d(108, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(108, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (8): DenseBasicBlock(
      (bn1): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(120, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (9): DenseBasicBlock(
      (bn1): BatchNorm2d(132, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(132, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (10): DenseBasicBlock(
      (bn1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(144, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (11): DenseBasicBlock(
      (bn1): BatchNorm2d(156, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(156, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
  )
  (trans1): Transition(
    (bn1): BatchNorm2d(168, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace=True)
    (conv1): Conv2d(168, 168, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
  )
  (dense2): Sequential(
    (0): DenseBasicBlock(
      (bn1): BatchNorm2d(168, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(168, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (1): DenseBasicBlock(
      (bn1): BatchNorm2d(180, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(180, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (2): DenseBasicBlock(
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(192, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (3): DenseBasicBlock(
      (bn1): BatchNorm2d(204, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(204, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (4): DenseBasicBlock(
      (bn1): BatchNorm2d(216, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(216, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (5): DenseBasicBlock(
      (bn1): BatchNorm2d(228, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(228, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (6): DenseBasicBlock(
      (bn1): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(240, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (7): DenseBasicBlock(
      (bn1): BatchNorm2d(252, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(252, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (8): DenseBasicBlock(
      (bn1): BatchNorm2d(264, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(264, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (9): DenseBasicBlock(
      (bn1): BatchNorm2d(276, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(276, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (10): DenseBasicBlock(
      (bn1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(288, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (11): DenseBasicBlock(
      (bn1): BatchNorm2d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(300, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
  )
  (trans2): Transition(
    (bn1): BatchNorm2d(312, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace=True)
    (conv1): Conv2d(312, 312, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
  )
  (dense3): Sequential(
    (0): DenseBasicBlock(
      (bn1): BatchNorm2d(312, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(312, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (1): DenseBasicBlock(
      (bn1): BatchNorm2d(324, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(324, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (2): DenseBasicBlock(
      (bn1): BatchNorm2d(336, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(336, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (3): DenseBasicBlock(
      (bn1): BatchNorm2d(348, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(348, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (4): DenseBasicBlock(
      (bn1): BatchNorm2d(360, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(360, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (5): DenseBasicBlock(
      (bn1): BatchNorm2d(372, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(372, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (6): DenseBasicBlock(
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(384, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (7): DenseBasicBlock(
      (bn1): BatchNorm2d(396, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(396, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (8): DenseBasicBlock(
      (bn1): BatchNorm2d(408, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(408, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (9): DenseBasicBlock(
      (bn1): BatchNorm2d(420, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(420, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (10): DenseBasicBlock(
      (bn1): BatchNorm2d(432, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(432, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (11): DenseBasicBlock(
      (bn1): BatchNorm2d(444, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(444, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
  )
  (bn): BatchNorm2d(456, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (avgpool): AvgPool2d(kernel_size=8, stride=8, padding=0)
  (fc): Linear(in_features=456, out_features=10, bias=True)
)
11/08 06:33:22 PM | Save modules info...
11/08 06:33:22 PM | FLOPS pruning ratio is 0.42
11/08 06:33:22 PM | Pruning with information flow
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: Conv2d(3, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
11/08 06:33:22 PM | cin: None
11/08 06:33:22 PM | cout: [0]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
11/08 06:33:22 PM | cin: [0]
11/08 06:33:22 PM | cout: [0]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: ReLU(inplace=True)
11/08 06:33:22 PM | cin: [0]
11/08 06:33:22 PM | cout: [0]
11/08 06:33:22 PM | active
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: Conv2d(24, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
11/08 06:33:22 PM | cin: [0]
11/08 06:33:22 PM | cout: [1]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
11/08 06:33:22 PM | cin: [0, 1]
11/08 06:33:22 PM | cout: [0, 1]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: ReLU(inplace=True)
11/08 06:33:22 PM | cin: [0, 1]
11/08 06:33:22 PM | cout: [0, 1]
11/08 06:33:22 PM | active
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: Conv2d(36, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
11/08 06:33:22 PM | cin: [0, 1]
11/08 06:33:22 PM | cout: [2]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
11/08 06:33:22 PM | cin: [0, 1, 2]
11/08 06:33:22 PM | cout: [0, 1, 2]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: ReLU(inplace=True)
11/08 06:33:22 PM | cin: [0, 1, 2]
11/08 06:33:22 PM | cout: [0, 1, 2]
11/08 06:33:22 PM | active
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
11/08 06:33:22 PM | cin: [0, 1, 2]
11/08 06:33:22 PM | cout: [3]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: BatchNorm2d(60, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
11/08 06:33:22 PM | cin: [0, 1, 2, 3]
11/08 06:33:22 PM | cout: [0, 1, 2, 3]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: ReLU(inplace=True)
11/08 06:33:22 PM | cin: [0, 1, 2, 3]
11/08 06:33:22 PM | cout: [0, 1, 2, 3]
11/08 06:33:22 PM | active
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: Conv2d(60, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
11/08 06:33:22 PM | cin: [0, 1, 2, 3]
11/08 06:33:22 PM | cout: [4]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
11/08 06:33:22 PM | cin: [0, 1, 2, 3, 4]
11/08 06:33:22 PM | cout: [0, 1, 2, 3, 4]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: ReLU(inplace=True)
11/08 06:33:22 PM | cin: [0, 1, 2, 3, 4]
11/08 06:33:22 PM | cout: [0, 1, 2, 3, 4]
11/08 06:33:22 PM | active
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: Conv2d(72, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
11/08 06:33:22 PM | cin: [0, 1, 2, 3, 4]
11/08 06:33:22 PM | cout: [5]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: BatchNorm2d(84, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
11/08 06:33:22 PM | cin: [0, 1, 2, 3, 4, 5]
11/08 06:33:22 PM | cout: [0, 1, 2, 3, 4, 5]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: ReLU(inplace=True)
11/08 06:33:22 PM | cin: [0, 1, 2, 3, 4, 5]
11/08 06:33:22 PM | cout: [0, 1, 2, 3, 4, 5]
11/08 06:33:22 PM | active
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: Conv2d(84, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
11/08 06:33:22 PM | cin: [0, 1, 2, 3, 4, 5]
11/08 06:33:22 PM | cout: [6]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
11/08 06:33:22 PM | cin: [0, 1, 2, 3, 4, 5, 6]
11/08 06:33:22 PM | cout: [0, 1, 2, 3, 4, 5, 6]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: ReLU(inplace=True)
11/08 06:33:22 PM | cin: [0, 1, 2, 3, 4, 5, 6]
11/08 06:33:22 PM | cout: [0, 1, 2, 3, 4, 5, 6]
11/08 06:33:22 PM | active
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: Conv2d(96, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
11/08 06:33:22 PM | cin: [0, 1, 2, 3, 4, 5, 6]
11/08 06:33:22 PM | cout: [7]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: BatchNorm2d(108, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
11/08 06:33:22 PM | cin: [0, 1, 2, 3, 4, 5, 6, 7]
11/08 06:33:22 PM | cout: [0, 1, 2, 3, 4, 5, 6, 7]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: ReLU(inplace=True)
11/08 06:33:22 PM | cin: [0, 1, 2, 3, 4, 5, 6, 7]
11/08 06:33:22 PM | cout: [0, 1, 2, 3, 4, 5, 6, 7]
11/08 06:33:22 PM | active
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: Conv2d(108, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
11/08 06:33:22 PM | cin: [0, 1, 2, 3, 4, 5, 6, 7]
11/08 06:33:22 PM | cout: [8]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
11/08 06:33:22 PM | cin: [0, 1, 2, 3, 4, 5, 6, 7, 8]
11/08 06:33:22 PM | cout: [0, 1, 2, 3, 4, 5, 6, 7, 8]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: ReLU(inplace=True)
11/08 06:33:22 PM | cin: [0, 1, 2, 3, 4, 5, 6, 7, 8]
11/08 06:33:22 PM | cout: [0, 1, 2, 3, 4, 5, 6, 7, 8]
11/08 06:33:22 PM | active
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: Conv2d(120, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
11/08 06:33:22 PM | cin: [0, 1, 2, 3, 4, 5, 6, 7, 8]
11/08 06:33:22 PM | cout: [9]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: BatchNorm2d(132, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
11/08 06:33:22 PM | cin: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
11/08 06:33:22 PM | cout: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: ReLU(inplace=True)
11/08 06:33:22 PM | cin: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
11/08 06:33:22 PM | cout: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
11/08 06:33:22 PM | active
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: Conv2d(132, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
11/08 06:33:22 PM | cin: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
11/08 06:33:22 PM | cout: [10]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
11/08 06:33:22 PM | cin: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
11/08 06:33:22 PM | cout: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: ReLU(inplace=True)
11/08 06:33:22 PM | cin: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
11/08 06:33:22 PM | cout: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
11/08 06:33:22 PM | active
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: Conv2d(144, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
11/08 06:33:22 PM | cin: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
11/08 06:33:22 PM | cout: [11]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: BatchNorm2d(156, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
11/08 06:33:22 PM | cin: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
11/08 06:33:22 PM | cout: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: ReLU(inplace=True)
11/08 06:33:22 PM | cin: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
11/08 06:33:22 PM | cout: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
11/08 06:33:22 PM | active
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: Conv2d(156, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
11/08 06:33:22 PM | cin: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
11/08 06:33:22 PM | cout: [12]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: BatchNorm2d(168, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
11/08 06:33:22 PM | cin: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
11/08 06:33:22 PM | cout: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: ReLU(inplace=True)
11/08 06:33:22 PM | cin: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
11/08 06:33:22 PM | cout: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
11/08 06:33:22 PM | active
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: Conv2d(168, 168, kernel_size=(1, 1), stride=(1, 1), bias=False)
11/08 06:33:22 PM | cin: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
11/08 06:33:22 PM | cout: [13]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: AvgPool2d(kernel_size=2, stride=2, padding=0)
11/08 06:33:22 PM | cin: [13]
11/08 06:33:22 PM | cout: [13]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: BatchNorm2d(168, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
11/08 06:33:22 PM | cin: [13]
11/08 06:33:22 PM | cout: [13]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: ReLU(inplace=True)
11/08 06:33:22 PM | cin: [13]
11/08 06:33:22 PM | cout: [13]
11/08 06:33:22 PM | active
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: Conv2d(168, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
11/08 06:33:22 PM | cin: [13]
11/08 06:33:22 PM | cout: [14]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: BatchNorm2d(180, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
11/08 06:33:22 PM | cin: [13, 14]
11/08 06:33:22 PM | cout: [13, 14]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: ReLU(inplace=True)
11/08 06:33:22 PM | cin: [13, 14]
11/08 06:33:22 PM | cout: [13, 14]
11/08 06:33:22 PM | active
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: Conv2d(180, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
11/08 06:33:22 PM | cin: [13, 14]
11/08 06:33:22 PM | cout: [15]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
11/08 06:33:22 PM | cin: [13, 14, 15]
11/08 06:33:22 PM | cout: [13, 14, 15]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: ReLU(inplace=True)
11/08 06:33:22 PM | cin: [13, 14, 15]
11/08 06:33:22 PM | cout: [13, 14, 15]
11/08 06:33:22 PM | active
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: Conv2d(192, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
11/08 06:33:22 PM | cin: [13, 14, 15]
11/08 06:33:22 PM | cout: [16]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: BatchNorm2d(204, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
11/08 06:33:22 PM | cin: [13, 14, 15, 16]
11/08 06:33:22 PM | cout: [13, 14, 15, 16]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: ReLU(inplace=True)
11/08 06:33:22 PM | cin: [13, 14, 15, 16]
11/08 06:33:22 PM | cout: [13, 14, 15, 16]
11/08 06:33:22 PM | active
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: Conv2d(204, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
11/08 06:33:22 PM | cin: [13, 14, 15, 16]
11/08 06:33:22 PM | cout: [17]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: BatchNorm2d(216, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
11/08 06:33:22 PM | cin: [13, 14, 15, 16, 17]
11/08 06:33:22 PM | cout: [13, 14, 15, 16, 17]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: ReLU(inplace=True)
11/08 06:33:22 PM | cin: [13, 14, 15, 16, 17]
11/08 06:33:22 PM | cout: [13, 14, 15, 16, 17]
11/08 06:33:22 PM | active
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: Conv2d(216, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
11/08 06:33:22 PM | cin: [13, 14, 15, 16, 17]
11/08 06:33:22 PM | cout: [18]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: BatchNorm2d(228, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
11/08 06:33:22 PM | cin: [13, 14, 15, 16, 17, 18]
11/08 06:33:22 PM | cout: [13, 14, 15, 16, 17, 18]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: ReLU(inplace=True)
11/08 06:33:22 PM | cin: [13, 14, 15, 16, 17, 18]
11/08 06:33:22 PM | cout: [13, 14, 15, 16, 17, 18]
11/08 06:33:22 PM | active
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: Conv2d(228, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
11/08 06:33:22 PM | cin: [13, 14, 15, 16, 17, 18]
11/08 06:33:22 PM | cout: [19]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
11/08 06:33:22 PM | cin: [13, 14, 15, 16, 17, 18, 19]
11/08 06:33:22 PM | cout: [13, 14, 15, 16, 17, 18, 19]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: ReLU(inplace=True)
11/08 06:33:22 PM | cin: [13, 14, 15, 16, 17, 18, 19]
11/08 06:33:22 PM | cout: [13, 14, 15, 16, 17, 18, 19]
11/08 06:33:22 PM | active
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: Conv2d(240, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
11/08 06:33:22 PM | cin: [13, 14, 15, 16, 17, 18, 19]
11/08 06:33:22 PM | cout: [20]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: BatchNorm2d(252, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
11/08 06:33:22 PM | cin: [13, 14, 15, 16, 17, 18, 19, 20]
11/08 06:33:22 PM | cout: [13, 14, 15, 16, 17, 18, 19, 20]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: ReLU(inplace=True)
11/08 06:33:22 PM | cin: [13, 14, 15, 16, 17, 18, 19, 20]
11/08 06:33:22 PM | cout: [13, 14, 15, 16, 17, 18, 19, 20]
11/08 06:33:22 PM | active
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: Conv2d(252, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
11/08 06:33:22 PM | cin: [13, 14, 15, 16, 17, 18, 19, 20]
11/08 06:33:22 PM | cout: [21]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: BatchNorm2d(264, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
11/08 06:33:22 PM | cin: [13, 14, 15, 16, 17, 18, 19, 20, 21]
11/08 06:33:22 PM | cout: [13, 14, 15, 16, 17, 18, 19, 20, 21]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: ReLU(inplace=True)
11/08 06:33:22 PM | cin: [13, 14, 15, 16, 17, 18, 19, 20, 21]
11/08 06:33:22 PM | cout: [13, 14, 15, 16, 17, 18, 19, 20, 21]
11/08 06:33:22 PM | active
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: Conv2d(264, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
11/08 06:33:22 PM | cin: [13, 14, 15, 16, 17, 18, 19, 20, 21]
11/08 06:33:22 PM | cout: [22]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: BatchNorm2d(276, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
11/08 06:33:22 PM | cin: [13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
11/08 06:33:22 PM | cout: [13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: ReLU(inplace=True)
11/08 06:33:22 PM | cin: [13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
11/08 06:33:22 PM | cout: [13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
11/08 06:33:22 PM | active
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: Conv2d(276, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
11/08 06:33:22 PM | cin: [13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
11/08 06:33:22 PM | cout: [23]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
11/08 06:33:22 PM | cin: [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23]
11/08 06:33:22 PM | cout: [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: ReLU(inplace=True)
11/08 06:33:22 PM | cin: [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23]
11/08 06:33:22 PM | cout: [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23]
11/08 06:33:22 PM | active
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: Conv2d(288, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
11/08 06:33:22 PM | cin: [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23]
11/08 06:33:22 PM | cout: [24]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: BatchNorm2d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
11/08 06:33:22 PM | cin: [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24]
11/08 06:33:22 PM | cout: [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: ReLU(inplace=True)
11/08 06:33:22 PM | cin: [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24]
11/08 06:33:22 PM | cout: [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24]
11/08 06:33:22 PM | active
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: Conv2d(300, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
11/08 06:33:22 PM | cin: [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24]
11/08 06:33:22 PM | cout: [25]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: BatchNorm2d(312, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
11/08 06:33:22 PM | cin: [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25]
11/08 06:33:22 PM | cout: [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: ReLU(inplace=True)
11/08 06:33:22 PM | cin: [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25]
11/08 06:33:22 PM | cout: [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25]
11/08 06:33:22 PM | active
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: Conv2d(312, 312, kernel_size=(1, 1), stride=(1, 1), bias=False)
11/08 06:33:22 PM | cin: [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25]
11/08 06:33:22 PM | cout: [26]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: AvgPool2d(kernel_size=2, stride=2, padding=0)
11/08 06:33:22 PM | cin: [26]
11/08 06:33:22 PM | cout: [26]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: BatchNorm2d(312, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
11/08 06:33:22 PM | cin: [26]
11/08 06:33:22 PM | cout: [26]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: ReLU(inplace=True)
11/08 06:33:22 PM | cin: [26]
11/08 06:33:22 PM | cout: [26]
11/08 06:33:22 PM | active
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: Conv2d(312, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
11/08 06:33:22 PM | cin: [26]
11/08 06:33:22 PM | cout: [27]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: BatchNorm2d(324, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
11/08 06:33:22 PM | cin: [26, 27]
11/08 06:33:22 PM | cout: [26, 27]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: ReLU(inplace=True)
11/08 06:33:22 PM | cin: [26, 27]
11/08 06:33:22 PM | cout: [26, 27]
11/08 06:33:22 PM | active
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: Conv2d(324, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
11/08 06:33:22 PM | cin: [26, 27]
11/08 06:33:22 PM | cout: [28]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: BatchNorm2d(336, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
11/08 06:33:22 PM | cin: [26, 27, 28]
11/08 06:33:22 PM | cout: [26, 27, 28]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: ReLU(inplace=True)
11/08 06:33:22 PM | cin: [26, 27, 28]
11/08 06:33:22 PM | cout: [26, 27, 28]
11/08 06:33:22 PM | active
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: Conv2d(336, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
11/08 06:33:22 PM | cin: [26, 27, 28]
11/08 06:33:22 PM | cout: [29]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: BatchNorm2d(348, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
11/08 06:33:22 PM | cin: [26, 27, 28, 29]
11/08 06:33:22 PM | cout: [26, 27, 28, 29]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: ReLU(inplace=True)
11/08 06:33:22 PM | cin: [26, 27, 28, 29]
11/08 06:33:22 PM | cout: [26, 27, 28, 29]
11/08 06:33:22 PM | active
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: Conv2d(348, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
11/08 06:33:22 PM | cin: [26, 27, 28, 29]
11/08 06:33:22 PM | cout: [30]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: BatchNorm2d(360, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
11/08 06:33:22 PM | cin: [26, 27, 28, 29, 30]
11/08 06:33:22 PM | cout: [26, 27, 28, 29, 30]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: ReLU(inplace=True)
11/08 06:33:22 PM | cin: [26, 27, 28, 29, 30]
11/08 06:33:22 PM | cout: [26, 27, 28, 29, 30]
11/08 06:33:22 PM | active
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: Conv2d(360, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
11/08 06:33:22 PM | cin: [26, 27, 28, 29, 30]
11/08 06:33:22 PM | cout: [31]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: BatchNorm2d(372, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
11/08 06:33:22 PM | cin: [26, 27, 28, 29, 30, 31]
11/08 06:33:22 PM | cout: [26, 27, 28, 29, 30, 31]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: ReLU(inplace=True)
11/08 06:33:22 PM | cin: [26, 27, 28, 29, 30, 31]
11/08 06:33:22 PM | cout: [26, 27, 28, 29, 30, 31]
11/08 06:33:22 PM | active
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: Conv2d(372, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
11/08 06:33:22 PM | cin: [26, 27, 28, 29, 30, 31]
11/08 06:33:22 PM | cout: [32]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
11/08 06:33:22 PM | cin: [26, 27, 28, 29, 30, 31, 32]
11/08 06:33:22 PM | cout: [26, 27, 28, 29, 30, 31, 32]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: ReLU(inplace=True)
11/08 06:33:22 PM | cin: [26, 27, 28, 29, 30, 31, 32]
11/08 06:33:22 PM | cout: [26, 27, 28, 29, 30, 31, 32]
11/08 06:33:22 PM | active
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: Conv2d(384, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
11/08 06:33:22 PM | cin: [26, 27, 28, 29, 30, 31, 32]
11/08 06:33:22 PM | cout: [33]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: BatchNorm2d(396, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
11/08 06:33:22 PM | cin: [26, 27, 28, 29, 30, 31, 32, 33]
11/08 06:33:22 PM | cout: [26, 27, 28, 29, 30, 31, 32, 33]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: ReLU(inplace=True)
11/08 06:33:22 PM | cin: [26, 27, 28, 29, 30, 31, 32, 33]
11/08 06:33:22 PM | cout: [26, 27, 28, 29, 30, 31, 32, 33]
11/08 06:33:22 PM | active
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: Conv2d(396, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
11/08 06:33:22 PM | cin: [26, 27, 28, 29, 30, 31, 32, 33]
11/08 06:33:22 PM | cout: [34]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: BatchNorm2d(408, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
11/08 06:33:22 PM | cin: [26, 27, 28, 29, 30, 31, 32, 33, 34]
11/08 06:33:22 PM | cout: [26, 27, 28, 29, 30, 31, 32, 33, 34]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: ReLU(inplace=True)
11/08 06:33:22 PM | cin: [26, 27, 28, 29, 30, 31, 32, 33, 34]
11/08 06:33:22 PM | cout: [26, 27, 28, 29, 30, 31, 32, 33, 34]
11/08 06:33:22 PM | active
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: Conv2d(408, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
11/08 06:33:22 PM | cin: [26, 27, 28, 29, 30, 31, 32, 33, 34]
11/08 06:33:22 PM | cout: [35]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: BatchNorm2d(420, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
11/08 06:33:22 PM | cin: [26, 27, 28, 29, 30, 31, 32, 33, 34, 35]
11/08 06:33:22 PM | cout: [26, 27, 28, 29, 30, 31, 32, 33, 34, 35]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: ReLU(inplace=True)
11/08 06:33:22 PM | cin: [26, 27, 28, 29, 30, 31, 32, 33, 34, 35]
11/08 06:33:22 PM | cout: [26, 27, 28, 29, 30, 31, 32, 33, 34, 35]
11/08 06:33:22 PM | active
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: Conv2d(420, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
11/08 06:33:22 PM | cin: [26, 27, 28, 29, 30, 31, 32, 33, 34, 35]
11/08 06:33:22 PM | cout: [36]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: BatchNorm2d(432, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
11/08 06:33:22 PM | cin: [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36]
11/08 06:33:22 PM | cout: [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: ReLU(inplace=True)
11/08 06:33:22 PM | cin: [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36]
11/08 06:33:22 PM | cout: [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36]
11/08 06:33:22 PM | active
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: Conv2d(432, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
11/08 06:33:22 PM | cin: [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36]
11/08 06:33:22 PM | cout: [37]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: BatchNorm2d(444, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
11/08 06:33:22 PM | cin: [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37]
11/08 06:33:22 PM | cout: [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: ReLU(inplace=True)
11/08 06:33:22 PM | cin: [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37]
11/08 06:33:22 PM | cout: [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37]
11/08 06:33:22 PM | active
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: Conv2d(444, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
11/08 06:33:22 PM | cin: [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37]
11/08 06:33:22 PM | cout: [38]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: BatchNorm2d(456, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
11/08 06:33:22 PM | cin: [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38]
11/08 06:33:22 PM | cout: [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: ReLU(inplace=True)
11/08 06:33:22 PM | cin: [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38]
11/08 06:33:22 PM | cout: [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38]
11/08 06:33:22 PM | active
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: AvgPool2d(kernel_size=8, stride=8, padding=0)
11/08 06:33:22 PM | cin: [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38]
11/08 06:33:22 PM | cout: [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38]
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | -----
11/08 06:33:22 PM | module: Linear(in_features=456, out_features=10, bias=True)
11/08 06:33:22 PM | cin: [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38]
11/08 06:33:22 PM | cout: None
11/08 06:33:22 PM | inactive
11/08 06:33:22 PM | Used masks: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38]
11/08 06:33:22 PM | 39 unique masks in total
11/08 06:33:22 PM | === Batch 1/200
11/08 06:33:24 PM | loss = 0.097 + 3.299 + 0.040 = 3.436
11/08 06:33:27 PM | attribution_score[0:12]: 
[ 0.83  0.83  0.83  0.83  0.83  0.94  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.94  0.83  0.94  0.83  0.83  0.83  0.94  0.83  0.83  0.83  0.83 ]
[ 0.94  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.94  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.94  0.94  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.94  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.94  0.94  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.94  0.94  0.94  0.83  0.83  0.94  0.83  0.83  0.83  0.94  0.83  0.94 ]
[ 0.94  0.83  0.94  0.83  0.94  0.83  0.94  0.83  0.83  0.94  0.83  0.83 ]
[ 0.94  0.94  0.83  0.83  0.83  0.94  0.83  0.83  0.83  0.94  0.83  0.83 ]
[ 0.94  0.94  0.94  0.83  0.83  0.83  0.83  0.94  0.94  0.94  0.83  0.83 ]
[ 0.83  0.83  0.94  0.94  0.83  0.83  0.94  0.94  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.94  0.83  0.83  0.83  0.94  0.83  0.94 ]
[ 0.83  0.94  0.83  0.94  0.83  0.83  0.94  0.83  0.83  0.83  0.83  0.94 ]
[ 0.83  0.94  0.83  0.94  0.83  0.83  0.83  0.83  0.83  0.83  0.94  0.94 ]
[ 0.83  0.94  0.94  0.94  0.83  0.94  0.83  0.94  0.83  0.94  0.83  0.83 ]
[ 0.83  0.83  0.83  0.94  0.83  0.83  0.83  0.83  0.94  0.83  0.94  0.83 ]
[ 0.94  0.83  0.83  0.83  0.83  0.83  0.83  0.94  0.83  0.83  0.94  0.83 ]

11/08 06:33:27 PM | === Batch 2/200
11/08 06:33:28 PM | loss = 0.215 + 1.773 + 0.062 = 2.050
11/08 06:33:32 PM | attribution_score[0:12]: 
[ 0.73  0.73  0.79  0.73  0.73  0.94  0.74  0.73  0.83  0.75  0.73  0.74 ]
[ 0.73  0.73  0.73  0.73  0.73  0.73  0.73  0.73  0.73  0.73  0.73  0.73 ]
[ 0.73  0.73  0.73  0.73  0.73  0.73  0.73  0.73  0.73  0.73  0.73  0.73 ]
[ 0.73  0.73  0.73  0.75  0.73  0.76  0.73  0.78  0.74  0.73  0.77  0.73 ]
[ 0.73  0.75  0.73  0.73  0.73  0.73  0.73  0.73  0.73  0.73  0.73  0.73 ]
[ 0.74  0.73  0.73  0.73  0.80  0.74  0.74  0.73  0.73  0.73  0.73  0.73 ]
[ 0.75  0.73  0.73  0.73  0.73  0.73  0.73  0.73  0.73  0.73  0.73  0.73 ]
[ 0.73  0.73  0.73  0.73  0.73  0.73  0.73  0.73  0.73  0.73  0.73  0.73 ]
[ 0.73  0.73  0.73  0.74  0.73  0.78  0.73  0.73  0.73  0.73  0.73  0.73 ]
[ 0.73  0.77  0.78  0.73  0.83  0.73  0.73  0.73  0.73  0.73  0.74  0.73 ]
[ 0.73  0.73  0.73  0.73  0.73  0.73  0.73  0.73  0.73  0.73  0.73  0.73 ]
[ 0.73  0.73  0.73  0.73  0.73  0.73  0.73  0.73  0.73  0.73  0.73  0.73 ]
[ 0.73  0.73  0.73  0.73  0.73  0.73  0.73  0.73  0.73  0.73  0.73  0.73 ]
[ 0.73  0.74  0.73  0.74  0.73  0.74  0.73  0.73  0.73  0.73  0.74  0.73 ]
[ 0.75  0.97  0.74  0.97  0.73  0.73  0.75  0.97  0.74  0.86  0.87  0.73 ]
[ 0.95  0.77  0.74  0.74  0.73  0.73  0.73  0.74  0.91  0.73  0.73  0.73 ]
[ 0.73  0.76  0.73  0.73  0.73  0.73  0.73  0.73  0.73  0.73  0.73  0.73 ]
[ 0.75  0.74  0.74  0.73  0.73  0.73  0.73  0.73  0.73  0.73  0.74  0.73 ]
[ 0.75  0.80  0.73  0.74  0.73  0.73  0.73  0.73  0.76  0.73  0.75  0.87 ]
[ 0.74  0.73  0.73  0.74  0.73  0.73  0.75  0.73  0.73  0.74  0.73  0.73 ]
[ 0.73  0.73  0.74  0.73  0.73  0.74  0.73  0.79  0.73  0.73  0.73  0.73 ]
[ 0.73  0.73  0.73  0.73  0.73  0.96  0.95  0.73  0.73  0.73  0.73  0.73 ]
[ 0.73  0.73  0.76  0.74  0.74  0.74  0.73  0.73  0.73  0.74  0.73  0.74 ]
[ 0.73  0.73  0.73  0.73  0.73  0.73  0.73  0.73  0.73  0.73  0.73  0.73 ]
[ 0.73  0.74  0.73  0.73  0.97  0.74  0.73  0.74  0.73  0.73  0.73  0.73 ]
[ 0.75  0.77  0.75  0.73  0.73  0.73  0.73  0.73  0.73  0.73  0.73  0.73 ]
[ 0.73  0.96  0.97  0.74  0.73  0.75  0.73  0.73  0.88  0.73  0.74  0.75 ]
[ 0.73  0.78  0.73  0.73  0.73  0.73  0.75  0.73  0.73  0.73  0.87  0.88 ]
[ 0.97  0.92  0.96  0.81  0.73  0.96  0.74  0.86  0.74  0.96  0.74  0.93 ]
[ 0.97  0.73  0.93  0.73  0.92  0.75  0.92  0.74  0.73  0.93  0.73  0.77 ]
[ 0.96  0.97  0.76  0.73  0.73  0.92  0.73  0.86  0.81  0.97  0.74  0.77 ]
[ 0.94  0.97  0.92  0.78  0.80  0.73  0.81  0.92  0.93  0.95  0.74  0.74 ]
[ 0.73  0.76  0.97  0.96  0.73  0.86  0.96  0.96  0.74  0.74  0.73  0.73 ]
[ 0.85  0.87  0.73  0.88  0.87  0.96  0.85  0.74  0.87  0.97  0.75  0.93 ]
[ 0.73  0.96  0.74  0.93  0.78  0.73  0.97  0.73  0.73  0.74  0.88  0.97 ]
[ 0.83  0.97  0.73  0.96  0.73  0.73  0.73  0.74  0.87  0.73  0.95  0.97 ]
[ 0.73  0.93  0.96  0.95  0.88  0.92  0.73  0.94  0.75  0.97  0.86  0.73 ]
[ 0.73  0.76  0.74  0.96  0.75  0.76  0.84  0.74  0.97  0.73  0.96  0.79 ]
[ 0.97  0.89  0.76  0.74  0.74  0.73  0.73  0.96  0.86  0.74  0.96  0.83 ]

11/08 06:33:32 PM | === Batch 3/200
11/08 06:33:33 PM | loss = 0.754 + 0.114 + 0.091 = 0.959
11/08 06:33:36 PM | attribution_score[0:12]: 
[ 0.67  0.76  0.84  0.80  0.61  0.96  0.80  0.72  0.77  0.80  0.75  0.68 ]
[ 0.77  0.74  0.77  0.79  0.73  0.72  0.71  0.79  0.76  0.77  0.72  0.78 ]
[ 0.75  0.70  0.61  0.72  0.69  0.71  0.75  0.78  0.75  0.77  0.74  0.78 ]
[ 0.62  0.76  0.79  0.81  0.75  0.82  0.77  0.83  0.79  0.73  0.83  0.75 ]
[ 0.78  0.81  0.62  0.77  0.78  0.68  0.75  0.75  0.78  0.75  0.68  0.77 ]
[ 0.78  0.75  0.78  0.70  0.84  0.79  0.77  0.79  0.79  0.76  0.74  0.70 ]
[ 0.66  0.67  0.75  0.61  0.78  0.63  0.79  0.61  0.63  0.78  0.75  0.61 ]
[ 0.70  0.78  0.79  0.77  0.75  0.76  0.77  0.71  0.76  0.76  0.73  0.75 ]
[ 0.60  0.77  0.75  0.80  0.73  0.70  0.72  0.77  0.64  0.75  0.74  0.68 ]
[ 0.78  0.83  0.83  0.71  0.88  0.75  0.70  0.75  0.74  0.77  0.78  0.75 ]
[ 0.74  0.72  0.72  0.71  0.69  0.72  0.76  0.75  0.74  0.75  0.73  0.72 ]
[ 0.78  0.71  0.76  0.72  0.79  0.73  0.70  0.76  0.78  0.72  0.76  0.71 ]
[ 0.75  0.76  0.73  0.71  0.67  0.74  0.73  0.74  0.72  0.72  0.71  0.69 ]
[ 0.74  0.64  0.73  0.72  0.75  0.68  0.74  0.76  0.73  0.72  0.78  0.69 ]
[ 0.80  0.98  0.72  0.98  0.76  0.77  0.65  0.98  0.69  0.91  0.91  0.77 ]
[ 0.97  0.82  0.80  0.71  0.77  0.72  0.76  0.76  0.93  0.62  0.71  0.61 ]
[ 0.77  0.82  0.77  0.73  0.68  0.71  0.74  0.75  0.79  0.75  0.66  0.61 ]
[ 0.80  0.78  0.78  0.61  0.76  0.67  0.72  0.76  0.76  0.71  0.79  0.75 ]
[ 0.74  0.84  0.66  0.62  0.76  0.65  0.75  0.70  0.74  0.72  0.68  0.87 ]
[ 0.76  0.60  0.76  0.76  0.78  0.76  0.72  0.71  0.70  0.78  0.75  0.75 ]
[ 0.79  0.72  0.72  0.72  0.76  0.75  0.63  0.84  0.74  0.76  0.72  0.70 ]
[ 0.77  0.71  0.72  0.61  0.73  0.98  0.96  0.72  0.71  0.73  0.77  0.65 ]
[ 0.72  0.74  0.80  0.74  0.79  0.77  0.74  0.76  0.68  0.78  0.78  0.73 ]
[ 0.78  0.71  0.77  0.72  0.78  0.74  0.75  0.73  0.73  0.74  0.74  0.76 ]
[ 0.72  0.73  0.75  0.73  0.98  0.62  0.78  0.69  0.72  0.75  0.74  0.71 ]
[ 0.63  0.77  0.80  0.68  0.77  0.74  0.64  0.74  0.77  0.76  0.76  0.70 ]
[ 0.60  0.98  0.98  0.73  0.73  0.75  0.70  0.63  0.88  0.77  0.78  0.66 ]
[ 0.75  0.71  0.71  0.78  0.78  0.78  0.66  0.76  0.63  0.76  0.91  0.92 ]
[ 0.98  0.94  0.97  0.74  0.75  0.97  0.68  0.90  0.69  0.97  0.76  0.90 ]
[ 0.98  0.74  0.93  0.76  0.92  0.63  0.94  0.65  0.76  0.93  0.60  0.82 ]
[ 0.98  0.98  0.81  0.79  0.76  0.88  0.74  0.90  0.86  0.98  0.78  0.83 ]
[ 0.96  0.98  0.93  0.70  0.84  0.78  0.82  0.90  0.94  0.94  0.65  0.79 ]
[ 0.64  0.75  0.98  0.97  0.77  0.90  0.97  0.97  0.74  0.79  0.62  0.77 ]
[ 0.87  0.83  0.75  0.92  0.82  0.98  0.90  0.73  0.85  0.97  0.72  0.94 ]
[ 0.79  0.97  0.64  0.90  0.77  0.75  0.98  0.76  0.69  0.75  0.92  0.98 ]
[ 0.77  0.98  0.70  0.98  0.70  0.69  0.76  0.78  0.91  0.67  0.93  0.97 ]
[ 0.67  0.95  0.98  0.96  0.92  0.94  0.61  0.91  0.63  0.96  0.82  0.77 ]
[ 0.76  0.67  0.74  0.97  0.69  0.81  0.89  0.62  0.98  0.78  0.97  0.81 ]
[ 0.98  0.93  0.79  0.76  0.79  0.60  0.65  0.97  0.90  0.64  0.98  0.87 ]

11/08 06:33:36 PM | === Batch 4/200
11/08 06:33:38 PM | loss = 1.070 + 0.158 + 0.091 = 1.320
11/08 06:33:41 PM | attribution_score[0:12]: 
[ 0.66  0.82  0.87  0.83  0.61  0.97  0.84  0.78  0.82  0.85  0.79  0.74 ]
[ 0.82  0.76  0.81  0.83  0.76  0.77  0.75  0.81  0.81  0.82  0.76  0.81 ]
[ 0.80  0.71  0.67  0.77  0.73  0.74  0.78  0.80  0.80  0.81  0.78  0.83 ]
[ 0.69  0.80  0.82  0.87  0.78  0.87  0.79  0.88  0.82  0.78  0.86  0.78 ]
[ 0.84  0.85  0.65  0.80  0.82  0.74  0.78  0.76  0.83  0.77  0.73  0.80 ]
[ 0.83  0.80  0.79  0.72  0.89  0.85  0.83  0.81  0.82  0.76  0.76  0.73 ]
[ 0.71  0.71  0.81  0.64  0.81  0.69  0.81  0.67  0.66  0.83  0.78  0.68 ]
[ 0.72  0.84  0.84  0.78  0.80  0.81  0.81  0.76  0.79  0.82  0.76  0.79 ]
[ 0.62  0.77  0.80  0.86  0.79  0.74  0.77  0.80  0.69  0.75  0.77  0.71 ]
[ 0.79  0.88  0.88  0.76  0.90  0.79  0.75  0.80  0.75  0.79  0.79  0.79 ]
[ 0.79  0.74  0.70  0.74  0.67  0.75  0.81  0.76  0.73  0.77  0.76  0.77 ]
[ 0.82  0.75  0.81  0.76  0.81  0.70  0.73  0.81  0.81  0.74  0.82  0.76 ]
[ 0.79  0.81  0.75  0.73  0.70  0.79  0.76  0.77  0.77  0.76  0.73  0.75 ]
[ 0.80  0.67  0.71  0.76  0.80  0.59  0.79  0.77  0.78  0.76  0.84  0.75 ]
[ 0.82  0.99  0.73  0.99  0.81  0.82  0.54  0.99  0.69  0.94  0.95  0.80 ]
[ 0.97  0.87  0.84  0.76  0.76  0.76  0.80  0.79  0.95  0.64  0.76  0.66 ]
[ 0.80  0.83  0.83  0.78  0.72  0.74  0.80  0.78  0.78  0.73  0.68  0.67 ]
[ 0.86  0.84  0.80  0.64  0.82  0.65  0.77  0.80  0.80  0.74  0.82  0.80 ]
[ 0.79  0.89  0.69  0.59  0.82  0.70  0.81  0.72  0.79  0.78  0.74  0.90 ]
[ 0.79  0.63  0.78  0.80  0.84  0.77  0.69  0.73  0.67  0.79  0.81  0.81 ]
[ 0.80  0.77  0.78  0.73  0.82  0.77  0.69  0.88  0.77  0.81  0.77  0.75 ]
[ 0.83  0.75  0.75  0.60  0.77  0.99  0.97  0.76  0.64  0.74  0.80  0.71 ]
[ 0.74  0.80  0.85  0.69  0.84  0.78  0.79  0.74  0.73  0.81  0.82  0.78 ]
[ 0.80  0.74  0.81  0.75  0.82  0.75  0.79  0.76  0.78  0.79  0.79  0.79 ]
[ 0.74  0.77  0.77  0.77  0.99  0.68  0.84  0.72  0.75  0.80  0.72  0.73 ]
[ 0.65  0.83  0.84  0.65  0.77  0.79  0.70  0.79  0.81  0.77  0.80  0.74 ]
[ 0.55  0.99  0.99  0.69  0.70  0.68  0.67  0.61  0.91  0.75  0.84  0.64 ]
[ 0.80  0.63  0.74  0.80  0.77  0.80  0.72  0.82  0.64  0.73  0.94  0.93 ]
[ 0.99  0.94  0.98  0.77  0.80  0.98  0.69  0.93  0.75  0.98  0.79  0.90 ]
[ 0.99  0.75  0.94  0.81  0.94  0.64  0.95  0.71  0.79  0.94  0.61  0.88 ]
[ 0.99  0.99  0.83  0.85  0.82  0.82  0.80  0.93  0.85  0.99  0.84  0.87 ]
[ 0.95  0.99  0.95  0.70  0.84  0.83  0.85  0.92  0.94  0.94  0.54  0.86 ]
[ 0.52  0.80  0.99  0.97  0.84  0.94  0.97  0.98  0.75  0.81  0.65  0.77 ]
[ 0.91  0.84  0.69  0.92  0.83  0.97  0.93  0.78  0.89  0.98  0.77  0.93 ]
[ 0.84  0.98  0.60  0.86  0.82  0.74  0.99  0.75  0.72  0.70  0.92  0.99 ]
[ 0.79  0.99  0.67  0.98  0.69  0.75  0.76  0.80  0.94  0.68  0.93  0.98 ]
[ 0.59  0.96  0.98  0.97  0.95  0.92  0.58  0.90  0.63  0.97  0.77  0.82 ]
[ 0.72  0.65  0.70  0.97  0.69  0.86  0.93  0.50  0.99  0.74  0.98  0.86 ]
[ 0.99  0.95  0.84  0.71  0.85  0.66  0.56  0.98  0.93  0.65  0.99  0.91 ]

11/08 06:33:41 PM | === Batch 5/200
11/08 06:33:42 PM | loss = 0.488 + 0.403 + 0.082 = 0.972
11/08 06:33:45 PM | attribution_score[0:12]: 
[ 0.61  0.85  0.88  0.84  0.57  0.97  0.86  0.81  0.85  0.85  0.79  0.80 ]
[ 0.84  0.73  0.83  0.86  0.73  0.80  0.76  0.82  0.84  0.86  0.80  0.83 ]
[ 0.82  0.69  0.70  0.78  0.74  0.72  0.77  0.78  0.82  0.83  0.79  0.86 ]
[ 0.72  0.80  0.82  0.90  0.80  0.88  0.79  0.90  0.84  0.77  0.88  0.78 ]
[ 0.86  0.87  0.66  0.81  0.83  0.77  0.77  0.74  0.85  0.76  0.74  0.80 ]
[ 0.86  0.85  0.78  0.69  0.91  0.88  0.87  0.81  0.84  0.76  0.75  0.71 ]
[ 0.75  0.71  0.82  0.67  0.81  0.73  0.82  0.69  0.70  0.86  0.79  0.71 ]
[ 0.70  0.86  0.86  0.78  0.82  0.81  0.81  0.77  0.77  0.84  0.76  0.80 ]
[ 0.63  0.75  0.82  0.88  0.82  0.77  0.80  0.80  0.72  0.73  0.75  0.72 ]
[ 0.77  0.91  0.90  0.78  0.90  0.79  0.76  0.82  0.74  0.79  0.77  0.80 ]
[ 0.80  0.72  0.65  0.71  0.60  0.73  0.82  0.73  0.68  0.74  0.74  0.79 ]
[ 0.83  0.74  0.82  0.76  0.81  0.64  0.71  0.82  0.82  0.73  0.84  0.76 ]
[ 0.77  0.83  0.74  0.72  0.71  0.80  0.75  0.76  0.79  0.75  0.69  0.77 ]
[ 0.82  0.64  0.66  0.77  0.80  0.47  0.78  0.75  0.79  0.77  0.87  0.76 ]
[ 0.82  0.99  0.71  0.99  0.83  0.83  0.44  0.99  0.68  0.95  0.96  0.81 ]
[ 0.96  0.90  0.82  0.76  0.78  0.77  0.78  0.77  0.95  0.63  0.79  0.69 ]
[ 0.80  0.80  0.84  0.79  0.74  0.73  0.85  0.77  0.76  0.72  0.66  0.70 ]
[ 0.88  0.85  0.78  0.63  0.85  0.59  0.79  0.81  0.82  0.72  0.81  0.77 ]
[ 0.79  0.92  0.73  0.56  0.86  0.76  0.83  0.69  0.84  0.81  0.77  0.92 ]
[ 0.80  0.65  0.81  0.81  0.88  0.75  0.67  0.71  0.60  0.77  0.82  0.84 ]
[ 0.79  0.79  0.83  0.75  0.84  0.75  0.75  0.91  0.79  0.84  0.78  0.76 ]
[ 0.85  0.79  0.75  0.57  0.76  0.99  0.98  0.78  0.56  0.71  0.78  0.74 ]
[ 0.71  0.83  0.88  0.62  0.86  0.80  0.80  0.72  0.78  0.82  0.82  0.80 ]
[ 0.79  0.74  0.80  0.75  0.81  0.71  0.80  0.78  0.79  0.79  0.80  0.77 ]
[ 0.75  0.78  0.78  0.77  0.99  0.70  0.86  0.75  0.75  0.82  0.70  0.70 ]
[ 0.66  0.86  0.85  0.60  0.73  0.79  0.76  0.83  0.80  0.75  0.80  0.73 ]
[ 0.54  0.99  0.99  0.61  0.62  0.66  0.70  0.61  0.93  0.69  0.86  0.62 ]
[ 0.84  0.55  0.73  0.84  0.75  0.82  0.78  0.85  0.68  0.67  0.96  0.94 ]
[ 0.99  0.92  0.99  0.81  0.85  0.98  0.75  0.94  0.76  0.98  0.80  0.93 ]
[ 0.99  0.79  0.96  0.85  0.95  0.69  0.96  0.76  0.82  0.94  0.60  0.89 ]
[ 0.99  0.99  0.81  0.88  0.86  0.75  0.85  0.95  0.84  0.99  0.85  0.89 ]
[ 0.93  0.99  0.94  0.73  0.87  0.86  0.89  0.91  0.92  0.94  0.48  0.88 ]
[ 0.55  0.84  0.99  0.96  0.87  0.96  0.98  0.98  0.77  0.81  0.72  0.78 ]
[ 0.94  0.86  0.66  0.91  0.86  0.96  0.96  0.79  0.92  0.98  0.80  0.90 ]
[ 0.86  0.99  0.61  0.80  0.86  0.70  0.99  0.77  0.77  0.65  0.91  0.99 ]
[ 0.81  0.99  0.70  0.98  0.74  0.80  0.78  0.78  0.96  0.71  0.94  0.98 ]
[ 0.60  0.95  0.98  0.97  0.97  0.90  0.63  0.88  0.66  0.97  0.80  0.86 ]
[ 0.67  0.68  0.67  0.96  0.69  0.87  0.93  0.36  0.99  0.70  0.98  0.89 ]
[ 0.99  0.97  0.88  0.66  0.88  0.72  0.57  0.98  0.95  0.69  0.99  0.92 ]

11/08 06:33:45 PM | === Batch 6/200
11/08 06:33:47 PM | loss = 0.583 + 0.491 + 0.079 = 1.153
11/08 06:33:50 PM | attribution_score[0:12]: 
[ 0.52  0.87  0.90  0.84  0.50  0.97  0.86  0.81  0.86  0.83  0.76  0.85 ]
[ 0.84  0.72  0.85  0.87  0.70  0.83  0.73  0.82  0.85  0.87  0.81  0.85 ]
[ 0.83  0.63  0.72  0.76  0.73  0.67  0.73  0.75  0.82  0.83  0.78  0.88 ]
[ 0.71  0.79  0.82  0.91  0.80  0.87  0.77  0.92  0.84  0.75  0.88  0.76 ]
[ 0.87  0.88  0.67  0.81  0.84  0.77  0.73  0.71  0.84  0.72  0.72  0.80 ]
[ 0.88  0.88  0.75  0.63  0.92  0.90  0.90  0.80  0.84  0.77  0.72  0.67 ]
[ 0.75  0.68  0.81  0.71  0.80  0.77  0.81  0.69  0.72  0.86  0.79  0.70 ]
[ 0.64  0.87  0.87  0.76  0.82  0.80  0.79  0.76  0.74  0.85  0.74  0.80 ]
[ 0.61  0.72  0.80  0.89  0.83  0.78  0.80  0.78  0.74  0.68  0.70  0.70 ]
[ 0.74  0.92  0.91  0.77  0.90  0.76  0.75  0.82  0.69  0.77  0.74  0.79 ]
[ 0.78  0.66  0.56  0.66  0.51  0.66  0.80  0.68  0.62  0.69  0.71  0.79 ]
[ 0.82  0.70  0.81  0.75  0.80  0.56  0.67  0.82  0.82  0.70  0.83  0.73 ]
[ 0.77  0.83  0.70  0.69  0.70  0.78  0.71  0.72  0.79  0.72  0.63  0.77 ]
[ 0.82  0.58  0.61  0.77  0.78  0.43  0.77  0.70  0.78  0.76  0.88  0.75 ]
[ 0.81  1.00  0.68  0.99  0.84  0.84  0.35  0.99  0.71  0.96  0.97  0.80 ]
[ 0.96  0.91  0.80  0.72  0.83  0.79  0.74  0.71  0.96  0.66  0.82  0.68 ]
[ 0.77  0.78  0.86  0.79  0.73  0.68  0.87  0.75  0.71  0.73  0.61  0.70 ]
[ 0.89  0.85  0.74  0.59  0.87  0.49  0.80  0.81  0.81  0.72  0.78  0.71 ]
[ 0.76  0.93  0.78  0.53  0.88  0.81  0.82  0.64  0.88  0.80  0.73  0.93 ]
[ 0.79  0.69  0.81  0.80  0.90  0.73  0.72  0.66  0.52  0.73  0.80  0.84 ]
[ 0.77  0.78  0.86  0.78  0.84  0.75  0.80  0.93  0.77  0.85  0.78  0.76 ]
[ 0.85  0.85  0.72  0.51  0.76  0.99  0.97  0.83  0.46  0.66  0.75  0.77 ]
[ 0.68  0.83  0.89  0.56  0.86  0.84  0.76  0.72  0.81  0.79  0.82  0.83 ]
[ 0.78  0.70  0.78  0.72  0.78  0.67  0.84  0.83  0.77  0.76  0.77  0.75 ]
[ 0.76  0.78  0.77  0.74  0.99  0.68  0.88  0.81  0.73  0.82  0.65  0.65 ]
[ 0.65  0.85  0.83  0.61  0.65  0.77  0.83  0.87  0.76  0.74  0.78  0.72 ]
[ 0.59  0.99  0.99  0.51  0.52  0.61  0.76  0.63  0.94  0.61  0.86  0.63 ]
[ 0.88  0.45  0.70  0.88  0.71  0.82  0.81  0.85  0.73  0.64  0.96  0.94 ]
[ 0.99  0.90  0.99  0.84  0.90  0.98  0.81  0.94  0.80  0.98  0.84  0.95 ]
[ 0.99  0.81  0.97  0.88  0.95  0.75  0.97  0.82  0.83  0.94  0.64  0.87 ]
[ 0.98  1.00  0.77  0.91  0.89  0.68  0.89  0.95  0.79  0.99  0.85  0.89 ]
[ 0.91  0.99  0.94  0.75  0.85  0.89  0.88  0.92  0.89  0.94  0.41  0.89 ]
[ 0.59  0.89  1.00  0.95  0.89  0.97  0.98  0.97  0.82  0.78  0.80  0.75 ]
[ 0.96  0.87  0.64  0.90  0.89  0.95  0.97  0.78  0.92  0.99  0.83  0.86 ]
[ 0.88  0.99  0.63  0.79  0.88  0.64  0.99  0.76  0.82  0.58  0.89  0.99 ]
[ 0.82  0.99  0.76  0.98  0.78  0.85  0.80  0.79  0.96  0.75  0.96  0.99 ]
[ 0.65  0.96  0.98  0.97  0.97  0.88  0.71  0.89  0.72  0.97  0.78  0.88 ]
[ 0.60  0.70  0.69  0.95  0.72  0.88  0.91  0.40  1.00  0.66  0.98  0.92 ]
[ 1.00  0.97  0.88  0.62  0.89  0.79  0.64  0.98  0.95  0.73  0.99  0.90 ]

11/08 06:33:50 PM | === Batch 7/200
11/08 06:33:51 PM | loss = 0.854 + 0.275 + 0.080 = 1.209
11/08 06:33:54 PM | attribution_score[0:12]: 
[ 0.42  0.88  0.92  0.84  0.41  0.97  0.86  0.79  0.87  0.81  0.71  0.88 ]
[ 0.84  0.72  0.85  0.87  0.64  0.86  0.69  0.82  0.87  0.88  0.79  0.86 ]
[ 0.83  0.54  0.75  0.73  0.69  0.59  0.67  0.70  0.80  0.82  0.74  0.90 ]
[ 0.68  0.77  0.80  0.92  0.79  0.85  0.74  0.93  0.85  0.74  0.88  0.74 ]
[ 0.87  0.88  0.68  0.79  0.85  0.76  0.67  0.67  0.81  0.68  0.71  0.77 ]
[ 0.89  0.91  0.70  0.54  0.92  0.91  0.91  0.77  0.83  0.80  0.67  0.60 ]
[ 0.74  0.62  0.77  0.76  0.80  0.80  0.79  0.67  0.74  0.85  0.78  0.67 ]
[ 0.56  0.88  0.86  0.73  0.81  0.77  0.75  0.77  0.72  0.84  0.69  0.78 ]
[ 0.56  0.67  0.78  0.89  0.82  0.79  0.79  0.76  0.74  0.61  0.63  0.68 ]
[ 0.71  0.93  0.91  0.75  0.91  0.71  0.71  0.81  0.64  0.74  0.71  0.78 ]
[ 0.74  0.59  0.46  0.58  0.40  0.58  0.77  0.60  0.53  0.62  0.66  0.77 ]
[ 0.80  0.64  0.77  0.72  0.77  0.46  0.60  0.79  0.82  0.64  0.81  0.71 ]
[ 0.78  0.82  0.63  0.63  0.66  0.74  0.66  0.66  0.77  0.69  0.55  0.76 ]
[ 0.81  0.53  0.56  0.76  0.73  0.46  0.79  0.71  0.77  0.72  0.88  0.74 ]
[ 0.77  1.00  0.69  0.99  0.85  0.84  0.39  1.00  0.77  0.96  0.97  0.77 ]
[ 0.94  0.91  0.80  0.64  0.87  0.81  0.74  0.64  0.97  0.71  0.84  0.71 ]
[ 0.72  0.75  0.88  0.76  0.72  0.61  0.88  0.71  0.66  0.75  0.56  0.69 ]
[ 0.89  0.83  0.68  0.52  0.89  0.47  0.81  0.80  0.79  0.66  0.78  0.62 ]
[ 0.72  0.93  0.84  0.48  0.87  0.83  0.81  0.56  0.92  0.76  0.72  0.94 ]
[ 0.76  0.69  0.80  0.78  0.92  0.69  0.78  0.58  0.42  0.66  0.79  0.82 ]
[ 0.74  0.73  0.89  0.78  0.81  0.74  0.83  0.94  0.74  0.86  0.75  0.73 ]
[ 0.85  0.88  0.68  0.44  0.76  0.99  0.97  0.87  0.35  0.70  0.70  0.78 ]
[ 0.61  0.82  0.90  0.53  0.85  0.87  0.73  0.70  0.82  0.77  0.84  0.85 ]
[ 0.77  0.67  0.76  0.67  0.72  0.66  0.87  0.87  0.72  0.70  0.72  0.75 ]
[ 0.75  0.78  0.80  0.68  0.99  0.63  0.88  0.86  0.68  0.80  0.61  0.58 ]
[ 0.66  0.83  0.79  0.62  0.55  0.73  0.88  0.88  0.72  0.70  0.76  0.67 ]
[ 0.66  1.00  0.99  0.40  0.41  0.56  0.74  0.63  0.94  0.50  0.86  0.67 ]
[ 0.91  0.46  0.64  0.90  0.66  0.79  0.85  0.83  0.78  0.69  0.97  0.95 ]
[ 1.00  0.87  0.99  0.83  0.93  0.99  0.87  0.94  0.83  0.98  0.89  0.97 ]
[ 0.99  0.82  0.98  0.88  0.96  0.79  0.98  0.86  0.81  0.95  0.67  0.87 ]
[ 0.98  1.00  0.72  0.92  0.91  0.63  0.91  0.95  0.73  0.99  0.83  0.89 ]
[ 0.92  0.99  0.94  0.76  0.81  0.92  0.85  0.94  0.86  0.95  0.41  0.90 ]
[ 0.66  0.93  1.00  0.95  0.87  0.98  0.98  0.97  0.87  0.79  0.86  0.68 ]
[ 0.96  0.86  0.67  0.90  0.91  0.94  0.98  0.73  0.93  0.98  0.88  0.79 ]
[ 0.89  0.99  0.68  0.81  0.86  0.55  0.99  0.79  0.85  0.61  0.86  0.99 ]
[ 0.81  1.00  0.75  0.98  0.83  0.89  0.79  0.82  0.95  0.78  0.97  0.99 ]
[ 0.73  0.97  0.97  0.98  0.98  0.86  0.75  0.91  0.77  0.96  0.77  0.88 ]
[ 0.50  0.75  0.74  0.94  0.77  0.89  0.88  0.38  1.00  0.65  0.98  0.94 ]
[ 1.00  0.98  0.85  0.61  0.89  0.83  0.67  0.98  0.94  0.76  1.00  0.87 ]

11/08 06:33:54 PM | === Batch 8/200
11/08 06:33:55 PM | loss = 0.486 + 0.080 + 0.084 = 0.650
11/08 06:33:58 PM | attribution_score[0:12]: 
[ 0.35  0.90  0.93  0.84  0.39  0.97  0.87  0.77  0.89  0.81  0.68  0.91 ]
[ 0.85  0.76  0.86  0.87  0.61  0.89  0.68  0.82  0.89  0.89  0.79  0.88 ]
[ 0.86  0.50  0.78  0.71  0.68  0.54  0.65  0.70  0.80  0.83  0.74  0.92 ]
[ 0.68  0.78  0.81  0.93  0.78  0.84  0.75  0.94  0.87  0.77  0.88  0.74 ]
[ 0.88  0.89  0.69  0.80  0.87  0.76  0.64  0.68  0.79  0.68  0.73  0.76 ]
[ 0.91  0.92  0.67  0.51  0.92  0.92  0.93  0.77  0.84  0.85  0.64  0.57 ]
[ 0.73  0.59  0.76  0.80  0.81  0.84  0.77  0.65  0.78  0.86  0.79  0.65 ]
[ 0.52  0.89  0.87  0.73  0.82  0.76  0.75  0.79  0.73  0.84  0.66  0.78 ]
[ 0.56  0.66  0.80  0.89  0.82  0.79  0.78  0.78  0.74  0.59  0.60  0.69 ]
[ 0.72  0.94  0.91  0.75  0.91  0.69  0.69  0.81  0.64  0.70  0.71  0.79 ]
[ 0.73  0.55  0.43  0.55  0.35  0.52  0.75  0.55  0.53  0.60  0.65  0.77 ]
[ 0.78  0.64  0.74  0.72  0.74  0.42  0.59  0.79  0.83  0.63  0.79  0.73 ]
[ 0.81  0.81  0.60  0.61  0.66  0.72  0.65  0.65  0.76  0.70  0.53  0.74 ]
[ 0.81  0.52  0.57  0.77  0.71  0.53  0.82  0.75  0.77  0.71  0.86  0.76 ]
[ 0.75  1.00  0.74  0.99  0.87  0.85  0.45  1.00  0.83  0.96  0.98  0.78 ]
[ 0.92  0.91  0.82  0.59  0.90  0.83  0.78  0.63  0.98  0.75  0.87  0.76 ]
[ 0.70  0.76  0.90  0.75  0.74  0.58  0.89  0.69  0.67  0.78  0.54  0.68 ]
[ 0.91  0.81  0.66  0.46  0.90  0.50  0.83  0.79  0.78  0.62  0.81  0.53 ]
[ 0.70  0.93  0.88  0.45  0.86  0.85  0.81  0.51  0.94  0.73  0.73  0.94 ]
[ 0.74  0.68  0.78  0.81  0.93  0.69  0.83  0.54  0.42  0.62  0.80  0.81 ]
[ 0.71  0.67  0.91  0.81  0.80  0.77  0.86  0.95  0.73  0.88  0.72  0.72 ]
[ 0.85  0.91  0.67  0.40  0.78  1.00  0.97  0.90  0.28  0.76  0.67  0.78 ]
[ 0.60  0.81  0.91  0.55  0.87  0.90  0.74  0.70  0.82  0.77  0.86  0.88 ]
[ 0.80  0.67  0.76  0.67  0.68  0.69  0.89  0.91  0.71  0.64  0.70  0.78 ]
[ 0.76  0.81  0.84  0.65  0.99  0.59  0.89  0.89  0.67  0.80  0.63  0.56 ]
[ 0.68  0.81  0.74  0.65  0.49  0.71  0.92  0.89  0.71  0.70  0.76  0.69 ]
[ 0.73  1.00  0.99  0.36  0.37  0.55  0.70  0.62  0.95  0.41  0.86  0.73 ]
[ 0.94  0.48  0.61  0.93  0.66  0.77  0.89  0.78  0.82  0.75  0.97  0.94 ]
[ 1.00  0.86  0.99  0.82  0.95  0.99  0.91  0.94  0.84  0.99  0.92  0.98 ]
[ 0.99  0.83  0.99  0.88  0.96  0.81  0.98  0.89  0.79  0.97  0.71  0.89 ]
[ 0.97  1.00  0.65  0.93  0.92  0.66  0.93  0.95  0.70  0.99  0.83  0.89 ]
[ 0.94  0.99  0.95  0.76  0.77  0.94  0.85  0.95  0.86  0.96  0.46  0.91 ]
[ 0.74  0.95  1.00  0.95  0.84  0.98  0.98  0.97  0.91  0.82  0.91  0.62 ]
[ 0.97  0.84  0.72  0.90  0.93  0.94  0.98  0.68  0.94  0.98  0.91  0.75 ]
[ 0.91  0.99  0.73  0.84  0.84  0.46  0.99  0.84  0.88  0.67  0.82  0.99 ]
[ 0.77  1.00  0.71  0.99  0.88  0.92  0.78  0.85  0.94  0.82  0.98  0.99 ]
[ 0.80  0.97  0.97  0.99  0.98  0.85  0.77  0.93  0.81  0.96  0.78  0.88 ]
[ 0.44  0.79  0.79  0.94  0.83  0.90  0.85  0.35  1.00  0.67  0.98  0.95 ]
[ 1.00  0.98  0.81  0.63  0.88  0.85  0.68  0.98  0.93  0.79  1.00  0.83 ]

11/08 06:33:58 PM | === Batch 9/200
11/08 06:34:00 PM | loss = 0.527 + 0.081 + 0.083 = 0.690
11/08 06:34:03 PM | attribution_score[0:12]: 
[ 0.32  0.92  0.94  0.85  0.39  0.97  0.89  0.76  0.90  0.83  0.68  0.93 ]
[ 0.87  0.81  0.88  0.89  0.62  0.91  0.70  0.84  0.91  0.90  0.81  0.90 ]
[ 0.89  0.49  0.82  0.69  0.69  0.54  0.66  0.73  0.82  0.85  0.75  0.94 ]
[ 0.70  0.81  0.83  0.94  0.80  0.84  0.77  0.94  0.90  0.81  0.89  0.76 ]
[ 0.90  0.90  0.70  0.83  0.88  0.78  0.65  0.72  0.80  0.71  0.74  0.78 ]
[ 0.93  0.93  0.67  0.51  0.92  0.93  0.94  0.78  0.85  0.89  0.64  0.57 ]
[ 0.74  0.57  0.77  0.83  0.83  0.87  0.77  0.65  0.80  0.88  0.82  0.64 ]
[ 0.50  0.90  0.88  0.75  0.84  0.76  0.77  0.81  0.77  0.85  0.65  0.80 ]
[ 0.59  0.67  0.82  0.90  0.83  0.79  0.80  0.80  0.74  0.62  0.62  0.70 ]
[ 0.75  0.95  0.91  0.78  0.92  0.69  0.70  0.82  0.67  0.69  0.74  0.82 ]
[ 0.74  0.56  0.44  0.55  0.33  0.50  0.76  0.53  0.56  0.61  0.67  0.78 ]
[ 0.79  0.67  0.74  0.73  0.74  0.41  0.60  0.80  0.85  0.66  0.78  0.76 ]
[ 0.84  0.81  0.61  0.63  0.67  0.72  0.67  0.67  0.78  0.72  0.52  0.72 ]
[ 0.82  0.54  0.60  0.79  0.70  0.59  0.85  0.80  0.80  0.73  0.85  0.77 ]
[ 0.75  1.00  0.78  0.99  0.89  0.86  0.53  1.00  0.87  0.96  0.98  0.79 ]
[ 0.91  0.90  0.85  0.54  0.92  0.85  0.80  0.65  0.98  0.79  0.90  0.80 ]
[ 0.70  0.78  0.92  0.78  0.78  0.58  0.90  0.71  0.71  0.82  0.53  0.67 ]
[ 0.92  0.81  0.67  0.42  0.92  0.55  0.83  0.78  0.80  0.62  0.85  0.48 ]
[ 0.72  0.93  0.90  0.42  0.86  0.86  0.83  0.50  0.96  0.71  0.76  0.94 ]
[ 0.75  0.68  0.79  0.84  0.95  0.70  0.88  0.54  0.45  0.62  0.81  0.81 ]
[ 0.70  0.63  0.93  0.85  0.81  0.81  0.89  0.96  0.75  0.90  0.71  0.72 ]
[ 0.87  0.93  0.69  0.39  0.81  1.00  0.97  0.93  0.26  0.80  0.69  0.79 ]
[ 0.62  0.82  0.91  0.60  0.88  0.93  0.78  0.72  0.83  0.79  0.88  0.90 ]
[ 0.83  0.70  0.78  0.69  0.68  0.74  0.91  0.94  0.71  0.63  0.70  0.81 ]
[ 0.78  0.84  0.87  0.65  0.99  0.56  0.90  0.92  0.69  0.82  0.68  0.57 ]
[ 0.70  0.79  0.72  0.69  0.48  0.73  0.93  0.90  0.73  0.73  0.78  0.71 ]
[ 0.78  1.00  0.99  0.37  0.38  0.58  0.68  0.61  0.95  0.37  0.87  0.77 ]
[ 0.96  0.51  0.61  0.95  0.68  0.77  0.92  0.75  0.85  0.80  0.97  0.94 ]
[ 1.00  0.85  0.99  0.81  0.96  0.99  0.94  0.95  0.86  0.99  0.94  0.99 ]
[ 1.00  0.85  0.99  0.89  0.97  0.84  0.99  0.91  0.81  0.98  0.75  0.90 ]
[ 0.97  1.00  0.60  0.94  0.93  0.68  0.95  0.96  0.72  0.99  0.85  0.90 ]
[ 0.95  0.99  0.95  0.76  0.75  0.96  0.86  0.96  0.89  0.97  0.50  0.92 ]
[ 0.80  0.97  1.00  0.95  0.83  0.98  0.98  0.97  0.93  0.85  0.93  0.58 ]
[ 0.98  0.82  0.78  0.91  0.94  0.95  0.98  0.63  0.95  0.98  0.93  0.69 ]
[ 0.92  0.99  0.75  0.87  0.84  0.46  0.99  0.88  0.90  0.73  0.80  0.99 ]
[ 0.73  1.00  0.70  0.99  0.91  0.94  0.79  0.87  0.94  0.83  0.98  0.99 ]
[ 0.85  0.98  0.97  0.99  0.98  0.86  0.79  0.94  0.83  0.95  0.81  0.90 ]
[ 0.44  0.82  0.83  0.94  0.86  0.91  0.82  0.35  1.00  0.69  0.98  0.94 ]
[ 1.00  0.98  0.78  0.67  0.88  0.87  0.70  0.99  0.93  0.81  1.00  0.80 ]

11/08 06:34:03 PM | === Batch 10/200
11/08 06:34:04 PM | loss = 0.405 + 0.156 + 0.078 = 0.639
11/08 06:34:07 PM | attribution_score[0:12]: 
[ 0.28  0.93  0.95  0.85  0.39  0.97  0.90  0.75  0.91  0.84  0.67  0.94 ]
[ 0.88  0.83  0.89  0.90  0.59  0.93  0.69  0.85  0.92  0.91  0.82  0.91 ]
[ 0.92  0.45  0.83  0.65  0.67  0.51  0.66  0.75  0.83  0.86  0.75  0.95 ]
[ 0.69  0.82  0.84  0.95  0.79  0.85  0.79  0.95  0.91  0.83  0.90  0.77 ]
[ 0.92  0.91  0.68  0.84  0.90  0.79  0.64  0.75  0.81  0.73  0.73  0.79 ]
[ 0.94  0.94  0.68  0.48  0.92  0.94  0.95  0.80  0.87  0.91  0.62  0.52 ]
[ 0.74  0.52  0.77  0.83  0.84  0.89  0.77  0.64  0.80  0.90  0.83  0.63 ]
[ 0.46  0.91  0.89  0.75  0.84  0.76  0.79  0.81  0.79  0.85  0.62  0.81 ]
[ 0.59  0.67  0.84  0.91  0.84  0.78  0.79  0.81  0.70  0.61  0.62  0.68 ]
[ 0.77  0.96  0.91  0.78  0.92  0.68  0.70  0.83  0.67  0.66  0.76  0.83 ]
[ 0.74  0.55  0.42  0.52  0.29  0.45  0.76  0.50  0.58  0.61  0.67  0.78 ]
[ 0.79  0.69  0.73  0.72  0.74  0.38  0.59  0.80  0.86  0.65  0.77  0.76 ]
[ 0.83  0.81  0.59  0.60  0.64  0.70  0.66  0.68  0.77  0.70  0.49  0.68 ]
[ 0.81  0.55  0.61  0.81  0.68  0.63  0.86  0.83  0.80  0.72  0.83  0.77 ]
[ 0.76  1.00  0.80  0.99  0.90  0.87  0.61  1.00  0.89  0.96  0.98  0.80 ]
[ 0.90  0.88  0.88  0.49  0.93  0.86  0.81  0.67  0.99  0.80  0.92  0.82 ]
[ 0.70  0.80  0.93  0.79  0.80  0.55  0.91  0.72  0.74  0.83  0.47  0.64 ]
[ 0.93  0.81  0.65  0.38  0.92  0.56  0.83  0.75  0.82  0.64  0.88  0.44 ]
[ 0.72  0.93  0.91  0.39  0.86  0.85  0.82  0.46  0.97  0.67  0.78  0.95 ]
[ 0.74  0.66  0.79  0.86  0.95  0.69  0.90  0.50  0.47  0.63  0.82  0.80 ]
[ 0.69  0.59  0.94  0.87  0.83  0.83  0.91  0.97  0.75  0.91  0.69  0.71 ]
[ 0.87  0.95  0.70  0.35  0.82  1.00  0.97  0.94  0.24  0.82  0.72  0.79 ]
[ 0.62  0.81  0.92  0.63  0.89  0.94  0.81  0.75  0.83  0.79  0.89  0.91 ]
[ 0.85  0.71  0.79  0.68  0.69  0.77  0.92  0.95  0.69  0.60  0.68  0.84 ]
[ 0.77  0.85  0.89  0.63  1.00  0.54  0.90  0.93  0.68  0.82  0.70  0.55 ]
[ 0.70  0.76  0.69  0.69  0.46  0.73  0.94  0.91  0.74  0.73  0.79  0.72 ]
[ 0.79  1.00  0.99  0.41  0.37  0.62  0.65  0.60  0.95  0.34  0.87  0.80 ]
[ 0.97  0.47  0.58  0.97  0.71  0.79  0.94  0.72  0.86  0.84  0.97  0.93 ]
[ 1.00  0.85  0.99  0.81  0.97  0.99  0.96  0.95  0.87  0.99  0.95  0.99 ]
[ 1.00  0.87  0.99  0.89  0.98  0.86  0.99  0.92  0.84  0.98  0.79  0.90 ]
[ 0.97  1.00  0.54  0.94  0.93  0.69  0.95  0.96  0.75  0.99  0.85  0.91 ]
[ 0.96  0.99  0.96  0.76  0.76  0.97  0.87  0.97  0.91  0.98  0.53  0.93 ]
[ 0.85  0.97  1.00  0.96  0.83  0.98  0.98  0.97  0.94  0.89  0.95  0.53 ]
[ 0.98  0.79  0.84  0.92  0.94  0.96  0.99  0.56  0.96  0.98  0.95  0.62 ]
[ 0.94  0.99  0.76  0.88  0.84  0.47  0.99  0.91  0.91  0.78  0.78  0.99 ]
[ 0.69  1.00  0.68  0.99  0.93  0.96  0.80  0.87  0.93  0.83  0.99  0.99 ]
[ 0.88  0.98  0.97  0.99  0.98  0.87  0.80  0.95  0.83  0.94  0.85  0.90 ]
[ 0.45  0.81  0.84  0.95  0.87  0.92  0.80  0.37  1.00  0.71  0.98  0.93 ]
[ 1.00  0.98  0.75  0.70  0.89  0.88  0.71  0.99  0.92  0.81  1.00  0.78 ]

11/08 06:34:07 PM | === Batch 11/200
11/08 06:34:09 PM | loss = 0.311 + 0.163 + 0.076 = 0.551
11/08 06:34:12 PM | attribution_score[0:12]: 
[ 0.24  0.94  0.96  0.86  0.36  0.97  0.90  0.72  0.92  0.86  0.64  0.95 ]
[ 0.88  0.85  0.89  0.91  0.55  0.94  0.67  0.86  0.93  0.91  0.82  0.92 ]
[ 0.93  0.38  0.84  0.60  0.64  0.45  0.63  0.76  0.84  0.86  0.73  0.96 ]
[ 0.68  0.82  0.85  0.96  0.77  0.86  0.80  0.96  0.92  0.83  0.90  0.75 ]
[ 0.93  0.92  0.64  0.84  0.90  0.79  0.62  0.75  0.81  0.73  0.69  0.80 ]
[ 0.94  0.94  0.70  0.43  0.92  0.94  0.95  0.80  0.87  0.93  0.58  0.46 ]
[ 0.74  0.45  0.77  0.82  0.84  0.90  0.78  0.62  0.80  0.91  0.83  0.61 ]
[ 0.40  0.91  0.89  0.75  0.84  0.75  0.80  0.79  0.80  0.84  0.59  0.81 ]
[ 0.56  0.64  0.85  0.91  0.83  0.76  0.77  0.82  0.66  0.58  0.61  0.63 ]
[ 0.79  0.96  0.91  0.78  0.92  0.64  0.69  0.82  0.66  0.61  0.77  0.83 ]
[ 0.72  0.52  0.38  0.47  0.24  0.39  0.75  0.45  0.57  0.59  0.65  0.78 ]
[ 0.78  0.70  0.72  0.68  0.74  0.33  0.55  0.80  0.87  0.62  0.75  0.75 ]
[ 0.82  0.79  0.55  0.57  0.60  0.67  0.62  0.66  0.76  0.66  0.43  0.63 ]
[ 0.80  0.57  0.58  0.82  0.65  0.64  0.87  0.85  0.79  0.71  0.81  0.75 ]
[ 0.78  1.00  0.81  1.00  0.90  0.86  0.66  1.00  0.90  0.96  0.99  0.81 ]
[ 0.90  0.87  0.89  0.42  0.93  0.86  0.80  0.69  0.99  0.80  0.94  0.85 ]
[ 0.69  0.82  0.93  0.80  0.82  0.50  0.92  0.73  0.76  0.82  0.40  0.60 ]
[ 0.93  0.82  0.63  0.35  0.93  0.55  0.82  0.69  0.83  0.65  0.90  0.41 ]
[ 0.72  0.92  0.92  0.35  0.86  0.84  0.81  0.40  0.97  0.62  0.78  0.95 ]
[ 0.73  0.62  0.79  0.87  0.96  0.66  0.92  0.44  0.49  0.62  0.82  0.79 ]
[ 0.69  0.54  0.94  0.88  0.85  0.85  0.92  0.97  0.73  0.91  0.64  0.69 ]
[ 0.87  0.95  0.67  0.30  0.83  1.00  0.98  0.95  0.22  0.82  0.74  0.78 ]
[ 0.61  0.80  0.92  0.65  0.90  0.95  0.83  0.77  0.82  0.79  0.90  0.91 ]
[ 0.86  0.70  0.80  0.65  0.70  0.79  0.92  0.96  0.68  0.59  0.66  0.85 ]
[ 0.75  0.84  0.89  0.58  1.00  0.51  0.90  0.94  0.66  0.81  0.71  0.51 ]
[ 0.69  0.73  0.68  0.66  0.46  0.71  0.95  0.91  0.74  0.72  0.78  0.70 ]
[ 0.78  1.00  0.99  0.46  0.36  0.65  0.62  0.57  0.94  0.32  0.87  0.82 ]
[ 0.98  0.43  0.52  0.98  0.74  0.80  0.96  0.71  0.88  0.86  0.98  0.92 ]
[ 1.00  0.85  0.99  0.79  0.97  0.99  0.97  0.95  0.88  0.99  0.96  0.99 ]
[ 1.00  0.88  0.99  0.89  0.98  0.88  0.99  0.93  0.86  0.99  0.81  0.91 ]
[ 0.98  1.00  0.48  0.95  0.94  0.71  0.96  0.97  0.79  0.99  0.84  0.91 ]
[ 0.97  0.99  0.96  0.76  0.78  0.98  0.88  0.97  0.93  0.98  0.56  0.93 ]
[ 0.88  0.98  1.00  0.96  0.84  0.98  0.98  0.97  0.95  0.91  0.96  0.51 ]
[ 0.98  0.75  0.87  0.93  0.95  0.96  0.99  0.47  0.96  0.98  0.96  0.53 ]
[ 0.95  0.99  0.75  0.89  0.85  0.50  0.99  0.93  0.92  0.82  0.78  0.99 ]
[ 0.64  1.00  0.67  0.99  0.95  0.96  0.81  0.87  0.93  0.82  0.99  0.99 ]
[ 0.90  0.98  0.98  0.99  0.98  0.88  0.81  0.95  0.83  0.93  0.87  0.92 ]
[ 0.47  0.80  0.84  0.96  0.88  0.92  0.79  0.39  1.00  0.73  0.98  0.92 ]
[ 1.00  0.99  0.73  0.73  0.88  0.88  0.73  0.99  0.91  0.82  1.00  0.77 ]

11/08 06:34:12 PM | === Batch 12/200
11/08 06:34:13 PM | loss = 0.434 + 0.022 + 0.076 = 0.532
11/08 06:34:16 PM | attribution_score[0:12]: 
[ 0.22  0.95  0.97  0.87  0.34  0.98  0.91  0.70  0.92  0.87  0.64  0.95 ]
[ 0.89  0.87  0.90  0.92  0.56  0.94  0.66  0.88  0.94  0.91  0.83  0.93 ]
[ 0.94  0.35  0.86  0.57  0.63  0.43  0.63  0.78  0.85  0.87  0.73  0.97 ]
[ 0.69  0.83  0.87  0.96  0.78  0.88  0.82  0.96  0.93  0.85  0.91  0.75 ]
[ 0.94  0.93  0.62  0.85  0.91  0.81  0.62  0.78  0.82  0.75  0.67  0.82 ]
[ 0.95  0.94  0.74  0.40  0.92  0.95  0.95  0.82  0.89  0.95  0.55  0.42 ]
[ 0.74  0.41  0.79  0.81  0.85  0.90  0.80  0.61  0.80  0.92  0.84  0.60 ]
[ 0.36  0.92  0.90  0.76  0.84  0.75  0.82  0.79  0.81  0.83  0.61  0.82 ]
[ 0.56  0.64  0.88  0.92  0.84  0.74  0.77  0.83  0.63  0.57  0.63  0.61 ]
[ 0.80  0.96  0.91  0.78  0.93  0.63  0.71  0.83  0.66  0.59  0.79  0.84 ]
[ 0.72  0.51  0.38  0.45  0.22  0.36  0.76  0.44  0.58  0.58  0.65  0.78 ]
[ 0.79  0.72  0.72  0.67  0.76  0.30  0.54  0.81  0.87  0.64  0.74  0.75 ]
[ 0.82  0.78  0.54  0.58  0.57  0.67  0.61  0.66  0.76  0.61  0.41  0.58 ]
[ 0.80  0.59  0.58  0.84  0.64  0.66  0.87  0.87  0.79  0.72  0.80  0.74 ]
[ 0.81  1.00  0.83  1.00  0.91  0.87  0.72  1.00  0.91  0.96  0.99  0.82 ]
[ 0.91  0.85  0.91  0.40  0.94  0.86  0.80  0.74  0.99  0.80  0.95  0.87 ]
[ 0.70  0.83  0.94  0.82  0.84  0.49  0.92  0.74  0.79  0.82  0.38  0.57 ]
[ 0.94  0.84  0.64  0.34  0.93  0.55  0.81  0.67  0.86  0.68  0.92  0.40 ]
[ 0.73  0.92  0.93  0.33  0.87  0.85  0.82  0.36  0.97  0.60  0.79  0.94 ]
[ 0.74  0.59  0.81  0.89  0.97  0.65  0.93  0.41  0.52  0.62  0.82  0.80 ]
[ 0.72  0.52  0.95  0.90  0.88  0.87  0.93  0.97  0.73  0.93  0.61  0.68 ]
[ 0.88  0.96  0.66  0.26  0.84  1.00  0.98  0.95  0.22  0.81  0.78  0.77 ]
[ 0.61  0.80  0.93  0.67  0.91  0.96  0.84  0.80  0.83  0.79  0.91  0.92 ]
[ 0.87  0.71  0.80  0.65  0.73  0.81  0.93  0.97  0.70  0.61  0.67  0.87 ]
[ 0.77  0.84  0.90  0.57  1.00  0.50  0.91  0.95  0.67  0.81  0.74  0.49 ]
[ 0.68  0.73  0.70  0.63  0.48  0.71  0.95  0.92  0.75  0.73  0.79  0.71 ]
[ 0.77  1.00  0.99  0.54  0.36  0.68  0.61  0.56  0.94  0.33  0.87  0.83 ]
[ 0.98  0.42  0.51  0.98  0.77  0.81  0.97  0.73  0.89  0.87  0.98  0.92 ]
[ 1.00  0.86  0.99  0.79  0.97  0.99  0.98  0.95  0.88  0.99  0.97  0.99 ]
[ 1.00  0.90  1.00  0.88  0.98  0.90  0.99  0.94  0.88  0.99  0.84  0.91 ]
[ 0.98  1.00  0.44  0.95  0.94  0.73  0.96  0.97  0.83  0.99  0.85  0.91 ]
[ 0.97  0.99  0.97  0.75  0.81  0.98  0.89  0.98  0.95  0.98  0.60  0.94 ]
[ 0.90  0.98  1.00  0.97  0.86  0.99  0.98  0.98  0.95  0.93  0.96  0.51 ]
[ 0.99  0.73  0.90  0.94  0.95  0.97  0.99  0.41  0.96  0.98  0.96  0.45 ]
[ 0.95  0.99  0.75  0.90  0.86  0.56  0.99  0.94  0.92  0.87  0.78  0.99 ]
[ 0.59  1.00  0.67  0.99  0.96  0.97  0.83  0.88  0.93  0.83  0.99  0.99 ]
[ 0.92  0.98  0.98  0.99  0.98  0.89  0.82  0.96  0.83  0.92  0.89  0.93 ]
[ 0.50  0.76  0.82  0.97  0.89  0.91  0.79  0.44  1.00  0.75  0.99  0.92 ]
[ 1.00  0.99  0.73  0.75  0.89  0.89  0.76  0.99  0.91  0.83  1.00  0.78 ]

11/08 06:34:16 PM | === Batch 13/200
11/08 06:34:18 PM | loss = 0.411 + 0.022 + 0.074 = 0.507
11/08 06:34:21 PM | attribution_score[0:12]: 
[ 0.19  0.96  0.97  0.87  0.32  0.98  0.92  0.67  0.93  0.89  0.61  0.96 ]
[ 0.90  0.89  0.90  0.93  0.57  0.95  0.65  0.89  0.94  0.92  0.84  0.93 ]
[ 0.94  0.30  0.86  0.52  0.59  0.39  0.61  0.79  0.85  0.88  0.71  0.97 ]
[ 0.68  0.83  0.88  0.97  0.76  0.90  0.84  0.97  0.94  0.85  0.92  0.74 ]
[ 0.95  0.93  0.58  0.85  0.92  0.82  0.59  0.79  0.83  0.75  0.63  0.83 ]
[ 0.96  0.94  0.78  0.36  0.93  0.95  0.96  0.83  0.89  0.96  0.51  0.36 ]
[ 0.75  0.36  0.79  0.79  0.85  0.91  0.81  0.60  0.79  0.93  0.83  0.59 ]
[ 0.31  0.92  0.91  0.76  0.83  0.75  0.84  0.77  0.81  0.82  0.62  0.83 ]
[ 0.55  0.62  0.89  0.93  0.84  0.73  0.77  0.83  0.58  0.54  0.63  0.57 ]
[ 0.80  0.97  0.91  0.78  0.93  0.60  0.72  0.83  0.64  0.53  0.79  0.84 ]
[ 0.69  0.48  0.35  0.41  0.19  0.31  0.76  0.42  0.57  0.55  0.64  0.78 ]
[ 0.78  0.73  0.73  0.64  0.77  0.26  0.50  0.81  0.87  0.63  0.72  0.73 ]
[ 0.80  0.76  0.51  0.57  0.54  0.65  0.57  0.64  0.75  0.56  0.36  0.53 ]
[ 0.79  0.59  0.56  0.85  0.62  0.66  0.86  0.87  0.78  0.73  0.80  0.72 ]
[ 0.84  1.00  0.83  1.00  0.91  0.86  0.76  1.00  0.92  0.96  0.99  0.82 ]
[ 0.92  0.84  0.92  0.37  0.94  0.84  0.79  0.77  0.99  0.80  0.96  0.89 ]
[ 0.70  0.85  0.94  0.82  0.85  0.45  0.93  0.75  0.81  0.82  0.36  0.55 ]
[ 0.94  0.85  0.63  0.32  0.94  0.54  0.79  0.64  0.88  0.70  0.93  0.39 ]
[ 0.75  0.91  0.93  0.30  0.89  0.85  0.80  0.31  0.97  0.57  0.79  0.94 ]
[ 0.73  0.55  0.82  0.90  0.97  0.60  0.94  0.37  0.58  0.61  0.81  0.80 ]
[ 0.74  0.50  0.96  0.92  0.90  0.88  0.93  0.98  0.71  0.93  0.57  0.66 ]
[ 0.89  0.96  0.61  0.22  0.83  1.00  0.98  0.95  0.23  0.78  0.80  0.76 ]
[ 0.60  0.80  0.94  0.67  0.91  0.96  0.85  0.83  0.84  0.78  0.91  0.92 ]
[ 0.87  0.72  0.78  0.63  0.75  0.82  0.93  0.97  0.73  0.61  0.68  0.88 ]
[ 0.79  0.82  0.90  0.54  1.00  0.49  0.91  0.95  0.67  0.81  0.75  0.46 ]
[ 0.67  0.73  0.71  0.59  0.50  0.70  0.96  0.93  0.76  0.73  0.78  0.71 ]
[ 0.75  1.00  0.99  0.61  0.35  0.72  0.60  0.54  0.94  0.36  0.87  0.83 ]
[ 0.99  0.42  0.47  0.99  0.80  0.82  0.97  0.75  0.90  0.88  0.99  0.92 ]
[ 1.00  0.88  0.99  0.79  0.98  0.99  0.98  0.96  0.89  0.99  0.97  0.99 ]
[ 1.00  0.92  1.00  0.88  0.98  0.92  0.99  0.95  0.90  0.99  0.87  0.91 ]
[ 0.98  1.00  0.41  0.96  0.94  0.74  0.97  0.97  0.88  0.99  0.85  0.92 ]
[ 0.98  0.99  0.97  0.75  0.84  0.98  0.91  0.98  0.96  0.98  0.64  0.94 ]
[ 0.91  0.99  1.00  0.97  0.88  0.99  0.98  0.98  0.96  0.94  0.97  0.52 ]
[ 0.99  0.73  0.92  0.94  0.95  0.97  0.99  0.36  0.97  0.98  0.96  0.36 ]
[ 0.96  1.00  0.74  0.89  0.88  0.63  0.99  0.95  0.93  0.89  0.78  0.99 ]
[ 0.59  1.00  0.68  0.99  0.96  0.98  0.86  0.87  0.92  0.83  0.99  0.99 ]
[ 0.93  0.99  0.98  1.00  0.99  0.90  0.83  0.96  0.81  0.92  0.91  0.95 ]
[ 0.53  0.73  0.79  0.97  0.89  0.91  0.80  0.49  1.00  0.77  0.99  0.92 ]
[ 1.00  0.99  0.74  0.76  0.89  0.89  0.79  0.99  0.91  0.84  1.00  0.79 ]

11/08 06:34:21 PM | === Batch 14/200
11/08 06:34:22 PM | loss = 0.286 + 0.074 + 0.073 = 0.433
11/08 06:34:25 PM | attribution_score[0:12]: 
[ 0.18  0.97  0.98  0.88  0.31  0.98  0.93  0.66  0.93  0.90  0.61  0.96 ]
[ 0.90  0.91  0.91  0.94  0.61  0.95  0.65  0.90  0.95  0.92  0.85  0.94 ]
[ 0.95  0.28  0.87  0.50  0.58  0.38  0.61  0.81  0.86  0.90  0.71  0.97 ]
[ 0.69  0.84  0.89  0.97  0.76  0.91  0.86  0.97  0.95  0.86  0.92  0.75 ]
[ 0.95  0.94  0.56  0.86  0.92  0.84  0.59  0.81  0.84  0.77  0.60  0.86 ]
[ 0.96  0.95  0.82  0.34  0.93  0.95  0.96  0.84  0.90  0.96  0.49  0.33 ]
[ 0.76  0.33  0.81  0.77  0.85  0.92  0.82  0.60  0.80  0.94  0.84  0.59 ]
[ 0.28  0.92  0.91  0.77  0.83  0.76  0.85  0.77  0.81  0.81  0.66  0.83 ]
[ 0.57  0.63  0.91  0.94  0.85  0.72  0.78  0.84  0.56  0.54  0.66  0.56 ]
[ 0.81  0.97  0.92  0.78  0.93  0.59  0.74  0.84  0.65  0.50  0.81  0.84 ]
[ 0.68  0.48  0.35  0.38  0.17  0.29  0.77  0.42  0.57  0.53  0.65  0.79 ]
[ 0.79  0.75  0.75  0.64  0.78  0.24  0.50  0.82  0.87  0.65  0.71  0.74 ]
[ 0.80  0.76  0.51  0.59  0.54  0.65  0.55  0.63  0.76  0.53  0.33  0.50 ]
[ 0.80  0.60  0.56  0.86  0.63  0.68  0.86  0.88  0.78  0.75  0.82  0.72 ]
[ 0.86  1.00  0.84  1.00  0.92  0.86  0.79  1.00  0.92  0.96  0.99  0.84 ]
[ 0.94  0.83  0.93  0.37  0.95  0.83  0.80  0.81  0.99  0.81  0.96  0.91 ]
[ 0.72  0.86  0.94  0.84  0.87  0.44  0.93  0.76  0.83  0.83  0.37  0.54 ]
[ 0.95  0.88  0.64  0.32  0.94  0.54  0.80  0.62  0.90  0.72  0.94  0.39 ]
[ 0.77  0.91  0.93  0.28  0.90  0.86  0.81  0.29  0.98  0.58  0.79  0.94 ]
[ 0.75  0.53  0.84  0.91  0.97  0.58  0.95  0.35  0.64  0.62  0.80  0.82 ]
[ 0.78  0.49  0.96  0.93  0.92  0.89  0.94  0.98  0.72  0.94  0.54  0.66 ]
[ 0.90  0.97  0.58  0.20  0.83  1.00  0.98  0.96  0.26  0.76  0.81  0.76 ]
[ 0.60  0.80  0.94  0.68  0.92  0.97  0.86  0.85  0.86  0.78  0.91  0.93 ]
[ 0.87  0.74  0.78  0.63  0.77  0.84  0.93  0.98  0.78  0.63  0.70  0.89 ]
[ 0.81  0.80  0.91  0.53  1.00  0.48  0.91  0.95  0.69  0.82  0.74  0.44 ]
[ 0.67  0.74  0.74  0.55  0.52  0.71  0.96  0.93  0.77  0.74  0.79  0.74 ]
[ 0.73  1.00  0.99  0.68  0.34  0.76  0.60  0.54  0.95  0.38  0.87  0.84 ]
[ 0.99  0.44  0.49  0.99  0.84  0.84  0.98  0.78  0.91  0.89  0.99  0.92 ]
[ 1.00  0.89  0.99  0.79  0.98  0.99  0.99  0.96  0.90  0.99  0.98  1.00 ]
[ 1.00  0.94  1.00  0.89  0.99  0.93  1.00  0.95  0.92  0.99  0.89  0.91 ]
[ 0.98  1.00  0.42  0.96  0.94  0.76  0.97  0.98  0.91  0.99  0.86  0.92 ]
[ 0.98  0.99  0.98  0.75  0.87  0.99  0.92  0.98  0.97  0.98  0.68  0.94 ]
[ 0.92  0.99  1.00  0.97  0.90  0.99  0.98  0.98  0.96  0.95  0.97  0.56 ]
[ 0.99  0.75  0.93  0.95  0.95  0.98  0.99  0.37  0.97  0.98  0.97  0.29 ]
[ 0.96  1.00  0.74  0.89  0.90  0.68  0.99  0.96  0.93  0.92  0.79  0.99 ]
[ 0.62  1.00  0.69  0.99  0.97  0.98  0.88  0.88  0.93  0.84  0.99  0.99 ]
[ 0.94  0.99  0.98  1.00  0.99  0.90  0.85  0.95  0.81  0.93  0.92  0.96 ]
[ 0.56  0.70  0.76  0.97  0.90  0.90  0.82  0.54  1.00  0.78  0.99  0.92 ]
[ 1.00  0.99  0.75  0.77  0.89  0.89  0.82  0.99  0.91  0.86  1.00  0.81 ]

11/08 06:34:25 PM | === Batch 15/200
11/08 06:34:27 PM | loss = 0.259 + 0.020 + 0.070 = 0.349
11/08 06:34:30 PM | attribution_score[0:12]: 
[ 0.17  0.97  0.98  0.88  0.31  0.98  0.93  0.67  0.94  0.91  0.62  0.96 ]
[ 0.91  0.92  0.92  0.95  0.67  0.96  0.67  0.91  0.95  0.92  0.86  0.94 ]
[ 0.95  0.26  0.89  0.50  0.59  0.38  0.62  0.83  0.88  0.91  0.73  0.98 ]
[ 0.71  0.86  0.90  0.98  0.78  0.93  0.88  0.97  0.95  0.87  0.93  0.78 ]
[ 0.96  0.95  0.57  0.87  0.93  0.87  0.60  0.84  0.86  0.79  0.60  0.88 ]
[ 0.97  0.95  0.85  0.33  0.94  0.96  0.96  0.85  0.91  0.97  0.50  0.31 ]
[ 0.79  0.33  0.83  0.77  0.86  0.92  0.84  0.62  0.81  0.95  0.85  0.60 ]
[ 0.27  0.93  0.92  0.78  0.83  0.78  0.87  0.77  0.82  0.82  0.71  0.85 ]
[ 0.62  0.65  0.93  0.94  0.86  0.74  0.81  0.85  0.58  0.56  0.69  0.58 ]
[ 0.82  0.97  0.92  0.80  0.94  0.61  0.77  0.86  0.66  0.49  0.82  0.85 ]
[ 0.68  0.49  0.37  0.38  0.16  0.28  0.79  0.44  0.58  0.52  0.67  0.80 ]
[ 0.80  0.77  0.77  0.67  0.79  0.23  0.51  0.84  0.88  0.68  0.72  0.76 ]
[ 0.82  0.77  0.52  0.63  0.57  0.68  0.55  0.63  0.78  0.54  0.31  0.51 ]
[ 0.82  0.62  0.58  0.88  0.67  0.71  0.86  0.88  0.80  0.79  0.84  0.74 ]
[ 0.88  1.00  0.85  1.00  0.93  0.87  0.82  1.00  0.93  0.96  0.99  0.86 ]
[ 0.95  0.84  0.93  0.38  0.95  0.82  0.81  0.85  0.99  0.82  0.97  0.92 ]
[ 0.74  0.88  0.94  0.86  0.88  0.45  0.94  0.78  0.85  0.86  0.41  0.56 ]
[ 0.95  0.90  0.67  0.33  0.94  0.55  0.81  0.63  0.91  0.75  0.95  0.39 ]
[ 0.80  0.91  0.94  0.26  0.91  0.88  0.82  0.28  0.98  0.61  0.79  0.95 ]
[ 0.76  0.52  0.85  0.92  0.98  0.57  0.96  0.35  0.71  0.62  0.80  0.84 ]
[ 0.82  0.51  0.97  0.95  0.94  0.91  0.95  0.98  0.75  0.95  0.55  0.68 ]
[ 0.92  0.97  0.57  0.19  0.84  1.00  0.98  0.96  0.30  0.74  0.83  0.75 ]
[ 0.62  0.82  0.95  0.68  0.93  0.97  0.86  0.87  0.88  0.79  0.90  0.93 ]
[ 0.86  0.78  0.77  0.65  0.79  0.85  0.93  0.98  0.83  0.66  0.75  0.90 ]
[ 0.84  0.80  0.91  0.55  1.00  0.48  0.92  0.96  0.73  0.84  0.75  0.44 ]
[ 0.69  0.77  0.77  0.57  0.54  0.73  0.96  0.94  0.78  0.75  0.81  0.77 ]
[ 0.72  1.00  0.99  0.75  0.34  0.80  0.61  0.55  0.95  0.41  0.88  0.84 ]
[ 0.99  0.49  0.53  0.99  0.86  0.85  0.98  0.81  0.92  0.89  0.99  0.91 ]
[ 1.00  0.91  1.00  0.81  0.98  0.99  0.99  0.96  0.91  0.99  0.98  1.00 ]
[ 1.00  0.95  1.00  0.89  0.99  0.95  1.00  0.96  0.93  1.00  0.91  0.90 ]
[ 0.98  1.00  0.44  0.97  0.95  0.78  0.98  0.98  0.93  0.99  0.87  0.93 ]
[ 0.98  0.99  0.98  0.76  0.89  0.99  0.93  0.98  0.97  0.98  0.72  0.95 ]
[ 0.93  0.99  1.00  0.97  0.92  0.99  0.98  0.98  0.96  0.95  0.97  0.60 ]
[ 0.99  0.78  0.94  0.95  0.95  0.98  0.99  0.43  0.98  0.98  0.97  0.24 ]
[ 0.96  1.00  0.75  0.88  0.92  0.74  1.00  0.97  0.94  0.93  0.81  0.99 ]
[ 0.68  1.00  0.71  0.99  0.97  0.98  0.90  0.88  0.93  0.85  0.99  0.99 ]
[ 0.95  0.99  0.98  1.00  0.99  0.90  0.86  0.95  0.80  0.94  0.93  0.96 ]
[ 0.60  0.68  0.73  0.97  0.91  0.90  0.84  0.59  1.00  0.80  0.99  0.93 ]
[ 1.00  0.99  0.78  0.77  0.90  0.90  0.84  0.99  0.91  0.88  1.00  0.83 ]

11/08 06:34:30 PM | === Batch 16/200
11/08 06:34:31 PM | loss = 0.205 + 0.210 + 0.066 = 0.481
11/08 06:34:34 PM | attribution_score[0:12]: 
[ 0.16  0.98  0.98  0.89  0.29  0.98  0.94  0.66  0.95  0.92  0.61  0.97 ]
[ 0.92  0.94  0.92  0.95  0.70  0.96  0.66  0.92  0.96  0.93  0.87  0.95 ]
[ 0.96  0.24  0.90  0.48  0.58  0.36  0.62  0.84  0.88  0.92  0.73  0.98 ]
[ 0.72  0.87  0.91  0.98  0.78  0.94  0.89  0.98  0.96  0.87  0.93  0.78 ]
[ 0.96  0.95  0.57  0.87  0.93  0.88  0.59  0.85  0.87  0.80  0.58  0.89 ]
[ 0.97  0.95  0.88  0.30  0.94  0.96  0.96  0.86  0.92  0.97  0.48  0.28 ]
[ 0.80  0.31  0.85  0.76  0.85  0.93  0.84  0.62  0.82  0.96  0.85  0.60 ]
[ 0.24  0.93  0.92  0.78  0.83  0.78  0.88  0.77  0.82  0.82  0.73  0.85 ]
[ 0.64  0.65  0.95  0.95  0.86  0.74  0.82  0.85  0.58  0.55  0.70  0.59 ]
[ 0.83  0.97  0.93  0.80  0.94  0.60  0.78  0.87  0.65  0.46  0.82  0.85 ]
[ 0.66  0.48  0.36  0.36  0.14  0.27  0.79  0.43  0.56  0.49  0.67  0.80 ]
[ 0.79  0.78  0.78  0.67  0.80  0.21  0.51  0.85  0.87  0.69  0.71  0.76 ]
[ 0.82  0.76  0.52  0.65  0.57  0.68  0.53  0.61  0.78  0.52  0.28  0.50 ]
[ 0.83  0.62  0.58  0.89  0.69  0.72  0.87  0.88  0.80  0.81  0.85  0.74 ]
[ 0.90  1.00  0.85  1.00  0.94  0.87  0.84  1.00  0.93  0.97  0.99  0.87 ]
[ 0.96  0.83  0.94  0.36  0.95  0.80  0.83  0.87  0.99  0.83  0.97  0.93 ]
[ 0.75  0.89  0.94  0.87  0.90  0.44  0.94  0.79  0.86  0.88  0.43  0.55 ]
[ 0.96  0.91  0.67  0.34  0.95  0.55  0.82  0.62  0.92  0.75  0.95  0.39 ]
[ 0.82  0.91  0.94  0.24  0.92  0.89  0.83  0.25  0.98  0.62  0.78  0.95 ]
[ 0.76  0.52  0.86  0.93  0.98  0.55  0.96  0.34  0.75  0.62  0.79  0.85 ]
[ 0.85  0.51  0.97  0.96  0.95  0.91  0.95  0.98  0.76  0.95  0.53  0.69 ]
[ 0.93  0.97  0.54  0.17  0.84  1.00  0.98  0.96  0.34  0.71  0.84  0.75 ]
[ 0.62  0.83  0.96  0.68  0.93  0.98  0.86  0.89  0.90  0.80  0.90  0.94 ]
[ 0.86  0.79  0.77  0.65  0.80  0.86  0.93  0.98  0.86  0.69  0.77  0.91 ]
[ 0.86  0.78  0.92  0.54  1.00  0.48  0.92  0.96  0.75  0.85  0.74  0.43 ]
[ 0.71  0.78  0.79  0.57  0.54  0.74  0.96  0.95  0.79  0.74  0.82  0.77 ]
[ 0.70  1.00  0.99  0.79  0.32  0.82  0.61  0.56  0.95  0.44  0.88  0.85 ]
[ 0.99  0.50  0.57  0.99  0.88  0.86  0.99  0.83  0.93  0.89  0.99  0.91 ]
[ 1.00  0.92  1.00  0.83  0.98  0.99  0.99  0.96  0.92  0.99  0.98  1.00 ]
[ 1.00  0.96  1.00  0.89  0.99  0.96  1.00  0.96  0.94  1.00  0.92  0.89 ]
[ 0.99  1.00  0.47  0.97  0.95  0.79  0.98  0.98  0.95  0.99  0.88  0.93 ]
[ 0.98  0.99  0.98  0.77  0.91  0.99  0.94  0.98  0.98  0.99  0.74  0.95 ]
[ 0.94  0.99  1.00  0.97  0.93  0.99  0.98  0.98  0.97  0.96  0.98  0.63 ]
[ 0.99  0.80  0.95  0.96  0.95  0.98  0.99  0.48  0.98  0.98  0.97  0.22 ]
[ 0.97  1.00  0.75  0.87  0.93  0.78  1.00  0.97  0.95  0.94  0.83  0.99 ]
[ 0.74  1.00  0.73  1.00  0.98  0.98  0.92  0.89  0.93  0.85  0.99  1.00 ]
[ 0.95  0.99  0.98  1.00  0.99  0.90  0.87  0.95  0.80  0.95  0.94  0.97 ]
[ 0.63  0.67  0.69  0.97  0.92  0.90  0.85  0.63  1.00  0.81  0.99  0.94 ]
[ 1.00  0.99  0.80  0.77  0.91  0.90  0.86  0.99  0.92  0.89  1.00  0.85 ]

11/08 06:34:34 PM | === Batch 17/200
11/08 06:34:36 PM | loss = 0.145 + 0.241 + 0.064 = 0.450
11/08 06:34:39 PM | attribution_score[0:12]: 
[ 0.14  0.98  0.98  0.89  0.26  0.98  0.94  0.63  0.95  0.93  0.58  0.97 ]
[ 0.92  0.94  0.92  0.96  0.71  0.96  0.64  0.93  0.96  0.93  0.87  0.95 ]
[ 0.96  0.21  0.90  0.45  0.56  0.33  0.60  0.85  0.88  0.92  0.71  0.98 ]
[ 0.72  0.87  0.92  0.98  0.78  0.94  0.90  0.98  0.96  0.87  0.93  0.78 ]
[ 0.97  0.95  0.56  0.87  0.94  0.89  0.56  0.86  0.87  0.80  0.55  0.90 ]
[ 0.97  0.95  0.89  0.27  0.94  0.96  0.96  0.86  0.92  0.98  0.44  0.24 ]
[ 0.80  0.28  0.85  0.75  0.85  0.93  0.84  0.62  0.83  0.96  0.85  0.61 ]
[ 0.21  0.94  0.93  0.77  0.81  0.77  0.88  0.75  0.82  0.80  0.74  0.85 ]
[ 0.65  0.63  0.95  0.95  0.87  0.75  0.82  0.84  0.56  0.53  0.69  0.57 ]
[ 0.83  0.98  0.93  0.79  0.93  0.56  0.78  0.87  0.63  0.42  0.82  0.85 ]
[ 0.62  0.45  0.34  0.32  0.13  0.24  0.79  0.41  0.54  0.45  0.66  0.80 ]
[ 0.78  0.78  0.77  0.66  0.79  0.18  0.48  0.85  0.86  0.68  0.69  0.75 ]
[ 0.81  0.74  0.49  0.65  0.55  0.66  0.48  0.58  0.77  0.49  0.24  0.47 ]
[ 0.84  0.61  0.55  0.89  0.68  0.72  0.87  0.88  0.80  0.81  0.85  0.74 ]
[ 0.91  1.00  0.85  1.00  0.95  0.87  0.86  1.00  0.94  0.97  0.99  0.87 ]
[ 0.96  0.82  0.94  0.33  0.95  0.76  0.84  0.88  0.99  0.82  0.98  0.94 ]
[ 0.74  0.90  0.95  0.87  0.90  0.40  0.94  0.79  0.87  0.89  0.45  0.55 ]
[ 0.96  0.91  0.65  0.33  0.95  0.54  0.81  0.60  0.93  0.75  0.96  0.38 ]
[ 0.83  0.90  0.94  0.21  0.93  0.89  0.84  0.22  0.98  0.65  0.77  0.95 ]
[ 0.75  0.50  0.86  0.94  0.98  0.53  0.96  0.31  0.77  0.60  0.78  0.84 ]
[ 0.87  0.50  0.97  0.96  0.96  0.92  0.96  0.98  0.76  0.96  0.50  0.67 ]
[ 0.93  0.97  0.51  0.15  0.82  1.00  0.98  0.96  0.37  0.69  0.85  0.75 ]
[ 0.60  0.83  0.96  0.66  0.94  0.98  0.86  0.89  0.92  0.79  0.89  0.94 ]
[ 0.84  0.80  0.77  0.62  0.80  0.87  0.93  0.98  0.88  0.69  0.78  0.92 ]
[ 0.87  0.75  0.92  0.50  1.00  0.46  0.93  0.96  0.76  0.85  0.71  0.39 ]
[ 0.72  0.78  0.80  0.56  0.54  0.73  0.97  0.95  0.79  0.72  0.82  0.77 ]
[ 0.68  1.00  0.99  0.81  0.30  0.84  0.61  0.57  0.95  0.44  0.87  0.85 ]
[ 0.99  0.50  0.58  0.99  0.90  0.87  0.99  0.85  0.93  0.90  0.99  0.90 ]
[ 1.00  0.92  1.00  0.83  0.99  0.99  0.99  0.96  0.93  1.00  0.99  1.00 ]
[ 1.00  0.97  1.00  0.89  0.99  0.97  1.00  0.97  0.95  1.00  0.93  0.88 ]
[ 0.99  1.00  0.49  0.97  0.96  0.81  0.99  0.98  0.96  0.99  0.87  0.93 ]
[ 0.98  0.99  0.98  0.78  0.92  0.99  0.95  0.99  0.98  0.99  0.75  0.95 ]
[ 0.94  0.99  1.00  0.97  0.94  0.99  0.98  0.98  0.97  0.96  0.98  0.67 ]
[ 0.99  0.81  0.95  0.96  0.95  0.98  0.99  0.50  0.98  0.98  0.97  0.19 ]
[ 0.97  1.00  0.76  0.86  0.94  0.81  1.00  0.97  0.95  0.95  0.84  0.99 ]
[ 0.78  1.00  0.74  1.00  0.98  0.99  0.93  0.89  0.93  0.85  0.99  1.00 ]
[ 0.95  0.99  0.98  1.00  0.99  0.90  0.88  0.95  0.80  0.95  0.95  0.97 ]
[ 0.65  0.67  0.65  0.98  0.93  0.90  0.86  0.64  1.00  0.81  0.99  0.94 ]
[ 1.00  0.99  0.81  0.77  0.92  0.91  0.88  0.99  0.92  0.90  1.00  0.86 ]

11/08 06:34:39 PM | === Batch 18/200
11/08 06:34:40 PM | loss = 0.199 + 0.109 + 0.063 = 0.371
11/08 06:34:43 PM | attribution_score[0:12]: 
[ 0.13  0.98  0.99  0.89  0.22  0.98  0.94  0.58  0.95  0.93  0.53  0.97 ]
[ 0.91  0.95  0.92  0.96  0.71  0.97  0.60  0.93  0.96  0.93  0.87  0.95 ]
[ 0.96  0.17  0.91  0.41  0.53  0.28  0.55  0.84  0.88  0.92  0.69  0.98 ]
[ 0.70  0.87  0.92  0.98  0.78  0.95  0.90  0.98  0.96  0.86  0.93  0.77 ]
[ 0.97  0.95  0.54  0.86  0.94  0.90  0.52  0.86  0.87  0.79  0.51  0.91 ]
[ 0.97  0.96  0.90  0.22  0.94  0.96  0.96  0.86  0.92  0.98  0.38  0.20 ]
[ 0.80  0.24  0.85  0.75  0.84  0.93  0.83  0.60  0.83  0.97  0.84  0.60 ]
[ 0.17  0.94  0.93  0.75  0.79  0.76  0.88  0.73  0.80  0.78  0.73  0.84 ]
[ 0.63  0.59  0.96  0.95  0.86  0.76  0.82  0.82  0.54  0.48  0.67  0.54 ]
[ 0.82  0.98  0.93  0.78  0.93  0.51  0.76  0.87  0.59  0.36  0.81  0.83 ]
[ 0.56  0.40  0.31  0.28  0.11  0.21  0.77  0.38  0.49  0.39  0.62  0.80 ]
[ 0.75  0.77  0.75  0.63  0.77  0.15  0.43  0.85  0.84  0.66  0.65  0.74 ]
[ 0.80  0.71  0.45  0.63  0.52  0.62  0.42  0.53  0.75  0.45  0.20  0.43 ]
[ 0.83  0.57  0.51  0.89  0.65  0.72  0.87  0.88  0.78  0.81  0.85  0.72 ]
[ 0.92  1.00  0.84  1.00  0.96  0.86  0.87  1.00  0.93  0.97  0.99  0.87 ]
[ 0.97  0.81  0.95  0.30  0.96  0.72  0.85  0.89  1.00  0.81  0.98  0.95 ]
[ 0.73  0.90  0.94  0.87  0.90  0.34  0.94  0.77  0.87  0.89  0.44  0.53 ]
[ 0.96  0.92  0.62  0.31  0.95  0.50  0.81  0.57  0.93  0.74  0.96  0.36 ]
[ 0.83  0.90  0.94  0.19  0.93  0.89  0.84  0.19  0.98  0.67  0.75  0.95 ]
[ 0.72  0.49  0.85  0.94  0.98  0.49  0.97  0.27  0.78  0.57  0.76  0.83 ]
[ 0.88  0.47  0.98  0.97  0.96  0.92  0.96  0.98  0.77  0.96  0.45  0.65 ]
[ 0.93  0.98  0.47  0.13  0.81  1.00  0.98  0.97  0.39  0.65  0.84  0.74 ]
[ 0.58  0.83  0.97  0.62  0.94  0.98  0.84  0.90  0.93  0.80  0.88  0.94 ]
[ 0.82  0.79  0.75  0.58  0.80  0.87  0.93  0.98  0.89  0.69  0.78  0.92 ]
[ 0.88  0.72  0.93  0.46  1.00  0.44  0.92  0.96  0.77  0.84  0.67  0.34 ]
[ 0.73  0.76  0.80  0.54  0.52  0.71  0.97  0.95  0.78  0.69  0.82  0.75 ]
[ 0.66  1.00  0.99  0.82  0.28  0.84  0.60  0.59  0.95  0.43  0.85  0.85 ]
[ 0.99  0.49  0.60  1.00  0.90  0.88  0.99  0.87  0.94  0.90  1.00  0.89 ]
[ 1.00  0.93  1.00  0.83  0.99  0.99  0.99  0.96  0.93  1.00  0.99  1.00 ]
[ 1.00  0.97  1.00  0.89  0.99  0.97  1.00  0.97  0.96  1.00  0.94  0.87 ]
[ 0.99  1.00  0.53  0.98  0.96  0.82  0.99  0.98  0.97  0.99  0.85  0.93 ]
[ 0.98  1.00  0.98  0.79  0.92  0.99  0.95  0.99  0.98  0.99  0.75  0.95 ]
[ 0.95  0.99  1.00  0.97  0.95  0.99  0.98  0.98  0.97  0.96  0.98  0.69 ]
[ 0.99  0.81  0.96  0.96  0.95  0.98  0.99  0.54  0.98  0.99  0.97  0.17 ]
[ 0.97  1.00  0.77  0.86  0.95  0.83  1.00  0.98  0.96  0.96  0.85  0.99 ]
[ 0.82  1.00  0.76  1.00  0.98  0.99  0.93  0.89  0.94  0.85  0.99  1.00 ]
[ 0.96  0.99  0.98  1.00  0.99  0.90  0.89  0.95  0.80  0.96  0.95  0.98 ]
[ 0.67  0.68  0.62  0.97  0.94  0.90  0.87  0.63  1.00  0.82  0.99  0.95 ]
[ 1.00  0.99  0.83  0.77  0.92  0.91  0.89  0.99  0.92  0.90  1.00  0.87 ]

11/08 06:34:43 PM | === Batch 19/200
11/08 06:34:45 PM | loss = 0.181 + 0.108 + 0.063 = 0.352
11/08 06:34:48 PM | attribution_score[0:12]: 
[ 0.11  0.98  0.99  0.89  0.21  0.98  0.94  0.57  0.95  0.93  0.50  0.97 ]
[ 0.91  0.96  0.92  0.96  0.71  0.97  0.58  0.93  0.96  0.93  0.87  0.95 ]
[ 0.96  0.15  0.91  0.39  0.52  0.25  0.53  0.85  0.88  0.92  0.68  0.99 ]
[ 0.70  0.87  0.92  0.98  0.78  0.95  0.91  0.98  0.96  0.86  0.93  0.77 ]
[ 0.97  0.95  0.53  0.86  0.94  0.90  0.49  0.87  0.87  0.78  0.48  0.91 ]
[ 0.97  0.96  0.91  0.20  0.95  0.97  0.96  0.86  0.92  0.98  0.35  0.17 ]
[ 0.81  0.23  0.85  0.76  0.84  0.94  0.83  0.60  0.84  0.97  0.84  0.61 ]
[ 0.15  0.94  0.93  0.73  0.78  0.75  0.88  0.72  0.80  0.78  0.74  0.83 ]
[ 0.62  0.58  0.96  0.95  0.86  0.77  0.82  0.82  0.53  0.45  0.66  0.53 ]
[ 0.82  0.98  0.93  0.77  0.93  0.49  0.75  0.87  0.58  0.34  0.81  0.83 ]
[ 0.52  0.37  0.31  0.25  0.10  0.19  0.76  0.36  0.46  0.36  0.61  0.80 ]
[ 0.74  0.77  0.74  0.62  0.77  0.13  0.41  0.85  0.83  0.66  0.63  0.74 ]
[ 0.80  0.69  0.42  0.63  0.50  0.60  0.38  0.50  0.74  0.44  0.17  0.41 ]
[ 0.83  0.55  0.48  0.89  0.64  0.73  0.88  0.88  0.78  0.81  0.86  0.72 ]
[ 0.93  1.00  0.83  1.00  0.96  0.86  0.89  1.00  0.93  0.97  0.99  0.88 ]
[ 0.97  0.81  0.95  0.29  0.96  0.70  0.87  0.90  1.00  0.80  0.98  0.95 ]
[ 0.72  0.90  0.95  0.88  0.90  0.31  0.94  0.77  0.88  0.90  0.46  0.53 ]
[ 0.97  0.92  0.61  0.30  0.96  0.50  0.82  0.56  0.94  0.74  0.96  0.35 ]
[ 0.83  0.90  0.94  0.16  0.93  0.89  0.85  0.17  0.98  0.68  0.72  0.95 ]
[ 0.71  0.50  0.86  0.95  0.98  0.49  0.97  0.25  0.79  0.56  0.75  0.82 ]
[ 0.89  0.46  0.98  0.97  0.97  0.92  0.96  0.98  0.78  0.96  0.41  0.63 ]
[ 0.94  0.98  0.45  0.12  0.80  1.00  0.98  0.97  0.43  0.65  0.84  0.74 ]
[ 0.56  0.84  0.97  0.61  0.94  0.98  0.81  0.90  0.94  0.81  0.88  0.94 ]
[ 0.82  0.80  0.73  0.56  0.80  0.87  0.93  0.99  0.90  0.70  0.78  0.92 ]
[ 0.89  0.71  0.93  0.44  1.00  0.43  0.93  0.96  0.78  0.84  0.64  0.32 ]
[ 0.75  0.76  0.80  0.53  0.51  0.70  0.97  0.96  0.77  0.66  0.83  0.74 ]
[ 0.65  1.00  0.99  0.84  0.28  0.85  0.59  0.62  0.95  0.41  0.84  0.85 ]
[ 0.99  0.50  0.64  1.00  0.91  0.88  0.99  0.89  0.94  0.90  1.00  0.88 ]
[ 1.00  0.93  1.00  0.84  0.99  0.99  0.99  0.96  0.94  1.00  0.99  1.00 ]
[ 1.00  0.97  1.00  0.88  0.99  0.98  1.00  0.97  0.96  1.00  0.95  0.86 ]
[ 0.99  1.00  0.59  0.98  0.96  0.83  0.99  0.99  0.97  0.99  0.85  0.93 ]
[ 0.98  1.00  0.98  0.80  0.93  0.99  0.95  0.99  0.98  0.99  0.74  0.95 ]
[ 0.95  0.99  1.00  0.97  0.96  0.99  0.98  0.98  0.97  0.96  0.98  0.72 ]
[ 0.99  0.83  0.96  0.96  0.95  0.98  1.00  0.57  0.98  0.99  0.97  0.16 ]
[ 0.98  1.00  0.78  0.86  0.96  0.84  1.00  0.98  0.96  0.96  0.86  0.99 ]
[ 0.86  1.00  0.77  1.00  0.98  0.99  0.94  0.90  0.94  0.86  0.99  1.00 ]
[ 0.96  0.99  0.98  1.00  0.99  0.89  0.90  0.96  0.81  0.96  0.96  0.98 ]
[ 0.69  0.69  0.60  0.97  0.94  0.91  0.87  0.62  1.00  0.82  0.99  0.96 ]
[ 1.00  0.99  0.84  0.77  0.93  0.92  0.90  0.99  0.92  0.91  1.00  0.87 ]

11/08 06:34:48 PM | === Batch 20/200
11/08 06:34:50 PM | loss = 0.281 + 0.171 + 0.062 = 0.514
11/08 06:34:53 PM | === Batch 21/200
11/08 06:34:54 PM | loss = 0.199 + 0.130 + 0.060 = 0.390
11/08 06:34:57 PM | === Batch 22/200
11/08 06:34:59 PM | loss = 0.178 + 0.001 + 0.058 = 0.237
11/08 06:35:02 PM | === Batch 23/200
11/08 06:35:03 PM | loss = 0.095 + 0.028 + 0.056 = 0.179
11/08 06:35:06 PM | === Batch 24/200
11/08 06:35:08 PM | loss = 0.213 + 0.057 + 0.056 = 0.325
11/08 06:35:11 PM | === Batch 25/200
11/08 06:35:12 PM | loss = 0.114 + 0.046 + 0.054 = 0.214
11/08 06:35:15 PM | === Batch 26/200
11/08 06:35:16 PM | loss = 0.143 + 0.056 + 0.053 = 0.252
11/08 06:35:19 PM | === Batch 27/200
11/08 06:35:21 PM | loss = 0.133 + 0.038 + 0.052 = 0.223
11/08 06:35:24 PM | === Batch 28/200
11/08 06:35:25 PM | loss = 0.125 + 0.075 + 0.052 = 0.252
11/08 06:35:28 PM | === Batch 29/200
11/08 06:35:30 PM | loss = 0.297 + 0.090 + 0.051 = 0.438
11/08 06:35:33 PM | === Batch 30/200
11/08 06:35:34 PM | loss = 0.123 + 0.023 + 0.050 = 0.195
11/08 06:35:37 PM | === Batch 31/200
11/08 06:35:39 PM | loss = 0.139 + 0.150 + 0.048 = 0.337
11/08 06:35:42 PM | === Batch 32/200
11/08 06:35:43 PM | loss = 0.095 + 0.201 + 0.047 = 0.343
11/08 06:35:46 PM | === Batch 33/200
11/08 06:35:47 PM | loss = 0.114 + 0.132 + 0.047 = 0.292
11/08 06:35:50 PM | === Batch 34/200
11/08 06:35:52 PM | loss = 0.205 + 0.031 + 0.047 = 0.283
11/08 06:35:55 PM | === Batch 35/200
11/08 06:35:56 PM | loss = 0.236 + 0.074 + 0.047 = 0.357
11/08 06:35:59 PM | === Batch 36/200
11/08 06:36:01 PM | loss = 0.227 + 0.044 + 0.046 = 0.317
11/08 06:36:04 PM | === Batch 37/200
11/08 06:36:05 PM | loss = 0.148 + 0.072 + 0.045 = 0.265
11/08 06:36:08 PM | === Batch 38/200
11/08 06:36:10 PM | loss = 0.183 + 0.082 + 0.045 = 0.310
11/08 06:36:13 PM | === Batch 39/200
11/08 06:36:14 PM | loss = 0.035 + 0.005 + 0.045 = 0.085
11/08 06:36:17 PM | === Batch 40/200
11/08 06:36:19 PM | loss = 0.063 + 0.002 + 0.045 = 0.110
11/08 06:36:22 PM | === Batch 41/200
11/08 06:36:23 PM | loss = 0.217 + 0.088 + 0.044 = 0.349
11/08 06:36:26 PM | === Batch 42/200
11/08 06:36:27 PM | loss = 0.204 + 0.076 + 0.044 = 0.323
11/08 06:36:30 PM | === Batch 43/200
11/08 06:36:32 PM | loss = 0.120 + 0.020 + 0.044 = 0.184
11/08 06:36:35 PM | === Batch 44/200
11/08 06:36:37 PM | loss = 0.084 + 0.026 + 0.044 = 0.153
11/08 06:36:40 PM | === Batch 45/200
11/08 06:36:41 PM | loss = 0.181 + 0.042 + 0.043 = 0.266
11/08 06:36:44 PM | === Batch 46/200
11/08 06:36:45 PM | loss = 0.101 + 0.011 + 0.042 = 0.155
11/08 06:36:48 PM | === Batch 47/200
11/08 06:36:50 PM | loss = 0.151 + 0.083 + 0.043 = 0.277
11/08 06:36:53 PM | === Batch 48/200
11/08 06:36:54 PM | loss = 0.267 + 0.102 + 0.042 = 0.412
11/08 06:36:57 PM | === Batch 49/200
11/08 06:36:59 PM | loss = 0.100 + 0.057 + 0.042 = 0.198
11/08 06:37:02 PM | === Batch 50/200
11/08 06:37:03 PM | loss = 0.104 + 0.060 + 0.041 = 0.204
11/08 06:37:06 PM | === Batch 51/200
11/08 06:37:07 PM | loss = 0.080 + 0.084 + 0.040 = 0.205
11/08 06:37:10 PM | === Batch 52/200
11/08 06:37:12 PM | loss = 0.100 + 0.010 + 0.040 = 0.150
11/08 06:37:15 PM | === Batch 53/200
11/08 06:37:16 PM | loss = 0.044 + 0.110 + 0.041 = 0.195
11/08 06:37:19 PM | === Batch 54/200
11/08 06:37:20 PM | loss = 0.206 + 0.160 + 0.041 = 0.407
11/08 06:37:23 PM | === Batch 55/200
11/08 06:37:25 PM | loss = 0.138 + 0.141 + 0.040 = 0.320
11/08 06:37:28 PM | === Batch 56/200
11/08 06:37:29 PM | loss = 0.177 + 0.070 + 0.039 = 0.287
11/08 06:37:32 PM | === Batch 57/200
11/08 06:37:34 PM | loss = 0.205 + 0.073 + 0.038 = 0.316
11/08 06:37:36 PM | === Batch 58/200
11/08 06:37:38 PM | loss = 0.083 + 0.134 + 0.037 = 0.255
11/08 06:37:41 PM | === Batch 59/200
11/08 06:37:42 PM | loss = 0.110 + 0.097 + 0.037 = 0.244
11/08 06:37:45 PM | === Batch 60/200
11/08 06:37:47 PM | loss = 0.121 + 0.021 + 0.037 = 0.180
11/08 06:37:50 PM | === Batch 61/200
11/08 06:37:51 PM | loss = 0.218 + 0.046 + 0.037 = 0.301
11/08 06:37:54 PM | === Batch 62/200
11/08 06:37:55 PM | loss = 0.122 + 0.015 + 0.036 = 0.173
11/08 06:37:58 PM | === Batch 63/200
11/08 06:38:00 PM | loss = 0.088 + 0.094 + 0.035 = 0.217
11/08 06:38:03 PM | === Batch 64/200
11/08 06:38:04 PM | loss = 0.141 + 0.109 + 0.035 = 0.285
11/08 06:38:07 PM | === Batch 65/200
11/08 06:38:09 PM | loss = 0.084 + 0.035 + 0.035 = 0.154
11/08 06:38:12 PM | === Batch 66/200
11/08 06:38:13 PM | loss = 0.091 + 0.083 + 0.035 = 0.209
11/08 06:38:16 PM | === Batch 67/200
11/08 06:38:17 PM | loss = 0.125 + 0.130 + 0.035 = 0.291
11/08 06:38:20 PM | === Batch 68/200
11/08 06:38:22 PM | loss = 0.125 + 0.125 + 0.035 = 0.285
11/08 06:38:25 PM | === Batch 69/200
11/08 06:38:26 PM | loss = 0.059 + 0.068 + 0.035 = 0.162
11/08 06:38:29 PM | === Batch 70/200
11/08 06:38:30 PM | loss = 0.160 + 0.038 + 0.034 = 0.231
11/08 06:38:33 PM | === Batch 71/200
11/08 06:38:35 PM | loss = 0.182 + 0.077 + 0.033 = 0.292
11/08 06:38:38 PM | === Batch 72/200
11/08 06:38:39 PM | loss = 0.063 + 0.034 + 0.033 = 0.130
11/08 06:38:42 PM | === Batch 73/200
11/08 06:38:44 PM | loss = 0.115 + 0.062 + 0.034 = 0.210
11/08 06:38:47 PM | === Batch 74/200
11/08 06:38:48 PM | loss = 0.131 + 0.090 + 0.034 = 0.255
11/08 06:38:51 PM | === Batch 75/200
11/08 06:38:52 PM | loss = 0.141 + 0.061 + 0.033 = 0.235
11/08 06:38:55 PM | === Batch 76/200
11/08 06:38:57 PM | loss = 0.073 + 0.014 + 0.032 = 0.120
11/08 06:39:00 PM | === Batch 77/200
11/08 06:39:01 PM | loss = 0.274 + 0.025 + 0.032 = 0.332
11/08 06:39:04 PM | === Batch 78/200
11/08 06:39:06 PM | loss = 0.072 + 0.028 + 0.032 = 0.133
11/08 06:39:09 PM | === Batch 79/200
11/08 06:39:10 PM | loss = 0.064 + 0.025 + 0.032 = 0.121
11/08 06:39:13 PM | === Batch 80/200
11/08 06:39:14 PM | loss = 0.070 + 0.032 + 0.031 = 0.133
11/08 06:39:17 PM | === Batch 81/200
11/08 06:39:19 PM | loss = 0.066 + 0.018 + 0.031 = 0.114
11/08 06:39:22 PM | === Batch 82/200
11/08 06:39:23 PM | loss = 0.069 + 0.052 + 0.031 = 0.151
11/08 06:39:26 PM | === Batch 83/200
11/08 06:39:27 PM | loss = 0.180 + 0.066 + 0.030 = 0.276
11/08 06:39:30 PM | === Batch 84/200
11/08 06:39:32 PM | loss = 0.121 + 0.028 + 0.030 = 0.180
11/08 06:39:35 PM | === Batch 85/200
11/08 06:39:36 PM | loss = 0.126 + 0.069 + 0.029 = 0.224
11/08 06:39:39 PM | === Batch 86/200
11/08 06:39:40 PM | loss = 0.113 + 0.093 + 0.029 = 0.235
11/08 06:39:43 PM | === Batch 87/200
11/08 06:39:45 PM | loss = 0.025 + 0.046 + 0.029 = 0.100
11/08 06:39:48 PM | === Batch 88/200
11/08 06:39:49 PM | loss = 0.156 + 0.053 + 0.029 = 0.238
11/08 06:39:52 PM | === Batch 89/200
11/08 06:39:54 PM | loss = 0.057 + 0.084 + 0.029 = 0.170
11/08 06:39:56 PM | === Batch 90/200
11/08 06:39:58 PM | loss = 0.097 + 0.069 + 0.029 = 0.195
11/08 06:40:01 PM | === Batch 91/200
11/08 06:40:02 PM | loss = 0.096 + 0.011 + 0.029 = 0.135
11/08 06:40:05 PM | === Batch 92/200
11/08 06:40:07 PM | loss = 0.142 + 0.113 + 0.028 = 0.283
11/08 06:40:10 PM | === Batch 93/200
11/08 06:40:11 PM | loss = 0.148 + 0.161 + 0.027 = 0.337
11/08 06:40:14 PM | === Batch 94/200
11/08 06:40:15 PM | loss = 0.044 + 0.135 + 0.027 = 0.206
11/08 06:40:18 PM | === Batch 95/200
11/08 06:40:20 PM | loss = 0.213 + 0.042 + 0.027 = 0.282
11/08 06:40:23 PM | === Batch 96/200
11/08 06:40:24 PM | loss = 0.029 + 0.079 + 0.028 = 0.136
11/08 06:40:27 PM | === Batch 97/200
11/08 06:40:28 PM | loss = 0.088 + 0.138 + 0.028 = 0.254
11/08 06:40:31 PM | === Batch 98/200
11/08 06:40:33 PM | loss = 0.137 + 0.149 + 0.028 = 0.314
11/08 06:40:36 PM | === Batch 99/200
11/08 06:40:37 PM | loss = 0.201 + 0.118 + 0.027 = 0.347
11/08 06:40:40 PM | === Batch 100/200
11/08 06:40:42 PM | loss = 0.165 + 0.048 + 0.027 = 0.240
11/08 06:40:45 PM | attribution_score[0:12]: 
[ 0.02  1.00  1.00  0.89  0.84  0.99  0.98  0.86  0.99  0.98  0.04  0.99 ]
[ 0.93  0.99  0.96  0.99  0.80  0.99  0.11  0.97  0.98  0.98  0.91  0.97 ]
[ 0.97  0.02  0.98  0.22  0.14  0.03  0.07  0.94  0.89  0.92  0.16  1.00 ]
[ 0.88  0.95  0.97  0.99  0.97  0.98  0.95  0.99  0.98  0.89  0.98  0.96 ]
[ 0.99  0.98  0.89  0.90  0.97  0.95  0.07  0.95  0.91  0.28  0.23  0.98 ]
[ 0.98  0.98  0.98  0.02  0.98  0.99  0.98  0.92  0.90  0.99  0.03  0.02 ]
[ 0.80  0.15  0.92  0.82  0.94  0.97  0.94  0.84  0.95  0.98  0.92  0.94 ]
[ 0.01  0.97  0.97  0.81  0.93  0.19  0.93  0.95  0.95  0.91  0.87  0.83 ]
[ 0.82  0.63  0.99  0.97  0.97  0.89  0.89  0.91  0.72  0.06  0.65  0.82 ]
[ 0.96  0.99  0.96  0.93  0.97  0.07  0.08  0.96  0.45  0.09  0.96  0.94 ]
[ 0.12  0.05  0.16  0.04  0.02  0.10  0.82  0.24  0.82  0.06  0.20  0.94 ]
[ 0.91  0.76  0.64  0.89  0.89  0.02  0.04  0.96  0.91  0.81  0.58  0.91 ]
[ 0.46  0.36  0.04  0.71  0.16  0.82  0.05  0.65  0.94  0.39  0.02  0.39 ]
[ 0.53  0.53  0.04  0.93  0.71  0.93  0.95  0.49  0.82  0.85  0.89  0.80 ]
[ 0.98  1.00  0.99  1.00  0.99  0.95  0.96  1.00  0.97  0.98  1.00  0.99 ]
[ 1.00  0.88  0.99  0.98  0.98  0.94  0.94  0.98  1.00  0.91  0.99  0.99 ]
[ 0.91  0.91  0.99  0.97  0.98  0.04  0.93  0.95  0.98  0.98  0.87  0.90 ]
[ 0.98  0.98  0.91  0.94  0.99  0.91  0.96  0.70  0.99  0.93  0.98  0.21 ]
[ 0.94  0.95  0.98  0.04  0.96  0.98  0.96  0.02  0.99  0.92  0.19  0.97 ]
[ 0.90  0.91  0.96  0.98  0.99  0.77  0.99  0.94  0.91  0.80  0.93  0.97 ]
[ 0.98  0.26  0.99  0.99  0.99  0.97  0.98  0.97  0.99  0.99  0.13  0.28 ]
[ 0.99  0.98  0.83  0.03  0.95  1.00  1.00  0.99  0.84  0.93  0.96  0.89 ]
[ 0.86  0.97  0.99  0.10  0.99  0.99  0.54  0.93  0.98  0.97  0.91  0.99 ]
[ 0.97  0.73  0.96  0.92  0.93  0.98  0.97  0.99  0.98  0.94  0.96  0.98 ]
[ 0.97  0.91  0.98  0.12  1.00  0.22  0.97  0.96  0.97  0.94  0.79  0.06 ]
[ 0.93  0.18  0.95  0.78  0.18  0.90  0.98  0.96  0.79  0.50  0.98  0.95 ]
[ 0.11  1.00  1.00  0.88  0.95  0.98  0.63  0.88  0.95  0.20  0.93  0.98 ]
[ 1.00  0.99  0.97  1.00  0.95  0.90  1.00  0.96  0.98  0.94  1.00  0.97 ]
[ 1.00  0.99  1.00  0.99  1.00  1.00  1.00  1.00  0.96  1.00  1.00  1.00 ]
[ 1.00  0.99  1.00  0.96  0.99  1.00  1.00  0.99  1.00  1.00  0.99  0.96 ]
[ 1.00  1.00  0.94  0.99  0.98  0.98  1.00  1.00  1.00  1.00  0.97  0.96 ]
[ 0.99  1.00  1.00  0.96  0.99  1.00  0.97  0.99  1.00  0.99  0.97  0.99 ]
[ 0.99  1.00  1.00  0.99  0.98  1.00  0.99  1.00  0.98  0.98  0.99  0.91 ]
[ 1.00  0.99  0.99  0.99  0.95  1.00  1.00  0.94  0.99  0.98  0.99  0.71 ]
[ 0.99  0.99  0.95  0.96  0.99  0.97  1.00  0.99  0.99  0.99  0.95  1.00 ]
[ 0.99  1.00  0.93  1.00  0.99  1.00  0.99  0.99  0.96  0.99  1.00  1.00 ]
[ 0.99  1.00  1.00  1.00  1.00  0.98  0.98  0.99  0.95  0.99  0.99  0.99 ]
[ 0.98  0.97  0.09  0.99  0.99  0.99  0.98  0.92  1.00  0.94  1.00  1.00 ]
[ 1.00  0.99  0.97  0.94  0.99  0.98  0.99  1.00  0.97  0.98  1.00  0.97 ]

11/08 06:40:45 PM | === Batch 101/200
11/08 06:40:46 PM | loss = 0.216 + 0.080 + 0.026 = 0.322
11/08 06:40:49 PM | === Batch 102/200
11/08 06:40:51 PM | loss = 0.033 + 0.154 + 0.025 = 0.213
11/08 06:40:54 PM | === Batch 103/200
11/08 06:40:55 PM | loss = 0.107 + 0.154 + 0.025 = 0.286
11/08 06:40:58 PM | === Batch 104/200
11/08 06:40:59 PM | loss = 0.050 + 0.090 + 0.025 = 0.165
11/08 06:41:02 PM | === Batch 105/200
11/08 06:41:04 PM | loss = 0.086 + 0.023 + 0.026 = 0.135
11/08 06:41:07 PM | === Batch 106/200
11/08 06:41:08 PM | loss = 0.070 + 0.065 + 0.026 = 0.161
11/08 06:41:11 PM | === Batch 107/200
11/08 06:41:12 PM | loss = 0.125 + 0.065 + 0.026 = 0.216
11/08 06:41:15 PM | === Batch 108/200
11/08 06:41:17 PM | loss = 0.090 + 0.030 + 0.025 = 0.145
11/08 06:41:20 PM | === Batch 109/200
11/08 06:41:21 PM | loss = 0.102 + 0.053 + 0.025 = 0.179
11/08 06:41:24 PM | === Batch 110/200
11/08 06:41:26 PM | loss = 0.169 + 0.077 + 0.025 = 0.270
11/08 06:41:29 PM | === Batch 111/200
11/08 06:41:31 PM | loss = 0.061 + 0.044 + 0.025 = 0.130
11/08 06:41:34 PM | === Batch 112/200
11/08 06:41:35 PM | loss = 0.112 + 0.033 + 0.025 = 0.170
11/08 06:41:38 PM | === Batch 113/200
11/08 06:41:40 PM | loss = 0.080 + 0.052 + 0.025 = 0.157
11/08 06:41:43 PM | === Batch 114/200
11/08 06:41:45 PM | loss = 0.113 + 0.035 + 0.025 = 0.172
11/08 06:41:48 PM | === Batch 115/200
11/08 06:41:49 PM | loss = 0.135 + 0.024 + 0.025 = 0.183
11/08 06:41:53 PM | === Batch 116/200
11/08 06:41:54 PM | loss = 0.236 + 0.032 + 0.025 = 0.293
11/08 06:41:57 PM | === Batch 117/200
11/08 06:41:59 PM | loss = 0.118 + 0.017 + 0.025 = 0.159
11/08 06:42:02 PM | === Batch 118/200
11/08 06:42:04 PM | loss = 0.159 + 0.016 + 0.025 = 0.199
11/08 06:42:07 PM | === Batch 119/200
11/08 06:42:08 PM | loss = 0.181 + 0.029 + 0.024 = 0.235
11/08 06:42:12 PM | === Batch 120/200
11/08 06:42:13 PM | loss = 0.039 + 0.018 + 0.024 = 0.082
11/08 06:42:16 PM | === Batch 121/200
11/08 06:42:18 PM | loss = 0.143 + 0.038 + 0.025 = 0.206
11/08 06:42:21 PM | === Batch 122/200
11/08 06:42:23 PM | loss = 0.147 + 0.047 + 0.025 = 0.219
11/08 06:42:26 PM | === Batch 123/200
11/08 06:42:27 PM | loss = 0.062 + 0.020 + 0.025 = 0.107
11/08 06:42:30 PM | === Batch 124/200
11/08 06:42:32 PM | loss = 0.095 + 0.051 + 0.024 = 0.171
11/08 06:42:35 PM | === Batch 125/200
11/08 06:42:36 PM | loss = 0.136 + 0.063 + 0.024 = 0.223
11/08 06:42:40 PM | === Batch 126/200
11/08 06:42:41 PM | loss = 0.128 + 0.018 + 0.024 = 0.170
11/08 06:42:44 PM | === Batch 127/200
11/08 06:42:46 PM | loss = 0.086 + 0.057 + 0.024 = 0.168
11/08 06:42:49 PM | === Batch 128/200
11/08 06:42:51 PM | loss = 0.078 + 0.088 + 0.024 = 0.191
11/08 06:42:54 PM | === Batch 129/200
11/08 06:42:55 PM | loss = 0.142 + 0.083 + 0.024 = 0.249
11/08 06:42:58 PM | === Batch 130/200
11/08 06:43:00 PM | loss = 0.069 + 0.046 + 0.024 = 0.138
11/08 06:43:03 PM | === Batch 131/200
11/08 06:43:05 PM | loss = 0.055 + 0.025 + 0.023 = 0.103
11/08 06:43:08 PM | === Batch 132/200
11/08 06:43:09 PM | loss = 0.133 + 0.051 + 0.023 = 0.207
11/08 06:43:12 PM | === Batch 133/200
11/08 06:43:14 PM | loss = 0.068 + 0.022 + 0.023 = 0.113
11/08 06:43:17 PM | === Batch 134/200
11/08 06:43:19 PM | loss = 0.086 + 0.041 + 0.023 = 0.150
11/08 06:43:22 PM | === Batch 135/200
11/08 06:43:24 PM | loss = 0.112 + 0.062 + 0.023 = 0.197
11/08 06:43:27 PM | === Batch 136/200
11/08 06:43:29 PM | loss = 0.251 + 0.049 + 0.023 = 0.323
11/08 06:43:32 PM | === Batch 137/200
11/08 06:43:33 PM | loss = 0.146 + 0.004 + 0.022 = 0.172
11/08 06:43:37 PM | === Batch 138/200
11/08 06:43:39 PM | loss = 0.022 + 0.094 + 0.022 = 0.138
11/08 06:43:42 PM | === Batch 139/200
11/08 06:43:43 PM | loss = 0.128 + 0.130 + 0.022 = 0.279
11/08 06:43:47 PM | === Batch 140/200
11/08 06:43:48 PM | loss = 0.064 + 0.112 + 0.022 = 0.198
11/08 06:43:51 PM | === Batch 141/200
11/08 06:43:53 PM | loss = 0.078 + 0.046 + 0.022 = 0.146
11/08 06:43:56 PM | === Batch 142/200
11/08 06:43:57 PM | loss = 0.124 + 0.046 + 0.022 = 0.192
11/08 06:44:01 PM | === Batch 143/200
11/08 06:44:02 PM | loss = 0.047 + 0.088 + 0.022 = 0.157
11/08 06:44:05 PM | === Batch 144/200
11/08 06:44:07 PM | loss = 0.160 + 0.096 + 0.022 = 0.278
11/08 06:44:10 PM | === Batch 145/200
11/08 06:44:11 PM | loss = 0.191 + 0.074 + 0.022 = 0.286
11/08 06:44:15 PM | === Batch 146/200
11/08 06:44:16 PM | loss = 0.105 + 0.024 + 0.022 = 0.151
11/08 06:44:19 PM | === Batch 147/200
11/08 06:44:21 PM | loss = 0.048 + 0.067 + 0.021 = 0.136
11/08 06:44:24 PM | === Batch 148/200
11/08 06:44:26 PM | loss = 0.059 + 0.107 + 0.021 = 0.187
11/08 06:44:29 PM | === Batch 149/200
11/08 06:44:30 PM | loss = 0.100 + 0.096 + 0.021 = 0.216
11/08 06:44:33 PM | === Batch 150/200
11/08 06:44:35 PM | loss = 0.102 + 0.040 + 0.020 = 0.163
11/08 06:44:38 PM | === Batch 151/200
11/08 06:44:40 PM | loss = 0.140 + 0.040 + 0.021 = 0.200
11/08 06:44:43 PM | === Batch 152/200
11/08 06:44:44 PM | loss = 0.110 + 0.073 + 0.021 = 0.203
11/08 06:44:47 PM | === Batch 153/200
11/08 06:44:49 PM | loss = 0.076 + 0.072 + 0.020 = 0.168
11/08 06:44:52 PM | === Batch 154/200
11/08 06:44:53 PM | loss = 0.136 + 0.044 + 0.020 = 0.199
11/08 06:44:57 PM | === Batch 155/200
11/08 06:44:58 PM | loss = 0.058 + 0.011 + 0.020 = 0.089
11/08 06:45:01 PM | === Batch 156/200
11/08 06:45:03 PM | loss = 0.188 + 0.030 + 0.019 = 0.237
11/08 06:45:06 PM | === Batch 157/200
11/08 06:45:08 PM | loss = 0.056 + 0.002 + 0.019 = 0.078
11/08 06:45:11 PM | === Batch 158/200
11/08 06:45:12 PM | loss = 0.057 + 0.051 + 0.019 = 0.127
11/08 06:45:16 PM | === Batch 159/200
11/08 06:45:17 PM | loss = 0.056 + 0.072 + 0.019 = 0.147
11/08 06:45:20 PM | === Batch 160/200
11/08 06:45:22 PM | loss = 0.115 + 0.065 + 0.019 = 0.199
11/08 06:45:25 PM | === Batch 161/200
11/08 06:45:27 PM | loss = 0.227 + 0.034 + 0.019 = 0.280
11/08 06:45:30 PM | === Batch 162/200
11/08 06:45:31 PM | loss = 0.071 + 0.028 + 0.019 = 0.117
11/08 06:45:35 PM | === Batch 163/200
11/08 06:45:36 PM | loss = 0.033 + 0.050 + 0.018 = 0.101
11/08 06:45:39 PM | === Batch 164/200
11/08 06:45:41 PM | loss = 0.054 + 0.024 + 0.019 = 0.097
11/08 06:45:44 PM | === Batch 165/200
11/08 06:45:45 PM | loss = 0.021 + 0.031 + 0.019 = 0.071
11/08 06:45:48 PM | === Batch 166/200
11/08 06:45:50 PM | loss = 0.148 + 0.050 + 0.019 = 0.216
11/08 06:45:53 PM | === Batch 167/200
11/08 06:45:55 PM | loss = 0.072 + 0.041 + 0.019 = 0.131
11/08 06:45:58 PM | === Batch 168/200
11/08 06:45:59 PM | loss = 0.073 + 0.007 + 0.018 = 0.099
11/08 06:46:03 PM | === Batch 169/200
11/08 06:46:04 PM | loss = 0.119 + 0.067 + 0.018 = 0.204
11/08 06:46:08 PM | === Batch 170/200
11/08 06:46:09 PM | loss = 0.158 + 0.095 + 0.018 = 0.271
11/08 06:46:12 PM | === Batch 171/200
11/08 06:46:14 PM | loss = 0.121 + 0.077 + 0.018 = 0.215
11/08 06:46:17 PM | === Batch 172/200
11/08 06:46:18 PM | loss = 0.123 + 0.017 + 0.018 = 0.159
11/08 06:46:21 PM | === Batch 173/200
11/08 06:46:23 PM | loss = 0.115 + 0.055 + 0.018 = 0.188
11/08 06:46:26 PM | === Batch 174/200
11/08 06:46:28 PM | loss = 0.128 + 0.089 + 0.018 = 0.235
11/08 06:46:31 PM | === Batch 175/200
11/08 06:46:33 PM | loss = 0.123 + 0.092 + 0.018 = 0.233
11/08 06:46:36 PM | === Batch 176/200
11/08 06:46:38 PM | loss = 0.139 + 0.072 + 0.018 = 0.229
11/08 06:46:41 PM | === Batch 177/200
11/08 06:46:42 PM | loss = 0.194 + 0.026 + 0.018 = 0.238
11/08 06:46:46 PM | === Batch 178/200
11/08 06:46:47 PM | loss = 0.051 + 0.054 + 0.017 = 0.122
11/08 06:46:50 PM | === Batch 179/200
11/08 06:46:52 PM | loss = 0.128 + 0.093 + 0.017 = 0.239
11/08 06:46:55 PM | === Batch 180/200
11/08 06:46:57 PM | loss = 0.039 + 0.087 + 0.017 = 0.144
11/08 06:47:00 PM | === Batch 181/200
11/08 06:47:01 PM | loss = 0.133 + 0.042 + 0.017 = 0.192
11/08 06:47:04 PM | === Batch 182/200
11/08 06:47:06 PM | loss = 0.090 + 0.026 + 0.017 = 0.134
11/08 06:47:09 PM | === Batch 183/200
11/08 06:47:11 PM | loss = 0.267 + 0.054 + 0.018 = 0.338
11/08 06:47:14 PM | === Batch 184/200
11/08 06:47:16 PM | loss = 0.119 + 0.050 + 0.017 = 0.187
11/08 06:47:19 PM | === Batch 185/200
11/08 06:47:20 PM | loss = 0.095 + 0.023 + 0.017 = 0.135
11/08 06:47:24 PM | === Batch 186/200
11/08 06:47:25 PM | loss = 0.115 + 0.036 + 0.017 = 0.167
11/08 06:47:28 PM | === Batch 187/200
11/08 06:47:30 PM | loss = 0.161 + 0.057 + 0.017 = 0.235
11/08 06:47:33 PM | === Batch 188/200
11/08 06:47:34 PM | loss = 0.137 + 0.041 + 0.017 = 0.195
11/08 06:47:38 PM | === Batch 189/200
11/08 06:47:40 PM | loss = 0.120 + 0.007 + 0.017 = 0.144
11/08 06:47:43 PM | === Batch 190/200
11/08 06:47:44 PM | loss = 0.174 + 0.016 + 0.017 = 0.207
11/08 06:47:48 PM | === Batch 191/200
11/08 06:47:49 PM | loss = 0.064 + 0.003 + 0.017 = 0.083
11/08 06:47:52 PM | === Batch 192/200
11/08 06:47:53 PM | loss = 0.089 + 0.040 + 0.016 = 0.146
11/08 06:47:57 PM | === Batch 193/200
11/08 06:47:58 PM | loss = 0.120 + 0.045 + 0.016 = 0.181
11/08 06:48:01 PM | === Batch 194/200
11/08 06:48:03 PM | loss = 0.165 + 0.016 + 0.016 = 0.197
11/08 06:48:06 PM | === Batch 195/200
11/08 06:48:07 PM | loss = 0.046 + 0.035 + 0.017 = 0.098
11/08 06:48:11 PM | === Batch 196/200
11/08 06:48:12 PM | loss = 0.138 + 0.056 + 0.017 = 0.210
11/08 06:48:15 PM | === Batch 197/200
11/08 06:48:17 PM | loss = 0.228 + 0.052 + 0.017 = 0.296
11/08 06:48:20 PM | === Batch 198/200
11/08 06:48:22 PM | loss = 0.065 + 0.027 + 0.016 = 0.109
11/08 06:48:25 PM | === Batch 199/200
11/08 06:48:26 PM | loss = 0.065 + 0.020 + 0.016 = 0.101
11/08 06:48:30 PM | === Batch 200/200
11/08 06:48:31 PM | loss = 0.077 + 0.039 + 0.016 = 0.131
11/08 06:48:34 PM | attribution_score[0:12]: 
[ 0.01  1.00  1.00  0.98  0.90  1.00  0.99  0.97  0.99  0.99  0.01  0.99 ]
[ 0.95  0.99  0.97  0.99  0.82  0.99  0.03  0.98  0.97  0.99  0.92  0.96 ]
[ 0.98  0.01  0.98  0.12  0.04  0.01  0.03  0.97  0.97  0.97  0.05  1.00 ]
[ 0.97  0.96  0.98  0.99  0.98  0.99  0.98  0.99  0.98  0.91  0.99  0.97 ]
[ 0.99  0.99  0.95  0.96  0.97  0.97  0.03  0.97  0.95  0.03  0.07  0.98 ]
[ 0.98  0.99  0.98  0.01  0.99  0.99  0.99  0.95  0.96  0.99  0.01  0.01 ]
[ 0.87  0.07  0.95  0.89  0.96  0.98  0.97  0.78  0.95  0.99  0.95  0.97 ]
[ 0.01  0.99  0.98  0.94  0.94  0.03  0.91  0.98  0.96  0.96  0.91  0.93 ]
[ 0.95  0.57  0.99  0.98  0.99  0.86  0.94  0.96  0.90  0.03  0.28  0.95 ]
[ 0.97  0.99  0.98  0.97  0.99  0.02  0.03  0.96  0.09  0.03  0.94  0.96 ]
[ 0.06  0.03  0.14  0.02  0.01  0.06  0.93  0.19  0.90  0.02  0.07  0.98 ]
[ 0.96  0.79  0.18  0.94  0.96  0.01  0.02  0.97  0.96  0.95  0.14  0.93 ]
[ 0.63  0.07  0.02  0.92  0.07  0.92  0.02  0.64  0.95  0.46  0.01  0.30 ]
[ 0.04  0.14  0.02  0.98  0.48  0.94  0.98  0.05  0.95  0.92  0.93  0.70 ]
[ 0.99  1.00  0.99  1.00  0.99  0.99  0.97  1.00  0.98  0.99  1.00  0.99 ]
[ 0.99  0.98  1.00  0.98  0.99  0.99  0.95  0.98  1.00  0.96  0.99  0.99 ]
[ 0.96  0.99  0.99  0.98  0.99  0.01  0.99  0.96  0.98  0.98  0.94  0.94 ]
[ 0.99  0.99  0.97  0.93  0.99  0.98  0.99  0.75  0.99  0.98  0.99  0.04 ]
[ 0.93  0.98  0.98  0.20  0.95  0.99  0.96  0.02  0.99  0.96  0.79  0.99 ]
[ 0.97  0.94  0.99  0.97  0.99  0.80  0.99  0.97  0.98  0.86  0.98  0.98 ]
[ 0.96  0.32  0.99  0.99  0.99  0.97  0.99  0.99  0.99  0.98  0.92  0.36 ]
[ 1.00  0.98  0.91  0.03  0.98  1.00  1.00  0.99  0.96  0.97  0.99  0.92 ]
[ 0.95  0.98  0.99  0.14  0.99  0.98  0.10  0.81  0.98  0.97  0.96  0.98 ]
[ 0.99  0.73  0.95  0.96  0.93  0.95  0.99  0.99  0.99  0.97  0.97  0.98 ]
[ 0.98  0.91  0.97  0.06  1.00  0.15  0.98  0.96  0.96  0.97  0.62  0.04 ]
[ 0.92  0.07  0.99  0.76  0.88  0.97  0.99  0.99  0.93  0.05  0.99  0.98 ]
[ 0.03  1.00  1.00  0.99  0.98  0.99  0.59  0.96  0.99  0.07  0.97  0.99 ]
[ 1.00  0.99  0.99  1.00  0.99  0.91  1.00  0.98  0.99  0.97  1.00  0.98 ]
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  0.99  1.00  0.99  1.00 ]
[ 1.00  0.99  1.00  0.99  1.00  1.00  1.00  0.99  1.00  1.00  0.99  0.96 ]
[ 1.00  1.00  0.92  0.96  1.00  0.99  1.00  1.00  1.00  1.00  0.99  0.97 ]
[ 0.99  1.00  1.00  0.97  0.99  1.00  0.99  0.99  1.00  0.99  0.99  1.00 ]
[ 0.99  1.00  1.00  0.99  0.99  0.99  0.99  1.00  0.97  0.99  0.99  0.96 ]
[ 1.00  1.00  0.99  0.99  0.98  1.00  1.00  0.99  0.99  0.97  0.99  0.93 ]
[ 0.99  1.00  0.97  0.98  0.99  0.95  1.00  1.00  1.00  1.00  0.97  1.00 ]
[ 0.99  1.00  0.88  1.00  1.00  1.00  0.97  0.99  0.99  1.00  1.00  1.00 ]
[ 0.99  0.99  1.00  1.00  1.00  0.99  0.98  0.99  0.99  0.99  0.99  0.99 ]
[ 0.98  0.99  0.07  0.99  1.00  1.00  0.98  0.98  1.00  0.97  1.00  1.00 ]
[ 1.00  1.00  0.93  0.99  0.99  0.99  0.99  1.00  0.99  0.99  1.00  0.97 ]

11/08 06:48:34 PM | ===
Best loss was 0.07 at iteration 165

11/08 06:48:35 PM | Looking for optimal threshold...
11/08 06:48:35 PM | Testing threshold 0.5
11/08 06:48:35 PM | Distance to target: 7,329,520
11/08 06:48:35 PM | Testing threshold 0.75
11/08 06:48:35 PM | Distance to target: 6,180,816
11/08 06:48:35 PM | Testing threshold 0.625
11/08 06:48:35 PM | Distance to target: 1,791,264
11/08 06:48:35 PM | Testing threshold 0.6875
11/08 06:48:35 PM | Distance to target: 4,350,096
11/08 06:48:35 PM | Testing threshold 0.65625
11/08 06:48:35 PM | Distance to target: 721,664
11/08 06:48:35 PM | Testing threshold 0.671875
11/08 06:48:35 PM | Distance to target: 265,472
11/08 06:48:35 PM | Testing threshold 0.6640625
11/08 06:48:35 PM | Distance to target: 228,096
11/08 06:48:35 PM | Testing threshold 0.66796875
11/08 06:48:35 PM | Distance to target: 228,096
11/08 06:48:35 PM | Testing threshold 0.669921875
11/08 06:48:35 PM | Distance to target: 265,472
11/08 06:48:35 PM | Testing threshold 0.6689453125
11/08 06:48:35 PM | Distance to target: 228,096
11/08 06:48:35 PM | Testing threshold 0.66943359375
11/08 06:48:35 PM | Distance to target: 228,096
11/08 06:48:35 PM | Testing threshold 0.669677734375
11/08 06:48:35 PM | Distance to target: 265,472
11/08 06:48:35 PM | Testing threshold 0.6695556640625
11/08 06:48:35 PM | Distance to target: 228,096
11/08 06:48:35 PM | Testing threshold 0.66961669921875
11/08 06:48:35 PM | Distance to target: 265,472
11/08 06:48:35 PM | Testing threshold 0.669586181640625
11/08 06:48:35 PM | Distance to target: 265,472
11/08 06:48:35 PM | Testing threshold 0.6695709228515625
11/08 06:48:36 PM | Distance to target: 228,096
11/08 06:48:36 PM | Testing threshold 0.6695785522460938
11/08 06:48:36 PM | Distance to target: 228,096
11/08 06:48:36 PM | Testing threshold 0.6695823669433594
11/08 06:48:36 PM | Distance to target: 228,096
11/08 06:48:36 PM | Testing threshold 0.6695842742919922
11/08 06:48:36 PM | Distance to target: 265,472
11/08 06:48:36 PM | Testing threshold 0.6695833206176758
11/08 06:48:36 PM | Distance to target: 228,096
11/08 06:48:36 PM | Testing threshold 0.669583797454834
11/08 06:48:36 PM | Distance to target: 228,096
11/08 06:48:36 PM | Testing threshold 0.6695840358734131
11/08 06:48:36 PM | Distance to target: 228,096
11/08 06:48:36 PM | Testing threshold 0.6695841550827026
11/08 06:48:36 PM | Distance to target: 228,096
11/08 06:48:36 PM | Testing threshold 0.6695842146873474
11/08 06:48:36 PM | Distance to target: 228,096
11/08 06:48:36 PM | Testing threshold 0.6695842444896698
11/08 06:48:36 PM | Distance to target: 228,096
11/08 06:48:36 PM | Testing threshold 0.669584259390831
11/08 06:48:36 PM | Distance to target: 228,096
11/08 06:48:36 PM | Testing threshold 0.6695842668414116
11/08 06:48:36 PM | Distance to target: 228,096
11/08 06:48:36 PM | Testing threshold 0.6695842705667019
11/08 06:48:36 PM | Distance to target: 228,096
11/08 06:48:36 PM | Testing threshold 0.669584272429347
11/08 06:48:36 PM | Distance to target: 228,096
11/08 06:48:36 PM | Testing threshold 0.6695842733606696
11/08 06:48:36 PM | Distance to target: 228,096
11/08 06:48:36 PM | Testing threshold 0.6695842738263309
11/08 06:48:36 PM | Distance to target: 228,096
11/08 06:48:36 PM | Testing threshold 0.6695842740591615
11/08 06:48:37 PM | Distance to target: 228,096
11/08 06:48:37 PM | Testing threshold 0.6695842741755769
11/08 06:48:37 PM | Distance to target: 228,096
11/08 06:48:37 PM | Testing threshold 0.6695842742337845
11/08 06:48:37 PM | Distance to target: 228,096
11/08 06:48:37 PM | Testing threshold 0.6695842742628884
11/08 06:48:37 PM | Distance to target: 228,096
11/08 06:48:37 PM | Testing threshold 0.6695842742774403
11/08 06:48:37 PM | Distance to target: 228,096
11/08 06:48:37 PM | Testing threshold 0.6695842742847162
11/08 06:48:37 PM | Distance to target: 228,096
11/08 06:48:37 PM | Testing threshold 0.6695842742883542
11/08 06:48:37 PM | Distance to target: 228,096
11/08 06:48:37 PM | Testing threshold 0.6695842742901732
11/08 06:48:37 PM | Distance to target: 228,096
11/08 06:48:37 PM | Testing threshold 0.6695842742910827
11/08 06:48:37 PM | Distance to target: 228,096
11/08 06:48:37 PM | Testing threshold 0.6695842742915374
11/08 06:48:37 PM | Distance to target: 228,096
11/08 06:48:37 PM | Testing threshold 0.6695842742917648
11/08 06:48:37 PM | Distance to target: 228,096
11/08 06:48:37 PM | Testing threshold 0.6695842742918785
11/08 06:48:37 PM | Distance to target: 228,096
11/08 06:48:37 PM | Testing threshold 0.6695842742919353
11/08 06:48:37 PM | Distance to target: 228,096
11/08 06:48:37 PM | Testing threshold 0.6695842742919638
11/08 06:48:37 PM | Distance to target: 228,096
11/08 06:48:37 PM | Testing threshold 0.669584274291978
11/08 06:48:37 PM | Distance to target: 228,096
11/08 06:48:37 PM | Testing threshold 0.6695842742919851
11/08 06:48:37 PM | Distance to target: 228,096
11/08 06:48:37 PM | Testing threshold 0.6695842742919886
11/08 06:48:38 PM | Distance to target: 228,096
11/08 06:48:38 PM | Testing threshold 0.6695842742919904
11/08 06:48:38 PM | Distance to target: 228,096
11/08 06:48:38 PM | Testing threshold 0.6695842742919913
11/08 06:48:38 PM | Distance to target: 228,096
11/08 06:48:43 PM | attribution_score[0:12]: 
[ 0.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  0.00  1.00 ]
[ 1.00  1.00  1.00  1.00  1.00  1.00  0.00  1.00  1.00  1.00  1.00  1.00 ]
[ 1.00  0.00  1.00  0.00  0.00  0.00  0.00  1.00  1.00  1.00  0.00  1.00 ]
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 1.00  1.00  1.00  1.00  1.00  1.00  0.00  1.00  1.00  0.00  0.00  1.00 ]
[ 1.00  1.00  1.00  0.00  1.00  1.00  1.00  1.00  1.00  1.00  0.00  0.00 ]
[ 1.00  0.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.00  1.00  1.00  1.00  1.00  0.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 1.00  0.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  0.00  0.00  1.00 ]
[ 1.00  1.00  1.00  1.00  1.00  0.00  0.00  1.00  0.00  0.00  1.00  1.00 ]
[ 0.00  0.00  0.00  0.00  0.00  0.00  1.00  0.00  1.00  0.00  0.00  1.00 ]
[ 1.00  1.00  0.00  1.00  1.00  0.00  0.00  1.00  1.00  1.00  0.00  1.00 ]
[ 1.00  0.00  0.00  1.00  0.00  1.00  0.00  0.00  1.00  0.00  0.00  0.00 ]
[ 0.00  0.00  0.00  1.00  0.00  1.00  1.00  0.00  1.00  1.00  1.00  0.00 ]
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 1.00  1.00  1.00  1.00  1.00  0.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  0.00 ]
[ 1.00  1.00  1.00  0.00  1.00  1.00  1.00  0.00  1.00  1.00  1.00  1.00 ]
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 1.00  0.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  0.00 ]
[ 1.00  1.00  1.00  0.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 1.00  1.00  1.00  0.00  1.00  1.00  0.00  1.00  1.00  1.00  1.00  1.00 ]
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 1.00  1.00  1.00  0.00  1.00  0.00  1.00  1.00  1.00  1.00  0.00  0.00 ]
[ 1.00  0.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  0.00  1.00  1.00 ]
[ 0.00  1.00  1.00  1.00  1.00  1.00  0.00  1.00  1.00  0.00  1.00  1.00 ]
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 1.00  1.00  0.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]

11/08 06:48:43 PM | DenseNet(
  (conv1): Conv2d(3, 20, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (dense1): Sequential(
    (0): DenseBasicBlock(
      (bn1): BatchNorm2d(20, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(20, 11, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (1): DenseBasicBlock(
      (bn1): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(31, 6, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (2): DenseBasicBlock(
      (bn1): BatchNorm2d(37, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(37, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (3): DenseBasicBlock(
      (bn1): BatchNorm2d(49, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(49, 9, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (4): DenseBasicBlock(
      (bn1): BatchNorm2d(58, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(58, 9, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (5): DenseBasicBlock(
      (bn1): BatchNorm2d(67, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(67, 11, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (6): DenseBasicBlock(
      (bn1): BatchNorm2d(78, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(78, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (7): DenseBasicBlock(
      (bn1): BatchNorm2d(88, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(88, 9, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (8): DenseBasicBlock(
      (bn1): BatchNorm2d(97, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(97, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (9): DenseBasicBlock(
      (bn1): BatchNorm2d(105, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(105, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (10): DenseBasicBlock(
      (bn1): BatchNorm2d(108, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(108, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (11): DenseBasicBlock(
      (bn1): BatchNorm2d(116, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(116, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
  )
  (trans1): Transition(
    (bn1): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace=True)
    (conv1): Conv2d(120, 103, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
  )
  (dense2): Sequential(
    (0): DenseBasicBlock(
      (bn1): BatchNorm2d(103, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(103, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (1): DenseBasicBlock(
      (bn1): BatchNorm2d(115, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(115, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (2): DenseBasicBlock(
      (bn1): BatchNorm2d(127, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(127, 11, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (3): DenseBasicBlock(
      (bn1): BatchNorm2d(138, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(138, 11, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (4): DenseBasicBlock(
      (bn1): BatchNorm2d(149, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(149, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (5): DenseBasicBlock(
      (bn1): BatchNorm2d(159, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(159, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (6): DenseBasicBlock(
      (bn1): BatchNorm2d(171, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(171, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (7): DenseBasicBlock(
      (bn1): BatchNorm2d(181, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(181, 11, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (8): DenseBasicBlock(
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(192, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (9): DenseBasicBlock(
      (bn1): BatchNorm2d(202, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(202, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (10): DenseBasicBlock(
      (bn1): BatchNorm2d(214, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(214, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (11): DenseBasicBlock(
      (bn1): BatchNorm2d(222, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(222, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
  )
  (trans2): Transition(
    (bn1): BatchNorm2d(232, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace=True)
    (conv1): Conv2d(232, 260, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
  )
  (dense3): Sequential(
    (0): DenseBasicBlock(
      (bn1): BatchNorm2d(260, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(260, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (1): DenseBasicBlock(
      (bn1): BatchNorm2d(272, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(272, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (2): DenseBasicBlock(
      (bn1): BatchNorm2d(284, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(284, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (3): DenseBasicBlock(
      (bn1): BatchNorm2d(296, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(296, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (4): DenseBasicBlock(
      (bn1): BatchNorm2d(308, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(308, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (5): DenseBasicBlock(
      (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(320, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (6): DenseBasicBlock(
      (bn1): BatchNorm2d(332, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(332, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (7): DenseBasicBlock(
      (bn1): BatchNorm2d(344, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(344, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (8): DenseBasicBlock(
      (bn1): BatchNorm2d(356, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(356, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (9): DenseBasicBlock(
      (bn1): BatchNorm2d(368, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(368, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (10): DenseBasicBlock(
      (bn1): BatchNorm2d(380, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(380, 11, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (11): DenseBasicBlock(
      (bn1): BatchNorm2d(391, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(391, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
  )
  (bn): BatchNorm2d(403, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (avgpool): AvgPool2d(kernel_size=8, stride=8, padding=0)
  (fc): Linear(in_features=403, out_features=10, bias=True)
)
11/08 06:48:46 PM | ----------------------------------------
11/08 06:48:46 PM | Performances input model:
11/08 06:48:46 PM |  - flops: 287,773,080
11/08 06:48:46 PM |  - params: 1,059,298
11/08 06:48:46 PM |  - accuracy: 94.80999755859375
11/08 06:48:46 PM | ----------------------------------------
11/08 06:48:46 PM | Performances pseudo-pruned model:
11/08 06:48:46 PM |  - flops: 287,773,080
11/08 06:48:46 PM |  - params: 1,059,298
11/08 06:48:46 PM |  - accuracy: 87.8499984741211
11/08 06:48:46 PM | ----------------------------------------
11/08 06:48:46 PM | Performances pruned model:
11/08 06:48:46 PM |  - flops: 167,638,097
11/08 06:48:46 PM |  - params: 758,237
11/08 06:48:46 PM |  - accuracy: 87.8499984741211
