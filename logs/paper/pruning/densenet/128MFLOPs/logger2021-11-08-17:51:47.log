11/08 05:51:47 PM | args = Namespace(output_dir='result/test/test2/', loaded_model_path='./checkpoints/cifar10/densenet_40.pt', resume=False, test_only=False, mode='prune', batch_size=64, nb_batches=200, Mflops_target=None, lr=0.6, momentum=0.9, beta=6, gamma=0.2, gpu='2', num_workers=4, dataset='cifar10', arch='densenet_40', save_plot=False, seed=1, lr_finetuning=0.02, epoch_finetuning=200, wd=0.002, data_dir='./data/cifar10/', print_freq=200, num_classes=10, device_ids=[2], device=device(type='cuda', index=0), name_base='')
11/08 05:51:54 PM | ----------------------------------------
11/08 05:51:54 PM | ==> Building model...
11/08 05:51:54 PM | ----------------------------------------
11/08 05:51:54 PM | ==> Loading weights into the model...
11/08 05:51:54 PM | ----------------------------------------
11/08 05:51:54 PM | DenseNet(
  (conv1): Conv2d(3, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (dense1): Sequential(
    (0): DenseBasicBlock(
      (bn1): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(24, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (1): DenseBasicBlock(
      (bn1): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(36, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (2): DenseBasicBlock(
      (bn1): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (3): DenseBasicBlock(
      (bn1): BatchNorm2d(60, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(60, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (4): DenseBasicBlock(
      (bn1): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(72, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (5): DenseBasicBlock(
      (bn1): BatchNorm2d(84, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(84, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (6): DenseBasicBlock(
      (bn1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(96, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (7): DenseBasicBlock(
      (bn1): BatchNorm2d(108, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(108, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (8): DenseBasicBlock(
      (bn1): BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(120, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (9): DenseBasicBlock(
      (bn1): BatchNorm2d(132, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(132, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (10): DenseBasicBlock(
      (bn1): BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(144, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (11): DenseBasicBlock(
      (bn1): BatchNorm2d(156, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(156, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
  )
  (trans1): Transition(
    (bn1): BatchNorm2d(168, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace=True)
    (conv1): Conv2d(168, 168, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
  )
  (dense2): Sequential(
    (0): DenseBasicBlock(
      (bn1): BatchNorm2d(168, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(168, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (1): DenseBasicBlock(
      (bn1): BatchNorm2d(180, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(180, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (2): DenseBasicBlock(
      (bn1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(192, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (3): DenseBasicBlock(
      (bn1): BatchNorm2d(204, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(204, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (4): DenseBasicBlock(
      (bn1): BatchNorm2d(216, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(216, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (5): DenseBasicBlock(
      (bn1): BatchNorm2d(228, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(228, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (6): DenseBasicBlock(
      (bn1): BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(240, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (7): DenseBasicBlock(
      (bn1): BatchNorm2d(252, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(252, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (8): DenseBasicBlock(
      (bn1): BatchNorm2d(264, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(264, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (9): DenseBasicBlock(
      (bn1): BatchNorm2d(276, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(276, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (10): DenseBasicBlock(
      (bn1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(288, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (11): DenseBasicBlock(
      (bn1): BatchNorm2d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(300, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
  )
  (trans2): Transition(
    (bn1): BatchNorm2d(312, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace=True)
    (conv1): Conv2d(312, 312, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
  )
  (dense3): Sequential(
    (0): DenseBasicBlock(
      (bn1): BatchNorm2d(312, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(312, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (1): DenseBasicBlock(
      (bn1): BatchNorm2d(324, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(324, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (2): DenseBasicBlock(
      (bn1): BatchNorm2d(336, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(336, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (3): DenseBasicBlock(
      (bn1): BatchNorm2d(348, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(348, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (4): DenseBasicBlock(
      (bn1): BatchNorm2d(360, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(360, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (5): DenseBasicBlock(
      (bn1): BatchNorm2d(372, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(372, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (6): DenseBasicBlock(
      (bn1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(384, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (7): DenseBasicBlock(
      (bn1): BatchNorm2d(396, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(396, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (8): DenseBasicBlock(
      (bn1): BatchNorm2d(408, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(408, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (9): DenseBasicBlock(
      (bn1): BatchNorm2d(420, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(420, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (10): DenseBasicBlock(
      (bn1): BatchNorm2d(432, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(432, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (11): DenseBasicBlock(
      (bn1): BatchNorm2d(444, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(444, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
  )
  (bn): BatchNorm2d(456, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (avgpool): AvgPool2d(kernel_size=8, stride=8, padding=0)
  (fc): Linear(in_features=456, out_features=10, bias=True)
)
11/08 05:51:57 PM | Save modules info...
11/08 05:51:57 PM | FLOPS pruning ratio is 0.55
11/08 05:51:57 PM | Pruning with information flow
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: Conv2d(3, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
11/08 05:51:57 PM | cin: None
11/08 05:51:57 PM | cout: [0]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
11/08 05:51:57 PM | cin: [0]
11/08 05:51:57 PM | cout: [0]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: ReLU(inplace=True)
11/08 05:51:57 PM | cin: [0]
11/08 05:51:57 PM | cout: [0]
11/08 05:51:57 PM | active
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: Conv2d(24, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
11/08 05:51:57 PM | cin: [0]
11/08 05:51:57 PM | cout: [1]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
11/08 05:51:57 PM | cin: [0, 1]
11/08 05:51:57 PM | cout: [0, 1]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: ReLU(inplace=True)
11/08 05:51:57 PM | cin: [0, 1]
11/08 05:51:57 PM | cout: [0, 1]
11/08 05:51:57 PM | active
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: Conv2d(36, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
11/08 05:51:57 PM | cin: [0, 1]
11/08 05:51:57 PM | cout: [2]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
11/08 05:51:57 PM | cin: [0, 1, 2]
11/08 05:51:57 PM | cout: [0, 1, 2]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: ReLU(inplace=True)
11/08 05:51:57 PM | cin: [0, 1, 2]
11/08 05:51:57 PM | cout: [0, 1, 2]
11/08 05:51:57 PM | active
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: Conv2d(48, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
11/08 05:51:57 PM | cin: [0, 1, 2]
11/08 05:51:57 PM | cout: [3]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: BatchNorm2d(60, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
11/08 05:51:57 PM | cin: [0, 1, 2, 3]
11/08 05:51:57 PM | cout: [0, 1, 2, 3]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: ReLU(inplace=True)
11/08 05:51:57 PM | cin: [0, 1, 2, 3]
11/08 05:51:57 PM | cout: [0, 1, 2, 3]
11/08 05:51:57 PM | active
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: Conv2d(60, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
11/08 05:51:57 PM | cin: [0, 1, 2, 3]
11/08 05:51:57 PM | cout: [4]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
11/08 05:51:57 PM | cin: [0, 1, 2, 3, 4]
11/08 05:51:57 PM | cout: [0, 1, 2, 3, 4]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: ReLU(inplace=True)
11/08 05:51:57 PM | cin: [0, 1, 2, 3, 4]
11/08 05:51:57 PM | cout: [0, 1, 2, 3, 4]
11/08 05:51:57 PM | active
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: Conv2d(72, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
11/08 05:51:57 PM | cin: [0, 1, 2, 3, 4]
11/08 05:51:57 PM | cout: [5]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: BatchNorm2d(84, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
11/08 05:51:57 PM | cin: [0, 1, 2, 3, 4, 5]
11/08 05:51:57 PM | cout: [0, 1, 2, 3, 4, 5]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: ReLU(inplace=True)
11/08 05:51:57 PM | cin: [0, 1, 2, 3, 4, 5]
11/08 05:51:57 PM | cout: [0, 1, 2, 3, 4, 5]
11/08 05:51:57 PM | active
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: Conv2d(84, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
11/08 05:51:57 PM | cin: [0, 1, 2, 3, 4, 5]
11/08 05:51:57 PM | cout: [6]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
11/08 05:51:57 PM | cin: [0, 1, 2, 3, 4, 5, 6]
11/08 05:51:57 PM | cout: [0, 1, 2, 3, 4, 5, 6]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: ReLU(inplace=True)
11/08 05:51:57 PM | cin: [0, 1, 2, 3, 4, 5, 6]
11/08 05:51:57 PM | cout: [0, 1, 2, 3, 4, 5, 6]
11/08 05:51:57 PM | active
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: Conv2d(96, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
11/08 05:51:57 PM | cin: [0, 1, 2, 3, 4, 5, 6]
11/08 05:51:57 PM | cout: [7]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: BatchNorm2d(108, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
11/08 05:51:57 PM | cin: [0, 1, 2, 3, 4, 5, 6, 7]
11/08 05:51:57 PM | cout: [0, 1, 2, 3, 4, 5, 6, 7]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: ReLU(inplace=True)
11/08 05:51:57 PM | cin: [0, 1, 2, 3, 4, 5, 6, 7]
11/08 05:51:57 PM | cout: [0, 1, 2, 3, 4, 5, 6, 7]
11/08 05:51:57 PM | active
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: Conv2d(108, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
11/08 05:51:57 PM | cin: [0, 1, 2, 3, 4, 5, 6, 7]
11/08 05:51:57 PM | cout: [8]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: BatchNorm2d(120, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
11/08 05:51:57 PM | cin: [0, 1, 2, 3, 4, 5, 6, 7, 8]
11/08 05:51:57 PM | cout: [0, 1, 2, 3, 4, 5, 6, 7, 8]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: ReLU(inplace=True)
11/08 05:51:57 PM | cin: [0, 1, 2, 3, 4, 5, 6, 7, 8]
11/08 05:51:57 PM | cout: [0, 1, 2, 3, 4, 5, 6, 7, 8]
11/08 05:51:57 PM | active
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: Conv2d(120, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
11/08 05:51:57 PM | cin: [0, 1, 2, 3, 4, 5, 6, 7, 8]
11/08 05:51:57 PM | cout: [9]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: BatchNorm2d(132, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
11/08 05:51:57 PM | cin: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
11/08 05:51:57 PM | cout: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: ReLU(inplace=True)
11/08 05:51:57 PM | cin: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
11/08 05:51:57 PM | cout: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
11/08 05:51:57 PM | active
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: Conv2d(132, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
11/08 05:51:57 PM | cin: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
11/08 05:51:57 PM | cout: [10]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: BatchNorm2d(144, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
11/08 05:51:57 PM | cin: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
11/08 05:51:57 PM | cout: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: ReLU(inplace=True)
11/08 05:51:57 PM | cin: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
11/08 05:51:57 PM | cout: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
11/08 05:51:57 PM | active
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: Conv2d(144, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
11/08 05:51:57 PM | cin: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
11/08 05:51:57 PM | cout: [11]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: BatchNorm2d(156, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
11/08 05:51:57 PM | cin: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
11/08 05:51:57 PM | cout: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: ReLU(inplace=True)
11/08 05:51:57 PM | cin: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
11/08 05:51:57 PM | cout: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
11/08 05:51:57 PM | active
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: Conv2d(156, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
11/08 05:51:57 PM | cin: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
11/08 05:51:57 PM | cout: [12]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: BatchNorm2d(168, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
11/08 05:51:57 PM | cin: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
11/08 05:51:57 PM | cout: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: ReLU(inplace=True)
11/08 05:51:57 PM | cin: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
11/08 05:51:57 PM | cout: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
11/08 05:51:57 PM | active
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: Conv2d(168, 168, kernel_size=(1, 1), stride=(1, 1), bias=False)
11/08 05:51:57 PM | cin: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
11/08 05:51:57 PM | cout: [13]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: AvgPool2d(kernel_size=2, stride=2, padding=0)
11/08 05:51:57 PM | cin: [13]
11/08 05:51:57 PM | cout: [13]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: BatchNorm2d(168, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
11/08 05:51:57 PM | cin: [13]
11/08 05:51:57 PM | cout: [13]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: ReLU(inplace=True)
11/08 05:51:57 PM | cin: [13]
11/08 05:51:57 PM | cout: [13]
11/08 05:51:57 PM | active
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: Conv2d(168, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
11/08 05:51:57 PM | cin: [13]
11/08 05:51:57 PM | cout: [14]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: BatchNorm2d(180, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
11/08 05:51:57 PM | cin: [13, 14]
11/08 05:51:57 PM | cout: [13, 14]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: ReLU(inplace=True)
11/08 05:51:57 PM | cin: [13, 14]
11/08 05:51:57 PM | cout: [13, 14]
11/08 05:51:57 PM | active
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: Conv2d(180, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
11/08 05:51:57 PM | cin: [13, 14]
11/08 05:51:57 PM | cout: [15]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
11/08 05:51:57 PM | cin: [13, 14, 15]
11/08 05:51:57 PM | cout: [13, 14, 15]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: ReLU(inplace=True)
11/08 05:51:57 PM | cin: [13, 14, 15]
11/08 05:51:57 PM | cout: [13, 14, 15]
11/08 05:51:57 PM | active
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: Conv2d(192, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
11/08 05:51:57 PM | cin: [13, 14, 15]
11/08 05:51:57 PM | cout: [16]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: BatchNorm2d(204, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
11/08 05:51:57 PM | cin: [13, 14, 15, 16]
11/08 05:51:57 PM | cout: [13, 14, 15, 16]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: ReLU(inplace=True)
11/08 05:51:57 PM | cin: [13, 14, 15, 16]
11/08 05:51:57 PM | cout: [13, 14, 15, 16]
11/08 05:51:57 PM | active
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: Conv2d(204, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
11/08 05:51:57 PM | cin: [13, 14, 15, 16]
11/08 05:51:57 PM | cout: [17]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: BatchNorm2d(216, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
11/08 05:51:57 PM | cin: [13, 14, 15, 16, 17]
11/08 05:51:57 PM | cout: [13, 14, 15, 16, 17]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: ReLU(inplace=True)
11/08 05:51:57 PM | cin: [13, 14, 15, 16, 17]
11/08 05:51:57 PM | cout: [13, 14, 15, 16, 17]
11/08 05:51:57 PM | active
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: Conv2d(216, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
11/08 05:51:57 PM | cin: [13, 14, 15, 16, 17]
11/08 05:51:57 PM | cout: [18]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: BatchNorm2d(228, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
11/08 05:51:57 PM | cin: [13, 14, 15, 16, 17, 18]
11/08 05:51:57 PM | cout: [13, 14, 15, 16, 17, 18]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: ReLU(inplace=True)
11/08 05:51:57 PM | cin: [13, 14, 15, 16, 17, 18]
11/08 05:51:57 PM | cout: [13, 14, 15, 16, 17, 18]
11/08 05:51:57 PM | active
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: Conv2d(228, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
11/08 05:51:57 PM | cin: [13, 14, 15, 16, 17, 18]
11/08 05:51:57 PM | cout: [19]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: BatchNorm2d(240, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
11/08 05:51:57 PM | cin: [13, 14, 15, 16, 17, 18, 19]
11/08 05:51:57 PM | cout: [13, 14, 15, 16, 17, 18, 19]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: ReLU(inplace=True)
11/08 05:51:57 PM | cin: [13, 14, 15, 16, 17, 18, 19]
11/08 05:51:57 PM | cout: [13, 14, 15, 16, 17, 18, 19]
11/08 05:51:57 PM | active
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: Conv2d(240, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
11/08 05:51:57 PM | cin: [13, 14, 15, 16, 17, 18, 19]
11/08 05:51:57 PM | cout: [20]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: BatchNorm2d(252, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
11/08 05:51:57 PM | cin: [13, 14, 15, 16, 17, 18, 19, 20]
11/08 05:51:57 PM | cout: [13, 14, 15, 16, 17, 18, 19, 20]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: ReLU(inplace=True)
11/08 05:51:57 PM | cin: [13, 14, 15, 16, 17, 18, 19, 20]
11/08 05:51:57 PM | cout: [13, 14, 15, 16, 17, 18, 19, 20]
11/08 05:51:57 PM | active
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: Conv2d(252, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
11/08 05:51:57 PM | cin: [13, 14, 15, 16, 17, 18, 19, 20]
11/08 05:51:57 PM | cout: [21]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: BatchNorm2d(264, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
11/08 05:51:57 PM | cin: [13, 14, 15, 16, 17, 18, 19, 20, 21]
11/08 05:51:57 PM | cout: [13, 14, 15, 16, 17, 18, 19, 20, 21]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: ReLU(inplace=True)
11/08 05:51:57 PM | cin: [13, 14, 15, 16, 17, 18, 19, 20, 21]
11/08 05:51:57 PM | cout: [13, 14, 15, 16, 17, 18, 19, 20, 21]
11/08 05:51:57 PM | active
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: Conv2d(264, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
11/08 05:51:57 PM | cin: [13, 14, 15, 16, 17, 18, 19, 20, 21]
11/08 05:51:57 PM | cout: [22]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: BatchNorm2d(276, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
11/08 05:51:57 PM | cin: [13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
11/08 05:51:57 PM | cout: [13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: ReLU(inplace=True)
11/08 05:51:57 PM | cin: [13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
11/08 05:51:57 PM | cout: [13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
11/08 05:51:57 PM | active
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: Conv2d(276, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
11/08 05:51:57 PM | cin: [13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
11/08 05:51:57 PM | cout: [23]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
11/08 05:51:57 PM | cin: [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23]
11/08 05:51:57 PM | cout: [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: ReLU(inplace=True)
11/08 05:51:57 PM | cin: [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23]
11/08 05:51:57 PM | cout: [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23]
11/08 05:51:57 PM | active
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: Conv2d(288, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
11/08 05:51:57 PM | cin: [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23]
11/08 05:51:57 PM | cout: [24]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: BatchNorm2d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
11/08 05:51:57 PM | cin: [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24]
11/08 05:51:57 PM | cout: [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: ReLU(inplace=True)
11/08 05:51:57 PM | cin: [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24]
11/08 05:51:57 PM | cout: [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24]
11/08 05:51:57 PM | active
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: Conv2d(300, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
11/08 05:51:57 PM | cin: [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24]
11/08 05:51:57 PM | cout: [25]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: BatchNorm2d(312, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
11/08 05:51:57 PM | cin: [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25]
11/08 05:51:57 PM | cout: [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: ReLU(inplace=True)
11/08 05:51:57 PM | cin: [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25]
11/08 05:51:57 PM | cout: [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25]
11/08 05:51:57 PM | active
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: Conv2d(312, 312, kernel_size=(1, 1), stride=(1, 1), bias=False)
11/08 05:51:57 PM | cin: [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25]
11/08 05:51:57 PM | cout: [26]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: AvgPool2d(kernel_size=2, stride=2, padding=0)
11/08 05:51:57 PM | cin: [26]
11/08 05:51:57 PM | cout: [26]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: BatchNorm2d(312, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
11/08 05:51:57 PM | cin: [26]
11/08 05:51:57 PM | cout: [26]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: ReLU(inplace=True)
11/08 05:51:57 PM | cin: [26]
11/08 05:51:57 PM | cout: [26]
11/08 05:51:57 PM | active
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: Conv2d(312, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
11/08 05:51:57 PM | cin: [26]
11/08 05:51:57 PM | cout: [27]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: BatchNorm2d(324, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
11/08 05:51:57 PM | cin: [26, 27]
11/08 05:51:57 PM | cout: [26, 27]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: ReLU(inplace=True)
11/08 05:51:57 PM | cin: [26, 27]
11/08 05:51:57 PM | cout: [26, 27]
11/08 05:51:57 PM | active
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: Conv2d(324, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
11/08 05:51:57 PM | cin: [26, 27]
11/08 05:51:57 PM | cout: [28]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: BatchNorm2d(336, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
11/08 05:51:57 PM | cin: [26, 27, 28]
11/08 05:51:57 PM | cout: [26, 27, 28]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: ReLU(inplace=True)
11/08 05:51:57 PM | cin: [26, 27, 28]
11/08 05:51:57 PM | cout: [26, 27, 28]
11/08 05:51:57 PM | active
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: Conv2d(336, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
11/08 05:51:57 PM | cin: [26, 27, 28]
11/08 05:51:57 PM | cout: [29]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: BatchNorm2d(348, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
11/08 05:51:57 PM | cin: [26, 27, 28, 29]
11/08 05:51:57 PM | cout: [26, 27, 28, 29]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: ReLU(inplace=True)
11/08 05:51:57 PM | cin: [26, 27, 28, 29]
11/08 05:51:57 PM | cout: [26, 27, 28, 29]
11/08 05:51:57 PM | active
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: Conv2d(348, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
11/08 05:51:57 PM | cin: [26, 27, 28, 29]
11/08 05:51:57 PM | cout: [30]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: BatchNorm2d(360, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
11/08 05:51:57 PM | cin: [26, 27, 28, 29, 30]
11/08 05:51:57 PM | cout: [26, 27, 28, 29, 30]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: ReLU(inplace=True)
11/08 05:51:57 PM | cin: [26, 27, 28, 29, 30]
11/08 05:51:57 PM | cout: [26, 27, 28, 29, 30]
11/08 05:51:57 PM | active
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: Conv2d(360, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
11/08 05:51:57 PM | cin: [26, 27, 28, 29, 30]
11/08 05:51:57 PM | cout: [31]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: BatchNorm2d(372, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
11/08 05:51:57 PM | cin: [26, 27, 28, 29, 30, 31]
11/08 05:51:57 PM | cout: [26, 27, 28, 29, 30, 31]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: ReLU(inplace=True)
11/08 05:51:57 PM | cin: [26, 27, 28, 29, 30, 31]
11/08 05:51:57 PM | cout: [26, 27, 28, 29, 30, 31]
11/08 05:51:57 PM | active
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: Conv2d(372, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
11/08 05:51:57 PM | cin: [26, 27, 28, 29, 30, 31]
11/08 05:51:57 PM | cout: [32]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
11/08 05:51:57 PM | cin: [26, 27, 28, 29, 30, 31, 32]
11/08 05:51:57 PM | cout: [26, 27, 28, 29, 30, 31, 32]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: ReLU(inplace=True)
11/08 05:51:57 PM | cin: [26, 27, 28, 29, 30, 31, 32]
11/08 05:51:57 PM | cout: [26, 27, 28, 29, 30, 31, 32]
11/08 05:51:57 PM | active
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: Conv2d(384, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
11/08 05:51:57 PM | cin: [26, 27, 28, 29, 30, 31, 32]
11/08 05:51:57 PM | cout: [33]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: BatchNorm2d(396, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
11/08 05:51:57 PM | cin: [26, 27, 28, 29, 30, 31, 32, 33]
11/08 05:51:57 PM | cout: [26, 27, 28, 29, 30, 31, 32, 33]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: ReLU(inplace=True)
11/08 05:51:57 PM | cin: [26, 27, 28, 29, 30, 31, 32, 33]
11/08 05:51:57 PM | cout: [26, 27, 28, 29, 30, 31, 32, 33]
11/08 05:51:57 PM | active
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: Conv2d(396, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
11/08 05:51:57 PM | cin: [26, 27, 28, 29, 30, 31, 32, 33]
11/08 05:51:57 PM | cout: [34]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: BatchNorm2d(408, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
11/08 05:51:57 PM | cin: [26, 27, 28, 29, 30, 31, 32, 33, 34]
11/08 05:51:57 PM | cout: [26, 27, 28, 29, 30, 31, 32, 33, 34]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: ReLU(inplace=True)
11/08 05:51:57 PM | cin: [26, 27, 28, 29, 30, 31, 32, 33, 34]
11/08 05:51:57 PM | cout: [26, 27, 28, 29, 30, 31, 32, 33, 34]
11/08 05:51:57 PM | active
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: Conv2d(408, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
11/08 05:51:57 PM | cin: [26, 27, 28, 29, 30, 31, 32, 33, 34]
11/08 05:51:57 PM | cout: [35]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: BatchNorm2d(420, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
11/08 05:51:57 PM | cin: [26, 27, 28, 29, 30, 31, 32, 33, 34, 35]
11/08 05:51:57 PM | cout: [26, 27, 28, 29, 30, 31, 32, 33, 34, 35]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: ReLU(inplace=True)
11/08 05:51:57 PM | cin: [26, 27, 28, 29, 30, 31, 32, 33, 34, 35]
11/08 05:51:57 PM | cout: [26, 27, 28, 29, 30, 31, 32, 33, 34, 35]
11/08 05:51:57 PM | active
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: Conv2d(420, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
11/08 05:51:57 PM | cin: [26, 27, 28, 29, 30, 31, 32, 33, 34, 35]
11/08 05:51:57 PM | cout: [36]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: BatchNorm2d(432, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
11/08 05:51:57 PM | cin: [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36]
11/08 05:51:57 PM | cout: [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: ReLU(inplace=True)
11/08 05:51:57 PM | cin: [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36]
11/08 05:51:57 PM | cout: [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36]
11/08 05:51:57 PM | active
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: Conv2d(432, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
11/08 05:51:57 PM | cin: [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36]
11/08 05:51:57 PM | cout: [37]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: BatchNorm2d(444, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
11/08 05:51:57 PM | cin: [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37]
11/08 05:51:57 PM | cout: [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: ReLU(inplace=True)
11/08 05:51:57 PM | cin: [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37]
11/08 05:51:57 PM | cout: [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37]
11/08 05:51:57 PM | active
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: Conv2d(444, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
11/08 05:51:57 PM | cin: [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37]
11/08 05:51:57 PM | cout: [38]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: BatchNorm2d(456, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
11/08 05:51:57 PM | cin: [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38]
11/08 05:51:57 PM | cout: [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: ReLU(inplace=True)
11/08 05:51:57 PM | cin: [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38]
11/08 05:51:57 PM | cout: [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38]
11/08 05:51:57 PM | active
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: AvgPool2d(kernel_size=8, stride=8, padding=0)
11/08 05:51:57 PM | cin: [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38]
11/08 05:51:57 PM | cout: [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38]
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | -----
11/08 05:51:57 PM | module: Linear(in_features=456, out_features=10, bias=True)
11/08 05:51:57 PM | cin: [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38]
11/08 05:51:57 PM | cout: None
11/08 05:51:57 PM | inactive
11/08 05:51:57 PM | Used masks: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38]
11/08 05:51:57 PM | 39 unique masks in total
11/08 05:51:57 PM | === Batch 1/200
11/08 05:51:59 PM | loss = 0.097 + 3.964 + 0.040 = 4.101
11/08 05:52:02 PM | attribution_score[0:12]: 
[ 0.83  0.83  0.83  0.94  0.83  0.94  0.83  0.83  0.94  0.94  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.94  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.94 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.94  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.94  0.83  0.94  0.83  0.83  0.94  0.94  0.83  0.83  0.83  0.83 ]
[ 0.94  0.83  0.94  0.83  0.83  0.83  0.83  0.83  0.94  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.94  0.83 ]
[ 0.94  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.94  0.94 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.94  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.94  0.94  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.94  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.94  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.94  0.94  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.94 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.94  0.94  0.94  0.83  0.83  0.94  0.83  0.83  0.83  0.94  0.83  0.94 ]
[ 0.94  0.83  0.94  0.83  0.94  0.83  0.94  0.83  0.83  0.94  0.83  0.83 ]
[ 0.94  0.94  0.83  0.83  0.83  0.94  0.83  0.83  0.83  0.94  0.94  0.83 ]
[ 0.94  0.94  0.94  0.83  0.83  0.83  0.83  0.94  0.94  0.94  0.83  0.83 ]
[ 0.83  0.83  0.94  0.94  0.83  0.83  0.94  0.94  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.94  0.83  0.83  0.83  0.94  0.83  0.94 ]
[ 0.83  0.94  0.83  0.94  0.83  0.83  0.94  0.83  0.83  0.83  0.83  0.94 ]
[ 0.83  0.94  0.83  0.94  0.83  0.83  0.83  0.83  0.83  0.83  0.94  0.94 ]
[ 0.83  0.94  0.94  0.94  0.83  0.94  0.83  0.94  0.83  0.94  0.83  0.83 ]
[ 0.83  0.94  0.83  0.94  0.83  0.94  0.83  0.83  0.94  0.83  0.94  0.83 ]
[ 0.94  0.94  0.83  0.83  0.83  0.83  0.83  0.94  0.83  0.83  0.94  0.83 ]

11/08 05:52:02 PM | === Batch 2/200
11/08 05:52:03 PM | loss = 0.166 + 2.889 + 0.060 = 3.115
11/08 05:52:06 PM | attribution_score[0:12]: 
[ 0.73  0.73  0.73  0.93  0.73  0.95  0.77  0.73  0.96  0.93  0.73  0.74 ]
[ 0.73  0.73  0.73  0.73  0.73  0.73  0.73  0.73  0.74  0.73  0.73  0.73 ]
[ 0.76  0.73  0.73  0.73  0.73  0.73  0.73  0.74  0.74  0.73  0.73  0.74 ]
[ 0.73  0.73  0.74  0.80  0.73  0.92  0.73  0.81  0.75  0.74  0.82  0.73 ]
[ 0.75  0.80  0.73  0.73  0.73  0.73  0.73  0.73  0.73  0.73  0.73  0.73 ]
[ 0.74  0.75  0.74  0.73  0.81  0.77  0.73  0.75  0.74  0.73  0.73  0.73 ]
[ 0.74  0.73  0.73  0.73  0.73  0.73  0.75  0.74  0.73  0.74  0.74  0.93 ]
[ 0.73  0.73  0.73  0.73  0.73  0.73  0.73  0.73  0.74  0.73  0.73  0.73 ]
[ 0.74  0.73  0.75  0.86  0.73  0.81  0.73  0.73  0.74  0.74  0.74  0.73 ]
[ 0.73  0.76  0.80  0.73  0.86  0.73  0.73  0.73  0.73  0.74  0.75  0.73 ]
[ 0.74  0.73  0.73  0.73  0.73  0.74  0.73  0.73  0.73  0.73  0.73  0.73 ]
[ 0.74  0.73  0.73  0.73  0.73  0.73  0.73  0.73  0.73  0.73  0.73  0.73 ]
[ 0.73  0.73  0.73  0.73  0.73  0.74  0.73  0.73  0.73  0.74  0.73  0.73 ]
[ 0.73  0.92  0.73  0.73  0.73  0.75  0.73  0.73  0.73  0.73  0.75  0.73 ]
[ 0.75  0.97  0.74  0.97  0.73  0.73  0.92  0.96  0.74  0.87  0.88  0.73 ]
[ 0.96  0.82  0.92  0.75  0.73  0.73  0.74  0.75  0.93  0.73  0.73  0.73 ]
[ 0.73  0.74  0.73  0.73  0.73  0.73  0.75  0.73  0.76  0.73  0.74  0.73 ]
[ 0.84  0.73  0.75  0.73  0.73  0.74  0.73  0.73  0.73  0.73  0.92  0.74 ]
[ 0.92  0.82  0.73  0.74  0.74  0.73  0.73  0.73  0.80  0.74  0.92  0.96 ]
[ 0.74  0.73  0.73  0.74  0.73  0.73  0.91  0.73  0.73  0.75  0.74  0.75 ]
[ 0.73  0.73  0.74  0.73  0.73  0.74  0.73  0.83  0.73  0.74  0.73  0.73 ]
[ 0.73  0.73  0.74  0.73  0.73  0.97  0.96  0.73  0.73  0.73  0.73  0.73 ]
[ 0.73  0.73  0.79  0.73  0.92  0.74  0.73  0.73  0.74  0.74  0.73  0.74 ]
[ 0.73  0.73  0.74  0.73  0.75  0.73  0.73  0.73  0.73  0.73  0.73  0.73 ]
[ 0.73  0.74  0.73  0.74  0.97  0.75  0.73  0.74  0.73  0.74  0.73  0.73 ]
[ 0.75  0.82  0.76  0.73  0.73  0.73  0.73  0.73  0.74  0.74  0.73  0.73 ]
[ 0.73  0.97  0.96  0.75  0.73  0.76  0.73  0.73  0.89  0.75  0.76  0.92 ]
[ 0.73  0.78  0.73  0.75  0.74  0.73  0.75  0.73  0.73  0.73  0.88  0.89 ]
[ 0.97  0.92  0.96  0.87  0.73  0.97  0.73  0.88  0.75  0.96  0.75  0.94 ]
[ 0.97  0.73  0.93  0.74  0.93  0.75  0.92  0.74  0.73  0.93  0.73  0.77 ]
[ 0.96  0.97  0.79  0.73  0.74  0.93  0.73  0.87  0.87  0.96  0.94  0.80 ]
[ 0.96  0.97  0.93  0.79  0.79  0.74  0.83  0.93  0.93  0.96  0.73  0.88 ]
[ 0.73  0.76  0.97  0.96  0.76  0.87  0.97  0.96  0.74  0.73  0.75  0.74 ]
[ 0.85  0.88  0.73  0.88  0.88  0.96  0.87  0.74  0.86  0.93  0.75  0.94 ]
[ 0.75  0.96  0.73  0.93  0.76  0.74  0.96  0.77  0.73  0.74  0.88  0.97 ]
[ 0.73  0.97  0.74  0.96  0.73  0.73  0.73  0.74  0.87  0.73  0.94  0.97 ]
[ 0.73  0.95  0.96  0.95  0.88  0.92  0.76  0.95  0.75  0.97  0.85  0.73 ]
[ 0.73  0.92  0.74  0.96  0.75  0.92  0.87  0.73  0.97  0.77  0.96  0.85 ]
[ 0.97  0.95  0.78  0.74  0.73  0.73  0.74  0.96  0.88  0.80  0.94  0.85 ]

11/08 05:52:06 PM | === Batch 3/200
11/08 05:52:08 PM | loss = 0.797 + 1.524 + 0.087 = 2.408
11/08 05:52:11 PM | attribution_score[0:12]: 
[ 0.61  0.75  0.80  0.95  0.63  0.96  0.83  0.61  0.95  0.90  0.60  0.79 ]
[ 0.78  0.71  0.78  0.78  0.66  0.75  0.60  0.79  0.76  0.64  0.61  0.79 ]
[ 0.68  0.60  0.64  0.60  0.62  0.60  0.60  0.63  0.61  0.77  0.61  0.79 ]
[ 0.64  0.62  0.78  0.73  0.72  0.88  0.78  0.78  0.67  0.61  0.87  0.60 ]
[ 0.66  0.85  0.61  0.75  0.79  0.61  0.60  0.68  0.76  0.60  0.61  0.77 ]
[ 0.80  0.81  0.79  0.60  0.74  0.82  0.79  0.80  0.79  0.78  0.62  0.60 ]
[ 0.65  0.61  0.61  0.64  0.77  0.61  0.81  0.64  0.64  0.62  0.71  0.90 ]
[ 0.60  0.75  0.78  0.77  0.64  0.71  0.75  0.60  0.71  0.61  0.75  0.69 ]
[ 0.63  0.77  0.64  0.90  0.60  0.74  0.60  0.77  0.61  0.65  0.61  0.61 ]
[ 0.78  0.67  0.82  0.60  0.90  0.60  0.61  0.60  0.62  0.76  0.78  0.62 ]
[ 0.61  0.60  0.60  0.60  0.62  0.61  0.65  0.69  0.61  0.62  0.64  0.60 ]
[ 0.78  0.61  0.61  0.60  0.79  0.69  0.60  0.63  0.78  0.63  0.62  0.61 ]
[ 0.72  0.61  0.62  0.61  0.61  0.61  0.60  0.60  0.60  0.63  0.60  0.62 ]
[ 0.63  0.88  0.73  0.66  0.61  0.65  0.64  0.64  0.61  0.60  0.63  0.62 ]
[ 0.80  0.98  0.66  0.96  0.61  0.75  0.89  0.97  0.64  0.91  0.92  0.77 ]
[ 0.96  0.87  0.93  0.64  0.80  0.63  0.64  0.64  0.93  0.60  0.74  0.62 ]
[ 0.65  0.79  0.73  0.62  0.60  0.60  0.77  0.73  0.79  0.74  0.62  0.63 ]
[ 0.80  0.62  0.68  0.64  0.75  0.62  0.60  0.67  0.74  0.68  0.89  0.61 ]
[ 0.87  0.75  0.62  0.63  0.75  0.64  0.61  0.60  0.77  0.62  0.89  0.95 ]
[ 0.78  0.60  0.72  0.63  0.78  0.77  0.91  0.60  0.60  0.78  0.64  0.64 ]
[ 0.79  0.61  0.64  0.73  0.60  0.73  0.62  0.86  0.61  0.73  0.63  0.60 ]
[ 0.71  0.73  0.61  0.61  0.62  0.98  0.96  0.73  0.61  0.61  0.69  0.66 ]
[ 0.61  0.61  0.76  0.76  0.88  0.76  0.63  0.78  0.63  0.71  0.79  0.74 ]
[ 0.77  0.61  0.69  0.60  0.65  0.66  0.75  0.74  0.60  0.60  0.61  0.77 ]
[ 0.65  0.62  0.73  0.61  0.96  0.66  0.74  0.65  0.61  0.63  0.68  0.60 ]
[ 0.65  0.75  0.67  0.60  0.65  0.61  0.61  0.66  0.62  0.75  0.61  0.61 ]
[ 0.63  0.97  0.95  0.71  0.67  0.67  0.77  0.63  0.87  0.79  0.67  0.89 ]
[ 0.60  0.68  0.60  0.64  0.81  0.77  0.64  0.79  0.64  0.79  0.89  0.93 ]
[ 0.98  0.94  0.97  0.83  0.74  0.96  0.61  0.92  0.67  0.96  0.80  0.95 ]
[ 0.97  0.76  0.91  0.79  0.90  0.66  0.94  0.73  0.73  0.93  0.61  0.70 ]
[ 0.96  0.98  0.84  0.79  0.73  0.89  0.63  0.88  0.90  0.96  0.91  0.73 ]
[ 0.97  0.98  0.95  0.72  0.71  0.78  0.80  0.95  0.91  0.95  0.64  0.84 ]
[ 0.72  0.76  0.98  0.96  0.79  0.91  0.96  0.97  0.79  0.79  0.69  0.78 ]
[ 0.81  0.84  0.76  0.93  0.84  0.97  0.91  0.62  0.81  0.90  0.65  0.92 ]
[ 0.78  0.97  0.64  0.92  0.66  0.78  0.94  0.78  0.69  0.73  0.92  0.98 ]
[ 0.65  0.98  0.77  0.98  0.73  0.64  0.78  0.79  0.86  0.65  0.91  0.97 ]
[ 0.76  0.97  0.98  0.96  0.91  0.94  0.78  0.93  0.75  0.95  0.79  0.76 ]
[ 0.71  0.88  0.77  0.97  0.69  0.92  0.83  0.73  0.98  0.83  0.97  0.81 ]
[ 0.98  0.93  0.81  0.76  0.76  0.76  0.76  0.96  0.84  0.72  0.93  0.81 ]

11/08 05:52:11 PM | === Batch 4/200
11/08 05:52:12 PM | loss = 1.366 + 0.655 + 0.105 = 2.125
11/08 05:52:15 PM | attribution_score[0:12]: 
[ 0.46  0.80  0.83  0.94  0.51  0.95  0.83  0.55  0.95  0.89  0.47  0.84 ]
[ 0.81  0.64  0.79  0.82  0.55  0.81  0.47  0.80  0.75  0.66  0.63  0.79 ]
[ 0.59  0.45  0.62  0.57  0.54  0.45  0.46  0.50  0.61  0.78  0.48  0.82 ]
[ 0.62  0.49  0.79  0.76  0.70  0.88  0.79  0.83  0.71  0.53  0.88  0.46 ]
[ 0.66  0.88  0.63  0.72  0.81  0.64  0.47  0.59  0.73  0.47  0.49  0.74 ]
[ 0.81  0.83  0.76  0.45  0.76  0.87  0.81  0.79  0.79  0.78  0.49  0.45 ]
[ 0.67  0.55  0.62  0.58  0.75  0.62  0.81  0.65  0.62  0.54  0.65  0.90 ]
[ 0.45  0.72  0.83  0.74  0.63  0.71  0.79  0.55  0.65  0.59  0.72  0.62 ]
[ 0.54  0.72  0.51  0.93  0.62  0.74  0.50  0.76  0.53  0.54  0.52  0.47 ]
[ 0.75  0.71  0.87  0.59  0.91  0.45  0.60  0.53  0.49  0.72  0.74  0.49 ]
[ 0.52  0.46  0.49  0.45  0.48  0.47  0.54  0.60  0.48  0.50  0.53  0.62 ]
[ 0.78  0.56  0.47  0.46  0.79  0.61  0.45  0.50  0.76  0.51  0.63  0.50 ]
[ 0.65  0.53  0.49  0.48  0.48  0.52  0.46  0.45  0.54  0.57  0.46  0.63 ]
[ 0.62  0.88  0.66  0.71  0.46  0.53  0.62  0.54  0.47  0.46  0.68  0.58 ]
[ 0.81  0.98  0.54  0.97  0.68  0.72  0.83  0.98  0.54  0.94  0.95  0.75 ]
[ 0.95  0.89  0.93  0.55  0.79  0.50  0.52  0.51  0.93  0.49  0.75  0.58 ]
[ 0.55  0.77  0.73  0.54  0.56  0.45  0.82  0.68  0.73  0.68  0.48  0.64 ]
[ 0.82  0.66  0.59  0.61  0.79  0.48  0.63  0.57  0.71  0.72  0.84  0.60 ]
[ 0.88  0.78  0.49  0.59  0.81  0.53  0.47  0.45  0.70  0.65  0.88  0.95 ]
[ 0.78  0.63  0.64  0.67  0.84  0.73  0.87  0.46  0.46  0.80  0.61  0.52 ]
[ 0.76  0.59  0.57  0.67  0.65  0.66  0.66  0.86  0.48  0.66  0.54  0.55 ]
[ 0.64  0.71  0.47  0.51  0.50  0.99  0.96  0.72  0.49  0.47  0.60  0.72 ]
[ 0.48  0.51  0.70  0.70  0.83  0.71  0.53  0.74  0.62  0.62  0.82  0.71 ]
[ 0.72  0.48  0.71  0.45  0.54  0.55  0.73  0.73  0.46  0.46  0.52  0.75 ]
[ 0.55  0.50  0.67  0.47  0.97  0.68  0.76  0.54  0.47  0.50  0.59  0.45 ]
[ 0.64  0.72  0.55  0.46  0.55  0.47  0.61  0.57  0.59  0.69  0.47  0.47 ]
[ 0.51  0.98  0.94  0.63  0.57  0.57  0.76  0.60  0.89  0.75  0.72  0.89 ]
[ 0.52  0.57  0.45  0.55  0.83  0.81  0.68  0.83  0.60  0.79  0.91  0.95 ]
[ 0.99  0.95  0.98  0.80  0.79  0.96  0.49  0.94  0.57  0.97  0.85  0.94 ]
[ 0.98  0.74  0.91  0.81  0.92  0.54  0.96  0.79  0.67  0.94  0.65  0.72 ]
[ 0.97  0.99  0.83  0.85  0.78  0.84  0.61  0.87  0.88  0.97  0.86  0.67 ]
[ 0.97  0.98  0.96  0.69  0.60  0.83  0.76  0.96  0.92  0.93  0.53  0.80 ]
[ 0.65  0.75  0.99  0.95  0.85  0.93  0.95  0.98  0.81  0.84  0.59  0.73 ]
[ 0.84  0.81  0.72  0.92  0.84  0.96  0.94  0.48  0.78  0.92  0.68  0.90 ]
[ 0.82  0.98  0.56  0.90  0.70  0.81  0.93  0.71  0.69  0.66  0.92  0.99 ]
[ 0.59  0.99  0.74  0.98  0.69  0.59  0.78  0.75  0.89  0.55  0.91  0.97 ]
[ 0.70  0.97  0.98  0.96  0.94  0.92  0.74  0.92  0.79  0.95  0.73  0.75 ]
[ 0.65  0.85  0.74  0.97  0.66  0.94  0.84  0.66  0.99  0.79  0.98  0.80 ]
[ 0.99  0.94  0.85  0.70  0.82  0.82  0.72  0.97  0.85  0.68  0.95  0.84 ]

11/08 05:52:15 PM | === Batch 5/200
11/08 05:52:16 PM | loss = 1.136 + 0.037 + 0.116 = 1.289
11/08 05:52:20 PM | attribution_score[0:12]: 
[ 0.38  0.82  0.85  0.94  0.48  0.96  0.84  0.52  0.96  0.91  0.50  0.88 ]
[ 0.85  0.62  0.81  0.85  0.52  0.86  0.47  0.80  0.80  0.74  0.69  0.80 ]
[ 0.64  0.40  0.66  0.59  0.54  0.41  0.44  0.50  0.67  0.82  0.51  0.85 ]
[ 0.66  0.51  0.82  0.82  0.73  0.89  0.82  0.88  0.77  0.58  0.90  0.47 ]
[ 0.71  0.91  0.70  0.74  0.85  0.71  0.42  0.58  0.72  0.44  0.53  0.74 ]
[ 0.83  0.85  0.73  0.41  0.81  0.91  0.84  0.78  0.83  0.77  0.39  0.41 ]
[ 0.71  0.57  0.68  0.59  0.79  0.68  0.80  0.69  0.67  0.60  0.64  0.90 ]
[ 0.40  0.77  0.87  0.73  0.68  0.73  0.82  0.60  0.69  0.65  0.68  0.64 ]
[ 0.56  0.71  0.55  0.94  0.68  0.76  0.53  0.78  0.56  0.51  0.55  0.46 ]
[ 0.75  0.78  0.91  0.66  0.93  0.48  0.65  0.57  0.50  0.67  0.73  0.48 ]
[ 0.55  0.42  0.39  0.42  0.38  0.46  0.58  0.51  0.45  0.48  0.47  0.65 ]
[ 0.78  0.61  0.48  0.45  0.77  0.55  0.42  0.50  0.78  0.47  0.67  0.53 ]
[ 0.63  0.57  0.44  0.43  0.41  0.55  0.44  0.48  0.59  0.60  0.42  0.68 ]
[ 0.67  0.91  0.62  0.74  0.45  0.54  0.69  0.60  0.48  0.45  0.75  0.63 ]
[ 0.77  0.99  0.56  0.98  0.75  0.72  0.85  0.98  0.46  0.96  0.97  0.79 ]
[ 0.96  0.88  0.94  0.56  0.79  0.48  0.53  0.51  0.95  0.47  0.80  0.62 ]
[ 0.53  0.79  0.78  0.58  0.57  0.41  0.87  0.63  0.73  0.65  0.45  0.68 ]
[ 0.87  0.73  0.58  0.63  0.85  0.44  0.69  0.51  0.71  0.74  0.84  0.63 ]
[ 0.91  0.81  0.49  0.57  0.80  0.52  0.52  0.40  0.72  0.71  0.89  0.96 ]
[ 0.75  0.66  0.60  0.74  0.89  0.71  0.84  0.41  0.39  0.77  0.65  0.47 ]
[ 0.74  0.62  0.59  0.62  0.73  0.65  0.71  0.89  0.43  0.65  0.43  0.49 ]
[ 0.68  0.66  0.50  0.47  0.50  0.99  0.96  0.75  0.42  0.54  0.60  0.76 ]
[ 0.35  0.54  0.75  0.65  0.86  0.70  0.55  0.68  0.64  0.67  0.86  0.71 ]
[ 0.71  0.44  0.77  0.41  0.57  0.54  0.71  0.75  0.45  0.37  0.55  0.76 ]
[ 0.53  0.50  0.66  0.43  0.97  0.70  0.82  0.48  0.44  0.51  0.56  0.40 ]
[ 0.65  0.71  0.58  0.38  0.49  0.43  0.66  0.48  0.64  0.66  0.48  0.44 ]
[ 0.48  0.99  0.95  0.55  0.45  0.53  0.70  0.58  0.91  0.67  0.78  0.91 ]
[ 0.57  0.56  0.41  0.60  0.84  0.81  0.73  0.81  0.62  0.80  0.91  0.96 ]
[ 0.99  0.95  0.99  0.80  0.83  0.97  0.40  0.96  0.56  0.98  0.88  0.94 ]
[ 0.98  0.72  0.93  0.81  0.94  0.56  0.97  0.84  0.57  0.95  0.70  0.75 ]
[ 0.98  0.99  0.83  0.89  0.83  0.81  0.66  0.89  0.85  0.98  0.88  0.67 ]
[ 0.96  0.98  0.97  0.70  0.60  0.88  0.78  0.97  0.94  0.93  0.49  0.84 ]
[ 0.63  0.78  0.99  0.94  0.87  0.93  0.95  0.98  0.83  0.89  0.59  0.65 ]
[ 0.85  0.81  0.72  0.90  0.87  0.96  0.96  0.44  0.78  0.93  0.75  0.90 ]
[ 0.85  0.98  0.53  0.91  0.77  0.80  0.93  0.67  0.71  0.63  0.90  0.99 ]
[ 0.55  0.99  0.67  0.98  0.70  0.65  0.75  0.71  0.89  0.55  0.93  0.98 ]
[ 0.65  0.96  0.98  0.96  0.96  0.91  0.66  0.92  0.82  0.95  0.74  0.71 ]
[ 0.69  0.85  0.71  0.97  0.69  0.96  0.84  0.64  0.99  0.74  0.99  0.83 ]
[ 0.99  0.95  0.83  0.63  0.85  0.83  0.66  0.97  0.87  0.69  0.97  0.83 ]

11/08 05:52:20 PM | === Batch 6/200
11/08 05:52:21 PM | loss = 0.769 + 0.035 + 0.110 = 0.914
11/08 05:52:24 PM | attribution_score[0:12]: 
[ 0.30  0.80  0.87  0.94  0.44  0.95  0.84  0.47  0.96  0.91  0.47  0.91 ]
[ 0.87  0.57  0.82  0.88  0.48  0.89  0.45  0.81  0.83  0.77  0.72  0.82 ]
[ 0.67  0.33  0.70  0.57  0.58  0.35  0.39  0.45  0.69  0.84  0.51  0.88 ]
[ 0.68  0.52  0.82  0.85  0.78  0.88  0.84  0.92  0.80  0.60  0.90  0.44 ]
[ 0.73  0.92  0.75  0.74  0.88  0.76  0.36  0.54  0.70  0.39  0.56  0.73 ]
[ 0.84  0.86  0.71  0.35  0.85  0.93  0.87  0.77  0.83  0.77  0.29  0.35 ]
[ 0.73  0.57  0.70  0.59  0.81  0.73  0.78  0.71  0.71  0.65  0.61  0.91 ]
[ 0.34  0.80  0.89  0.71  0.70  0.68  0.81  0.65  0.70  0.67  0.66  0.60 ]
[ 0.56  0.68  0.59  0.95  0.73  0.79  0.57  0.79  0.62  0.45  0.51  0.45 ]
[ 0.72  0.82  0.93  0.69  0.94  0.46  0.67  0.56  0.48  0.64  0.71  0.44 ]
[ 0.54  0.36  0.31  0.36  0.29  0.42  0.55  0.41  0.39  0.43  0.41  0.66 ]
[ 0.76  0.62  0.45  0.44  0.74  0.47  0.37  0.46  0.77  0.43  0.67  0.54 ]
[ 0.62  0.57  0.37  0.39  0.32  0.54  0.40  0.45  0.59  0.61  0.37  0.71 ]
[ 0.69  0.91  0.58  0.73  0.41  0.53  0.73  0.60  0.46  0.40  0.80  0.67 ]
[ 0.73  0.99  0.57  0.98  0.79  0.69  0.86  0.99  0.43  0.97  0.98  0.78 ]
[ 0.97  0.89  0.94  0.54  0.80  0.45  0.54  0.46  0.96  0.47  0.79  0.66 ]
[ 0.49  0.79  0.79  0.61  0.56  0.34  0.89  0.57  0.70  0.64  0.44  0.70 ]
[ 0.90  0.76  0.57  0.63  0.89  0.38  0.73  0.50  0.70  0.71  0.82  0.58 ]
[ 0.92  0.84  0.52  0.55  0.79  0.53  0.54  0.33  0.77  0.76  0.90  0.97 ]
[ 0.71  0.71  0.61  0.78  0.91  0.68  0.83  0.34  0.31  0.71  0.66  0.45 ]
[ 0.72  0.63  0.65  0.62  0.78  0.60  0.74  0.91  0.36  0.65  0.34  0.40 ]
[ 0.73  0.66  0.50  0.42  0.45  1.00  0.96  0.78  0.35  0.58  0.55  0.78 ]
[ 0.24  0.53  0.81  0.58  0.86  0.71  0.53  0.64  0.66  0.70  0.87  0.73 ]
[ 0.66  0.38  0.77  0.35  0.51  0.51  0.71  0.78  0.40  0.28  0.54  0.77 ]
[ 0.54  0.47  0.68  0.37  0.97  0.70  0.84  0.50  0.38  0.49  0.52  0.34 ]
[ 0.66  0.75  0.59  0.30  0.42  0.37  0.74  0.50  0.63  0.62  0.44  0.40 ]
[ 0.45  0.99  0.96  0.47  0.39  0.46  0.68  0.60  0.93  0.60  0.81  0.93 ]
[ 0.65  0.60  0.35  0.64  0.84  0.79  0.77  0.81  0.67  0.80  0.91  0.97 ]
[ 0.99  0.95  0.99  0.79  0.86  0.97  0.37  0.97  0.53  0.98  0.91  0.95 ]
[ 0.98  0.71  0.95  0.81  0.94  0.59  0.98  0.89  0.49  0.95  0.76  0.74 ]
[ 0.98  0.99  0.84  0.92  0.86  0.77  0.72  0.89  0.80  0.98  0.88  0.62 ]
[ 0.96  0.98  0.97  0.71  0.58  0.90  0.76  0.97  0.95  0.93  0.45  0.85 ]
[ 0.63  0.82  1.00  0.92  0.89  0.94  0.95  0.99  0.86  0.89  0.65  0.60 ]
[ 0.88  0.80  0.73  0.89  0.90  0.96  0.97  0.37  0.77  0.95  0.78  0.90 ]
[ 0.87  0.99  0.53  0.91  0.82  0.79  0.93  0.63  0.76  0.61  0.89  0.99 ]
[ 0.53  0.99  0.64  0.98  0.73  0.72  0.75  0.69  0.89  0.53  0.95  0.98 ]
[ 0.62  0.96  0.98  0.96  0.98  0.90  0.66  0.93  0.86  0.94  0.71  0.73 ]
[ 0.67  0.85  0.70  0.96  0.74  0.96  0.82  0.69  0.99  0.70  0.99  0.87 ]
[ 1.00  0.96  0.84  0.58  0.87  0.85  0.64  0.97  0.87  0.74  0.98  0.82 ]

11/08 05:52:24 PM | === Batch 7/200
11/08 05:52:25 PM | loss = 1.079 + 0.103 + 0.105 = 1.286
11/08 05:52:29 PM | attribution_score[0:12]: 
[ 0.27  0.82  0.89  0.94  0.43  0.95  0.85  0.49  0.97  0.90  0.46  0.93 ]
[ 0.90  0.58  0.84  0.91  0.50  0.92  0.47  0.82  0.87  0.81  0.75  0.84 ]
[ 0.70  0.31  0.74  0.59  0.65  0.32  0.36  0.39  0.71  0.86  0.56  0.90 ]
[ 0.72  0.54  0.80  0.88  0.84  0.86  0.87  0.94  0.82  0.64  0.91  0.46 ]
[ 0.75  0.94  0.80  0.75  0.89  0.80  0.32  0.55  0.73  0.38  0.62  0.75 ]
[ 0.86  0.88  0.70  0.33  0.88  0.95  0.89  0.75  0.84  0.80  0.26  0.34 ]
[ 0.76  0.63  0.71  0.60  0.84  0.79  0.78  0.72  0.75  0.69  0.65  0.90 ]
[ 0.32  0.82  0.89  0.71  0.75  0.66  0.79  0.72  0.73  0.72  0.70  0.61 ]
[ 0.61  0.68  0.61  0.96  0.79  0.81  0.65  0.81  0.71  0.43  0.47  0.49 ]
[ 0.70  0.85  0.94  0.74  0.94  0.46  0.70  0.60  0.49  0.62  0.69  0.45 ]
[ 0.54  0.34  0.28  0.35  0.24  0.41  0.54  0.36  0.39  0.41  0.42  0.71 ]
[ 0.75  0.64  0.44  0.48  0.73  0.44  0.37  0.47  0.78  0.46  0.65  0.59 ]
[ 0.65  0.56  0.36  0.43  0.30  0.55  0.40  0.45  0.63  0.61  0.35  0.75 ]
[ 0.71  0.91  0.57  0.74  0.44  0.56  0.75  0.62  0.48  0.41  0.84  0.72 ]
[ 0.71  0.99  0.63  0.99  0.84  0.71  0.87  0.99  0.41  0.97  0.99  0.78 ]
[ 0.97  0.90  0.94  0.53  0.81  0.46  0.55  0.46  0.97  0.53  0.80  0.73 ]
[ 0.47  0.75  0.83  0.65  0.61  0.31  0.92  0.58  0.68  0.69  0.48  0.72 ]
[ 0.92  0.75  0.60  0.64  0.92  0.36  0.78  0.55  0.73  0.69  0.82  0.50 ]
[ 0.93  0.86  0.61  0.56  0.77  0.60  0.59  0.30  0.83  0.80  0.91  0.97 ]
[ 0.71  0.77  0.64  0.82  0.92  0.67  0.85  0.32  0.30  0.62  0.66  0.52 ]
[ 0.70  0.61  0.73  0.65  0.78  0.59  0.79  0.93  0.35  0.70  0.32  0.40 ]
[ 0.79  0.71  0.50  0.40  0.46  1.00  0.95  0.83  0.28  0.62  0.50  0.79 ]
[ 0.21  0.56  0.87  0.53  0.88  0.74  0.53  0.64  0.71  0.75  0.88  0.78 ]
[ 0.66  0.35  0.75  0.34  0.44  0.55  0.75  0.84  0.40  0.27  0.56  0.81 ]
[ 0.61  0.48  0.72  0.35  0.97  0.68  0.87  0.57  0.38  0.53  0.56  0.31 ]
[ 0.67  0.81  0.62  0.28  0.43  0.35  0.81  0.56  0.63  0.60  0.45  0.42 ]
[ 0.48  0.99  0.96  0.40  0.40  0.45  0.71  0.62  0.95  0.56  0.85  0.94 ]
[ 0.74  0.67  0.33  0.70  0.84  0.79  0.82  0.79  0.72  0.79  0.92  0.98 ]
[ 0.99  0.95  0.99  0.78  0.88  0.98  0.41  0.97  0.57  0.98  0.93  0.96 ]
[ 0.98  0.74  0.96  0.82  0.95  0.66  0.98  0.91  0.50  0.96  0.79  0.76 ]
[ 0.98  1.00  0.83  0.93  0.89  0.74  0.79  0.90  0.78  0.98  0.88  0.55 ]
[ 0.96  0.99  0.97  0.73  0.60  0.93  0.81  0.97  0.96  0.94  0.45  0.88 ]
[ 0.66  0.86  1.00  0.92  0.91  0.95  0.95  0.99  0.88  0.89  0.73  0.59 ]
[ 0.91  0.79  0.75  0.89  0.93  0.95  0.98  0.37  0.80  0.95  0.83  0.87 ]
[ 0.89  0.99  0.56  0.89  0.85  0.79  0.93  0.66  0.82  0.64  0.87  0.99 ]
[ 0.49  1.00  0.63  0.98  0.79  0.79  0.77  0.71  0.90  0.55  0.95  0.98 ]
[ 0.62  0.96  0.99  0.97  0.99  0.88  0.67  0.93  0.89  0.93  0.69  0.78 ]
[ 0.62  0.87  0.72  0.95  0.81  0.97  0.81  0.71  1.00  0.67  0.99  0.91 ]
[ 1.00  0.97  0.85  0.57  0.90  0.88  0.64  0.97  0.87  0.80  0.98  0.81 ]

11/08 05:52:29 PM | === Batch 8/200
11/08 05:52:30 PM | loss = 0.888 + 0.097 + 0.099 = 1.084
11/08 05:52:33 PM | attribution_score[0:12]: 
[ 0.23  0.83  0.91  0.93  0.43  0.95  0.86  0.46  0.97  0.90  0.42  0.95 ]
[ 0.91  0.58  0.86  0.93  0.54  0.94  0.46  0.84  0.89  0.83  0.78  0.86 ]
[ 0.73  0.27  0.77  0.58  0.70  0.28  0.33  0.37  0.74  0.88  0.58  0.92 ]
[ 0.75  0.56  0.81  0.91  0.88  0.86  0.89  0.95  0.84  0.66  0.92  0.46 ]
[ 0.77  0.95  0.83  0.77  0.91  0.84  0.31  0.56  0.76  0.39  0.68  0.76 ]
[ 0.88  0.89  0.72  0.29  0.89  0.97  0.91  0.76  0.85  0.83  0.24  0.31 ]
[ 0.77  0.65  0.71  0.60  0.86  0.82  0.78  0.72  0.78  0.72  0.69  0.90 ]
[ 0.28  0.84  0.89  0.73  0.78  0.65  0.77  0.76  0.75  0.75  0.73  0.63 ]
[ 0.63  0.68  0.63  0.97  0.83  0.82  0.70  0.83  0.75  0.39  0.42  0.48 ]
[ 0.70  0.87  0.95  0.76  0.94  0.43  0.70  0.60  0.49  0.61  0.68  0.44 ]
[ 0.52  0.31  0.26  0.32  0.19  0.38  0.51  0.32  0.40  0.39  0.42  0.73 ]
[ 0.75  0.66  0.43  0.48  0.74  0.40  0.35  0.47  0.79  0.48  0.60  0.62 ]
[ 0.66  0.51  0.34  0.44  0.26  0.55  0.37  0.44  0.66  0.58  0.32  0.75 ]
[ 0.71  0.91  0.57  0.76  0.47  0.58  0.76  0.67  0.48  0.40  0.86  0.74 ]
[ 0.71  1.00  0.66  0.99  0.87  0.70  0.88  0.99  0.47  0.97  0.99  0.78 ]
[ 0.96  0.92  0.94  0.50  0.84  0.45  0.56  0.49  0.98  0.57  0.82  0.78 ]
[ 0.44  0.75  0.86  0.66  0.63  0.27  0.93  0.59  0.67  0.73  0.47  0.72 ]
[ 0.94  0.73  0.63  0.63  0.95  0.34  0.77  0.60  0.76  0.65  0.85  0.40 ]
[ 0.93  0.87  0.65  0.56  0.75  0.63  0.60  0.26  0.88  0.81  0.91  0.97 ]
[ 0.72  0.80  0.67  0.85  0.94  0.66  0.87  0.28  0.29  0.56  0.65  0.57 ]
[ 0.69  0.55  0.77  0.69  0.78  0.60  0.83  0.94  0.33  0.74  0.27  0.37 ]
[ 0.84  0.77  0.47  0.36  0.46  1.00  0.95  0.88  0.23  0.62  0.47  0.79 ]
[ 0.20  0.55  0.91  0.54  0.90  0.78  0.52  0.66  0.71  0.79  0.90  0.80 ]
[ 0.69  0.32  0.73  0.32  0.38  0.56  0.78  0.88  0.37  0.23  0.56  0.84 ]
[ 0.66  0.49  0.76  0.31  0.97  0.65  0.89  0.64  0.36  0.55  0.62  0.27 ]
[ 0.68  0.84  0.60  0.26  0.48  0.32  0.85  0.65  0.61  0.57  0.44  0.43 ]
[ 0.45  1.00  0.96  0.36  0.38  0.46  0.73  0.60  0.96  0.56  0.85  0.95 ]
[ 0.82  0.74  0.29  0.77  0.86  0.76  0.86  0.78  0.75  0.79  0.93  0.98 ]
[ 1.00  0.95  0.99  0.77  0.89  0.98  0.47  0.98  0.55  0.98  0.94  0.97 ]
[ 0.98  0.77  0.97  0.83  0.95  0.71  0.99  0.93  0.52  0.96  0.80  0.79 ]
[ 0.98  1.00  0.80  0.94  0.90  0.74  0.82  0.91  0.81  0.98  0.89  0.49 ]
[ 0.97  0.99  0.97  0.74  0.61  0.94  0.84  0.97  0.96  0.95  0.47  0.90 ]
[ 0.71  0.89  1.00  0.92  0.93  0.96  0.95  0.99  0.89  0.91  0.80  0.58 ]
[ 0.93  0.76  0.79  0.89  0.94  0.94  0.98  0.32  0.81  0.94  0.86  0.82 ]
[ 0.91  0.99  0.58  0.86  0.86  0.81  0.94  0.71  0.87  0.67  0.87  0.99 ]
[ 0.42  1.00  0.63  0.98  0.84  0.84  0.78  0.74  0.90  0.56  0.96  0.98 ]
[ 0.63  0.96  0.99  0.97  0.99  0.87  0.69  0.93  0.89  0.91  0.72  0.83 ]
[ 0.60  0.87  0.74  0.95  0.85  0.97  0.80  0.72  1.00  0.67  0.99  0.93 ]
[ 1.00  0.97  0.86  0.58  0.91  0.90  0.65  0.97  0.87  0.84  0.98  0.79 ]

11/08 05:52:33 PM | === Batch 9/200
11/08 05:52:34 PM | loss = 0.829 + 0.167 + 0.093 = 1.090
11/08 05:52:37 PM | attribution_score[0:12]: 
[ 0.20  0.84  0.93  0.93  0.44  0.94  0.88  0.41  0.98  0.91  0.38  0.95 ]
[ 0.93  0.58  0.86  0.95  0.55  0.95  0.42  0.86  0.91  0.85  0.79  0.89 ]
[ 0.77  0.22  0.78  0.54  0.73  0.24  0.31  0.39  0.77  0.89  0.59  0.94 ]
[ 0.77  0.59  0.85  0.93  0.90  0.87  0.90  0.96  0.88  0.68  0.93  0.43 ]
[ 0.80  0.96  0.84  0.80  0.92  0.85  0.32  0.55  0.81  0.41  0.71  0.78 ]
[ 0.90  0.89  0.75  0.25  0.90  0.97  0.91  0.79  0.88  0.86  0.19  0.26 ]
[ 0.77  0.63  0.71  0.58  0.89  0.84  0.81  0.71  0.78  0.76  0.73  0.89 ]
[ 0.24  0.86  0.91  0.76  0.80  0.67  0.79  0.77  0.79  0.75  0.75  0.66 ]
[ 0.60  0.67  0.64  0.97  0.85  0.81  0.72  0.85  0.74  0.36  0.39  0.43 ]
[ 0.71  0.88  0.96  0.77  0.95  0.40  0.71  0.58  0.48  0.62  0.70  0.43 ]
[ 0.51  0.27  0.24  0.29  0.15  0.33  0.48  0.28  0.43  0.36  0.41  0.73 ]
[ 0.78  0.68  0.43  0.45  0.77  0.35  0.31  0.45  0.80  0.47  0.56  0.61 ]
[ 0.64  0.47  0.30  0.42  0.21  0.52  0.34  0.43  0.66  0.55  0.27  0.71 ]
[ 0.69  0.90  0.55  0.79  0.47  0.57  0.77  0.72  0.45  0.38  0.87  0.74 ]
[ 0.74  1.00  0.68  0.99  0.89  0.69  0.89  0.99  0.54  0.97  0.99  0.76 ]
[ 0.96  0.93  0.94  0.45  0.86  0.44  0.54  0.54  0.98  0.60  0.84  0.81 ]
[ 0.41  0.76  0.89  0.69  0.65  0.22  0.93  0.63  0.68  0.76  0.41  0.70 ]
[ 0.95  0.73  0.65  0.58  0.96  0.32  0.76  0.61  0.79  0.65  0.88  0.34 ]
[ 0.94  0.86  0.69  0.54  0.73  0.62  0.61  0.21  0.90  0.80  0.91  0.97 ]
[ 0.74  0.82  0.71  0.86  0.95  0.66  0.88  0.23  0.28  0.55  0.64  0.60 ]
[ 0.69  0.48  0.78  0.72  0.79  0.61  0.85  0.95  0.30  0.75  0.22  0.32 ]
[ 0.86  0.82  0.44  0.33  0.48  1.00  0.95  0.91  0.19  0.67  0.49  0.79 ]
[ 0.17  0.53  0.93  0.55  0.90  0.81  0.54  0.69  0.69  0.81  0.92  0.82 ]
[ 0.71  0.29  0.75  0.28  0.35  0.57  0.82  0.89  0.32  0.20  0.52  0.87 ]
[ 0.70  0.45  0.78  0.27  0.97  0.63  0.91  0.69  0.33  0.54  0.64  0.23 ]
[ 0.67  0.86  0.60  0.24  0.53  0.27  0.86  0.74  0.63  0.56  0.41  0.39 ]
[ 0.41  1.00  0.96  0.37  0.39  0.49  0.75  0.54  0.96  0.56  0.85  0.95 ]
[ 0.88  0.80  0.24  0.84  0.88  0.76  0.89  0.79  0.75  0.80  0.94  0.99 ]
[ 1.00  0.95  1.00  0.74  0.91  0.98  0.54  0.98  0.55  0.98  0.95  0.98 ]
[ 0.98  0.80  0.97  0.85  0.95  0.72  0.99  0.94  0.54  0.97  0.80  0.80 ]
[ 0.98  1.00  0.78  0.94  0.91  0.74  0.82  0.91  0.85  0.98  0.89  0.48 ]
[ 0.97  0.99  0.97  0.73  0.67  0.95  0.87  0.97  0.97  0.96  0.47  0.92 ]
[ 0.75  0.91  1.00  0.92  0.94  0.97  0.95  0.99  0.91  0.92  0.82  0.58 ]
[ 0.95  0.71  0.84  0.90  0.94  0.95  0.99  0.26  0.79  0.94  0.88  0.75 ]
[ 0.93  0.99  0.56  0.84  0.88  0.85  0.95  0.76  0.89  0.72  0.88  0.99 ]
[ 0.35  1.00  0.64  0.98  0.88  0.88  0.80  0.73  0.90  0.50  0.96  0.98 ]
[ 0.64  0.97  0.99  0.97  0.99  0.88  0.71  0.92  0.90  0.87  0.76  0.87 ]
[ 0.63  0.85  0.76  0.95  0.86  0.97  0.79  0.77  1.00  0.68  0.99  0.92 ]
[ 1.00  0.97  0.87  0.61  0.93  0.92  0.66  0.97  0.85  0.86  0.99  0.80 ]

11/08 05:52:37 PM | === Batch 10/200
11/08 05:52:39 PM | loss = 0.771 + 0.175 + 0.088 = 1.033
11/08 05:52:42 PM | attribution_score[0:12]: 
[ 0.17  0.85  0.94  0.94  0.46  0.95  0.90  0.35  0.98  0.92  0.33  0.96 ]
[ 0.94  0.57  0.87  0.96  0.52  0.96  0.37  0.88  0.92  0.86  0.79  0.91 ]
[ 0.79  0.18  0.77  0.48  0.72  0.19  0.28  0.44  0.80  0.90  0.58  0.95 ]
[ 0.78  0.63  0.88  0.95  0.91  0.89  0.91  0.97  0.91  0.69  0.94  0.39 ]
[ 0.84  0.97  0.84  0.83  0.92  0.86  0.34  0.53  0.85  0.44  0.72  0.80 ]
[ 0.92  0.89  0.79  0.21  0.90  0.98  0.92  0.82  0.90  0.88  0.15  0.21 ]
[ 0.78  0.58  0.71  0.55  0.91  0.85  0.83  0.68  0.77  0.80  0.75  0.89 ]
[ 0.19  0.89  0.92  0.78  0.82  0.65  0.82  0.76  0.82  0.74  0.74  0.67 ]
[ 0.57  0.66  0.65  0.98  0.85  0.79  0.72  0.87  0.71  0.34  0.37  0.38 ]
[ 0.73  0.90  0.96  0.76  0.95  0.35  0.70  0.55  0.45  0.61  0.74  0.40 ]
[ 0.50  0.24  0.22  0.25  0.12  0.29  0.43  0.24  0.45  0.34  0.37  0.72 ]
[ 0.79  0.69  0.43  0.39  0.80  0.30  0.26  0.41  0.81  0.43  0.52  0.58 ]
[ 0.59  0.44  0.25  0.40  0.16  0.48  0.30  0.43  0.64  0.53  0.22  0.66 ]
[ 0.66  0.89  0.52  0.81  0.46  0.56  0.77  0.77  0.41  0.33  0.87  0.74 ]
[ 0.75  1.00  0.67  0.99  0.90  0.67  0.91  0.99  0.61  0.96  0.99  0.73 ]
[ 0.96  0.94  0.95  0.40  0.89  0.40  0.52  0.59  0.98  0.61  0.86  0.82 ]
[ 0.38  0.78  0.90  0.71  0.65  0.17  0.93  0.64  0.70  0.78  0.34  0.67 ]
[ 0.95  0.75  0.65  0.54  0.97  0.30  0.73  0.57  0.82  0.67  0.91  0.29 ]
[ 0.94  0.85  0.72  0.49  0.72  0.60  0.59  0.16  0.91  0.78  0.91  0.98 ]
[ 0.74  0.82  0.76  0.87  0.96  0.66  0.90  0.18  0.27  0.56  0.62  0.57 ]
[ 0.70  0.42  0.77  0.73  0.80  0.62  0.87  0.96  0.27  0.77  0.16  0.26 ]
[ 0.88  0.86  0.44  0.28  0.49  1.00  0.95  0.93  0.16  0.71  0.50  0.78 ]
[ 0.15  0.49  0.94  0.57  0.90  0.82  0.57  0.71  0.65  0.81  0.93  0.82 ]
[ 0.73  0.26  0.75  0.24  0.34  0.59  0.83  0.90  0.27  0.17  0.48  0.89 ]
[ 0.71  0.40  0.80  0.21  0.97  0.62  0.92  0.70  0.29  0.51  0.67  0.18 ]
[ 0.66  0.85  0.55  0.21  0.58  0.22  0.86  0.81  0.64  0.54  0.37  0.34 ]
[ 0.36  1.00  0.96  0.40  0.38  0.53  0.75  0.50  0.96  0.54  0.83  0.96 ]
[ 0.92  0.83  0.19  0.90  0.89  0.76  0.92  0.78  0.75  0.81  0.95  0.99 ]
[ 1.00  0.96  1.00  0.72  0.91  0.98  0.58  0.99  0.58  0.99  0.96  0.98 ]
[ 0.98  0.82  0.97  0.86  0.96  0.73  0.99  0.94  0.60  0.98  0.81  0.81 ]
[ 0.98  1.00  0.75  0.95  0.92  0.75  0.81  0.91  0.89  0.98  0.89  0.48 ]
[ 0.98  0.99  0.97  0.74  0.73  0.95  0.89  0.97  0.97  0.96  0.48  0.93 ]
[ 0.79  0.92  1.00  0.92  0.95  0.98  0.95  0.99  0.91  0.94  0.83  0.58 ]
[ 0.96  0.68  0.89  0.91  0.94  0.96  0.99  0.21  0.77  0.94  0.90  0.67 ]
[ 0.94  0.99  0.53  0.84  0.89  0.87  0.95  0.81  0.91  0.76  0.88  0.99 ]
[ 0.30  1.00  0.64  0.98  0.91  0.91  0.80  0.70  0.89  0.44  0.96  0.98 ]
[ 0.64  0.97  0.99  0.97  0.99  0.90  0.71  0.91  0.91  0.84  0.81  0.89 ]
[ 0.69  0.82  0.78  0.96  0.85  0.97  0.78  0.82  1.00  0.69  0.99  0.91 ]
[ 1.00  0.97  0.88  0.63  0.94  0.94  0.67  0.97  0.83  0.86  0.99  0.81 ]

11/08 05:52:42 PM | === Batch 11/200
11/08 05:52:43 PM | loss = 0.466 + 0.105 + 0.083 = 0.655
11/08 05:52:46 PM | attribution_score[0:12]: 
[ 0.14  0.86  0.95  0.95  0.46  0.96  0.90  0.28  0.98  0.94  0.28  0.96 ]
[ 0.94  0.55  0.87  0.97  0.48  0.97  0.32  0.90  0.92  0.87  0.79  0.93 ]
[ 0.81  0.14  0.77  0.41  0.70  0.15  0.25  0.48  0.82  0.91  0.55  0.96 ]
[ 0.79  0.67  0.90  0.96  0.92  0.91  0.92  0.98  0.93  0.69  0.95  0.34 ]
[ 0.86  0.97  0.85  0.86  0.93  0.87  0.34  0.51  0.88  0.46  0.72  0.82 ]
[ 0.93  0.89  0.82  0.17  0.91  0.98  0.92  0.85  0.92  0.90  0.12  0.16 ]
[ 0.78  0.52  0.70  0.52  0.92  0.85  0.85  0.66  0.77  0.83  0.75  0.89 ]
[ 0.15  0.90  0.93  0.79  0.82  0.62  0.83  0.74  0.84  0.73  0.73  0.67 ]
[ 0.54  0.63  0.67  0.98  0.85  0.78  0.71  0.87  0.68  0.30  0.34  0.32 ]
[ 0.74  0.91  0.97  0.75  0.96  0.30  0.70  0.51  0.42  0.59  0.77  0.36 ]
[ 0.48  0.20  0.20  0.21  0.09  0.24  0.37  0.21  0.43  0.29  0.32  0.69 ]
[ 0.79  0.69  0.41  0.34  0.82  0.25  0.21  0.37  0.82  0.39  0.47  0.55 ]
[ 0.54  0.39  0.20  0.36  0.12  0.44  0.25  0.41  0.62  0.49  0.17  0.60 ]
[ 0.63  0.88  0.48  0.82  0.44  0.55  0.77  0.79  0.36  0.28  0.85  0.73 ]
[ 0.77  1.00  0.67  0.99  0.91  0.63  0.91  1.00  0.65  0.96  1.00  0.72 ]
[ 0.96  0.94  0.96  0.36  0.91  0.34  0.50  0.64  0.99  0.59  0.87  0.83 ]
[ 0.35  0.80  0.91  0.72  0.64  0.13  0.92  0.64  0.71  0.79  0.28  0.64 ]
[ 0.96  0.77  0.66  0.50  0.97  0.26  0.69  0.51  0.84  0.65  0.93  0.24 ]
[ 0.94  0.84  0.73  0.44  0.71  0.57  0.57  0.12  0.92  0.76  0.91  0.98 ]
[ 0.73  0.81  0.79  0.88  0.97  0.65  0.91  0.14  0.24  0.56  0.59  0.54 ]
[ 0.70  0.36  0.77  0.74  0.82  0.62  0.88  0.96  0.23  0.78  0.12  0.20 ]
[ 0.89  0.88  0.42  0.23  0.48  1.00  0.95  0.94  0.14  0.72  0.50  0.77 ]
[ 0.13  0.43  0.95  0.59  0.91  0.83  0.60  0.73  0.61  0.82  0.95  0.82 ]
[ 0.75  0.23  0.74  0.19  0.33  0.60  0.84  0.91  0.22  0.15  0.46  0.90 ]
[ 0.70  0.35  0.81  0.17  0.97  0.60  0.93  0.69  0.24  0.47  0.69  0.14 ]
[ 0.65  0.85  0.50  0.17  0.61  0.17  0.85  0.86  0.65  0.49  0.31  0.29 ]
[ 0.30  1.00  0.96  0.44  0.34  0.59  0.75  0.46  0.96  0.53  0.78  0.96 ]
[ 0.94  0.85  0.15  0.93  0.91  0.76  0.94  0.77  0.76  0.81  0.96  0.99 ]
[ 1.00  0.96  1.00  0.71  0.91  0.99  0.61  0.99  0.62  0.99  0.96  0.99 ]
[ 0.98  0.83  0.97  0.87  0.96  0.72  0.99  0.95  0.63  0.98  0.82  0.82 ]
[ 0.98  1.00  0.70  0.95  0.92  0.76  0.79  0.92  0.92  0.98  0.88  0.47 ]
[ 0.98  0.99  0.98  0.75  0.78  0.96  0.91  0.97  0.98  0.96  0.49  0.93 ]
[ 0.82  0.93  1.00  0.92  0.96  0.98  0.95  0.99  0.91  0.95  0.84  0.59 ]
[ 0.97  0.64  0.92  0.92  0.93  0.96  0.99  0.18  0.75  0.94  0.92  0.58 ]
[ 0.95  0.99  0.49  0.83  0.90  0.90  0.96  0.85  0.92  0.77  0.89  0.99 ]
[ 0.25  1.00  0.64  0.98  0.93  0.93  0.81  0.65  0.89  0.36  0.97  0.98 ]
[ 0.64  0.97  0.99  0.97  0.99  0.91  0.72  0.90  0.91  0.80  0.86  0.91 ]
[ 0.74  0.78  0.78  0.96  0.85  0.97  0.79  0.85  1.00  0.70  0.99  0.89 ]
[ 1.00  0.97  0.88  0.63  0.95  0.95  0.67  0.97  0.82  0.87  0.99  0.83 ]

11/08 05:52:46 PM | === Batch 12/200
11/08 05:52:48 PM | loss = 0.462 + 0.046 + 0.079 = 0.588
11/08 05:52:51 PM | attribution_score[0:12]: 
[ 0.12  0.88  0.96  0.95  0.48  0.96  0.91  0.25  0.98  0.95  0.26  0.97 ]
[ 0.95  0.59  0.88  0.97  0.48  0.97  0.29  0.91  0.93  0.88  0.80  0.94 ]
[ 0.83  0.11  0.77  0.39  0.71  0.13  0.25  0.54  0.85  0.92  0.55  0.96 ]
[ 0.80  0.72  0.92  0.97  0.93  0.93  0.92  0.98  0.94  0.71  0.96  0.33 ]
[ 0.89  0.98  0.86  0.88  0.93  0.88  0.36  0.52  0.90  0.50  0.74  0.85 ]
[ 0.94  0.89  0.85  0.14  0.92  0.98  0.92  0.88  0.93  0.91  0.10  0.14 ]
[ 0.78  0.50  0.72  0.50  0.94  0.85  0.87  0.65  0.77  0.87  0.76  0.89 ]
[ 0.12  0.92  0.94  0.81  0.84  0.63  0.85  0.74  0.86  0.73  0.74  0.70 ]
[ 0.52  0.63  0.71  0.99  0.85  0.77  0.73  0.89  0.66  0.30  0.34  0.29 ]
[ 0.77  0.92  0.97  0.75  0.96  0.28  0.72  0.50  0.41  0.59  0.80  0.35 ]
[ 0.49  0.19  0.20  0.20  0.07  0.22  0.37  0.20  0.43  0.28  0.29  0.68 ]
[ 0.81  0.72  0.42  0.31  0.84  0.22  0.19  0.36  0.83  0.39  0.45  0.55 ]
[ 0.53  0.38  0.18  0.36  0.10  0.42  0.23  0.41  0.63  0.49  0.15  0.57 ]
[ 0.64  0.88  0.47  0.84  0.46  0.57  0.78  0.81  0.36  0.26  0.85  0.73 ]
[ 0.79  1.00  0.69  0.99  0.91  0.64  0.93  1.00  0.69  0.96  1.00  0.72 ]
[ 0.96  0.95  0.96  0.36  0.92  0.33  0.51  0.70  0.99  0.57  0.88  0.85 ]
[ 0.36  0.83  0.92  0.75  0.66  0.11  0.92  0.67  0.75  0.81  0.25  0.63 ]
[ 0.96  0.80  0.70  0.48  0.98  0.25  0.66  0.51  0.87  0.65  0.95  0.22 ]
[ 0.94  0.84  0.75  0.41  0.71  0.57  0.58  0.10  0.93  0.75  0.91  0.98 ]
[ 0.73  0.81  0.82  0.90  0.97  0.66  0.93  0.11  0.23  0.57  0.59  0.56 ]
[ 0.71  0.36  0.77  0.76  0.83  0.67  0.90  0.97  0.21  0.80  0.09  0.18 ]
[ 0.91  0.89  0.41  0.20  0.52  1.00  0.96  0.96  0.12  0.74  0.53  0.76 ]
[ 0.13  0.41  0.96  0.62  0.92  0.85  0.63  0.74  0.60  0.82  0.95  0.82 ]
[ 0.77  0.21  0.74  0.17  0.36  0.64  0.85  0.92  0.20  0.14  0.47  0.91 ]
[ 0.71  0.32  0.82  0.14  0.97  0.60  0.94  0.71  0.22  0.46  0.70  0.12 ]
[ 0.66  0.85  0.48  0.16  0.63  0.15  0.85  0.90  0.68  0.48  0.29  0.28 ]
[ 0.26  1.00  0.97  0.49  0.35  0.63  0.75  0.43  0.97  0.56  0.76  0.97 ]
[ 0.96  0.87  0.12  0.95  0.92  0.75  0.96  0.78  0.77  0.81  0.96  0.99 ]
[ 1.00  0.96  1.00  0.73  0.91  0.99  0.64  0.99  0.68  0.99  0.97  0.99 ]
[ 0.98  0.84  0.97  0.88  0.96  0.72  0.99  0.95  0.68  0.99  0.84  0.83 ]
[ 0.98  1.00  0.70  0.96  0.92  0.79  0.79  0.92  0.94  0.98  0.89  0.47 ]
[ 0.98  0.99  0.98  0.76  0.82  0.96  0.93  0.97  0.98  0.97  0.51  0.94 ]
[ 0.85  0.94  1.00  0.93  0.96  0.98  0.94  0.99  0.91  0.96  0.84  0.59 ]
[ 0.98  0.63  0.94  0.93  0.93  0.96  0.99  0.15  0.74  0.94  0.93  0.59 ]
[ 0.96  0.99  0.46  0.85  0.91  0.91  0.96  0.88  0.93  0.79  0.90  0.99 ]
[ 0.22  1.00  0.64  0.98  0.95  0.95  0.82  0.63  0.89  0.33  0.97  0.99 ]
[ 0.64  0.98  0.99  0.98  1.00  0.92  0.73  0.90  0.91  0.77  0.89  0.92 ]
[ 0.79  0.74  0.78  0.97  0.86  0.97  0.80  0.88  1.00  0.71  0.99  0.88 ]
[ 1.00  0.97  0.89  0.65  0.96  0.95  0.69  0.97  0.81  0.88  0.99  0.85 ]

11/08 05:52:51 PM | === Batch 13/200
11/08 05:52:52 PM | loss = 0.790 + 0.010 + 0.075 = 0.875
11/08 05:52:55 PM | attribution_score[0:12]: 
[ 0.10  0.90  0.97  0.96  0.49  0.97  0.92  0.21  0.98  0.96  0.24  0.97 ]
[ 0.95  0.62  0.88  0.98  0.48  0.97  0.26  0.92  0.93  0.89  0.80  0.94 ]
[ 0.84  0.09  0.78  0.36  0.70  0.11  0.23  0.57  0.86  0.92  0.54  0.97 ]
[ 0.81  0.75  0.94  0.98  0.94  0.94  0.93  0.98  0.95  0.71  0.96  0.31 ]
[ 0.90  0.98  0.86  0.89  0.94  0.89  0.35  0.52  0.92  0.50  0.75  0.87 ]
[ 0.94  0.89  0.87  0.12  0.92  0.98  0.92  0.89  0.94  0.92  0.09  0.11 ]
[ 0.79  0.46  0.72  0.50  0.94  0.86  0.88  0.64  0.77  0.89  0.76  0.89 ]
[ 0.10  0.93  0.95  0.82  0.85  0.61  0.85  0.73  0.87  0.72  0.75  0.71 ]
[ 0.51  0.61  0.73  0.99  0.86  0.77  0.74  0.89  0.65  0.29  0.32  0.28 ]
[ 0.79  0.93  0.97  0.75  0.96  0.25  0.72  0.49  0.38  0.56  0.83  0.33 ]
[ 0.47  0.17  0.19  0.18  0.06  0.19  0.34  0.18  0.42  0.25  0.26  0.68 ]
[ 0.83  0.71  0.40  0.29  0.85  0.19  0.16  0.34  0.83  0.37  0.42  0.53 ]
[ 0.52  0.36  0.15  0.36  0.08  0.39  0.20  0.38  0.62  0.48  0.12  0.56 ]
[ 0.63  0.86  0.44  0.85  0.47  0.59  0.79  0.82  0.36  0.23  0.83  0.72 ]
[ 0.80  1.00  0.71  0.99  0.92  0.62  0.93  1.00  0.72  0.96  1.00  0.73 ]
[ 0.97  0.95  0.97  0.36  0.94  0.29  0.53  0.72  0.99  0.57  0.89  0.86 ]
[ 0.34  0.85  0.93  0.77  0.65  0.09  0.91  0.69  0.76  0.83  0.21  0.63 ]
[ 0.97  0.82  0.73  0.46  0.98  0.23  0.66  0.50  0.89  0.64  0.96  0.19 ]
[ 0.94  0.83  0.76  0.38  0.72  0.58  0.59  0.08  0.93  0.73  0.90  0.98 ]
[ 0.72  0.82  0.83  0.91  0.98  0.65  0.94  0.09  0.21  0.57  0.60  0.56 ]
[ 0.72  0.36  0.78  0.78  0.85  0.69  0.91  0.97  0.19  0.82  0.07  0.15 ]
[ 0.92  0.90  0.40  0.17  0.51  1.00  0.96  0.96  0.11  0.74  0.53  0.77 ]
[ 0.12  0.38  0.97  0.63  0.93  0.87  0.66  0.74  0.60  0.81  0.96  0.83 ]
[ 0.78  0.21  0.73  0.15  0.34  0.67  0.84  0.93  0.18  0.12  0.48  0.92 ]
[ 0.71  0.29  0.84  0.11  0.97  0.59  0.94  0.71  0.20  0.45  0.70  0.10 ]
[ 0.67  0.85  0.44  0.14  0.63  0.13  0.86  0.92  0.70  0.46  0.27  0.27 ]
[ 0.21  1.00  0.97  0.54  0.34  0.68  0.75  0.42  0.97  0.55  0.71  0.97 ]
[ 0.97  0.89  0.09  0.97  0.93  0.73  0.97  0.78  0.78  0.80  0.97  0.99 ]
[ 1.00  0.96  1.00  0.74  0.91  0.99  0.67  0.99  0.76  0.99  0.97  0.99 ]
[ 0.99  0.85  0.97  0.89  0.97  0.74  0.99  0.95  0.74  0.99  0.86  0.83 ]
[ 0.98  1.00  0.69  0.96  0.93  0.80  0.81  0.93  0.95  0.97  0.89  0.45 ]
[ 0.98  1.00  0.98  0.77  0.85  0.97  0.94  0.97  0.98  0.97  0.54  0.95 ]
[ 0.87  0.94  1.00  0.94  0.96  0.98  0.94  0.99  0.91  0.96  0.85  0.61 ]
[ 0.98  0.65  0.96  0.93  0.93  0.96  0.99  0.13  0.77  0.94  0.94  0.57 ]
[ 0.97  1.00  0.44  0.84  0.92  0.92  0.96  0.91  0.94  0.79  0.91  0.99 ]
[ 0.20  1.00  0.64  0.98  0.96  0.96  0.83  0.59  0.89  0.30  0.97  0.99 ]
[ 0.64  0.98  0.99  0.98  1.00  0.92  0.74  0.90  0.91  0.76  0.91  0.94 ]
[ 0.82  0.74  0.77  0.97  0.87  0.98  0.79  0.91  1.00  0.70  0.99  0.88 ]
[ 1.00  0.97  0.90  0.63  0.96  0.96  0.70  0.97  0.81  0.89  0.99  0.86 ]

11/08 05:52:55 PM | === Batch 14/200
11/08 05:52:57 PM | loss = 0.635 + 0.030 + 0.072 = 0.737
11/08 05:53:00 PM | attribution_score[0:12]: 
[ 0.09  0.92  0.97  0.96  0.51  0.97  0.93  0.20  0.98  0.96  0.23  0.97 ]
[ 0.96  0.69  0.89  0.98  0.51  0.98  0.25  0.93  0.94  0.90  0.81  0.95 ]
[ 0.85  0.08  0.80  0.36  0.72  0.10  0.23  0.60  0.88  0.93  0.55  0.97 ]
[ 0.82  0.79  0.95  0.98  0.94  0.95  0.94  0.99  0.96  0.74  0.97  0.32 ]
[ 0.91  0.98  0.88  0.91  0.94  0.90  0.37  0.55  0.93  0.53  0.77  0.90 ]
[ 0.95  0.89  0.89  0.11  0.92  0.98  0.93  0.90  0.94  0.93  0.08  0.10 ]
[ 0.80  0.46  0.74  0.51  0.95  0.87  0.88  0.65  0.79  0.91  0.76  0.90 ]
[ 0.09  0.94  0.95  0.84  0.86  0.62  0.85  0.75  0.88  0.74  0.77  0.72 ]
[ 0.53  0.60  0.78  0.99  0.87  0.77  0.77  0.90  0.66  0.30  0.32  0.28 ]
[ 0.82  0.93  0.98  0.76  0.97  0.24  0.73  0.50  0.38  0.55  0.85  0.33 ]
[ 0.47  0.17  0.20  0.17  0.05  0.18  0.34  0.18  0.42  0.23  0.25  0.70 ]
[ 0.85  0.73  0.41  0.29  0.86  0.17  0.15  0.34  0.84  0.37  0.42  0.55 ]
[ 0.55  0.37  0.14  0.38  0.07  0.38  0.19  0.36  0.64  0.50  0.10  0.58 ]
[ 0.65  0.85  0.43  0.86  0.52  0.63  0.82  0.83  0.40  0.22  0.84  0.73 ]
[ 0.81  1.00  0.75  0.99  0.94  0.63  0.94  1.00  0.75  0.96  1.00  0.74 ]
[ 0.97  0.95  0.98  0.39  0.94  0.27  0.57  0.76  0.99  0.60  0.90  0.88 ]
[ 0.36  0.88  0.93  0.80  0.66  0.08  0.91  0.70  0.76  0.86  0.21  0.66 ]
[ 0.97  0.84  0.76  0.46  0.99  0.23  0.69  0.49  0.91  0.61  0.96  0.18 ]
[ 0.95  0.83  0.79  0.38  0.74  0.61  0.63  0.07  0.94  0.74  0.90  0.98 ]
[ 0.70  0.83  0.84  0.93  0.98  0.66  0.95  0.08  0.20  0.58  0.63  0.61 ]
[ 0.74  0.41  0.81  0.81  0.87  0.72  0.92  0.98  0.19  0.85  0.06  0.15 ]
[ 0.93  0.91  0.39  0.16  0.53  1.00  0.97  0.97  0.10  0.74  0.53  0.79 ]
[ 0.12  0.38  0.97  0.63  0.94  0.89  0.70  0.74  0.63  0.81  0.96  0.85 ]
[ 0.78  0.21  0.73  0.15  0.35  0.69  0.85  0.94  0.18  0.12  0.53  0.93 ]
[ 0.73  0.28  0.86  0.10  0.98  0.58  0.95  0.72  0.19  0.47  0.67  0.08 ]
[ 0.69  0.86  0.45  0.13  0.62  0.11  0.87  0.94  0.73  0.45  0.27  0.29 ]
[ 0.17  1.00  0.98  0.61  0.34  0.71  0.75  0.42  0.97  0.57  0.68  0.97 ]
[ 0.98  0.91  0.08  0.98  0.94  0.70  0.97  0.79  0.80  0.79  0.98  0.99 ]
[ 1.00  0.96  1.00  0.76  0.91  0.99  0.70  0.99  0.83  0.99  0.97  0.99 ]
[ 0.99  0.86  0.97  0.90  0.97  0.77  0.99  0.96  0.79  0.99  0.88  0.82 ]
[ 0.98  1.00  0.72  0.96  0.94  0.83  0.85  0.94  0.96  0.97  0.90  0.42 ]
[ 0.98  1.00  0.98  0.78  0.87  0.97  0.95  0.97  0.99  0.97  0.58  0.95 ]
[ 0.89  0.95  1.00  0.94  0.97  0.99  0.95  0.99  0.91  0.96  0.85  0.64 ]
[ 0.99  0.68  0.96  0.93  0.93  0.96  0.99  0.13  0.82  0.94  0.95  0.57 ]
[ 0.97  1.00  0.45  0.85  0.93  0.92  0.96  0.92  0.95  0.81  0.91  0.99 ]
[ 0.19  1.00  0.64  0.99  0.96  0.96  0.84  0.58  0.90  0.32  0.97  0.99 ]
[ 0.63  0.98  0.99  0.98  1.00  0.92  0.76  0.91  0.92  0.78  0.92  0.95 ]
[ 0.83  0.76  0.76  0.97  0.89  0.98  0.79  0.92  1.00  0.69  0.99  0.88 ]
[ 1.00  0.97  0.91  0.61  0.97  0.96  0.71  0.97  0.82  0.90  0.99  0.86 ]

11/08 05:53:00 PM | === Batch 15/200
11/08 05:53:01 PM | loss = 0.603 + 0.077 + 0.068 = 0.748
11/08 05:53:04 PM | attribution_score[0:12]: 
[ 0.08  0.94  0.97  0.97  0.50  0.98  0.93  0.19  0.98  0.97  0.21  0.98 ]
[ 0.96  0.74  0.89  0.99  0.55  0.98  0.24  0.94  0.94  0.91  0.80  0.95 ]
[ 0.86  0.07  0.81  0.35  0.73  0.09  0.22  0.62  0.89  0.94  0.55  0.98 ]
[ 0.84  0.82  0.95  0.98  0.95  0.96  0.94  0.99  0.96  0.74  0.97  0.32 ]
[ 0.92  0.98  0.89  0.91  0.95  0.91  0.35  0.57  0.94  0.54  0.78  0.91 ]
[ 0.95  0.89  0.91  0.09  0.93  0.99  0.93  0.91  0.95  0.93  0.07  0.08 ]
[ 0.80  0.45  0.75  0.52  0.95  0.88  0.88  0.66  0.80  0.93  0.74  0.90 ]
[ 0.07  0.95  0.95  0.85  0.86  0.60  0.85  0.76  0.88  0.75  0.79  0.71 ]
[ 0.55  0.56  0.81  0.99  0.89  0.78  0.80  0.90  0.68  0.30  0.30  0.28 ]
[ 0.82  0.94  0.98  0.77  0.97  0.22  0.73  0.52  0.35  0.52  0.86  0.32 ]
[ 0.43  0.15  0.20  0.15  0.04  0.17  0.33  0.18  0.39  0.20  0.23  0.71 ]
[ 0.85  0.72  0.39  0.29  0.85  0.14  0.13  0.33  0.83  0.37  0.39  0.56 ]
[ 0.57  0.36  0.13  0.41  0.06  0.36  0.16  0.32  0.65  0.51  0.09  0.61 ]
[ 0.67  0.84  0.40  0.86  0.56  0.66  0.83  0.83  0.43  0.21  0.83  0.74 ]
[ 0.81  1.00  0.77  0.99  0.94  0.66  0.94  1.00  0.77  0.96  1.00  0.74 ]
[ 0.98  0.96  0.98  0.39  0.95  0.24  0.61  0.76  0.99  0.61  0.90  0.90 ]
[ 0.34  0.89  0.94  0.80  0.67  0.07  0.91  0.70  0.76  0.88  0.21  0.68 ]
[ 0.97  0.85  0.79  0.46  0.99  0.23  0.71  0.48  0.91  0.55  0.97  0.17 ]
[ 0.95  0.82  0.81  0.40  0.76  0.64  0.66  0.06  0.95  0.75  0.91  0.98 ]
[ 0.68  0.85  0.83  0.94  0.98  0.63  0.96  0.07  0.20  0.55  0.66  0.64 ]
[ 0.75  0.44  0.84  0.83  0.88  0.73  0.94  0.98  0.19  0.88  0.05  0.14 ]
[ 0.94  0.91  0.36  0.14  0.52  1.00  0.97  0.97  0.10  0.72  0.54  0.80 ]
[ 0.11  0.36  0.98  0.62  0.95  0.90  0.73  0.73  0.65  0.82  0.96  0.86 ]
[ 0.77  0.21  0.70  0.14  0.32  0.70  0.84  0.95  0.18  0.11  0.59  0.94 ]
[ 0.75  0.28  0.88  0.08  0.98  0.57  0.96  0.71  0.17  0.48  0.65  0.07 ]
[ 0.73  0.87  0.46  0.13  0.59  0.10  0.88  0.95  0.75  0.43  0.26  0.30 ]
[ 0.13  1.00  0.98  0.62  0.33  0.72  0.76  0.42  0.97  0.59  0.65  0.97 ]
[ 0.98  0.93  0.08  0.98  0.95  0.68  0.98  0.79  0.83  0.78  0.98  0.99 ]
[ 1.00  0.96  1.00  0.79  0.92  0.99  0.71  0.99  0.87  0.99  0.98  0.99 ]
[ 0.99  0.87  0.98  0.90  0.97  0.80  1.00  0.96  0.83  0.99  0.90  0.80 ]
[ 0.98  1.00  0.74  0.96  0.95  0.85  0.89  0.95  0.97  0.97  0.90  0.37 ]
[ 0.98  1.00  0.98  0.80  0.89  0.97  0.96  0.97  0.99  0.97  0.63  0.95 ]
[ 0.90  0.96  1.00  0.94  0.97  0.99  0.95  0.99  0.91  0.96  0.87  0.66 ]
[ 0.99  0.71  0.97  0.93  0.94  0.95  0.99  0.14  0.87  0.94  0.96  0.55 ]
[ 0.98  1.00  0.47  0.83  0.94  0.92  0.96  0.93  0.96  0.81  0.92  0.99 ]
[ 0.18  1.00  0.65  0.99  0.97  0.97  0.84  0.57  0.91  0.34  0.97  0.99 ]
[ 0.63  0.98  0.99  0.98  1.00  0.91  0.78  0.92  0.92  0.80  0.93  0.95 ]
[ 0.83  0.80  0.75  0.96  0.91  0.98  0.80  0.93  1.00  0.68  0.99  0.88 ]
[ 1.00  0.98  0.92  0.58  0.97  0.97  0.72  0.97  0.84  0.92  0.99  0.87 ]

11/08 05:53:04 PM | === Batch 16/200
11/08 05:53:06 PM | loss = 0.420 + 0.096 + 0.066 = 0.582
11/08 05:53:09 PM | attribution_score[0:12]: 
[ 0.07  0.95  0.98  0.97  0.47  0.98  0.93  0.17  0.98  0.97  0.19  0.98 ]
[ 0.96  0.79  0.89  0.99  0.56  0.98  0.23  0.94  0.95  0.91  0.79  0.96 ]
[ 0.85  0.06  0.82  0.33  0.74  0.07  0.20  0.61  0.90  0.94  0.53  0.98 ]
[ 0.84  0.84  0.96  0.99  0.96  0.96  0.94  0.99  0.97  0.74  0.97  0.31 ]
[ 0.93  0.99  0.90  0.92  0.95  0.92  0.32  0.59  0.94  0.54  0.79  0.92 ]
[ 0.95  0.89  0.92  0.08  0.93  0.99  0.93  0.91  0.95  0.94  0.06  0.07 ]
[ 0.81  0.43  0.75  0.54  0.95  0.89  0.87  0.66  0.82  0.94  0.71  0.90 ]
[ 0.06  0.96  0.95  0.85  0.85  0.56  0.84  0.77  0.89  0.73  0.79  0.67 ]
[ 0.56  0.51  0.83  0.99  0.90  0.79  0.82  0.90  0.69  0.28  0.28  0.28 ]
[ 0.82  0.94  0.98  0.77  0.97  0.20  0.71  0.51  0.31  0.47  0.86  0.29 ]
[ 0.38  0.14  0.19  0.13  0.04  0.15  0.29  0.16  0.35  0.17  0.20  0.71 ]
[ 0.84  0.69  0.34  0.28  0.84  0.12  0.12  0.30  0.81  0.36  0.35  0.56 ]
[ 0.59  0.34  0.11  0.43  0.06  0.31  0.14  0.27  0.64  0.50  0.07  0.63 ]
[ 0.67  0.81  0.35  0.86  0.57  0.67  0.84  0.83  0.45  0.19  0.80  0.74 ]
[ 0.81  1.00  0.79  0.99  0.95  0.68  0.94  1.00  0.79  0.96  1.00  0.74 ]
[ 0.98  0.96  0.98  0.38  0.95  0.20  0.65  0.76  0.99  0.60  0.89  0.92 ]
[ 0.32  0.90  0.94  0.81  0.68  0.06  0.91  0.69  0.74  0.90  0.21  0.70 ]
[ 0.98  0.84  0.81  0.46  0.99  0.22  0.71  0.47  0.92  0.49  0.97  0.15 ]
[ 0.95  0.82  0.84  0.42  0.77  0.65  0.70  0.05  0.96  0.76  0.91  0.98 ]
[ 0.64  0.87  0.82  0.95  0.99  0.61  0.96  0.06  0.20  0.51  0.68  0.65 ]
[ 0.76  0.47  0.86  0.84  0.88  0.72  0.94  0.98  0.18  0.90  0.04  0.13 ]
[ 0.95  0.91  0.33  0.13  0.49  1.00  0.97  0.98  0.09  0.70  0.54  0.81 ]
[ 0.10  0.34  0.98  0.60  0.95  0.91  0.74  0.72  0.66  0.83  0.96  0.87 ]
[ 0.75  0.20  0.67  0.13  0.29  0.71  0.82  0.96  0.17  0.10  0.64  0.95 ]
[ 0.76  0.26  0.90  0.07  0.98  0.55  0.96  0.70  0.16  0.46  0.63  0.06 ]
[ 0.76  0.88  0.46  0.13  0.55  0.09  0.89  0.96  0.77  0.40  0.24  0.30 ]
[ 0.11  1.00  0.98  0.64  0.32  0.73  0.77  0.43  0.97  0.60  0.62  0.97 ]
[ 0.99  0.94  0.07  0.99  0.95  0.68  0.98  0.80  0.85  0.76  0.98  0.99 ]
[ 1.00  0.96  1.00  0.80  0.91  0.99  0.74  0.99  0.91  0.99  0.98  0.99 ]
[ 0.99  0.87  0.98  0.91  0.97  0.83  1.00  0.97  0.86  0.99  0.91  0.77 ]
[ 0.98  1.00  0.77  0.97  0.95  0.86  0.92  0.96  0.97  0.97  0.88  0.33 ]
[ 0.98  1.00  0.98  0.81  0.90  0.97  0.96  0.97  0.99  0.97  0.65  0.95 ]
[ 0.91  0.96  1.00  0.94  0.98  0.99  0.96  0.99  0.92  0.96  0.88  0.69 ]
[ 0.99  0.71  0.97  0.93  0.94  0.94  1.00  0.16  0.90  0.94  0.96  0.54 ]
[ 0.98  1.00  0.48  0.81  0.94  0.92  0.97  0.94  0.97  0.81  0.92  0.99 ]
[ 0.18  1.00  0.66  0.99  0.98  0.97  0.85  0.57  0.91  0.40  0.97  0.99 ]
[ 0.62  0.98  0.99  0.98  1.00  0.90  0.79  0.93  0.92  0.82  0.94  0.96 ]
[ 0.83  0.83  0.74  0.96  0.93  0.98  0.79  0.94  1.00  0.67  0.99  0.89 ]
[ 1.00  0.98  0.92  0.55  0.98  0.97  0.73  0.96  0.85  0.93  0.99  0.86 ]

11/08 05:53:09 PM | === Batch 17/200
11/08 05:53:10 PM | loss = 0.333 + 0.045 + 0.063 = 0.442
11/08 05:53:13 PM | attribution_score[0:12]: 
[ 0.06  0.96  0.98  0.97  0.44  0.98  0.94  0.14  0.98  0.97  0.16  0.98 ]
[ 0.96  0.82  0.89  0.99  0.56  0.98  0.21  0.95  0.95  0.92  0.76  0.96 ]
[ 0.85  0.05  0.83  0.30  0.75  0.06  0.17  0.60  0.90  0.95  0.50  0.98 ]
[ 0.84  0.86  0.96  0.99  0.96  0.96  0.94  0.99  0.97  0.74  0.97  0.29 ]
[ 0.93  0.99  0.91  0.92  0.96  0.92  0.29  0.60  0.94  0.52  0.80  0.93 ]
[ 0.95  0.89  0.93  0.07  0.93  0.99  0.93  0.91  0.95  0.94  0.05  0.06 ]
[ 0.80  0.41  0.73  0.56  0.95  0.89  0.86  0.66  0.83  0.94  0.67  0.90 ]
[ 0.05  0.96  0.95  0.84  0.84  0.50  0.82  0.78  0.89  0.70  0.78  0.61 ]
[ 0.55  0.44  0.84  0.99  0.91  0.80  0.81  0.90  0.69  0.26  0.26  0.27 ]
[ 0.83  0.94  0.98  0.77  0.97  0.17  0.67  0.48  0.28  0.42  0.87  0.26 ]
[ 0.32  0.13  0.19  0.11  0.03  0.13  0.25  0.15  0.32  0.14  0.18  0.71 ]
[ 0.83  0.65  0.28  0.26  0.83  0.10  0.10  0.25  0.78  0.33  0.31  0.53 ]
[ 0.59  0.31  0.10  0.43  0.05  0.26  0.12  0.23  0.60  0.49  0.06  0.62 ]
[ 0.67  0.78  0.30  0.86  0.55  0.68  0.86  0.82  0.45  0.16  0.75  0.74 ]
[ 0.80  1.00  0.81  0.99  0.96  0.68  0.95  1.00  0.80  0.96  1.00  0.72 ]
[ 0.98  0.96  0.98  0.36  0.95  0.16  0.69  0.75  0.99  0.60  0.88  0.94 ]
[ 0.30  0.91  0.94  0.81  0.68  0.05  0.91  0.68  0.72  0.91  0.21  0.71 ]
[ 0.98  0.84  0.81  0.45  0.99  0.21  0.73  0.45  0.92  0.45  0.97  0.13 ]
[ 0.95  0.80  0.86  0.43  0.75  0.66  0.73  0.04  0.96  0.76  0.92  0.98 ]
[ 0.58  0.88  0.80  0.96  0.99  0.59  0.97  0.05  0.19  0.47  0.71  0.63 ]
[ 0.76  0.46  0.87  0.84  0.88  0.70  0.95  0.98  0.16  0.91  0.04  0.12 ]
[ 0.95  0.91  0.32  0.11  0.46  1.00  0.97  0.98  0.08  0.71  0.56  0.82 ]
[ 0.09  0.30  0.98  0.57  0.96  0.91  0.75  0.69  0.66  0.84  0.97  0.88 ]
[ 0.72  0.19  0.66  0.11  0.26  0.74  0.80  0.96  0.16  0.10  0.66  0.95 ]
[ 0.76  0.23  0.91  0.06  0.98  0.54  0.96  0.68  0.14  0.42  0.59  0.05 ]
[ 0.79  0.88  0.46  0.12  0.54  0.07  0.90  0.96  0.78  0.37  0.23  0.28 ]
[ 0.09  1.00  0.99  0.64  0.33  0.74  0.77  0.42  0.97  0.56  0.57  0.97 ]
[ 0.99  0.94  0.06  0.99  0.95  0.69  0.98  0.80  0.88  0.74  0.99  0.99 ]
[ 1.00  0.96  1.00  0.79  0.92  0.99  0.76  0.99  0.93  0.99  0.98  0.99 ]
[ 0.99  0.87  0.98  0.91  0.97  0.85  1.00  0.97  0.89  0.99  0.92  0.74 ]
[ 0.98  1.00  0.80  0.97  0.96  0.87  0.94  0.96  0.98  0.97  0.85  0.30 ]
[ 0.98  1.00  0.98  0.82  0.91  0.98  0.97  0.97  0.99  0.97  0.66  0.94 ]
[ 0.92  0.96  1.00  0.94  0.98  0.99  0.96  0.99  0.92  0.95  0.89  0.71 ]
[ 0.99  0.71  0.98  0.93  0.95  0.94  1.00  0.16  0.92  0.95  0.97  0.54 ]
[ 0.98  1.00  0.49  0.80  0.95  0.92  0.97  0.95  0.98  0.81  0.92  0.99 ]
[ 0.18  1.00  0.66  0.98  0.98  0.98  0.85  0.57  0.91  0.45  0.97  0.99 ]
[ 0.61  0.98  0.99  0.98  1.00  0.90  0.80  0.93  0.93  0.83  0.95  0.97 ]
[ 0.83  0.87  0.74  0.95  0.94  0.98  0.75  0.94  1.00  0.66  0.99  0.90 ]
[ 1.00  0.98  0.93  0.54  0.98  0.97  0.73  0.96  0.85  0.94  0.99  0.84 ]

11/08 05:53:13 PM | === Batch 18/200
11/08 05:53:15 PM | loss = 0.574 + 0.071 + 0.062 = 0.706
11/08 05:53:18 PM | attribution_score[0:12]: 
[ 0.05  0.97  0.98  0.97  0.43  0.98  0.94  0.13  0.98  0.97  0.15  0.98 ]
[ 0.96  0.86  0.89  0.99  0.58  0.98  0.20  0.95  0.95  0.92  0.76  0.96 ]
[ 0.85  0.04  0.84  0.30  0.77  0.06  0.15  0.62  0.91  0.95  0.50  0.98 ]
[ 0.85  0.88  0.96  0.99  0.97  0.97  0.95  0.99  0.97  0.75  0.97  0.28 ]
[ 0.94  0.99  0.92  0.92  0.96  0.92  0.29  0.64  0.95  0.53  0.81  0.93 ]
[ 0.96  0.89  0.93  0.06  0.94  0.99  0.93  0.91  0.95  0.95  0.05  0.05 ]
[ 0.79  0.40  0.74  0.60  0.95  0.90  0.85  0.65  0.84  0.95  0.67  0.90 ]
[ 0.05  0.96  0.95  0.85  0.85  0.49  0.83  0.79  0.90  0.68  0.79  0.60 ]
[ 0.55  0.41  0.86  0.99  0.91  0.81  0.82  0.89  0.70  0.25  0.25  0.28 ]
[ 0.84  0.94  0.98  0.77  0.97  0.16  0.64  0.47  0.27  0.42  0.88  0.25 ]
[ 0.29  0.12  0.19  0.10  0.03  0.12  0.24  0.14  0.32  0.13  0.18  0.73 ]
[ 0.84  0.63  0.26  0.25  0.83  0.09  0.09  0.23  0.76  0.33  0.30  0.53 ]
[ 0.60  0.30  0.09  0.44  0.04  0.22  0.10  0.21  0.58  0.49  0.05  0.62 ]
[ 0.67  0.73  0.27  0.87  0.55  0.72  0.88  0.83  0.48  0.15  0.72  0.74 ]
[ 0.80  1.00  0.83  0.99  0.96  0.71  0.95  1.00  0.81  0.97  1.00  0.73 ]
[ 0.98  0.96  0.98  0.37  0.96  0.15  0.74  0.74  0.99  0.61  0.88  0.95 ]
[ 0.30  0.91  0.95  0.83  0.71  0.05  0.92  0.69  0.71  0.92  0.21  0.72 ]
[ 0.98  0.84  0.81  0.45  0.99  0.21  0.76  0.47  0.93  0.47  0.98  0.13 ]
[ 0.94  0.80  0.88  0.43  0.75  0.67  0.78  0.03  0.96  0.75  0.92  0.98 ]
[ 0.57  0.90  0.81  0.96  0.99  0.62  0.97  0.05  0.20  0.48  0.74  0.60 ]
[ 0.78  0.47  0.88  0.85  0.88  0.72  0.95  0.98  0.16  0.92  0.03  0.11 ]
[ 0.95  0.92  0.32  0.10  0.45  1.00  0.97  0.98  0.08  0.71  0.56  0.83 ]
[ 0.08  0.29  0.99  0.56  0.96  0.92  0.73  0.66  0.68  0.85  0.97  0.89 ]
[ 0.73  0.18  0.63  0.10  0.27  0.78  0.80  0.97  0.16  0.10  0.69  0.96 ]
[ 0.77  0.23  0.93  0.05  0.98  0.53  0.96  0.68  0.14  0.41  0.56  0.04 ]
[ 0.82  0.87  0.48  0.12  0.55  0.07  0.91  0.97  0.79  0.35  0.23  0.26 ]
[ 0.08  1.00  0.99  0.65  0.36  0.74  0.77  0.45  0.97  0.52  0.54  0.98 ]
[ 0.99  0.95  0.05  0.99  0.96  0.69  0.99  0.81  0.90  0.71  0.99  0.99 ]
[ 1.00  0.96  1.00  0.79  0.93  0.99  0.79  0.99  0.95  0.99  0.98  0.99 ]
[ 0.99  0.88  0.98  0.92  0.97  0.87  1.00  0.98  0.91  0.99  0.93  0.69 ]
[ 0.98  1.00  0.83  0.97  0.97  0.87  0.96  0.96  0.98  0.97  0.83  0.28 ]
[ 0.97  1.00  0.98  0.84  0.91  0.98  0.97  0.97  0.99  0.97  0.66  0.94 ]
[ 0.93  0.97  1.00  0.94  0.98  0.99  0.96  0.99  0.93  0.95  0.90  0.72 ]
[ 0.99  0.73  0.98  0.93  0.95  0.93  1.00  0.17  0.93  0.95  0.97  0.54 ]
[ 0.98  1.00  0.49  0.82  0.95  0.92  0.97  0.95  0.98  0.82  0.92  0.99 ]
[ 0.18  1.00  0.67  0.98  0.98  0.98  0.85  0.59  0.91  0.51  0.98  0.99 ]
[ 0.61  0.98  0.99  0.99  1.00  0.90  0.81  0.93  0.93  0.84  0.95  0.97 ]
[ 0.84  0.89  0.74  0.95  0.95  0.98  0.74  0.95  1.00  0.65  0.99  0.91 ]
[ 1.00  0.98  0.94  0.54  0.98  0.98  0.73  0.96  0.85  0.94  1.00  0.83 ]

11/08 05:53:18 PM | === Batch 19/200
11/08 05:53:19 PM | loss = 0.420 + 0.056 + 0.060 = 0.536
11/08 05:53:22 PM | attribution_score[0:12]: 
[ 0.05  0.97  0.98  0.98  0.46  0.98  0.95  0.14  0.99  0.98  0.15  0.98 ]
[ 0.97  0.89  0.90  0.99  0.61  0.99  0.20  0.95  0.96  0.93  0.78  0.97 ]
[ 0.86  0.04  0.86  0.32  0.79  0.05  0.15  0.65  0.91  0.95  0.52  0.98 ]
[ 0.85  0.90  0.97  0.99  0.97  0.97  0.95  0.99  0.98  0.77  0.97  0.30 ]
[ 0.94  0.99  0.93  0.93  0.96  0.93  0.31  0.69  0.95  0.55  0.83  0.94 ]
[ 0.96  0.90  0.94  0.05  0.94  0.99  0.93  0.91  0.95  0.95  0.05  0.05 ]
[ 0.79  0.41  0.75  0.64  0.95  0.91  0.85  0.66  0.85  0.96  0.69  0.91 ]
[ 0.04  0.97  0.95  0.86  0.86  0.51  0.85  0.80  0.91  0.70  0.80  0.61 ]
[ 0.56  0.41  0.87  0.99  0.92  0.82  0.83  0.89  0.70  0.25  0.25  0.29 ]
[ 0.86  0.95  0.98  0.78  0.97  0.15  0.63  0.49  0.28  0.45  0.90  0.25 ]
[ 0.28  0.12  0.21  0.09  0.03  0.12  0.24  0.15  0.34  0.12  0.19  0.76 ]
[ 0.86  0.61  0.25  0.25  0.83  0.08  0.09  0.22  0.76  0.34  0.29  0.54 ]
[ 0.61  0.30  0.08  0.46  0.04  0.20  0.10  0.21  0.58  0.49  0.05  0.62 ]
[ 0.70  0.68  0.26  0.88  0.58  0.76  0.89  0.84  0.52  0.14  0.72  0.74 ]
[ 0.80  1.00  0.85  0.99  0.96  0.76  0.95  1.00  0.82  0.97  1.00  0.77 ]
[ 0.98  0.96  0.99  0.41  0.96  0.14  0.79  0.75  0.99  0.64  0.89  0.95 ]
[ 0.32  0.92  0.95  0.85  0.74  0.04  0.92  0.70  0.73  0.93  0.21  0.73 ]
[ 0.98  0.86  0.82  0.47  0.99  0.22  0.80  0.48  0.94  0.51  0.98  0.12 ]
[ 0.94  0.80  0.90  0.43  0.75  0.70  0.82  0.03  0.96  0.74  0.91  0.98 ]
[ 0.59  0.91  0.84  0.97  0.99  0.66  0.97  0.04  0.23  0.51  0.77  0.60 ]
[ 0.81  0.50  0.89  0.87  0.89  0.76  0.96  0.98  0.16  0.93  0.03  0.11 ]
[ 0.96  0.92  0.34  0.10  0.48  1.00  0.97  0.99  0.09  0.72  0.55  0.85 ]
[ 0.07  0.29  0.99  0.57  0.96  0.93  0.71  0.64  0.70  0.86  0.97  0.91 ]
[ 0.75  0.18  0.62  0.10  0.30  0.82  0.80  0.97  0.16  0.11  0.73  0.96 ]
[ 0.77  0.24  0.94  0.04  0.98  0.53  0.96  0.70  0.15  0.42  0.55  0.04 ]
[ 0.84  0.87  0.50  0.13  0.58  0.06  0.92  0.97  0.79  0.35  0.25  0.24 ]
[ 0.07  1.00  0.99  0.69  0.40  0.74  0.77  0.49  0.97  0.48  0.54  0.98 ]
[ 0.99  0.95  0.05  0.99  0.96  0.71  0.99  0.83  0.92  0.68  0.99  0.99 ]
[ 1.00  0.95  1.00  0.81  0.94  0.99  0.82  0.99  0.97  0.99  0.98  0.99 ]
[ 0.99  0.88  0.98  0.92  0.98  0.89  1.00  0.98  0.92  0.99  0.94  0.66 ]
[ 0.98  1.00  0.87  0.97  0.97  0.88  0.97  0.97  0.98  0.96  0.83  0.29 ]
[ 0.97  1.00  0.98  0.85  0.92  0.98  0.97  0.97  0.99  0.97  0.64  0.95 ]
[ 0.94  0.97  1.00  0.94  0.98  0.99  0.96  0.99  0.93  0.95  0.91  0.72 ]
[ 0.99  0.76  0.98  0.93  0.95  0.94  1.00  0.18  0.94  0.96  0.98  0.57 ]
[ 0.98  1.00  0.49  0.84  0.96  0.92  0.97  0.95  0.98  0.83  0.92  0.99 ]
[ 0.18  1.00  0.67  0.98  0.98  0.98  0.86  0.63  0.91  0.59  0.98  0.99 ]
[ 0.64  0.98  0.99  0.99  1.00  0.90  0.83  0.94  0.94  0.86  0.96  0.97 ]
[ 0.86  0.91  0.75  0.95  0.95  0.98  0.71  0.95  1.00  0.65  1.00  0.92 ]
[ 1.00  0.98  0.94  0.54  0.98  0.98  0.74  0.96  0.85  0.94  1.00  0.82 ]

11/08 05:53:22 PM | === Batch 20/200
11/08 05:53:24 PM | loss = 0.473 + 0.057 + 0.058 = 0.587
11/08 05:53:27 PM | === Batch 21/200
11/08 05:53:28 PM | loss = 0.657 + 0.095 + 0.057 = 0.808
11/08 05:53:31 PM | === Batch 22/200
11/08 05:53:33 PM | loss = 0.433 + 0.090 + 0.055 = 0.578
11/08 05:53:36 PM | === Batch 23/200
11/08 05:53:37 PM | loss = 0.321 + 0.039 + 0.054 = 0.414
11/08 05:53:40 PM | === Batch 24/200
11/08 05:53:42 PM | loss = 0.423 + 0.063 + 0.053 = 0.539
11/08 05:53:45 PM | === Batch 25/200
11/08 05:53:46 PM | loss = 0.229 + 0.067 + 0.052 = 0.349
11/08 05:53:49 PM | === Batch 26/200
11/08 05:53:51 PM | loss = 0.309 + 0.015 + 0.051 = 0.375
11/08 05:53:54 PM | === Batch 27/200
11/08 05:53:55 PM | loss = 0.358 + 0.035 + 0.050 = 0.443
11/08 05:53:58 PM | === Batch 28/200
11/08 05:54:00 PM | loss = 0.220 + 0.012 + 0.049 = 0.281
11/08 05:54:03 PM | === Batch 29/200
11/08 05:54:04 PM | loss = 0.565 + 0.063 + 0.048 = 0.676
11/08 05:54:08 PM | === Batch 30/200
11/08 05:54:09 PM | loss = 0.315 + 0.049 + 0.047 = 0.410
11/08 05:54:12 PM | === Batch 31/200
11/08 05:54:14 PM | loss = 0.324 + 0.038 + 0.046 = 0.408
11/08 05:54:17 PM | === Batch 32/200
11/08 05:54:18 PM | loss = 0.327 + 0.069 + 0.045 = 0.440
11/08 05:54:21 PM | === Batch 33/200
11/08 05:54:22 PM | loss = 0.294 + 0.062 + 0.044 = 0.400
11/08 05:54:26 PM | === Batch 34/200
11/08 05:54:27 PM | loss = 0.444 + 0.019 + 0.044 = 0.507
11/08 05:54:30 PM | === Batch 35/200
11/08 05:54:31 PM | loss = 0.387 + 0.065 + 0.043 = 0.495
11/08 05:54:34 PM | === Batch 36/200
11/08 05:54:36 PM | loss = 0.453 + 0.068 + 0.042 = 0.563
11/08 05:54:39 PM | === Batch 37/200
11/08 05:54:40 PM | loss = 0.372 + 0.005 + 0.042 = 0.419
11/08 05:54:43 PM | === Batch 38/200
11/08 05:54:45 PM | loss = 0.413 + 0.030 + 0.041 = 0.483
11/08 05:54:48 PM | === Batch 39/200
11/08 05:54:49 PM | loss = 0.285 + 0.018 + 0.041 = 0.344
11/08 05:54:52 PM | === Batch 40/200
11/08 05:54:54 PM | loss = 0.327 + 0.029 + 0.040 = 0.396
11/08 05:54:57 PM | === Batch 41/200
11/08 05:54:58 PM | loss = 0.351 + 0.004 + 0.040 = 0.395
11/08 05:55:02 PM | === Batch 42/200
11/08 05:55:03 PM | loss = 0.421 + 0.070 + 0.039 = 0.530
11/08 05:55:06 PM | === Batch 43/200
11/08 05:55:08 PM | loss = 0.393 + 0.106 + 0.039 = 0.537
11/08 05:55:11 PM | === Batch 44/200
11/08 05:55:12 PM | loss = 0.236 + 0.102 + 0.038 = 0.376
11/08 05:55:15 PM | === Batch 45/200
11/08 05:55:17 PM | loss = 0.425 + 0.066 + 0.038 = 0.529
11/08 05:55:20 PM | === Batch 46/200
11/08 05:55:21 PM | loss = 0.315 + 0.001 + 0.037 = 0.354
11/08 05:55:24 PM | === Batch 47/200
11/08 05:55:25 PM | loss = 0.462 + 0.008 + 0.037 = 0.508
11/08 05:55:28 PM | === Batch 48/200
11/08 05:55:30 PM | loss = 0.434 + 0.043 + 0.036 = 0.514
11/08 05:55:33 PM | === Batch 49/200
11/08 05:55:34 PM | loss = 0.376 + 0.057 + 0.036 = 0.469
11/08 05:55:38 PM | === Batch 50/200
11/08 05:55:39 PM | loss = 0.420 + 0.040 + 0.036 = 0.496
11/08 05:55:42 PM | === Batch 51/200
11/08 05:55:44 PM | loss = 0.335 + 0.004 + 0.036 = 0.374
11/08 05:55:47 PM | === Batch 52/200
11/08 05:55:48 PM | loss = 0.282 + 0.011 + 0.036 = 0.328
11/08 05:55:51 PM | === Batch 53/200
11/08 05:55:53 PM | loss = 0.314 + 0.006 + 0.035 = 0.355
11/08 05:55:56 PM | === Batch 54/200
11/08 05:55:57 PM | loss = 0.371 + 0.036 + 0.035 = 0.442
11/08 05:56:00 PM | === Batch 55/200
11/08 05:56:02 PM | loss = 0.282 + 0.048 + 0.035 = 0.365
11/08 05:56:05 PM | === Batch 56/200
11/08 05:56:06 PM | loss = 0.313 + 0.026 + 0.035 = 0.374
11/08 05:56:09 PM | === Batch 57/200
11/08 05:56:11 PM | loss = 0.520 + 0.026 + 0.035 = 0.581
11/08 05:56:14 PM | === Batch 58/200
11/08 05:56:15 PM | loss = 0.319 + 0.019 + 0.034 = 0.372
11/08 05:56:19 PM | === Batch 59/200
11/08 05:56:20 PM | loss = 0.279 + 0.036 + 0.034 = 0.349
11/08 05:56:23 PM | === Batch 60/200
11/08 05:56:24 PM | loss = 0.382 + 0.053 + 0.034 = 0.469
11/08 05:56:28 PM | === Batch 61/200
11/08 05:56:29 PM | loss = 0.348 + 0.045 + 0.033 = 0.426
11/08 05:56:32 PM | === Batch 62/200
11/08 05:56:34 PM | loss = 0.266 + 0.008 + 0.033 = 0.306
11/08 05:56:37 PM | === Batch 63/200
11/08 05:56:39 PM | loss = 0.430 + 0.065 + 0.033 = 0.527
11/08 05:56:42 PM | === Batch 64/200
11/08 05:56:43 PM | loss = 0.446 + 0.075 + 0.033 = 0.553
11/08 05:56:47 PM | === Batch 65/200
11/08 05:56:48 PM | loss = 0.266 + 0.030 + 0.032 = 0.329
11/08 05:56:51 PM | === Batch 66/200
11/08 05:56:53 PM | loss = 0.292 + 0.054 + 0.032 = 0.378
11/08 05:56:56 PM | === Batch 67/200
11/08 05:56:57 PM | loss = 0.441 + 0.096 + 0.032 = 0.568
11/08 05:57:01 PM | === Batch 68/200
11/08 05:57:02 PM | loss = 0.232 + 0.099 + 0.032 = 0.363
11/08 05:57:05 PM | === Batch 69/200
11/08 05:57:07 PM | loss = 0.216 + 0.073 + 0.032 = 0.321
11/08 05:57:10 PM | === Batch 70/200
11/08 05:57:11 PM | loss = 0.383 + 0.021 + 0.032 = 0.436
11/08 05:57:15 PM | === Batch 71/200
11/08 05:57:16 PM | loss = 0.481 + 0.064 + 0.032 = 0.577
11/08 05:57:19 PM | === Batch 72/200
11/08 05:57:20 PM | loss = 0.347 + 0.083 + 0.031 = 0.462
11/08 05:57:24 PM | === Batch 73/200
11/08 05:57:25 PM | loss = 0.262 + 0.043 + 0.031 = 0.336
11/08 05:57:28 PM | === Batch 74/200
11/08 05:57:30 PM | loss = 0.345 + 0.041 + 0.030 = 0.416
11/08 05:57:33 PM | === Batch 75/200
11/08 05:57:34 PM | loss = 0.244 + 0.088 + 0.029 = 0.361
11/08 05:57:38 PM | === Batch 76/200
11/08 05:57:39 PM | loss = 0.246 + 0.103 + 0.029 = 0.377
11/08 05:57:42 PM | === Batch 77/200
11/08 05:57:44 PM | loss = 0.525 + 0.093 + 0.028 = 0.647
11/08 05:57:47 PM | === Batch 78/200
11/08 05:57:48 PM | loss = 0.188 + 0.059 + 0.028 = 0.276
11/08 05:57:52 PM | === Batch 79/200
11/08 05:57:53 PM | loss = 0.298 + 0.004 + 0.028 = 0.330
11/08 05:57:56 PM | === Batch 80/200
11/08 05:57:58 PM | loss = 0.336 + 0.082 + 0.028 = 0.446
11/08 05:58:01 PM | === Batch 81/200
11/08 05:58:02 PM | loss = 0.285 + 0.112 + 0.028 = 0.424
11/08 05:58:05 PM | === Batch 82/200
11/08 05:58:07 PM | loss = 0.250 + 0.093 + 0.027 = 0.370
11/08 05:58:10 PM | === Batch 83/200
11/08 05:58:11 PM | loss = 0.499 + 0.029 + 0.027 = 0.556
11/08 05:58:15 PM | === Batch 84/200
11/08 05:58:16 PM | loss = 0.243 + 0.058 + 0.027 = 0.327
11/08 05:58:19 PM | === Batch 85/200
11/08 05:58:21 PM | loss = 0.263 + 0.106 + 0.026 = 0.395
11/08 05:58:24 PM | === Batch 86/200
11/08 05:58:25 PM | loss = 0.347 + 0.127 + 0.026 = 0.501
11/08 05:58:28 PM | === Batch 87/200
11/08 05:58:30 PM | loss = 0.143 + 0.121 + 0.026 = 0.290
11/08 05:58:33 PM | === Batch 88/200
11/08 05:58:35 PM | loss = 0.441 + 0.090 + 0.026 = 0.557
11/08 05:58:38 PM | === Batch 89/200
11/08 05:58:39 PM | loss = 0.183 + 0.039 + 0.026 = 0.248
11/08 05:58:42 PM | === Batch 90/200
11/08 05:58:44 PM | loss = 0.247 + 0.038 + 0.027 = 0.312
11/08 05:58:47 PM | === Batch 91/200
11/08 05:58:48 PM | loss = 0.294 + 0.069 + 0.027 = 0.390
11/08 05:58:51 PM | === Batch 92/200
11/08 05:58:52 PM | loss = 0.264 + 0.049 + 0.027 = 0.340
11/08 05:58:56 PM | === Batch 93/200
11/08 05:58:57 PM | loss = 0.448 + 0.014 + 0.026 = 0.488
11/08 05:59:00 PM | === Batch 94/200
11/08 05:59:01 PM | loss = 0.372 + 0.043 + 0.026 = 0.441
11/08 05:59:04 PM | === Batch 95/200
11/08 05:59:06 PM | loss = 0.376 + 0.051 + 0.025 = 0.452
11/08 05:59:09 PM | === Batch 96/200
11/08 05:59:10 PM | loss = 0.150 + 0.038 + 0.025 = 0.212
11/08 05:59:13 PM | === Batch 97/200
11/08 05:59:15 PM | loss = 0.232 + 0.006 + 0.025 = 0.263
11/08 05:59:18 PM | === Batch 98/200
11/08 05:59:19 PM | loss = 0.250 + 0.055 + 0.024 = 0.330
11/08 05:59:22 PM | === Batch 99/200
11/08 05:59:24 PM | loss = 0.382 + 0.069 + 0.024 = 0.475
11/08 05:59:27 PM | === Batch 100/200
11/08 05:59:28 PM | loss = 0.450 + 0.038 + 0.024 = 0.512
11/08 05:59:31 PM | attribution_score[0:12]: 
[ 0.01  1.00  0.99  0.98  0.28  0.99  0.99  0.85  0.99  0.99  0.02  0.99 ]
[ 0.98  0.98  0.97  1.00  0.18  0.99  0.02  0.98  0.98  0.96  0.82  0.97 ]
[ 0.94  0.00  0.94  0.13  0.13  0.01  0.01  0.94  0.95  0.97  0.04  1.00 ]
[ 0.66  0.97  0.99  1.00  0.98  0.99  0.97  1.00  0.99  0.59  0.99  0.06 ]
[ 0.98  1.00  0.94  0.96  0.99  0.97  0.03  0.90  0.98  0.08  0.60  0.99 ]
[ 0.98  0.89  0.98  0.01  0.97  0.99  0.95  0.97  0.97  0.98  0.01  0.01 ]
[ 0.83  0.09  0.80  0.79  0.96  0.96  0.97  0.82  0.93  0.99  0.86  0.98 ]
[ 0.00  0.99  0.98  0.92  0.81  0.04  0.84  0.97  0.96  0.94  0.95  0.56 ]
[ 0.72  0.03  0.97  1.00  0.93  0.67  0.92  0.98  0.90  0.06  0.16  0.08 ]
[ 0.97  0.98  0.98  0.82  0.98  0.01  0.10  0.35  0.04  0.06  0.98  0.06 ]
[ 0.02  0.01  0.07  0.01  0.01  0.02  0.03  0.15  0.90  0.02  0.05  0.93 ]
[ 0.78  0.16  0.03  0.05  0.97  0.01  0.01  0.03  0.94  0.10  0.03  0.79 ]
[ 0.40  0.03  0.01  0.13  0.01  0.10  0.01  0.04  0.76  0.26  0.01  0.80 ]
[ 0.96  0.32  0.01  0.91  0.89  0.92  0.91  0.17  0.14  0.04  0.64  0.85 ]
[ 0.93  1.00  0.98  0.99  0.99  0.93  0.98  1.00  0.74  0.97  1.00  0.99 ]
[ 1.00  0.95  1.00  0.92  0.98  0.06  0.97  0.98  1.00  0.94  0.91  0.99 ]
[ 0.05  0.98  0.97  0.97  0.96  0.01  0.80  0.80  0.98  0.99  0.91  0.79 ]
[ 0.99  0.91  0.94  0.93  1.00  0.10  0.92  0.14  1.00  0.90  1.00  0.07 ]
[ 0.90  0.07  0.99  0.06  0.89  0.96  0.99  0.01  0.98  0.84  0.98  0.99 ]
[ 0.90  0.94  0.96  0.99  1.00  0.17  0.99  0.01  0.45  0.94  0.92  0.85 ]
[ 0.98  0.57  0.98  0.99  0.99  0.98  0.98  0.98  0.02  0.99  0.01  0.05 ]
[ 0.99  0.97  0.80  0.02  0.07  1.00  1.00  0.99  0.83  0.27  0.96  0.90 ]
[ 0.04  0.02  1.00  0.34  0.99  0.98  0.13  0.93  0.98  0.92  0.98  0.98 ]
[ 0.98  0.08  0.92  0.05  0.05  0.99  0.84  0.99  0.04  0.93  0.94  0.99 ]
[ 0.97  0.10  0.98  0.01  0.99  0.75  0.99  0.09  0.98  0.06  0.16  0.00 ]
[ 0.96  0.30  0.97  0.04  0.59  0.01  0.96  0.99  0.94  0.02  0.35  0.31 ]
[ 0.01  1.00  1.00  0.96  0.94  0.98  0.61  0.44  0.98  0.02  0.03  0.99 ]
[ 1.00  0.99  0.04  1.00  0.99  0.92  1.00  0.69  1.00  0.94  1.00  1.00 ]
[ 1.00  0.99  0.99  0.99  0.99  1.00  0.99  1.00  1.00  1.00  0.99  1.00 ]
[ 1.00  0.98  1.00  0.91  0.99  1.00  1.00  0.99  0.99  1.00  1.00  0.95 ]
[ 0.98  1.00  0.96  0.99  0.99  0.98  1.00  1.00  1.00  1.00  0.97  0.34 ]
[ 1.00  1.00  1.00  0.95  0.98  0.99  1.00  0.98  1.00  0.99  0.95  1.00 ]
[ 0.99  0.99  1.00  0.99  1.00  0.99  0.99  1.00  0.87  0.99  0.98  0.86 ]
[ 1.00  0.99  1.00  0.99  0.96  0.99  1.00  0.88  0.98  0.98  0.99  0.32 ]
[ 0.99  0.99  0.92  0.87  0.99  0.99  0.98  0.99  0.99  0.99  0.96  1.00 ]
[ 0.95  1.00  0.90  0.99  1.00  0.99  0.98  0.95  0.87  0.99  0.99  1.00 ]
[ 0.97  0.98  1.00  1.00  1.00  0.96  0.96  0.99  0.96  0.97  0.99  0.99 ]
[ 0.99  0.99  0.19  0.99  0.99  1.00  0.98  0.98  1.00  0.95  1.00  0.98 ]
[ 1.00  0.99  0.99  0.84  1.00  0.99  0.97  1.00  0.92  0.98  1.00  0.98 ]

11/08 05:59:31 PM | === Batch 101/200
11/08 05:59:33 PM | loss = 0.401 + 0.029 + 0.023 = 0.452
11/08 05:59:36 PM | === Batch 102/200
11/08 05:59:38 PM | loss = 0.157 + 0.061 + 0.023 = 0.240
11/08 05:59:41 PM | === Batch 103/200
11/08 05:59:42 PM | loss = 0.460 + 0.069 + 0.022 = 0.552
11/08 05:59:45 PM | === Batch 104/200
11/08 05:59:47 PM | loss = 0.226 + 0.056 + 0.022 = 0.304
11/08 05:59:50 PM | === Batch 105/200
11/08 05:59:51 PM | loss = 0.314 + 0.025 + 0.022 = 0.362
11/08 05:59:54 PM | === Batch 106/200
11/08 05:59:55 PM | loss = 0.239 + 0.027 + 0.022 = 0.288
11/08 05:59:58 PM | === Batch 107/200
11/08 06:00:00 PM | loss = 0.367 + 0.037 + 0.022 = 0.426
11/08 06:00:03 PM | === Batch 108/200
11/08 06:00:04 PM | loss = 0.321 + 0.009 + 0.022 = 0.352
11/08 06:00:07 PM | === Batch 109/200
11/08 06:00:09 PM | loss = 0.283 + 0.043 + 0.021 = 0.348
11/08 06:00:12 PM | === Batch 110/200
11/08 06:00:13 PM | loss = 0.338 + 0.073 + 0.021 = 0.432
11/08 06:00:16 PM | === Batch 111/200
11/08 06:00:18 PM | loss = 0.290 + 0.082 + 0.021 = 0.393
11/08 06:00:20 PM | === Batch 112/200
11/08 06:00:22 PM | loss = 0.306 + 0.074 + 0.021 = 0.401
11/08 06:00:25 PM | === Batch 113/200
11/08 06:00:26 PM | loss = 0.242 + 0.048 + 0.021 = 0.311
11/08 06:00:29 PM | === Batch 114/200
11/08 06:00:31 PM | loss = 0.211 + 0.007 + 0.021 = 0.239
11/08 06:00:34 PM | === Batch 115/200
11/08 06:00:35 PM | loss = 0.456 + 0.056 + 0.021 = 0.533
11/08 06:00:38 PM | === Batch 116/200
11/08 06:00:40 PM | loss = 0.290 + 0.080 + 0.021 = 0.390
11/08 06:00:43 PM | === Batch 117/200
11/08 06:00:44 PM | loss = 0.303 + 0.066 + 0.021 = 0.390
11/08 06:00:47 PM | === Batch 118/200
11/08 06:00:49 PM | loss = 0.252 + 0.018 + 0.021 = 0.291
11/08 06:00:52 PM | === Batch 119/200
11/08 06:00:53 PM | loss = 0.318 + 0.045 + 0.020 = 0.383
11/08 06:00:56 PM | === Batch 120/200
11/08 06:00:57 PM | loss = 0.186 + 0.082 + 0.020 = 0.288
11/08 06:01:00 PM | === Batch 121/200
11/08 06:01:02 PM | loss = 0.385 + 0.096 + 0.020 = 0.501
11/08 06:01:05 PM | === Batch 122/200
11/08 06:01:06 PM | loss = 0.369 + 0.094 + 0.020 = 0.483
11/08 06:01:09 PM | === Batch 123/200
11/08 06:01:11 PM | loss = 0.228 + 0.074 + 0.020 = 0.323
11/08 06:01:14 PM | === Batch 124/200
11/08 06:01:15 PM | loss = 0.271 + 0.038 + 0.020 = 0.329
11/08 06:01:18 PM | === Batch 125/200
11/08 06:01:20 PM | loss = 0.247 + 0.014 + 0.020 = 0.281
11/08 06:01:23 PM | === Batch 126/200
11/08 06:01:24 PM | loss = 0.434 + 0.035 + 0.020 = 0.489
11/08 06:01:27 PM | === Batch 127/200
11/08 06:01:28 PM | loss = 0.162 + 0.019 + 0.020 = 0.201
11/08 06:01:31 PM | === Batch 128/200
11/08 06:01:33 PM | loss = 0.200 + 0.021 + 0.020 = 0.241
11/08 06:01:36 PM | === Batch 129/200
11/08 06:01:37 PM | loss = 0.309 + 0.034 + 0.020 = 0.363
11/08 06:01:40 PM | === Batch 130/200
11/08 06:01:42 PM | loss = 0.134 + 0.028 + 0.020 = 0.181
11/08 06:01:45 PM | === Batch 131/200
11/08 06:01:46 PM | loss = 0.374 + 0.005 + 0.020 = 0.398
11/08 06:01:49 PM | === Batch 132/200
11/08 06:01:51 PM | loss = 0.407 + 0.040 + 0.020 = 0.467
11/08 06:01:54 PM | === Batch 133/200
11/08 06:01:55 PM | loss = 0.294 + 0.043 + 0.020 = 0.357
11/08 06:01:58 PM | === Batch 134/200
11/08 06:01:59 PM | loss = 0.271 + 0.012 + 0.020 = 0.302
11/08 06:02:03 PM | === Batch 135/200
11/08 06:02:04 PM | loss = 0.308 + 0.039 + 0.019 = 0.367
11/08 06:02:07 PM | === Batch 136/200
11/08 06:02:08 PM | loss = 0.342 + 0.065 + 0.019 = 0.426
11/08 06:02:11 PM | === Batch 137/200
11/08 06:02:13 PM | loss = 0.415 + 0.071 + 0.019 = 0.505
11/08 06:02:16 PM | === Batch 138/200
11/08 06:02:17 PM | loss = 0.197 + 0.058 + 0.019 = 0.273
11/08 06:02:20 PM | === Batch 139/200
11/08 06:02:22 PM | loss = 0.319 + 0.030 + 0.019 = 0.368
11/08 06:02:24 PM | === Batch 140/200
11/08 06:02:26 PM | loss = 0.201 + 0.016 + 0.019 = 0.236
11/08 06:02:29 PM | === Batch 141/200
11/08 06:02:30 PM | loss = 0.273 + 0.029 + 0.019 = 0.321
11/08 06:02:33 PM | === Batch 142/200
11/08 06:02:34 PM | loss = 0.397 + 0.004 + 0.019 = 0.420
11/08 06:02:37 PM | === Batch 143/200
11/08 06:02:39 PM | loss = 0.194 + 0.041 + 0.018 = 0.254
11/08 06:02:42 PM | === Batch 144/200
11/08 06:02:43 PM | loss = 0.330 + 0.067 + 0.018 = 0.415
11/08 06:02:46 PM | === Batch 145/200
11/08 06:02:47 PM | loss = 0.253 + 0.073 + 0.018 = 0.345
11/08 06:02:50 PM | === Batch 146/200
11/08 06:02:51 PM | loss = 0.322 + 0.065 + 0.018 = 0.405
11/08 06:02:54 PM | === Batch 147/200
11/08 06:02:56 PM | loss = 0.161 + 0.041 + 0.018 = 0.220
11/08 06:02:59 PM | === Batch 148/200
11/08 06:03:00 PM | loss = 0.193 + 0.004 + 0.018 = 0.216
11/08 06:03:03 PM | === Batch 149/200
11/08 06:03:04 PM | loss = 0.242 + 0.056 + 0.018 = 0.317
11/08 06:03:07 PM | === Batch 150/200
11/08 06:03:09 PM | loss = 0.448 + 0.079 + 0.018 = 0.546
11/08 06:03:11 PM | === Batch 151/200
11/08 06:03:13 PM | loss = 0.529 + 0.071 + 0.018 = 0.619
11/08 06:03:16 PM | === Batch 152/200
11/08 06:03:17 PM | loss = 0.415 + 0.032 + 0.018 = 0.465
11/08 06:03:20 PM | === Batch 153/200
11/08 06:03:21 PM | loss = 0.235 + 0.033 + 0.018 = 0.287
11/08 06:03:24 PM | === Batch 154/200
11/08 06:03:26 PM | loss = 0.351 + 0.070 + 0.018 = 0.439
11/08 06:03:28 PM | === Batch 155/200
11/08 06:03:30 PM | loss = 0.281 + 0.086 + 0.018 = 0.384
11/08 06:03:33 PM | === Batch 156/200
11/08 06:03:34 PM | loss = 0.325 + 0.082 + 0.018 = 0.425
11/08 06:03:37 PM | === Batch 157/200
11/08 06:03:38 PM | loss = 0.239 + 0.062 + 0.018 = 0.319
11/08 06:03:41 PM | === Batch 158/200
11/08 06:03:43 PM | loss = 0.144 + 0.030 + 0.018 = 0.191
11/08 06:03:46 PM | === Batch 159/200
11/08 06:03:47 PM | loss = 0.354 + 0.020 + 0.018 = 0.392
11/08 06:03:50 PM | === Batch 160/200
11/08 06:03:51 PM | loss = 0.196 + 0.041 + 0.018 = 0.255
11/08 06:03:54 PM | === Batch 161/200
11/08 06:03:55 PM | loss = 0.379 + 0.027 + 0.017 = 0.424
11/08 06:03:58 PM | === Batch 162/200
11/08 06:04:00 PM | loss = 0.248 + 0.013 + 0.017 = 0.278
11/08 06:04:03 PM | === Batch 163/200
11/08 06:04:04 PM | loss = 0.163 + 0.030 + 0.017 = 0.211
11/08 06:04:07 PM | === Batch 164/200
11/08 06:04:08 PM | loss = 0.296 + 0.033 + 0.017 = 0.345
11/08 06:04:11 PM | === Batch 165/200
11/08 06:04:13 PM | loss = 0.147 + 0.021 + 0.017 = 0.185
11/08 06:04:15 PM | === Batch 166/200
11/08 06:04:17 PM | loss = 0.347 + 0.002 + 0.017 = 0.365
11/08 06:04:20 PM | === Batch 167/200
11/08 06:04:21 PM | loss = 0.287 + 0.002 + 0.016 = 0.305
11/08 06:04:24 PM | === Batch 168/200
11/08 06:04:25 PM | loss = 0.243 + 0.008 + 0.016 = 0.267
11/08 06:04:28 PM | === Batch 169/200
11/08 06:04:29 PM | loss = 0.235 + 0.009 + 0.016 = 0.260
11/08 06:04:32 PM | === Batch 170/200
11/08 06:04:34 PM | loss = 0.425 + 0.009 + 0.016 = 0.450
11/08 06:04:37 PM | === Batch 171/200
11/08 06:04:38 PM | loss = 0.245 + 0.005 + 0.016 = 0.266
11/08 06:04:41 PM | === Batch 172/200
11/08 06:04:42 PM | loss = 0.248 + 0.004 + 0.016 = 0.269
11/08 06:04:45 PM | === Batch 173/200
11/08 06:04:47 PM | loss = 0.270 + 0.005 + 0.016 = 0.291
11/08 06:04:49 PM | === Batch 174/200
11/08 06:04:51 PM | loss = 0.288 + 0.010 + 0.016 = 0.314
11/08 06:04:54 PM | === Batch 175/200
11/08 06:04:55 PM | loss = 0.291 + 0.008 + 0.016 = 0.315
11/08 06:04:58 PM | === Batch 176/200
11/08 06:04:59 PM | loss = 0.294 + 0.011 + 0.016 = 0.322
11/08 06:05:02 PM | === Batch 177/200
11/08 06:05:04 PM | loss = 0.537 + 0.001 + 0.016 = 0.553
11/08 06:05:07 PM | === Batch 178/200
11/08 06:05:08 PM | loss = 0.178 + 0.004 + 0.016 = 0.197
11/08 06:05:11 PM | === Batch 179/200
11/08 06:05:12 PM | loss = 0.281 + 0.015 + 0.016 = 0.312
11/08 06:05:15 PM | === Batch 180/200
11/08 06:05:16 PM | loss = 0.211 + 0.017 + 0.016 = 0.244
11/08 06:05:19 PM | === Batch 181/200
11/08 06:05:21 PM | loss = 0.329 + 0.005 + 0.016 = 0.350
11/08 06:05:24 PM | === Batch 182/200
11/08 06:05:25 PM | loss = 0.279 + 0.023 + 0.016 = 0.318
11/08 06:05:28 PM | === Batch 183/200
11/08 06:05:29 PM | loss = 0.549 + 0.022 + 0.015 = 0.586
11/08 06:05:32 PM | === Batch 184/200
11/08 06:05:33 PM | loss = 0.373 + 0.008 + 0.015 = 0.397
11/08 06:05:36 PM | === Batch 185/200
11/08 06:05:38 PM | loss = 0.280 + 0.022 + 0.015 = 0.317
11/08 06:05:41 PM | === Batch 186/200
11/08 06:05:42 PM | loss = 0.308 + 0.023 + 0.015 = 0.346
11/08 06:05:45 PM | === Batch 187/200
11/08 06:05:46 PM | loss = 0.358 + 0.011 + 0.015 = 0.384
11/08 06:05:49 PM | === Batch 188/200
11/08 06:05:50 PM | loss = 0.350 + 0.013 + 0.015 = 0.378
11/08 06:05:53 PM | === Batch 189/200
11/08 06:05:55 PM | loss = 0.318 + 0.010 + 0.015 = 0.343
11/08 06:05:58 PM | === Batch 190/200
11/08 06:05:59 PM | loss = 0.346 + 0.014 + 0.015 = 0.375
11/08 06:06:02 PM | === Batch 191/200
11/08 06:06:03 PM | loss = 0.506 + 0.019 + 0.015 = 0.540
11/08 06:06:06 PM | === Batch 192/200
11/08 06:06:07 PM | loss = 0.314 + 0.009 + 0.015 = 0.339
11/08 06:06:10 PM | === Batch 193/200
11/08 06:06:12 PM | loss = 0.340 + 0.019 + 0.015 = 0.374
11/08 06:06:15 PM | === Batch 194/200
11/08 06:06:16 PM | loss = 0.288 + 0.017 + 0.015 = 0.321
11/08 06:06:19 PM | === Batch 195/200
11/08 06:06:20 PM | loss = 0.210 + 0.008 + 0.015 = 0.233
11/08 06:06:23 PM | === Batch 196/200
11/08 06:06:25 PM | loss = 0.248 + 0.014 + 0.015 = 0.278
11/08 06:06:27 PM | === Batch 197/200
11/08 06:06:29 PM | loss = 0.322 + 0.007 + 0.015 = 0.344
11/08 06:06:32 PM | === Batch 198/200
11/08 06:06:33 PM | loss = 0.286 + 0.016 + 0.015 = 0.317
11/08 06:06:36 PM | === Batch 199/200
11/08 06:06:37 PM | loss = 0.145 + 0.005 + 0.015 = 0.165
11/08 06:06:40 PM | === Batch 200/200
11/08 06:06:42 PM | loss = 0.209 + 0.026 + 0.015 = 0.250
11/08 06:06:45 PM | attribution_score[0:12]: 
[ 0.00  1.00  1.00  0.99  0.53  0.99  0.99  0.95  1.00  0.99  0.01  1.00 ]
[ 0.98  0.99  0.98  1.00  0.35  1.00  0.01  0.99  0.98  0.99  0.83  0.95 ]
[ 0.87  0.00  0.98  0.12  0.07  0.00  0.01  0.96  0.96  0.99  0.02  1.00 ]
[ 0.94  0.98  0.98  1.00  0.98  1.00  0.98  1.00  0.99  0.76  1.00  0.02 ]
[ 0.99  1.00  0.88  0.98  0.99  0.99  0.02  0.95  0.99  0.03  0.19  0.99 ]
[ 0.99  0.95  0.99  0.00  0.99  1.00  0.98  0.97  0.99  0.99  0.00  0.00 ]
[ 0.27  0.03  0.96  0.88  0.98  0.97  0.98  0.09  0.97  0.99  0.89  0.99 ]
[ 0.00  0.99  0.99  0.94  0.81  0.01  0.78  0.98  0.98  0.98  0.98  0.12 ]
[ 0.93  0.01  0.99  1.00  0.98  0.91  0.94  0.96  0.97  0.02  0.04  0.06 ]
[ 0.88  0.99  0.99  0.93  0.99  0.01  0.14  0.04  0.02  0.03  0.98  0.02 ]
[ 0.01  0.01  0.03  0.01  0.00  0.02  0.01  0.25  0.96  0.01  0.03  0.96 ]
[ 0.93  0.06  0.01  0.03  0.98  0.00  0.01  0.01  0.95  0.04  0.01  0.94 ]
[ 0.66  0.03  0.01  0.28  0.00  0.68  0.01  0.01  0.88  0.22  0.00  0.75 ]
[ 0.97  0.06  0.01  0.98  0.83  0.97  0.98  0.03  0.06  0.02  0.48  0.87 ]
[ 0.99  1.00  0.99  0.99  0.99  0.99  0.99  1.00  0.98  1.00  1.00  1.00 ]
[ 1.00  0.99  1.00  0.86  0.99  0.05  0.98  0.98  1.00  0.98  0.99  1.00 ]
[ 0.06  0.99  0.99  0.99  0.98  0.00  0.98  0.86  0.98  0.99  0.96  0.88 ]
[ 0.99  0.98  0.99  0.96  1.00  0.08  0.98  0.06  1.00  0.96  1.00  0.08 ]
[ 0.10  0.03  0.99  0.11  0.08  0.99  0.99  0.00  0.99  0.81  0.98  0.99 ]
[ 0.99  0.17  0.98  0.98  0.99  0.03  1.00  0.05  0.99  0.93  0.98  0.85 ]
[ 0.98  0.92  0.99  0.99  0.99  0.95  0.99  1.00  0.01  0.97  0.01  0.03 ]
[ 1.00  0.96  0.88  0.01  0.03  1.00  1.00  0.99  0.96  0.26  0.97  0.91 ]
[ 0.01  0.01  1.00  0.35  1.00  0.96  0.12  0.77  0.99  0.96  0.99  0.99 ]
[ 0.98  0.01  0.89  0.06  0.13  0.99  0.97  0.99  0.02  0.96  0.98  0.99 ]
[ 0.93  0.02  0.84  0.00  1.00  0.81  0.99  0.05  0.99  0.02  0.21  0.00 ]
[ 0.99  0.08  0.98  0.02  0.85  0.00  0.97  0.99  0.97  0.01  0.91  0.54 ]
[ 0.00  1.00  1.00  0.99  0.92  0.97  0.54  0.89  0.99  0.08  0.03  0.99 ]
[ 1.00  0.99  0.01  1.00  0.97  0.93  1.00  0.96  1.00  0.99  1.00  1.00 ]
[ 1.00  1.00  1.00  1.00  0.99  1.00  0.99  1.00  1.00  1.00  1.00  1.00 ]
[ 1.00  0.95  1.00  0.97  1.00  1.00  1.00  1.00  0.99  1.00  1.00  0.96 ]
[ 1.00  1.00  0.98  0.99  1.00  0.99  1.00  1.00  1.00  1.00  0.99  0.81 ]
[ 1.00  1.00  1.00  0.97  0.98  1.00  1.00  1.00  1.00  1.00  0.97  1.00 ]
[ 0.99  0.99  1.00  1.00  1.00  0.99  0.99  1.00  0.96  0.99  0.99  0.96 ]
[ 1.00  0.99  1.00  0.99  0.97  1.00  1.00  0.96  0.98  0.97  0.99  0.13 ]
[ 1.00  1.00  0.97  0.90  1.00  0.98  0.99  0.99  1.00  0.99  0.94  1.00 ]
[ 0.98  1.00  0.78  1.00  1.00  0.99  0.97  0.98  0.94  1.00  0.99  1.00 ]
[ 0.98  1.00  1.00  1.00  1.00  0.98  0.98  0.99  0.98  0.98  0.99  0.98 ]
[ 0.99  0.99  0.86  0.99  1.00  1.00  0.99  0.99  1.00  0.98  1.00  0.99 ]
[ 1.00  1.00  0.99  0.94  1.00  0.99  0.98  1.00  0.94  0.99  1.00  0.99 ]

11/08 06:06:45 PM | ===
Best loss was 0.17 at iteration 199

11/08 06:06:45 PM | Looking for optimal threshold...
11/08 06:06:45 PM | Testing threshold 0.5
11/08 06:06:45 PM | Distance to target: 4,494,648
11/08 06:06:45 PM | Testing threshold 0.75
11/08 06:06:45 PM | Distance to target: 4,652,288
11/08 06:06:45 PM | Testing threshold 0.625
11/08 06:06:45 PM | Distance to target: 271,584
11/08 06:06:45 PM | Testing threshold 0.6875
11/08 06:06:45 PM | Distance to target: 1,914,216
11/08 06:06:45 PM | Testing threshold 0.65625
11/08 06:06:45 PM | Distance to target: 1,914,216
11/08 06:06:45 PM | Testing threshold 0.640625
11/08 06:06:45 PM | Distance to target: 137,880
11/08 06:06:45 PM | Testing threshold 0.6484375
11/08 06:06:45 PM | Distance to target: 137,880
11/08 06:06:45 PM | Testing threshold 0.65234375
11/08 06:06:45 PM | Distance to target: 888,168
11/08 06:06:45 PM | Testing threshold 0.650390625
11/08 06:06:45 PM | Distance to target: 888,168
11/08 06:06:45 PM | Testing threshold 0.6494140625
11/08 06:06:45 PM | Distance to target: 137,880
11/08 06:06:45 PM | Testing threshold 0.64990234375
11/08 06:06:45 PM | Distance to target: 137,880
11/08 06:06:45 PM | Testing threshold 0.650146484375
11/08 06:06:45 PM | Distance to target: 137,880
11/08 06:06:45 PM | Testing threshold 0.6502685546875
11/08 06:06:46 PM | Distance to target: 888,168
11/08 06:06:46 PM | Testing threshold 0.65020751953125
11/08 06:06:46 PM | Distance to target: 888,168
11/08 06:06:46 PM | Testing threshold 0.650177001953125
11/08 06:06:46 PM | Distance to target: 888,168
11/08 06:06:46 PM | Testing threshold 0.6501617431640625
11/08 06:06:46 PM | Distance to target: 888,168
11/08 06:06:46 PM | Testing threshold 0.6501541137695312
11/08 06:06:46 PM | Distance to target: 888,168
11/08 06:06:46 PM | Testing threshold 0.6501502990722656
11/08 06:06:46 PM | Distance to target: 888,168
11/08 06:06:46 PM | Testing threshold 0.6501483917236328
11/08 06:06:46 PM | Distance to target: 888,168
11/08 06:06:46 PM | Testing threshold 0.6501474380493164
11/08 06:06:46 PM | Distance to target: 137,880
11/08 06:06:46 PM | Testing threshold 0.6501479148864746
11/08 06:06:46 PM | Distance to target: 888,168
11/08 06:06:46 PM | Testing threshold 0.6501476764678955
11/08 06:06:46 PM | Distance to target: 888,168
11/08 06:06:46 PM | Testing threshold 0.650147557258606
11/08 06:06:46 PM | Distance to target: 137,880
11/08 06:06:46 PM | Testing threshold 0.6501476168632507
11/08 06:06:46 PM | Distance to target: 888,168
11/08 06:06:46 PM | Testing threshold 0.6501475870609283
11/08 06:06:46 PM | Distance to target: 137,880
11/08 06:06:46 PM | Testing threshold 0.6501476019620895
11/08 06:06:46 PM | Distance to target: 137,880
11/08 06:06:46 PM | Testing threshold 0.6501476094126701
11/08 06:06:46 PM | Distance to target: 137,880
11/08 06:06:46 PM | Testing threshold 0.6501476131379604
11/08 06:06:46 PM | Distance to target: 137,880
11/08 06:06:46 PM | Testing threshold 0.6501476150006056
11/08 06:06:46 PM | Distance to target: 137,880
11/08 06:06:46 PM | Testing threshold 0.6501476159319282
11/08 06:06:46 PM | Distance to target: 137,880
11/08 06:06:46 PM | Testing threshold 0.6501476163975894
11/08 06:06:47 PM | Distance to target: 137,880
11/08 06:06:47 PM | Testing threshold 0.6501476166304201
11/08 06:06:47 PM | Distance to target: 137,880
11/08 06:06:47 PM | Testing threshold 0.6501476167468354
11/08 06:06:47 PM | Distance to target: 137,880
11/08 06:06:47 PM | Testing threshold 0.6501476168050431
11/08 06:06:47 PM | Distance to target: 137,880
11/08 06:06:47 PM | Testing threshold 0.6501476168341469
11/08 06:06:47 PM | Distance to target: 137,880
11/08 06:06:47 PM | Testing threshold 0.6501476168486988
11/08 06:06:47 PM | Distance to target: 137,880
11/08 06:06:47 PM | Testing threshold 0.6501476168559748
11/08 06:06:47 PM | Distance to target: 137,880
11/08 06:06:47 PM | Testing threshold 0.6501476168596128
11/08 06:06:47 PM | Distance to target: 137,880
11/08 06:06:47 PM | Testing threshold 0.6501476168614317
11/08 06:06:47 PM | Distance to target: 137,880
11/08 06:06:47 PM | Testing threshold 0.6501476168623412
11/08 06:06:47 PM | Distance to target: 137,880
11/08 06:06:47 PM | Testing threshold 0.650147616862796
11/08 06:06:47 PM | Distance to target: 137,880
11/08 06:06:47 PM | Testing threshold 0.6501476168630234
11/08 06:06:47 PM | Distance to target: 137,880
11/08 06:06:47 PM | Testing threshold 0.650147616863137
11/08 06:06:47 PM | Distance to target: 137,880
11/08 06:06:47 PM | Testing threshold 0.6501476168631939
11/08 06:06:47 PM | Distance to target: 137,880
11/08 06:06:47 PM | Testing threshold 0.6501476168632223
11/08 06:06:47 PM | Distance to target: 137,880
11/08 06:06:47 PM | Testing threshold 0.6501476168632365
11/08 06:06:47 PM | Distance to target: 137,880
11/08 06:06:47 PM | Testing threshold 0.6501476168632436
11/08 06:06:47 PM | Distance to target: 137,880
11/08 06:06:47 PM | Testing threshold 0.6501476168632472
11/08 06:06:48 PM | Distance to target: 137,880
11/08 06:06:48 PM | Testing threshold 0.650147616863249
11/08 06:06:48 PM | Distance to target: 137,880
11/08 06:06:48 PM | Testing threshold 0.6501476168632498
11/08 06:06:48 PM | Distance to target: 137,880
11/08 06:06:53 PM | attribution_score[0:12]: 
[ 0.00  1.00  1.00  1.00  0.00  1.00  1.00  1.00  1.00  1.00  0.00  1.00 ]
[ 1.00  1.00  1.00  1.00  0.00  1.00  0.00  1.00  1.00  1.00  1.00  1.00 ]
[ 1.00  0.00  1.00  0.00  0.00  0.00  0.00  1.00  1.00  1.00  0.00  1.00 ]
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  0.00 ]
[ 1.00  1.00  1.00  1.00  1.00  1.00  0.00  1.00  1.00  0.00  0.00  1.00 ]
[ 1.00  1.00  1.00  0.00  1.00  1.00  1.00  1.00  1.00  1.00  0.00  0.00 ]
[ 0.00  0.00  1.00  1.00  1.00  1.00  1.00  0.00  1.00  1.00  1.00  1.00 ]
[ 0.00  1.00  1.00  1.00  1.00  0.00  1.00  1.00  1.00  1.00  1.00  0.00 ]
[ 1.00  0.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  0.00  0.00  0.00 ]
[ 1.00  1.00  1.00  1.00  1.00  0.00  0.00  0.00  0.00  0.00  1.00  0.00 ]
[ 0.00  0.00  0.00  0.00  0.00  0.00  0.00  0.00  1.00  0.00  0.00  1.00 ]
[ 1.00  0.00  0.00  0.00  1.00  0.00  0.00  0.00  1.00  0.00  0.00  1.00 ]
[ 1.00  0.00  0.00  0.00  0.00  1.00  0.00  0.00  1.00  0.00  0.00  1.00 ]
[ 1.00  0.00  0.00  1.00  1.00  1.00  1.00  0.00  0.00  0.00  0.00  1.00 ]
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 1.00  1.00  1.00  1.00  1.00  0.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.00  1.00  1.00  1.00  1.00  0.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 1.00  1.00  1.00  1.00  1.00  0.00  1.00  0.00  1.00  1.00  1.00  0.00 ]
[ 0.00  0.00  1.00  0.00  0.00  1.00  1.00  0.00  1.00  1.00  1.00  1.00 ]
[ 1.00  0.00  1.00  1.00  1.00  0.00  1.00  0.00  1.00  1.00  1.00  1.00 ]
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  0.00  1.00  0.00  0.00 ]
[ 1.00  1.00  1.00  0.00  0.00  1.00  1.00  1.00  1.00  0.00  1.00  1.00 ]
[ 0.00  0.00  1.00  0.00  1.00  1.00  0.00  1.00  1.00  1.00  1.00  1.00 ]
[ 1.00  0.00  1.00  0.00  0.00  1.00  1.00  1.00  0.00  1.00  1.00  1.00 ]
[ 1.00  0.00  1.00  0.00  1.00  1.00  1.00  0.00  1.00  0.00  0.00  0.00 ]
[ 1.00  0.00  1.00  0.00  1.00  0.00  1.00  1.00  1.00  0.00  1.00  0.00 ]
[ 0.00  1.00  1.00  1.00  1.00  1.00  0.00  1.00  1.00  0.00  0.00  1.00 ]
[ 1.00  1.00  0.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  0.00 ]
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]

11/08 06:06:53 PM | DenseNet(
  (conv1): Conv2d(3, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (dense1): Sequential(
    (0): DenseBasicBlock(
      (bn1): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(18, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (1): DenseBasicBlock(
      (bn1): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(28, 6, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (2): DenseBasicBlock(
      (bn1): BatchNorm2d(34, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(34, 11, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (3): DenseBasicBlock(
      (bn1): BatchNorm2d(45, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(45, 9, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (4): DenseBasicBlock(
      (bn1): BatchNorm2d(54, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(54, 9, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (5): DenseBasicBlock(
      (bn1): BatchNorm2d(63, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(63, 9, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (6): DenseBasicBlock(
      (bn1): BatchNorm2d(72, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(72, 9, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (7): DenseBasicBlock(
      (bn1): BatchNorm2d(81, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(81, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (8): DenseBasicBlock(
      (bn1): BatchNorm2d(89, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(89, 6, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (9): DenseBasicBlock(
      (bn1): BatchNorm2d(95, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(95, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (10): DenseBasicBlock(
      (bn1): BatchNorm2d(97, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(97, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (11): DenseBasicBlock(
      (bn1): BatchNorm2d(101, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(101, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
  )
  (trans1): Transition(
    (bn1): BatchNorm2d(105, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace=True)
    (conv1): Conv2d(105, 91, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
  )
  (dense2): Sequential(
    (0): DenseBasicBlock(
      (bn1): BatchNorm2d(91, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(91, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (1): DenseBasicBlock(
      (bn1): BatchNorm2d(103, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(103, 11, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (2): DenseBasicBlock(
      (bn1): BatchNorm2d(114, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(114, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (3): DenseBasicBlock(
      (bn1): BatchNorm2d(124, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(124, 9, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (4): DenseBasicBlock(
      (bn1): BatchNorm2d(133, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(133, 7, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (5): DenseBasicBlock(
      (bn1): BatchNorm2d(140, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(140, 9, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (6): DenseBasicBlock(
      (bn1): BatchNorm2d(149, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(149, 9, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (7): DenseBasicBlock(
      (bn1): BatchNorm2d(158, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(158, 9, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (8): DenseBasicBlock(
      (bn1): BatchNorm2d(167, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(167, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (9): DenseBasicBlock(
      (bn1): BatchNorm2d(175, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(175, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (10): DenseBasicBlock(
      (bn1): BatchNorm2d(183, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(183, 6, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (11): DenseBasicBlock(
      (bn1): BatchNorm2d(189, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(189, 7, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
  )
  (trans2): Transition(
    (bn1): BatchNorm2d(196, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace=True)
    (conv1): Conv2d(196, 225, kernel_size=(1, 1), stride=(1, 1), bias=False)
    (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
  )
  (dense3): Sequential(
    (0): DenseBasicBlock(
      (bn1): BatchNorm2d(225, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(225, 11, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (1): DenseBasicBlock(
      (bn1): BatchNorm2d(236, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(236, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (2): DenseBasicBlock(
      (bn1): BatchNorm2d(248, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(248, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (3): DenseBasicBlock(
      (bn1): BatchNorm2d(260, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(260, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (4): DenseBasicBlock(
      (bn1): BatchNorm2d(272, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(272, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (5): DenseBasicBlock(
      (bn1): BatchNorm2d(284, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(284, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (6): DenseBasicBlock(
      (bn1): BatchNorm2d(296, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(296, 11, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (7): DenseBasicBlock(
      (bn1): BatchNorm2d(307, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(307, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (8): DenseBasicBlock(
      (bn1): BatchNorm2d(319, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(319, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (9): DenseBasicBlock(
      (bn1): BatchNorm2d(331, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(331, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (10): DenseBasicBlock(
      (bn1): BatchNorm2d(343, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(343, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (11): DenseBasicBlock(
      (bn1): BatchNorm2d(355, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv1): Conv2d(355, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
  )
  (bn): BatchNorm2d(367, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (avgpool): AvgPool2d(kernel_size=8, stride=8, padding=0)
  (fc): Linear(in_features=367, out_features=10, bias=True)
)
11/08 06:06:55 PM | ----------------------------------------
11/08 06:06:55 PM | Performances input model:
11/08 06:06:55 PM |  - flops: 287,773,080
11/08 06:06:55 PM |  - params: 1,059,298
11/08 06:06:55 PM |  - accuracy: 94.80999755859375
11/08 06:06:55 PM | ----------------------------------------
11/08 06:06:55 PM | Performances pseudo-pruned model:
11/08 06:06:55 PM |  - flops: 287,773,080
11/08 06:06:55 PM |  - params: 1,059,298
11/08 06:06:55 PM |  - accuracy: 83.19999694824219
11/08 06:06:55 PM | ----------------------------------------
11/08 06:06:55 PM | Performances pruned model:
11/08 06:06:55 PM |  - flops: 128,247,877
11/08 06:06:55 PM |  - params: 618,090
11/08 06:06:55 PM |  - accuracy: 83.19999694824219
