01/29 03:20:24 AM | args = Namespace(output_dir='result/rebuttal/nb_epoch/vgg/nbbtchs60/seed_02', loaded_model_path='./checkpoints/cifar10/vgg_16_bn.pt', resume=False, test_only=False, mode='prune', batch_size=64, nb_batches=60, Mflops_target=None, lr=0.6, momentum=0.9, beta=6, gamma=0.4, gpu='0', num_workers=4, dataset='cifar10', arch='vgg_16_bn', save_plot=False, seed=2, lr_finetuning=0.02, epoch_finetuning=200, wd=0.002, data_dir='./data/cifar10/', print_freq=200, num_classes=10, device_ids=[0], device=device(type='cuda', index=0), name_base='')
01/29 03:20:29 AM | ----------------------------------------
01/29 03:20:29 AM | ==> Building model...
01/29 03:20:29 AM | ----------------------------------------
01/29 03:20:29 AM | ==> Loading weights into the model...
01/29 03:20:29 AM | ----------------------------------------
01/29 03:20:29 AM | VGG(
  (features): Sequential(
    (conv0): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm0): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu0): ReLU(inplace=True)
    (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu1): ReLU(inplace=True)
    (pool2): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (conv3): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu3): ReLU(inplace=True)
    (conv4): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm4): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu4): ReLU(inplace=True)
    (pool5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (conv6): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm6): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu6): ReLU(inplace=True)
    (conv7): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm7): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu7): ReLU(inplace=True)
    (conv8): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm8): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu8): ReLU(inplace=True)
    (pool9): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (conv10): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm10): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu10): ReLU(inplace=True)
    (conv11): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm11): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu11): ReLU(inplace=True)
    (conv12): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm12): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu12): ReLU(inplace=True)
    (pool13): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (conv14): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm14): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu14): ReLU(inplace=True)
    (conv15): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm15): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu15): ReLU(inplace=True)
    (conv16): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm16): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu16): ReLU(inplace=True)
  )
  (classifier): Sequential(
    (linear1): Linear(in_features=512, out_features=512, bias=True)
    (norm1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu1): ReLU(inplace=True)
    (linear2): Linear(in_features=512, out_features=10, bias=True)
  )
)
01/29 03:20:30 AM | Save modules info...
01/29 03:20:30 AM | FLOPS pruning ratio is 0.65
01/29 03:20:30 AM | Pruning with information flow
01/29 03:20:30 AM | -----
01/29 03:20:30 AM | module: Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
01/29 03:20:30 AM | cin: None
01/29 03:20:30 AM | cout: [0]
01/29 03:20:30 AM | inactive
01/29 03:20:30 AM | -----
01/29 03:20:30 AM | module: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 03:20:30 AM | cin: [0]
01/29 03:20:30 AM | cout: [0]
01/29 03:20:30 AM | inactive
01/29 03:20:30 AM | -----
01/29 03:20:30 AM | module: ReLU(inplace=True)
01/29 03:20:30 AM | cin: [0]
01/29 03:20:30 AM | cout: [0]
01/29 03:20:30 AM | active
01/29 03:20:30 AM | -----
01/29 03:20:30 AM | module: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
01/29 03:20:30 AM | cin: [0]
01/29 03:20:30 AM | cout: [1]
01/29 03:20:30 AM | inactive
01/29 03:20:30 AM | -----
01/29 03:20:30 AM | module: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 03:20:30 AM | cin: [1]
01/29 03:20:30 AM | cout: [1]
01/29 03:20:30 AM | inactive
01/29 03:20:30 AM | -----
01/29 03:20:30 AM | module: ReLU(inplace=True)
01/29 03:20:30 AM | cin: [1]
01/29 03:20:30 AM | cout: [1]
01/29 03:20:30 AM | active
01/29 03:20:30 AM | -----
01/29 03:20:30 AM | module: MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
01/29 03:20:30 AM | cin: [1]
01/29 03:20:30 AM | cout: [1]
01/29 03:20:30 AM | inactive
01/29 03:20:30 AM | -----
01/29 03:20:30 AM | module: Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
01/29 03:20:30 AM | cin: [1]
01/29 03:20:30 AM | cout: [2]
01/29 03:20:30 AM | inactive
01/29 03:20:30 AM | -----
01/29 03:20:30 AM | module: BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 03:20:30 AM | cin: [2]
01/29 03:20:30 AM | cout: [2]
01/29 03:20:30 AM | inactive
01/29 03:20:30 AM | -----
01/29 03:20:30 AM | module: ReLU(inplace=True)
01/29 03:20:30 AM | cin: [2]
01/29 03:20:30 AM | cout: [2]
01/29 03:20:30 AM | active
01/29 03:20:30 AM | -----
01/29 03:20:30 AM | module: Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
01/29 03:20:30 AM | cin: [2]
01/29 03:20:30 AM | cout: [3]
01/29 03:20:30 AM | inactive
01/29 03:20:30 AM | -----
01/29 03:20:30 AM | module: BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 03:20:30 AM | cin: [3]
01/29 03:20:30 AM | cout: [3]
01/29 03:20:30 AM | inactive
01/29 03:20:30 AM | -----
01/29 03:20:30 AM | module: ReLU(inplace=True)
01/29 03:20:30 AM | cin: [3]
01/29 03:20:30 AM | cout: [3]
01/29 03:20:30 AM | active
01/29 03:20:30 AM | -----
01/29 03:20:30 AM | module: MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
01/29 03:20:30 AM | cin: [3]
01/29 03:20:30 AM | cout: [3]
01/29 03:20:30 AM | inactive
01/29 03:20:30 AM | -----
01/29 03:20:30 AM | module: Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
01/29 03:20:30 AM | cin: [3]
01/29 03:20:30 AM | cout: [4]
01/29 03:20:30 AM | inactive
01/29 03:20:30 AM | -----
01/29 03:20:30 AM | module: BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 03:20:30 AM | cin: [4]
01/29 03:20:30 AM | cout: [4]
01/29 03:20:30 AM | inactive
01/29 03:20:30 AM | -----
01/29 03:20:30 AM | module: ReLU(inplace=True)
01/29 03:20:30 AM | cin: [4]
01/29 03:20:30 AM | cout: [4]
01/29 03:20:30 AM | active
01/29 03:20:30 AM | -----
01/29 03:20:30 AM | module: Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
01/29 03:20:30 AM | cin: [4]
01/29 03:20:30 AM | cout: [5]
01/29 03:20:30 AM | inactive
01/29 03:20:30 AM | -----
01/29 03:20:30 AM | module: BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 03:20:30 AM | cin: [5]
01/29 03:20:30 AM | cout: [5]
01/29 03:20:30 AM | inactive
01/29 03:20:30 AM | -----
01/29 03:20:30 AM | module: ReLU(inplace=True)
01/29 03:20:30 AM | cin: [5]
01/29 03:20:30 AM | cout: [5]
01/29 03:20:30 AM | active
01/29 03:20:30 AM | -----
01/29 03:20:30 AM | module: Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
01/29 03:20:30 AM | cin: [5]
01/29 03:20:30 AM | cout: [6]
01/29 03:20:30 AM | inactive
01/29 03:20:30 AM | -----
01/29 03:20:30 AM | module: BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 03:20:30 AM | cin: [6]
01/29 03:20:30 AM | cout: [6]
01/29 03:20:30 AM | inactive
01/29 03:20:30 AM | -----
01/29 03:20:30 AM | module: ReLU(inplace=True)
01/29 03:20:30 AM | cin: [6]
01/29 03:20:30 AM | cout: [6]
01/29 03:20:30 AM | active
01/29 03:20:30 AM | -----
01/29 03:20:30 AM | module: MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
01/29 03:20:30 AM | cin: [6]
01/29 03:20:30 AM | cout: [6]
01/29 03:20:30 AM | inactive
01/29 03:20:30 AM | -----
01/29 03:20:30 AM | module: Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
01/29 03:20:30 AM | cin: [6]
01/29 03:20:30 AM | cout: [7]
01/29 03:20:30 AM | inactive
01/29 03:20:30 AM | -----
01/29 03:20:30 AM | module: BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 03:20:30 AM | cin: [7]
01/29 03:20:30 AM | cout: [7]
01/29 03:20:30 AM | inactive
01/29 03:20:30 AM | -----
01/29 03:20:30 AM | module: ReLU(inplace=True)
01/29 03:20:30 AM | cin: [7]
01/29 03:20:30 AM | cout: [7]
01/29 03:20:30 AM | active
01/29 03:20:30 AM | -----
01/29 03:20:30 AM | module: Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
01/29 03:20:30 AM | cin: [7]
01/29 03:20:30 AM | cout: [8]
01/29 03:20:30 AM | inactive
01/29 03:20:30 AM | -----
01/29 03:20:30 AM | module: BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 03:20:30 AM | cin: [8]
01/29 03:20:30 AM | cout: [8]
01/29 03:20:30 AM | inactive
01/29 03:20:30 AM | -----
01/29 03:20:30 AM | module: ReLU(inplace=True)
01/29 03:20:30 AM | cin: [8]
01/29 03:20:30 AM | cout: [8]
01/29 03:20:30 AM | active
01/29 03:20:30 AM | -----
01/29 03:20:30 AM | module: Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
01/29 03:20:30 AM | cin: [8]
01/29 03:20:30 AM | cout: [9]
01/29 03:20:30 AM | inactive
01/29 03:20:30 AM | -----
01/29 03:20:30 AM | module: BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 03:20:30 AM | cin: [9]
01/29 03:20:30 AM | cout: [9]
01/29 03:20:30 AM | inactive
01/29 03:20:30 AM | -----
01/29 03:20:30 AM | module: ReLU(inplace=True)
01/29 03:20:30 AM | cin: [9]
01/29 03:20:30 AM | cout: [9]
01/29 03:20:30 AM | active
01/29 03:20:30 AM | -----
01/29 03:20:30 AM | module: MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
01/29 03:20:30 AM | cin: [9]
01/29 03:20:30 AM | cout: [9]
01/29 03:20:30 AM | inactive
01/29 03:20:30 AM | -----
01/29 03:20:30 AM | module: Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
01/29 03:20:30 AM | cin: [9]
01/29 03:20:30 AM | cout: [10]
01/29 03:20:30 AM | inactive
01/29 03:20:30 AM | -----
01/29 03:20:30 AM | module: BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 03:20:30 AM | cin: [10]
01/29 03:20:30 AM | cout: [10]
01/29 03:20:30 AM | inactive
01/29 03:20:30 AM | -----
01/29 03:20:30 AM | module: ReLU(inplace=True)
01/29 03:20:30 AM | cin: [10]
01/29 03:20:30 AM | cout: [10]
01/29 03:20:30 AM | active
01/29 03:20:30 AM | -----
01/29 03:20:30 AM | module: Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
01/29 03:20:30 AM | cin: [10]
01/29 03:20:30 AM | cout: [11]
01/29 03:20:30 AM | inactive
01/29 03:20:30 AM | -----
01/29 03:20:30 AM | module: BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 03:20:30 AM | cin: [11]
01/29 03:20:30 AM | cout: [11]
01/29 03:20:30 AM | inactive
01/29 03:20:30 AM | -----
01/29 03:20:30 AM | module: ReLU(inplace=True)
01/29 03:20:30 AM | cin: [11]
01/29 03:20:30 AM | cout: [11]
01/29 03:20:30 AM | active
01/29 03:20:30 AM | -----
01/29 03:20:30 AM | module: Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
01/29 03:20:30 AM | cin: [11]
01/29 03:20:30 AM | cout: [12]
01/29 03:20:30 AM | inactive
01/29 03:20:30 AM | -----
01/29 03:20:30 AM | module: BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 03:20:30 AM | cin: [12]
01/29 03:20:30 AM | cout: [12]
01/29 03:20:30 AM | inactive
01/29 03:20:30 AM | -----
01/29 03:20:30 AM | module: ReLU(inplace=True)
01/29 03:20:30 AM | cin: [12]
01/29 03:20:30 AM | cout: [12]
01/29 03:20:30 AM | active
01/29 03:20:30 AM | -----
01/29 03:20:30 AM | module: Linear(in_features=512, out_features=512, bias=True)
01/29 03:20:30 AM | cin: [12]
01/29 03:20:30 AM | cout: None
01/29 03:20:30 AM | inactive
01/29 03:20:30 AM | -----
01/29 03:20:30 AM | module: ReLU(inplace=True)
01/29 03:20:30 AM | cin: None
01/29 03:20:30 AM | cout: None
01/29 03:20:30 AM | active
01/29 03:20:30 AM | -----
01/29 03:20:30 AM | module: Linear(in_features=512, out_features=10, bias=True)
01/29 03:20:30 AM | cin: None
01/29 03:20:30 AM | cout: None
01/29 03:20:30 AM | inactive
01/29 03:20:30 AM | Used masks: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
01/29 03:20:30 AM | 13 unique masks in total
01/29 03:20:31 AM | === Batch 1/60
01/29 03:20:31 AM | loss = 0.166 + 4.266 + 0.040 = 4.472
01/29 03:20:31 AM | attribution_score[0:12]: 
[ 0.83  0.94  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.94  0.83  0.94 ]
[ 0.94  0.83  0.94  0.83  0.94  0.83  0.94  0.83  0.83  0.94  0.83  0.83 ]
[ 0.94  0.94  0.83  0.94  0.83  0.83  0.94  0.94  0.83  0.83  0.83  0.94 ]
[ 0.83  0.94  0.94  0.94  0.94  0.94  0.83  0.83  0.94  0.83  0.94  0.94 ]
[ 0.94  0.83  0.83  0.83  0.83  0.94  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.94  0.83  0.83  0.94  0.83  0.83  0.83  0.83  0.83 ]
[ 0.94  0.83  0.83  0.83  0.83  0.83  0.94  0.83  0.94  0.83  0.94  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.94  0.83  0.83  0.94  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.94  0.83 ]
[ 0.83  0.94  0.83  0.83  0.83  0.83  0.83  0.94  0.83  0.83  0.83  0.83 ]
[ 0.94  0.94  0.94  0.83  0.94  0.94  0.83  0.83  0.83  0.94  0.83  0.83 ]

01/29 03:20:31 AM | === Batch 2/60
01/29 03:20:32 AM | loss = 0.241 + 3.587 + 0.056 = 3.884
01/29 03:20:32 AM | attribution_score[0:12]: 
[ 0.88  0.97  0.73  0.75  0.73  0.74  0.75  0.73  0.73  0.93  0.73  0.96 ]
[ 0.94  0.73  0.95  0.73  0.94  0.86  0.94  0.74  0.75  0.96  0.87  0.74 ]
[ 0.96  0.96  0.73  0.96  0.76  0.88  0.94  0.95  0.73  0.73  0.84  0.95 ]
[ 0.78  0.91  0.91  0.97  0.96  0.97  0.79  0.74  0.94  0.75  0.92  0.95 ]
[ 0.96  0.88  0.75  0.73  0.81  0.96  0.73  0.73  0.87  0.75  0.78  0.75 ]
[ 0.73  0.86  0.74  0.94  0.79  0.75  0.92  0.73  0.75  0.74  0.73  0.74 ]
[ 0.94  0.74  0.80  0.82  0.73  0.73  0.94  0.87  0.96  0.85  0.97  0.77 ]
[ 0.73  0.73  0.73  0.73  0.74  0.75  0.96  0.73  0.73  0.91  0.73  0.74 ]
[ 0.74  0.73  0.73  0.73  0.76  0.73  0.73  0.73  0.81  0.73  0.73  0.85 ]
[ 0.74  0.74  0.73  0.73  0.75  0.76  0.73  0.73  0.74  0.73  0.74  0.76 ]
[ 0.73  0.88  0.81  0.74  0.73  0.73  0.84  0.86  0.73  0.77  0.97  0.88 ]
[ 0.88  0.97  0.82  0.87  0.88  0.78  0.87  0.97  0.76  0.76  0.87  0.76 ]
[ 0.96  0.97  0.97  0.86  0.96  0.96  0.85  0.88  0.88  0.95  0.75  0.75 ]

01/29 03:20:32 AM | === Batch 3/60
01/29 03:20:32 AM | loss = 0.187 + 2.847 + 0.073 = 3.107
01/29 03:20:32 AM | attribution_score[0:12]: 
[ 0.91  0.98  0.62  0.63  0.61  0.62  0.63  0.60  0.60  0.91  0.61  0.96 ]
[ 0.94  0.60  0.94  0.60  0.92  0.88  0.93  0.62  0.65  0.97  0.90  0.62 ]
[ 0.97  0.98  0.61  0.97  0.65  0.91  0.92  0.95  0.60  0.62  0.79  0.95 ]
[ 0.69  0.87  0.87  0.98  0.96  0.98  0.72  0.61  0.94  0.63  0.88  0.96 ]
[ 0.97  0.92  0.73  0.60  0.77  0.96  0.60  0.61  0.91  0.69  0.74  0.72 ]
[ 0.60  0.89  0.62  0.92  0.72  0.65  0.87  0.60  0.65  0.62  0.60  0.61 ]
[ 0.92  0.62  0.73  0.77  0.65  0.60  0.91  0.86  0.97  0.89  0.98  0.70 ]
[ 0.60  0.60  0.60  0.60  0.62  0.65  0.96  0.60  0.60  0.86  0.60  0.63 ]
[ 0.62  0.60  0.60  0.60  0.66  0.60  0.60  0.60  0.76  0.60  0.60  0.87 ]
[ 0.62  0.61  0.61  0.60  0.64  0.66  0.60  0.60  0.61  0.60  0.61  0.65 ]
[ 0.60  0.92  0.83  0.61  0.60  0.61  0.86  0.87  0.60  0.69  0.98  0.86 ]
[ 0.91  0.98  0.78  0.91  0.92  0.72  0.90  0.98  0.65  0.78  0.90  0.65 ]
[ 0.97  0.98  0.98  0.81  0.97  0.98  0.88  0.92  0.91  0.96  0.77  0.66 ]

01/29 03:20:32 AM | === Batch 4/60
01/29 03:20:33 AM | loss = 0.400 + 1.920 + 0.096 = 2.415
01/29 03:20:33 AM | attribution_score[0:12]: 
[ 0.94  0.98  0.50  0.49  0.46  0.48  0.49  0.46  0.45  0.86  0.46  0.96 ]
[ 0.93  0.46  0.92  0.45  0.90  0.89  0.92  0.49  0.53  0.96  0.93  0.48 ]
[ 0.97  0.98  0.47  0.97  0.53  0.93  0.90  0.95  0.45  0.48  0.72  0.95 ]
[ 0.57  0.80  0.81  0.98  0.97  0.98  0.73  0.47  0.94  0.58  0.82  0.97 ]
[ 0.97  0.93  0.69  0.51  0.80  0.96  0.45  0.47  0.93  0.59  0.76  0.64 ]
[ 0.46  0.90  0.47  0.90  0.61  0.51  0.83  0.47  0.53  0.48  0.46  0.55 ]
[ 0.88  0.51  0.62  0.70  0.54  0.46  0.89  0.87  0.97  0.92  0.99  0.60 ]
[ 0.45  0.47  0.47  0.46  0.49  0.53  0.96  0.45  0.46  0.79  0.47  0.52 ]
[ 0.48  0.53  0.45  0.50  0.54  0.45  0.45  0.50  0.70  0.45  0.55  0.90 ]
[ 0.50  0.47  0.46  0.45  0.51  0.54  0.45  0.45  0.47  0.45  0.52  0.54 ]
[ 0.46  0.95  0.88  0.51  0.50  0.48  0.90  0.88  0.65  0.74  0.99  0.82 ]
[ 0.93  0.99  0.78  0.95  0.95  0.74  0.93  0.99  0.58  0.81  0.93  0.52 ]
[ 0.98  0.99  0.99  0.74  0.98  0.99  0.92  0.95  0.94  0.96  0.76  0.54 ]

01/29 03:20:33 AM | === Batch 5/60
01/29 03:20:33 AM | loss = 0.815 + 1.068 + 0.111 = 1.993
01/29 03:20:33 AM | attribution_score[0:12]: 
[ 0.96  0.98  0.37  0.35  0.32  0.34  0.35  0.32  0.31  0.80  0.33  0.97 ]
[ 0.93  0.32  0.93  0.31  0.85  0.90  0.93  0.36  0.48  0.96  0.93  0.37 ]
[ 0.97  0.98  0.33  0.98  0.39  0.95  0.85  0.95  0.32  0.34  0.62  0.95 ]
[ 0.43  0.79  0.72  0.99  0.96  0.99  0.67  0.44  0.93  0.60  0.84  0.97 ]
[ 0.98  0.95  0.61  0.42  0.80  0.96  0.32  0.34  0.94  0.47  0.74  0.54 ]
[ 0.38  0.90  0.34  0.85  0.49  0.39  0.79  0.34  0.43  0.40  0.32  0.52 ]
[ 0.86  0.38  0.54  0.60  0.56  0.33  0.89  0.89  0.97  0.93  0.99  0.50 ]
[ 0.31  0.39  0.33  0.32  0.37  0.40  0.96  0.31  0.47  0.68  0.36  0.43 ]
[ 0.43  0.58  0.31  0.51  0.53  0.32  0.32  0.43  0.74  0.41  0.57  0.93 ]
[ 0.45  0.37  0.32  0.31  0.48  0.54  0.33  0.31  0.52  0.32  0.44  0.52 ]
[ 0.32  0.96  0.92  0.40  0.46  0.54  0.93  0.91  0.73  0.78  0.99  0.86 ]
[ 0.95  0.99  0.83  0.97  0.97  0.79  0.95  0.99  0.53  0.85  0.95  0.60 ]
[ 0.98  0.99  0.99  0.77  0.98  0.99  0.95  0.97  0.96  0.95  0.71  0.41 ]

01/29 03:20:33 AM | === Batch 6/60
01/29 03:20:34 AM | loss = 1.148 + 0.481 + 0.095 = 1.725
01/29 03:20:34 AM | attribution_score[0:12]: 
[ 0.97  0.99  0.27  0.23  0.21  0.23  0.25  0.20  0.20  0.71  0.21  0.97 ]
[ 0.93  0.21  0.95  0.20  0.77  0.91  0.93  0.24  0.44  0.96  0.93  0.36 ]
[ 0.97  0.98  0.21  0.98  0.27  0.96  0.78  0.94  0.21  0.23  0.51  0.96 ]
[ 0.42  0.75  0.68  0.99  0.95  0.99  0.63  0.41  0.94  0.60  0.81  0.96 ]
[ 0.98  0.95  0.61  0.33  0.80  0.95  0.21  0.25  0.95  0.50  0.73  0.43 ]
[ 0.40  0.91  0.22  0.79  0.41  0.27  0.72  0.25  0.33  0.31  0.21  0.54 ]
[ 0.88  0.29  0.50  0.58  0.64  0.23  0.91  0.89  0.96  0.95  0.99  0.40 ]
[ 0.20  0.32  0.22  0.20  0.28  0.34  0.95  0.20  0.50  0.58  0.33  0.34 ]
[ 0.47  0.59  0.21  0.55  0.54  0.21  0.23  0.39  0.78  0.42  0.60  0.93 ]
[ 0.41  0.31  0.21  0.20  0.49  0.59  0.23  0.20  0.60  0.22  0.36  0.53 ]
[ 0.21  0.97  0.93  0.30  0.38  0.62  0.95  0.94  0.80  0.76  1.00  0.90 ]
[ 0.96  1.00  0.88  0.98  0.98  0.84  0.96  1.00  0.45  0.90  0.97  0.68 ]
[ 0.99  1.00  1.00  0.83  0.99  1.00  0.96  0.98  0.97  0.94  0.73  0.41 ]

01/29 03:20:34 AM | === Batch 7/60
01/29 03:20:34 AM | loss = 1.071 + 0.064 + 0.081 = 1.216
01/29 03:20:34 AM | attribution_score[0:12]: 
[ 0.97  0.99  0.18  0.15  0.13  0.15  0.17  0.13  0.12  0.62  0.13  0.97 ]
[ 0.93  0.13  0.95  0.12  0.68  0.92  0.94  0.16  0.40  0.96  0.93  0.36 ]
[ 0.97  0.98  0.13  0.98  0.17  0.97  0.69  0.94  0.13  0.15  0.38  0.95 ]
[ 0.41  0.70  0.69  0.99  0.95  0.99  0.62  0.38  0.94  0.57  0.79  0.95 ]
[ 0.98  0.96  0.65  0.25  0.77  0.96  0.14  0.17  0.96  0.51  0.73  0.39 ]
[ 0.39  0.91  0.14  0.70  0.32  0.20  0.70  0.18  0.26  0.23  0.13  0.60 ]
[ 0.90  0.20  0.43  0.55  0.72  0.18  0.92  0.87  0.96  0.96  1.00  0.29 ]
[ 0.12  0.33  0.15  0.13  0.22  0.32  0.95  0.12  0.58  0.45  0.30  0.26 ]
[ 0.52  0.58  0.14  0.62  0.60  0.14  0.16  0.34  0.79  0.45  0.66  0.94 ]
[ 0.38  0.24  0.13  0.12  0.48  0.64  0.16  0.13  0.69  0.16  0.34  0.54 ]
[ 0.14  0.98  0.93  0.23  0.31  0.71  0.96  0.96  0.87  0.72  1.00  0.93 ]
[ 0.97  1.00  0.91  0.98  0.98  0.88  0.97  1.00  0.34  0.93  0.98  0.77 ]
[ 0.99  1.00  1.00  0.87  0.99  1.00  0.97  0.98  0.98  0.93  0.77  0.42 ]

01/29 03:20:34 AM | === Batch 8/60
01/29 03:20:34 AM | loss = 1.205 + 0.453 + 0.071 = 1.729
01/29 03:20:35 AM | attribution_score[0:12]: 
[ 0.98  0.99  0.16  0.11  0.10  0.12  0.15  0.09  0.09  0.65  0.10  0.97 ]
[ 0.94  0.09  0.96  0.08  0.70  0.92  0.95  0.11  0.39  0.96  0.93  0.41 ]
[ 0.97  0.99  0.10  0.98  0.14  0.98  0.70  0.94  0.10  0.11  0.35  0.96 ]
[ 0.42  0.70  0.75  0.99  0.95  0.99  0.67  0.39  0.95  0.61  0.83  0.96 ]
[ 0.98  0.97  0.71  0.26  0.76  0.96  0.10  0.15  0.96  0.54  0.78  0.40 ]
[ 0.42  0.92  0.11  0.70  0.32  0.19  0.71  0.17  0.23  0.19  0.09  0.69 ]
[ 0.92  0.19  0.37  0.58  0.80  0.15  0.94  0.87  0.96  0.97  1.00  0.28 ]
[ 0.09  0.38  0.12  0.09  0.20  0.34  0.95  0.09  0.67  0.48  0.35  0.22 ]
[ 0.58  0.64  0.11  0.70  0.68  0.11  0.14  0.38  0.81  0.46  0.73  0.95 ]
[ 0.42  0.23  0.10  0.09  0.53  0.69  0.14  0.09  0.77  0.15  0.39  0.61 ]
[ 0.12  0.99  0.95  0.24  0.35  0.79  0.96  0.97  0.91  0.76  1.00  0.95 ]
[ 0.98  1.00  0.94  0.99  0.98  0.91  0.97  1.00  0.35  0.96  0.98  0.84 ]
[ 0.99  1.00  1.00  0.90  0.99  1.00  0.98  0.99  0.99  0.94  0.79  0.46 ]

01/29 03:20:35 AM | === Batch 9/60
01/29 03:20:35 AM | loss = 1.073 + 0.371 + 0.064 = 1.508
01/29 03:20:35 AM | attribution_score[0:12]: 
[ 0.98  0.99  0.17  0.09  0.08  0.11  0.14  0.07  0.07  0.72  0.08  0.98 ]
[ 0.95  0.08  0.97  0.06  0.74  0.93  0.96  0.09  0.44  0.97  0.93  0.49 ]
[ 0.98  0.99  0.08  0.98  0.13  0.98  0.75  0.94  0.10  0.09  0.37  0.97 ]
[ 0.42  0.73  0.81  0.99  0.96  1.00  0.71  0.43  0.96  0.68  0.87  0.97 ]
[ 0.99  0.97  0.77  0.28  0.76  0.97  0.08  0.14  0.97  0.61  0.81  0.47 ]
[ 0.48  0.93  0.09  0.73  0.35  0.20  0.77  0.18  0.23  0.18  0.07  0.77 ]
[ 0.93  0.20  0.36  0.65  0.86  0.15  0.96  0.87  0.96  0.98  1.00  0.29 ]
[ 0.06  0.47  0.11  0.07  0.20  0.39  0.96  0.06  0.76  0.54  0.42  0.21 ]
[ 0.67  0.70  0.09  0.78  0.76  0.10  0.14  0.45  0.82  0.50  0.81  0.96 ]
[ 0.49  0.24  0.08  0.07  0.61  0.75  0.14  0.07  0.84  0.15  0.46  0.70 ]
[ 0.12  0.99  0.96  0.26  0.41  0.85  0.97  0.98  0.95  0.80  1.00  0.96 ]
[ 0.99  1.00  0.96  0.99  0.99  0.94  0.98  1.00  0.38  0.97  0.99  0.88 ]
[ 0.99  1.00  1.00  0.92  1.00  1.00  0.99  0.99  0.99  0.95  0.82  0.51 ]

01/29 03:20:35 AM | === Batch 10/60
01/29 03:20:35 AM | loss = 1.016 + 0.006 + 0.059 = 1.082
01/29 03:20:36 AM | attribution_score[0:12]: 
[ 0.98  0.99  0.19  0.08  0.08  0.11  0.16  0.06  0.06  0.79  0.07  0.98 ]
[ 0.97  0.07  0.98  0.05  0.77  0.93  0.97  0.07  0.50  0.98  0.93  0.58 ]
[ 0.98  0.99  0.08  0.99  0.12  0.99  0.81  0.95  0.10  0.09  0.42  0.97 ]
[ 0.38  0.79  0.86  0.99  0.96  1.00  0.76  0.48  0.97  0.74  0.91  0.97 ]
[ 0.99  0.98  0.82  0.35  0.73  0.98  0.07  0.14  0.97  0.70  0.83  0.55 ]
[ 0.58  0.94  0.08  0.79  0.41  0.23  0.82  0.22  0.25  0.19  0.06  0.84 ]
[ 0.95  0.24  0.41  0.72  0.90  0.16  0.97  0.87  0.97  0.98  1.00  0.35 ]
[ 0.05  0.56  0.12  0.06  0.22  0.48  0.97  0.05  0.83  0.64  0.51  0.21 ]
[ 0.75  0.77  0.09  0.83  0.83  0.10  0.15  0.54  0.79  0.53  0.87  0.97 ]
[ 0.58  0.27  0.07  0.06  0.70  0.81  0.15  0.07  0.88  0.16  0.56  0.78 ]
[ 0.13  0.99  0.97  0.29  0.47  0.90  0.97  0.99  0.96  0.83  1.00  0.97 ]
[ 0.99  1.00  0.97  0.99  0.99  0.96  0.98  1.00  0.44  0.98  0.99  0.92 ]
[ 1.00  1.00  1.00  0.94  1.00  1.00  0.99  0.99  0.99  0.97  0.87  0.59 ]

01/29 03:20:36 AM | === Batch 11/60
01/29 03:20:36 AM | loss = 0.916 + 0.266 + 0.055 = 1.237
01/29 03:20:36 AM | attribution_score[0:12]: 
[ 0.99  0.99  0.22  0.07  0.07  0.11  0.16  0.05  0.05  0.83  0.07  0.98 ]
[ 0.97  0.07  0.98  0.04  0.79  0.93  0.98  0.06  0.58  0.98  0.93  0.65 ]
[ 0.99  0.99  0.08  0.99  0.12  0.99  0.84  0.96  0.10  0.08  0.45  0.98 ]
[ 0.34  0.82  0.90  0.99  0.96  1.00  0.80  0.47  0.98  0.76  0.93  0.97 ]
[ 0.99  0.98  0.82  0.44  0.68  0.98  0.06  0.14  0.98  0.78  0.83  0.62 ]
[ 0.65  0.95  0.08  0.83  0.43  0.25  0.86  0.25  0.27  0.22  0.05  0.88 ]
[ 0.96  0.31  0.44  0.78  0.93  0.19  0.98  0.85  0.98  0.98  1.00  0.37 ]
[ 0.04  0.65  0.13  0.05  0.23  0.56  0.97  0.04  0.87  0.72  0.54  0.21 ]
[ 0.81  0.83  0.09  0.86  0.89  0.10  0.14  0.62  0.74  0.49  0.91  0.98 ]
[ 0.62  0.24  0.06  0.05  0.73  0.82  0.16  0.06  0.90  0.17  0.66  0.84 ]
[ 0.14  0.99  0.98  0.33  0.53  0.93  0.98  0.99  0.98  0.85  1.00  0.98 ]
[ 0.99  1.00  0.98  0.99  0.99  0.97  0.98  1.00  0.47  0.99  0.99  0.93 ]
[ 1.00  1.00  1.00  0.95  1.00  1.00  0.99  0.99  0.99  0.98  0.89  0.62 ]

01/29 03:20:36 AM | === Batch 12/60
01/29 03:20:36 AM | loss = 0.987 + 0.447 + 0.052 = 1.486
01/29 03:20:36 AM | attribution_score[0:12]: 
[ 0.99  1.00  0.23  0.06  0.07  0.12  0.16  0.05  0.04  0.86  0.06  0.99 ]
[ 0.98  0.07  0.98  0.03  0.80  0.94  0.98  0.05  0.67  0.98  0.93  0.67 ]
[ 0.99  0.99  0.08  0.99  0.12  0.99  0.87  0.96  0.09  0.07  0.47  0.98 ]
[ 0.31  0.84  0.92  0.99  0.96  1.00  0.84  0.47  0.98  0.75  0.95  0.98 ]
[ 0.99  0.98  0.79  0.55  0.62  0.99  0.05  0.13  0.98  0.84  0.82  0.69 ]
[ 0.70  0.96  0.07  0.87  0.42  0.27  0.89  0.26  0.29  0.27  0.04  0.91 ]
[ 0.96  0.39  0.44  0.82  0.94  0.21  0.98  0.82  0.98  0.99  1.00  0.40 ]
[ 0.03  0.69  0.13  0.04  0.23  0.61  0.98  0.03  0.89  0.76  0.52  0.21 ]
[ 0.84  0.87  0.08  0.87  0.92  0.09  0.13  0.66  0.68  0.42  0.93  0.98 ]
[ 0.62  0.20  0.05  0.04  0.73  0.81  0.16  0.05  0.91  0.16  0.70  0.87 ]
[ 0.15  0.99  0.98  0.37  0.57  0.95  0.98  0.99  0.98  0.86  1.00  0.98 ]
[ 0.99  1.00  0.98  1.00  0.99  0.98  0.99  1.00  0.47  0.99  1.00  0.94 ]
[ 1.00  1.00  1.00  0.95  1.00  1.00  0.99  0.99  1.00  0.98  0.89  0.60 ]

01/29 03:20:36 AM | === Batch 13/60
01/29 03:20:37 AM | loss = 0.797 + 0.546 + 0.049 = 1.391
01/29 03:20:37 AM | attribution_score[0:12]: 
[ 0.99  1.00  0.24  0.05  0.06  0.12  0.15  0.04  0.03  0.88  0.05  0.99 ]
[ 0.98  0.07  0.99  0.03  0.80  0.94  0.98  0.04  0.75  0.98  0.93  0.68 ]
[ 0.99  0.99  0.08  0.99  0.11  0.99  0.88  0.97  0.08  0.06  0.47  0.99 ]
[ 0.27  0.85  0.93  1.00  0.96  1.00  0.86  0.46  0.98  0.73  0.95  0.98 ]
[ 0.99  0.99  0.76  0.65  0.63  0.99  0.05  0.13  0.98  0.89  0.82  0.76 ]
[ 0.74  0.96  0.07  0.89  0.39  0.29  0.92  0.25  0.30  0.35  0.04  0.93 ]
[ 0.97  0.49  0.46  0.85  0.95  0.24  0.99  0.76  0.98  0.99  1.00  0.41 ]
[ 0.03  0.71  0.12  0.04  0.21  0.63  0.98  0.03  0.90  0.78  0.48  0.20 ]
[ 0.86  0.89  0.07  0.88  0.94  0.08  0.11  0.70  0.61  0.33  0.95  0.99 ]
[ 0.62  0.16  0.05  0.04  0.70  0.80  0.15  0.04  0.91  0.14  0.72  0.89 ]
[ 0.15  0.99  0.99  0.40  0.59  0.96  0.98  0.99  0.99  0.86  1.00  0.98 ]
[ 1.00  1.00  0.99  1.00  1.00  0.98  0.99  1.00  0.45  0.99  1.00  0.95 ]
[ 1.00  1.00  1.00  0.96  1.00  1.00  0.99  0.99  1.00  0.98  0.89  0.56 ]

01/29 03:20:37 AM | === Batch 14/60
01/29 03:20:37 AM | loss = 0.654 + 0.581 + 0.046 = 1.281
01/29 03:20:37 AM | attribution_score[0:12]: 
[ 0.99  1.00  0.23  0.04  0.05  0.11  0.14  0.03  0.03  0.89  0.04  0.99 ]
[ 0.99  0.07  0.99  0.02  0.80  0.95  0.99  0.04  0.83  0.98  0.92  0.66 ]
[ 0.99  0.99  0.08  0.99  0.10  0.99  0.89  0.97  0.07  0.05  0.46  0.99 ]
[ 0.26  0.85  0.94  1.00  0.95  1.00  0.88  0.43  0.98  0.69  0.96  0.98 ]
[ 0.99  0.99  0.71  0.73  0.67  0.99  0.04  0.13  0.98  0.92  0.83  0.78 ]
[ 0.77  0.97  0.06  0.90  0.33  0.32  0.94  0.23  0.29  0.45  0.03  0.94 ]
[ 0.97  0.60  0.44  0.87  0.95  0.27  0.99  0.71  0.98  0.99  1.00  0.41 ]
[ 0.02  0.72  0.13  0.03  0.18  0.64  0.98  0.02  0.91  0.78  0.42  0.19 ]
[ 0.87  0.91  0.06  0.88  0.96  0.08  0.09  0.72  0.58  0.25  0.96  0.99 ]
[ 0.60  0.12  0.04  0.03  0.64  0.77  0.13  0.03  0.92  0.12  0.72  0.91 ]
[ 0.15  1.00  0.99  0.43  0.61  0.97  0.98  0.99  0.99  0.87  1.00  0.98 ]
[ 1.00  1.00  0.99  1.00  1.00  0.99  0.99  1.00  0.40  0.99  1.00  0.96 ]
[ 1.00  1.00  1.00  0.96  1.00  1.00  0.99  0.99  1.00  0.99  0.88  0.52 ]

01/29 03:20:37 AM | === Batch 15/60
01/29 03:20:37 AM | loss = 0.539 + 0.575 + 0.044 = 1.158
01/29 03:20:38 AM | attribution_score[0:12]: 
[ 0.99  1.00  0.21  0.03  0.05  0.11  0.12  0.03  0.02  0.90  0.04  0.99 ]
[ 0.99  0.07  0.99  0.02  0.80  0.95  0.99  0.03  0.87  0.98  0.93  0.64 ]
[ 0.99  0.99  0.08  0.99  0.08  0.99  0.88  0.97  0.06  0.05  0.43  0.99 ]
[ 0.25  0.85  0.95  1.00  0.95  1.00  0.89  0.40  0.98  0.65  0.97  0.97 ]
[ 0.99  0.98  0.64  0.81  0.68  0.99  0.04  0.12  0.99  0.94  0.84  0.79 ]
[ 0.79  0.97  0.06  0.92  0.31  0.35  0.95  0.21  0.28  0.53  0.03  0.96 ]
[ 0.97  0.71  0.40  0.88  0.96  0.28  0.99  0.62  0.98  0.99  1.00  0.38 ]
[ 0.02  0.72  0.13  0.03  0.16  0.63  0.98  0.02  0.91  0.77  0.36  0.17 ]
[ 0.88  0.92  0.05  0.88  0.97  0.07  0.08  0.72  0.56  0.18  0.97  0.99 ]
[ 0.56  0.09  0.03  0.02  0.57  0.72  0.11  0.03  0.92  0.09  0.71  0.92 ]
[ 0.14  1.00  0.99  0.46  0.64  0.98  0.98  0.99  0.99  0.87  1.00  0.98 ]
[ 1.00  1.00  0.99  1.00  1.00  0.99  0.99  1.00  0.34  1.00  1.00  0.96 ]
[ 1.00  1.00  1.00  0.96  1.00  1.00  0.99  1.00  1.00  0.99  0.88  0.50 ]

01/29 03:20:38 AM | === Batch 16/60
01/29 03:20:38 AM | loss = 0.322 + 0.539 + 0.042 = 0.904
01/29 03:20:38 AM | attribution_score[0:12]: 
[ 0.99  1.00  0.19  0.03  0.04  0.11  0.11  0.03  0.02  0.91  0.03  0.99 ]
[ 0.99  0.07  0.99  0.01  0.78  0.95  0.99  0.03  0.91  0.98  0.93  0.62 ]
[ 0.99  1.00  0.07  0.99  0.07  0.99  0.88  0.97  0.05  0.04  0.38  0.99 ]
[ 0.25  0.84  0.96  1.00  0.94  1.00  0.90  0.36  0.98  0.60  0.97  0.97 ]
[ 0.99  0.98  0.54  0.86  0.66  1.00  0.04  0.11  0.99  0.95  0.85  0.79 ]
[ 0.81  0.97  0.05  0.92  0.29  0.36  0.96  0.19  0.27  0.61  0.02  0.96 ]
[ 0.97  0.80  0.36  0.89  0.96  0.29  0.99  0.53  0.99  0.99  1.00  0.36 ]
[ 0.02  0.72  0.13  0.02  0.14  0.58  0.98  0.02  0.92  0.75  0.30  0.15 ]
[ 0.88  0.93  0.04  0.88  0.97  0.06  0.07  0.71  0.54  0.13  0.98  0.99 ]
[ 0.51  0.06  0.03  0.02  0.49  0.66  0.09  0.02  0.92  0.07  0.68  0.92 ]
[ 0.12  1.00  0.99  0.50  0.68  0.98  0.99  1.00  0.99  0.88  1.00  0.99 ]
[ 1.00  1.00  0.99  1.00  1.00  0.99  0.99  1.00  0.28  1.00  1.00  0.96 ]
[ 1.00  1.00  1.00  0.97  1.00  1.00  1.00  1.00  1.00  0.99  0.86  0.45 ]

01/29 03:20:38 AM | === Batch 17/60
01/29 03:20:38 AM | loss = 0.391 + 0.483 + 0.040 = 0.914
01/29 03:20:38 AM | attribution_score[0:12]: 
[ 0.99  1.00  0.17  0.02  0.04  0.11  0.09  0.02  0.02  0.92  0.03  0.99 ]
[ 0.99  0.06  0.99  0.01  0.76  0.95  0.99  0.02  0.93  0.98  0.94  0.62 ]
[ 0.99  1.00  0.06  0.99  0.06  0.99  0.86  0.98  0.04  0.03  0.33  0.99 ]
[ 0.26  0.82  0.96  1.00  0.94  1.00  0.91  0.34  0.98  0.58  0.97  0.97 ]
[ 1.00  0.98  0.46  0.90  0.62  1.00  0.04  0.10  0.99  0.96  0.85  0.80 ]
[ 0.84  0.97  0.05  0.92  0.27  0.39  0.97  0.16  0.25  0.64  0.02  0.97 ]
[ 0.98  0.86  0.31  0.90  0.96  0.34  0.99  0.42  0.99  0.99  1.00  0.33 ]
[ 0.01  0.72  0.12  0.02  0.12  0.53  0.98  0.01  0.93  0.73  0.25  0.14 ]
[ 0.89  0.94  0.03  0.88  0.98  0.05  0.06  0.69  0.53  0.10  0.98  0.99 ]
[ 0.46  0.05  0.02  0.02  0.39  0.59  0.07  0.02  0.92  0.06  0.63  0.93 ]
[ 0.11  1.00  0.99  0.53  0.73  0.98  0.99  1.00  1.00  0.89  1.00  0.99 ]
[ 1.00  1.00  0.99  1.00  1.00  0.99  0.99  1.00  0.21  1.00  1.00  0.97 ]
[ 1.00  1.00  1.00  0.97  1.00  1.00  1.00  1.00  1.00  0.99  0.85  0.43 ]

01/29 03:20:38 AM | === Batch 18/60
01/29 03:20:38 AM | loss = 0.485 + 0.419 + 0.039 = 0.943
01/29 03:20:39 AM | attribution_score[0:12]: 
[ 0.99  1.00  0.15  0.02  0.03  0.11  0.08  0.02  0.01  0.92  0.02  0.99 ]
[ 0.99  0.06  0.99  0.01  0.73  0.96  0.99  0.02  0.94  0.98  0.94  0.63 ]
[ 0.99  1.00  0.05  0.99  0.05  0.99  0.85  0.98  0.04  0.03  0.27  0.99 ]
[ 0.27  0.80  0.97  1.00  0.93  1.00  0.92  0.31  0.97  0.56  0.98  0.97 ]
[ 1.00  0.98  0.38  0.92  0.56  1.00  0.04  0.09  0.99  0.97  0.85  0.81 ]
[ 0.86  0.97  0.04  0.92  0.25  0.43  0.97  0.13  0.24  0.65  0.02  0.98 ]
[ 0.98  0.90  0.26  0.90  0.97  0.34  0.99  0.32  0.99  0.99  1.00  0.27 ]
[ 0.01  0.72  0.11  0.02  0.10  0.48  0.99  0.01  0.93  0.70  0.21  0.12 ]
[ 0.89  0.95  0.03  0.88  0.98  0.05  0.05  0.65  0.50  0.07  0.98  0.99 ]
[ 0.41  0.04  0.02  0.02  0.30  0.51  0.06  0.02  0.93  0.05  0.57  0.93 ]
[ 0.09  1.00  0.99  0.55  0.76  0.98  0.99  1.00  1.00  0.89  1.00  0.99 ]
[ 1.00  1.00  0.99  1.00  1.00  0.99  0.99  1.00  0.15  1.00  1.00  0.97 ]
[ 1.00  1.00  1.00  0.97  1.00  1.00  1.00  1.00  1.00  0.99  0.84  0.41 ]

01/29 03:20:39 AM | === Batch 19/60
01/29 03:20:39 AM | loss = 0.426 + 0.347 + 0.037 = 0.811
01/29 03:20:39 AM | attribution_score[0:12]: 
[ 0.99  1.00  0.13  0.02  0.03  0.11  0.07  0.02  0.01  0.92  0.02  0.99 ]
[ 0.99  0.05  0.99  0.01  0.71  0.95  0.99  0.02  0.95  0.98  0.95  0.62 ]
[ 0.99  1.00  0.05  0.99  0.04  1.00  0.83  0.98  0.03  0.02  0.21  0.99 ]
[ 0.28  0.77  0.97  1.00  0.93  1.00  0.93  0.28  0.97  0.54  0.98  0.97 ]
[ 1.00  0.98  0.31  0.94  0.49  1.00  0.04  0.09  0.99  0.97  0.85  0.83 ]
[ 0.86  0.98  0.04  0.91  0.23  0.46  0.98  0.11  0.22  0.63  0.01  0.98 ]
[ 0.98  0.93  0.20  0.89  0.97  0.31  0.99  0.24  0.99  0.99  1.00  0.22 ]
[ 0.01  0.73  0.09  0.02  0.09  0.41  0.99  0.01  0.94  0.67  0.18  0.10 ]
[ 0.89  0.95  0.02  0.88  0.98  0.04  0.04  0.61  0.47  0.05  0.99  0.99 ]
[ 0.35  0.03  0.02  0.01  0.23  0.43  0.05  0.02  0.93  0.04  0.51  0.93 ]
[ 0.07  1.00  0.99  0.56  0.78  0.99  0.99  1.00  1.00  0.90  1.00  0.99 ]
[ 1.00  1.00  0.99  1.00  1.00  0.99  0.99  1.00  0.11  1.00  1.00  0.97 ]
[ 1.00  1.00  1.00  0.97  1.00  1.00  1.00  1.00  1.00  0.99  0.84  0.40 ]

01/29 03:20:39 AM | === Batch 20/60
01/29 03:20:39 AM | loss = 0.716 + 0.273 + 0.036 = 1.024
01/29 03:20:39 AM | === Batch 21/60
01/29 03:20:40 AM | loss = 0.569 + 0.205 + 0.034 = 0.808
01/29 03:20:40 AM | === Batch 22/60
01/29 03:20:40 AM | loss = 0.511 + 0.144 + 0.033 = 0.688
01/29 03:20:40 AM | === Batch 23/60
01/29 03:20:40 AM | loss = 0.729 + 0.083 + 0.032 = 0.845
01/29 03:20:40 AM | === Batch 24/60
01/29 03:20:41 AM | loss = 0.640 + 0.026 + 0.031 = 0.697
01/29 03:20:41 AM | === Batch 25/60
01/29 03:20:41 AM | loss = 0.424 + 0.058 + 0.030 = 0.512
01/29 03:20:41 AM | === Batch 26/60
01/29 03:20:41 AM | loss = 0.442 + 0.047 + 0.029 = 0.518
01/29 03:20:42 AM | === Batch 27/60
01/29 03:20:42 AM | loss = 0.563 + 0.025 + 0.028 = 0.616
01/29 03:20:42 AM | === Batch 28/60
01/29 03:20:42 AM | loss = 0.370 + 0.056 + 0.027 = 0.452
01/29 03:20:42 AM | === Batch 29/60
01/29 03:20:43 AM | loss = 0.530 + 0.072 + 0.026 = 0.628
01/29 03:20:43 AM | === Batch 30/60
01/29 03:20:43 AM | loss = 0.452 + 0.076 + 0.025 = 0.553
01/29 03:20:43 AM | === Batch 31/60
01/29 03:20:43 AM | loss = 0.453 + 0.069 + 0.024 = 0.547
01/29 03:20:44 AM | === Batch 32/60
01/29 03:20:44 AM | loss = 0.493 + 0.052 + 0.024 = 0.569
01/29 03:20:44 AM | === Batch 33/60
01/29 03:20:44 AM | loss = 0.365 + 0.028 + 0.023 = 0.417
01/29 03:20:44 AM | === Batch 34/60
01/29 03:20:44 AM | loss = 0.433 + 0.007 + 0.023 = 0.463
01/29 03:20:45 AM | === Batch 35/60
01/29 03:20:45 AM | loss = 0.632 + 0.004 + 0.023 = 0.659
01/29 03:20:45 AM | === Batch 36/60
01/29 03:20:45 AM | loss = 0.451 + 0.002 + 0.022 = 0.475
01/29 03:20:45 AM | === Batch 37/60
01/29 03:20:46 AM | loss = 0.462 + 0.016 + 0.022 = 0.500
01/29 03:20:46 AM | === Batch 38/60
01/29 03:20:46 AM | loss = 0.488 + 0.014 + 0.022 = 0.524
01/29 03:20:46 AM | === Batch 39/60
01/29 03:20:46 AM | loss = 0.415 + 0.027 + 0.021 = 0.463
01/29 03:20:47 AM | === Batch 40/60
01/29 03:20:47 AM | loss = 0.613 + 0.031 + 0.021 = 0.665
01/29 03:20:47 AM | === Batch 41/60
01/29 03:20:47 AM | loss = 0.392 + 0.027 + 0.021 = 0.439
01/29 03:20:47 AM | === Batch 42/60
01/29 03:20:47 AM | loss = 0.531 + 0.015 + 0.021 = 0.567
01/29 03:20:48 AM | === Batch 43/60
01/29 03:20:48 AM | loss = 0.382 + 0.006 + 0.021 = 0.408
01/29 03:20:48 AM | === Batch 44/60
01/29 03:20:48 AM | loss = 0.439 + 0.015 + 0.020 = 0.473
01/29 03:20:48 AM | === Batch 45/60
01/29 03:20:49 AM | loss = 0.399 + 0.021 + 0.020 = 0.440
01/29 03:20:49 AM | === Batch 46/60
01/29 03:20:49 AM | loss = 0.454 + 0.017 + 0.020 = 0.491
01/29 03:20:49 AM | === Batch 47/60
01/29 03:20:49 AM | loss = 0.544 + 0.003 + 0.020 = 0.566
01/29 03:20:50 AM | === Batch 48/60
01/29 03:20:50 AM | loss = 0.449 + 0.029 + 0.019 = 0.498
01/29 03:20:50 AM | === Batch 49/60
01/29 03:20:50 AM | loss = 0.445 + 0.003 + 0.019 = 0.467
01/29 03:20:50 AM | === Batch 50/60
01/29 03:20:50 AM | loss = 0.484 + 0.039 + 0.019 = 0.541
01/29 03:20:51 AM | === Batch 51/60
01/29 03:20:51 AM | loss = 0.418 + 0.065 + 0.018 = 0.501
01/29 03:20:51 AM | === Batch 52/60
01/29 03:20:51 AM | loss = 0.468 + 0.080 + 0.018 = 0.566
01/29 03:20:51 AM | === Batch 53/60
01/29 03:20:52 AM | loss = 0.433 + 0.084 + 0.018 = 0.535
01/29 03:20:52 AM | === Batch 54/60
01/29 03:20:52 AM | loss = 0.460 + 0.078 + 0.018 = 0.555
01/29 03:20:52 AM | === Batch 55/60
01/29 03:20:52 AM | loss = 0.568 + 0.065 + 0.018 = 0.650
01/29 03:20:53 AM | === Batch 56/60
01/29 03:20:53 AM | loss = 0.351 + 0.048 + 0.017 = 0.416
01/29 03:20:53 AM | === Batch 57/60
01/29 03:20:53 AM | loss = 0.527 + 0.025 + 0.017 = 0.569
01/29 03:20:53 AM | === Batch 58/60
01/29 03:20:53 AM | loss = 0.312 + 0.003 + 0.017 = 0.332
01/29 03:20:54 AM | === Batch 59/60
01/29 03:20:54 AM | loss = 0.585 + 0.004 + 0.017 = 0.606
01/29 03:20:54 AM | === Batch 60/60
01/29 03:20:54 AM | loss = 0.406 + 0.002 + 0.017 = 0.425
01/29 03:20:55 AM | ===
Best loss was 0.33 at iteration 58

01/29 03:20:55 AM | Looking for optimal threshold...
01/29 03:20:55 AM | Testing threshold 0.5
01/29 03:20:55 AM | Distance to target: 4,003,808
01/29 03:20:55 AM | Testing threshold 0.75
01/29 03:20:55 AM | Distance to target: 10,474,104
01/29 03:20:55 AM | Testing threshold 0.625
01/29 03:20:55 AM | Distance to target: 1,621,632
01/29 03:20:55 AM | Testing threshold 0.5625
01/29 03:20:55 AM | Distance to target: 1,690,056
01/29 03:20:55 AM | Testing threshold 0.59375
01/29 03:20:55 AM | Distance to target: 437,608
01/29 03:20:55 AM | Testing threshold 0.609375
01/29 03:20:55 AM | Distance to target: 724,784
01/29 03:20:55 AM | Testing threshold 0.6015625
01/29 03:20:55 AM | Distance to target: 62,744
01/29 03:20:55 AM | Testing threshold 0.59765625
01/29 03:20:55 AM | Distance to target: 22,968
01/29 03:20:56 AM | attribution_score[0:12]: 
[ 1.00  1.00  0.00  0.00  0.00  0.00  0.00  0.00  0.00  1.00  0.00  1.00 ]
[ 1.00  0.00  1.00  0.00  1.00  1.00  1.00  0.00  1.00  1.00  1.00  0.00 ]
[ 1.00  1.00  0.00  1.00  0.00  1.00  0.00  1.00  0.00  0.00  0.00  1.00 ]
[ 0.00  1.00  1.00  1.00  1.00  1.00  1.00  0.00  1.00  0.00  1.00  1.00 ]
[ 1.00  1.00  0.00  1.00  0.00  1.00  0.00  0.00  1.00  1.00  1.00  1.00 ]
[ 1.00  1.00  0.00  0.00  0.00  0.00  1.00  0.00  0.00  0.00  0.00  1.00 ]
[ 1.00  1.00  0.00  1.00  1.00  0.00  1.00  0.00  1.00  1.00  1.00  0.00 ]
[ 0.00  1.00  0.00  0.00  0.00  0.00  1.00  0.00  1.00  1.00  0.00  0.00 ]
[ 1.00  1.00  0.00  1.00  1.00  0.00  0.00  1.00  1.00  0.00  1.00  1.00 ]
[ 0.00  0.00  0.00  0.00  0.00  0.00  0.00  0.00  1.00  0.00  1.00  1.00 ]
[ 0.00  1.00  1.00  0.00  0.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  0.00  1.00  1.00  1.00 ]
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  0.00 ]

01/29 03:20:56 AM | VGG(
  (features): Sequential(
    (conv0): Conv2d(3, 23, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm0): BatchNorm2d(23, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu0): ReLU(inplace=True)
    (conv1): Conv2d(23, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm1): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu1): ReLU(inplace=True)
    (pool2): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (conv3): Conv2d(48, 78, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm3): BatchNorm2d(78, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu3): ReLU(inplace=True)
    (conv4): Conv2d(78, 105, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm4): BatchNorm2d(105, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu4): ReLU(inplace=True)
    (pool5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (conv6): Conv2d(105, 161, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm6): BatchNorm2d(161, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu6): ReLU(inplace=True)
    (conv7): Conv2d(161, 131, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm7): BatchNorm2d(131, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu7): ReLU(inplace=True)
    (conv8): Conv2d(131, 162, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm8): BatchNorm2d(162, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu8): ReLU(inplace=True)
    (pool9): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (conv10): Conv2d(162, 223, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm10): BatchNorm2d(223, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu10): ReLU(inplace=True)
    (conv11): Conv2d(223, 178, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm11): BatchNorm2d(178, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu11): ReLU(inplace=True)
    (conv12): Conv2d(178, 241, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm12): BatchNorm2d(241, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu12): ReLU(inplace=True)
    (pool13): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (conv14): Conv2d(241, 392, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm14): BatchNorm2d(392, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu14): ReLU(inplace=True)
    (conv15): Conv2d(392, 459, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm15): BatchNorm2d(459, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu15): ReLU(inplace=True)
    (conv16): Conv2d(459, 504, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm16): BatchNorm2d(504, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu16): ReLU(inplace=True)
  )
  (classifier): Sequential(
    (linear1): Linear(in_features=504, out_features=512, bias=True)
    (norm1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu1): ReLU(inplace=True)
    (linear2): Linear(in_features=512, out_features=10, bias=True)
  )
)
01/29 03:20:58 AM | ----------------------------------------
01/29 03:20:58 AM | Performances input model:
01/29 03:20:58 AM |  - flops: 314,294,272
01/29 03:20:58 AM |  - params: 14,991,946
01/29 03:20:58 AM |  - accuracy: 93.95999908447266
01/29 03:20:58 AM | ----------------------------------------
01/29 03:20:58 AM | Performances pseudo-pruned model:
01/29 03:20:58 AM |  - flops: 314,294,272
01/29 03:20:58 AM |  - params: 14,991,946
01/29 03:20:58 AM |  - accuracy: 74.0199966430664
01/29 03:20:58 AM | ----------------------------------------
01/29 03:20:58 AM | Performances pruned model:
01/29 03:20:58 AM |  - flops: 108,474,852
01/29 03:20:58 AM |  - params: 6,543,840
01/29 03:20:58 AM |  - accuracy: 74.0199966430664
01/29 03:20:58 AM | ----------------------------------------
01/29 03:20:58 AM | Total time: 34.01s
