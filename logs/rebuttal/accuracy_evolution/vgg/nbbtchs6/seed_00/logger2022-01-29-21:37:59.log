01/29 09:37:59 PM | args = Namespace(output_dir='result/rebuttal/nb_epoch/vgg/nbbtchs6/seed_00', loaded_model_path='./checkpoints/cifar10/vgg_16_bn.pt', resume=False, test_only=False, mode='prune', batch_size=64, nb_batches=6, Mflops_target=None, lr=0.6, momentum=0.9, beta=6, gamma=0.4, gpu='0', num_workers=4, dataset='cifar10', arch='vgg_16_bn', save_plot=False, seed=0, lr_finetuning=0.02, epoch_finetuning=200, wd=0.002, data_dir='./data/cifar10/', print_freq=200, num_classes=10, device_ids=[0], device=device(type='cuda', index=0), name_base='')
01/29 09:38:11 PM | ----------------------------------------
01/29 09:38:11 PM | ==> Building model...
01/29 09:38:11 PM | ----------------------------------------
01/29 09:38:11 PM | ==> Loading weights into the model...
01/29 09:38:11 PM | ----------------------------------------
01/29 09:38:11 PM | VGG(
  (features): Sequential(
    (conv0): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm0): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu0): ReLU(inplace=True)
    (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu1): ReLU(inplace=True)
    (pool2): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (conv3): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu3): ReLU(inplace=True)
    (conv4): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm4): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu4): ReLU(inplace=True)
    (pool5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (conv6): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm6): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu6): ReLU(inplace=True)
    (conv7): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm7): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu7): ReLU(inplace=True)
    (conv8): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm8): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu8): ReLU(inplace=True)
    (pool9): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (conv10): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm10): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu10): ReLU(inplace=True)
    (conv11): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm11): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu11): ReLU(inplace=True)
    (conv12): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm12): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu12): ReLU(inplace=True)
    (pool13): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (conv14): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm14): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu14): ReLU(inplace=True)
    (conv15): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm15): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu15): ReLU(inplace=True)
    (conv16): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm16): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu16): ReLU(inplace=True)
  )
  (classifier): Sequential(
    (linear1): Linear(in_features=512, out_features=512, bias=True)
    (norm1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu1): ReLU(inplace=True)
    (linear2): Linear(in_features=512, out_features=10, bias=True)
  )
)
01/29 09:38:12 PM | Save modules info...
01/29 09:38:12 PM | FLOPS pruning ratio is 0.65
01/29 09:38:12 PM | Pruning with information flow
01/29 09:38:12 PM | -----
01/29 09:38:12 PM | module: Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
01/29 09:38:12 PM | cin: None
01/29 09:38:12 PM | cout: [0]
01/29 09:38:12 PM | inactive
01/29 09:38:12 PM | -----
01/29 09:38:12 PM | module: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:38:12 PM | cin: [0]
01/29 09:38:12 PM | cout: [0]
01/29 09:38:12 PM | inactive
01/29 09:38:12 PM | -----
01/29 09:38:12 PM | module: ReLU(inplace=True)
01/29 09:38:12 PM | cin: [0]
01/29 09:38:12 PM | cout: [0]
01/29 09:38:12 PM | active
01/29 09:38:12 PM | -----
01/29 09:38:12 PM | module: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
01/29 09:38:12 PM | cin: [0]
01/29 09:38:12 PM | cout: [1]
01/29 09:38:12 PM | inactive
01/29 09:38:12 PM | -----
01/29 09:38:12 PM | module: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:38:12 PM | cin: [1]
01/29 09:38:12 PM | cout: [1]
01/29 09:38:12 PM | inactive
01/29 09:38:12 PM | -----
01/29 09:38:12 PM | module: ReLU(inplace=True)
01/29 09:38:12 PM | cin: [1]
01/29 09:38:12 PM | cout: [1]
01/29 09:38:12 PM | active
01/29 09:38:12 PM | -----
01/29 09:38:12 PM | module: MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
01/29 09:38:12 PM | cin: [1]
01/29 09:38:12 PM | cout: [1]
01/29 09:38:12 PM | inactive
01/29 09:38:12 PM | -----
01/29 09:38:12 PM | module: Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
01/29 09:38:12 PM | cin: [1]
01/29 09:38:12 PM | cout: [2]
01/29 09:38:12 PM | inactive
01/29 09:38:12 PM | -----
01/29 09:38:12 PM | module: BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:38:12 PM | cin: [2]
01/29 09:38:12 PM | cout: [2]
01/29 09:38:12 PM | inactive
01/29 09:38:12 PM | -----
01/29 09:38:12 PM | module: ReLU(inplace=True)
01/29 09:38:12 PM | cin: [2]
01/29 09:38:12 PM | cout: [2]
01/29 09:38:12 PM | active
01/29 09:38:12 PM | -----
01/29 09:38:12 PM | module: Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
01/29 09:38:12 PM | cin: [2]
01/29 09:38:12 PM | cout: [3]
01/29 09:38:12 PM | inactive
01/29 09:38:12 PM | -----
01/29 09:38:12 PM | module: BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:38:12 PM | cin: [3]
01/29 09:38:12 PM | cout: [3]
01/29 09:38:12 PM | inactive
01/29 09:38:12 PM | -----
01/29 09:38:12 PM | module: ReLU(inplace=True)
01/29 09:38:12 PM | cin: [3]
01/29 09:38:12 PM | cout: [3]
01/29 09:38:12 PM | active
01/29 09:38:12 PM | -----
01/29 09:38:12 PM | module: MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
01/29 09:38:12 PM | cin: [3]
01/29 09:38:12 PM | cout: [3]
01/29 09:38:12 PM | inactive
01/29 09:38:12 PM | -----
01/29 09:38:12 PM | module: Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
01/29 09:38:12 PM | cin: [3]
01/29 09:38:12 PM | cout: [4]
01/29 09:38:12 PM | inactive
01/29 09:38:12 PM | -----
01/29 09:38:12 PM | module: BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:38:12 PM | cin: [4]
01/29 09:38:12 PM | cout: [4]
01/29 09:38:12 PM | inactive
01/29 09:38:12 PM | -----
01/29 09:38:12 PM | module: ReLU(inplace=True)
01/29 09:38:12 PM | cin: [4]
01/29 09:38:12 PM | cout: [4]
01/29 09:38:12 PM | active
01/29 09:38:12 PM | -----
01/29 09:38:12 PM | module: Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
01/29 09:38:12 PM | cin: [4]
01/29 09:38:12 PM | cout: [5]
01/29 09:38:12 PM | inactive
01/29 09:38:12 PM | -----
01/29 09:38:12 PM | module: BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:38:12 PM | cin: [5]
01/29 09:38:12 PM | cout: [5]
01/29 09:38:12 PM | inactive
01/29 09:38:12 PM | -----
01/29 09:38:12 PM | module: ReLU(inplace=True)
01/29 09:38:12 PM | cin: [5]
01/29 09:38:12 PM | cout: [5]
01/29 09:38:12 PM | active
01/29 09:38:12 PM | -----
01/29 09:38:12 PM | module: Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
01/29 09:38:12 PM | cin: [5]
01/29 09:38:12 PM | cout: [6]
01/29 09:38:12 PM | inactive
01/29 09:38:12 PM | -----
01/29 09:38:12 PM | module: BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:38:12 PM | cin: [6]
01/29 09:38:12 PM | cout: [6]
01/29 09:38:12 PM | inactive
01/29 09:38:12 PM | -----
01/29 09:38:12 PM | module: ReLU(inplace=True)
01/29 09:38:12 PM | cin: [6]
01/29 09:38:12 PM | cout: [6]
01/29 09:38:12 PM | active
01/29 09:38:12 PM | -----
01/29 09:38:12 PM | module: MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
01/29 09:38:12 PM | cin: [6]
01/29 09:38:12 PM | cout: [6]
01/29 09:38:12 PM | inactive
01/29 09:38:12 PM | -----
01/29 09:38:12 PM | module: Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
01/29 09:38:12 PM | cin: [6]
01/29 09:38:12 PM | cout: [7]
01/29 09:38:12 PM | inactive
01/29 09:38:12 PM | -----
01/29 09:38:12 PM | module: BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:38:12 PM | cin: [7]
01/29 09:38:12 PM | cout: [7]
01/29 09:38:12 PM | inactive
01/29 09:38:12 PM | -----
01/29 09:38:12 PM | module: ReLU(inplace=True)
01/29 09:38:12 PM | cin: [7]
01/29 09:38:12 PM | cout: [7]
01/29 09:38:12 PM | active
01/29 09:38:12 PM | -----
01/29 09:38:12 PM | module: Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
01/29 09:38:12 PM | cin: [7]
01/29 09:38:12 PM | cout: [8]
01/29 09:38:12 PM | inactive
01/29 09:38:12 PM | -----
01/29 09:38:12 PM | module: BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:38:12 PM | cin: [8]
01/29 09:38:12 PM | cout: [8]
01/29 09:38:12 PM | inactive
01/29 09:38:12 PM | -----
01/29 09:38:12 PM | module: ReLU(inplace=True)
01/29 09:38:12 PM | cin: [8]
01/29 09:38:12 PM | cout: [8]
01/29 09:38:12 PM | active
01/29 09:38:12 PM | -----
01/29 09:38:12 PM | module: Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
01/29 09:38:12 PM | cin: [8]
01/29 09:38:12 PM | cout: [9]
01/29 09:38:12 PM | inactive
01/29 09:38:12 PM | -----
01/29 09:38:12 PM | module: BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:38:12 PM | cin: [9]
01/29 09:38:12 PM | cout: [9]
01/29 09:38:12 PM | inactive
01/29 09:38:12 PM | -----
01/29 09:38:12 PM | module: ReLU(inplace=True)
01/29 09:38:12 PM | cin: [9]
01/29 09:38:12 PM | cout: [9]
01/29 09:38:12 PM | active
01/29 09:38:12 PM | -----
01/29 09:38:12 PM | module: MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
01/29 09:38:12 PM | cin: [9]
01/29 09:38:12 PM | cout: [9]
01/29 09:38:12 PM | inactive
01/29 09:38:12 PM | -----
01/29 09:38:12 PM | module: Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
01/29 09:38:12 PM | cin: [9]
01/29 09:38:12 PM | cout: [10]
01/29 09:38:12 PM | inactive
01/29 09:38:12 PM | -----
01/29 09:38:12 PM | module: BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:38:12 PM | cin: [10]
01/29 09:38:12 PM | cout: [10]
01/29 09:38:12 PM | inactive
01/29 09:38:12 PM | -----
01/29 09:38:12 PM | module: ReLU(inplace=True)
01/29 09:38:12 PM | cin: [10]
01/29 09:38:12 PM | cout: [10]
01/29 09:38:12 PM | active
01/29 09:38:12 PM | -----
01/29 09:38:12 PM | module: Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
01/29 09:38:12 PM | cin: [10]
01/29 09:38:12 PM | cout: [11]
01/29 09:38:12 PM | inactive
01/29 09:38:12 PM | -----
01/29 09:38:12 PM | module: BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:38:12 PM | cin: [11]
01/29 09:38:12 PM | cout: [11]
01/29 09:38:12 PM | inactive
01/29 09:38:12 PM | -----
01/29 09:38:12 PM | module: ReLU(inplace=True)
01/29 09:38:12 PM | cin: [11]
01/29 09:38:12 PM | cout: [11]
01/29 09:38:12 PM | active
01/29 09:38:12 PM | -----
01/29 09:38:12 PM | module: Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
01/29 09:38:12 PM | cin: [11]
01/29 09:38:12 PM | cout: [12]
01/29 09:38:12 PM | inactive
01/29 09:38:12 PM | -----
01/29 09:38:12 PM | module: BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:38:12 PM | cin: [12]
01/29 09:38:12 PM | cout: [12]
01/29 09:38:12 PM | inactive
01/29 09:38:12 PM | -----
01/29 09:38:12 PM | module: ReLU(inplace=True)
01/29 09:38:12 PM | cin: [12]
01/29 09:38:12 PM | cout: [12]
01/29 09:38:12 PM | active
01/29 09:38:12 PM | -----
01/29 09:38:12 PM | module: Linear(in_features=512, out_features=512, bias=True)
01/29 09:38:12 PM | cin: [12]
01/29 09:38:12 PM | cout: None
01/29 09:38:12 PM | inactive
01/29 09:38:12 PM | -----
01/29 09:38:12 PM | module: ReLU(inplace=True)
01/29 09:38:12 PM | cin: None
01/29 09:38:12 PM | cout: None
01/29 09:38:12 PM | active
01/29 09:38:12 PM | -----
01/29 09:38:12 PM | module: Linear(in_features=512, out_features=10, bias=True)
01/29 09:38:12 PM | cin: None
01/29 09:38:12 PM | cout: None
01/29 09:38:12 PM | inactive
01/29 09:38:12 PM | Used masks: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
01/29 09:38:12 PM | 13 unique masks in total
01/29 09:38:13 PM | === Batch 1/6
01/29 09:38:13 PM | loss = 0.047 + 4.266 + 0.040 = 4.353
01/29 09:38:13 PM | attribution_score[0:12]: 
[ 0.94  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.94  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.94 ]
[ 0.83  0.83  0.94  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.94  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.94  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.94  0.83 ]
[ 0.83  0.94  0.83  0.83  0.83  0.83  0.83  0.94  0.83  0.83  0.83  0.83 ]
[ 0.94  0.94  0.94  0.94  0.94  0.94  0.83  0.83  0.94  0.94  0.94  0.83 ]

01/29 09:38:13 PM | === Batch 2/6
01/29 09:38:14 PM | loss = 0.345 + 3.308 + 0.062 = 3.715
01/29 09:38:14 PM | attribution_score[0:12]: 
[ 0.96  0.88  0.77  0.73  0.75  0.73  0.73  0.73  0.73  0.73  0.73  0.81 ]
[ 0.87  0.76  0.75  0.74  0.87  0.73  0.74  0.73  0.73  0.86  0.88  0.74 ]
[ 0.96  0.88  0.74  0.88  0.73  0.88  0.86  0.77  0.74  0.74  0.73  0.96 ]
[ 0.73  0.83  0.96  0.74  0.76  0.73  0.85  0.87  0.81  0.85  0.73  0.88 ]
[ 0.83  0.76  0.96  0.74  0.75  0.73  0.73  0.75  0.74  0.74  0.86  0.85 ]
[ 0.73  0.75  0.77  0.74  0.73  0.80  0.74  0.74  0.73  0.74  0.73  0.86 ]
[ 0.74  0.73  0.94  0.74  0.74  0.75  0.74  0.73  0.76  0.74  0.86  0.75 ]
[ 0.73  0.73  0.73  0.73  0.74  0.73  0.73  0.73  0.74  0.73  0.73  0.82 ]
[ 0.75  0.73  0.73  0.73  0.74  0.73  0.73  0.73  0.74  0.73  0.80  0.73 ]
[ 0.73  0.73  0.73  0.73  0.85  0.74  0.73  0.73  0.74  0.73  0.75  0.73 ]
[ 0.73  0.75  0.85  0.74  0.73  0.86  0.73  0.75  0.81  0.73  0.96  0.74 ]
[ 0.88  0.97  0.76  0.87  0.88  0.86  0.74  0.97  0.84  0.88  0.87  0.74 ]
[ 0.97  0.96  0.97  0.91  0.97  0.96  0.88  0.88  0.96  0.97  0.97  0.73 ]

01/29 09:38:14 PM | === Batch 3/6
01/29 09:38:14 PM | loss = 0.339 + 2.497 + 0.081 = 2.918
01/29 09:38:14 PM | attribution_score[0:12]: 
[ 0.98  0.90  0.68  0.60  0.64  0.61  0.60  0.60  0.60  0.60  0.61  0.86 ]
[ 0.89  0.66  0.78  0.61  0.90  0.67  0.63  0.61  0.69  0.90  0.91  0.62 ]
[ 0.97  0.91  0.62  0.92  0.60  0.92  0.86  0.68  0.62  0.62  0.60  0.98 ]
[ 0.61  0.84  0.97  0.70  0.66  0.76  0.80  0.90  0.81  0.82  0.68  0.91 ]
[ 0.78  0.66  0.97  0.63  0.79  0.60  0.60  0.64  0.75  0.61  0.85  0.85 ]
[ 0.62  0.65  0.68  0.61  0.60  0.74  0.61  0.62  0.62  0.62  0.60  0.85 ]
[ 0.64  0.61  0.94  0.64  0.64  0.64  0.61  0.69  0.66  0.78  0.90  0.63 ]
[ 0.60  0.60  0.61  0.60  0.61  0.60  0.60  0.60  0.70  0.61  0.60  0.80 ]
[ 0.65  0.67  0.60  0.60  0.62  0.60  0.60  0.60  0.66  0.60  0.80  0.68 ]
[ 0.64  0.61  0.60  0.60  0.87  0.67  0.60  0.60  0.72  0.60  0.63  0.63 ]
[ 0.61  0.79  0.89  0.61  0.61  0.90  0.79  0.76  0.86  0.71  0.98  0.75 ]
[ 0.91  0.98  0.78  0.91  0.93  0.89  0.79  0.98  0.81  0.92  0.91  0.80 ]
[ 0.98  0.98  0.98  0.90  0.98  0.98  0.92  0.93  0.98  0.98  0.98  0.60 ]

01/29 09:38:14 PM | === Batch 4/6
01/29 09:38:15 PM | loss = 0.558 + 1.677 + 0.101 = 2.336
01/29 09:38:15 PM | attribution_score[0:12]: 
[ 0.98  0.92  0.57  0.46  0.50  0.47  0.46  0.45  0.45  0.46  0.46  0.84 ]
[ 0.90  0.56  0.83  0.47  0.90  0.58  0.61  0.46  0.72  0.92  0.91  0.48 ]
[ 0.98  0.94  0.48  0.94  0.45  0.94  0.87  0.64  0.48  0.49  0.48  0.98 ]
[ 0.47  0.85  0.96  0.73  0.57  0.82  0.74  0.92  0.78  0.80  0.64  0.92 ]
[ 0.71  0.53  0.98  0.53  0.85  0.47  0.45  0.51  0.80  0.56  0.82  0.80 ]
[ 0.61  0.64  0.55  0.46  0.47  0.64  0.50  0.50  0.50  0.49  0.45  0.82 ]
[ 0.53  0.47  0.93  0.53  0.52  0.52  0.57  0.73  0.71  0.84  0.94  0.50 ]
[ 0.45  0.46  0.46  0.45  0.50  0.45  0.57  0.45  0.73  0.47  0.48  0.73 ]
[ 0.55  0.71  0.45  0.61  0.50  0.45  0.47  0.47  0.65  0.45  0.83  0.74 ]
[ 0.62  0.47  0.45  0.45  0.84  0.65  0.46  0.45  0.77  0.45  0.52  0.56 ]
[ 0.47  0.85  0.93  0.60  0.64  0.92  0.85  0.79  0.90  0.77  0.99  0.81 ]
[ 0.91  0.99  0.84  0.95  0.95  0.90  0.85  0.99  0.74  0.94  0.94  0.86 ]
[ 0.99  0.99  0.99  0.92  0.99  0.99  0.95  0.96  0.98  0.99  0.99  0.56 ]

01/29 09:38:15 PM | === Batch 5/6
01/29 09:38:15 PM | loss = 0.910 + 1.011 + 0.111 = 2.031
01/29 09:38:16 PM | attribution_score[0:12]: 
[ 0.99  0.93  0.47  0.31  0.37  0.33  0.32  0.31  0.31  0.33  0.32  0.83 ]
[ 0.92  0.45  0.84  0.33  0.90  0.47  0.65  0.32  0.72  0.93  0.91  0.45 ]
[ 0.99  0.95  0.34  0.95  0.32  0.96  0.87  0.61  0.35  0.36  0.35  0.98 ]
[ 0.37  0.81  0.95  0.78  0.49  0.85  0.74  0.94  0.72  0.79  0.62  0.92 ]
[ 0.73  0.53  0.98  0.45  0.89  0.40  0.32  0.38  0.84  0.57  0.79  0.73 ]
[ 0.61  0.69  0.43  0.33  0.34  0.52  0.46  0.44  0.39  0.35  0.31  0.76 ]
[ 0.57  0.35  0.91  0.42  0.59  0.40  0.59  0.80  0.78  0.82  0.95  0.37 ]
[ 0.31  0.32  0.32  0.31  0.48  0.31  0.54  0.31  0.79  0.33  0.37  0.64 ]
[ 0.44  0.73  0.31  0.68  0.37  0.31  0.36  0.34  0.70  0.31  0.82  0.81 ]
[ 0.63  0.36  0.31  0.31  0.79  0.65  0.33  0.31  0.83  0.31  0.40  0.48 ]
[ 0.33  0.90  0.94  0.65  0.72  0.90  0.89  0.77  0.93  0.84  0.99  0.87 ]
[ 0.91  0.99  0.89  0.96  0.97  0.89  0.89  0.99  0.65  0.95  0.96  0.91 ]
[ 0.99  0.99  0.99  0.93  0.99  0.99  0.96  0.97  0.99  0.99  0.99  0.47 ]

01/29 09:38:16 PM | === Batch 6/6
01/29 09:38:16 PM | loss = 0.936 + 0.464 + 0.095 = 1.495
01/29 09:38:16 PM | attribution_score[0:12]: 
[ 0.99  0.94  0.38  0.20  0.26  0.22  0.21  0.20  0.20  0.21  0.21  0.85 ]
[ 0.93  0.34  0.84  0.22  0.88  0.35  0.71  0.21  0.72  0.94  0.91  0.45 ]
[ 0.99  0.95  0.23  0.96  0.20  0.96  0.85  0.64  0.24  0.25  0.24  0.99 ]
[ 0.30  0.75  0.94  0.81  0.50  0.88  0.72  0.95  0.64  0.76  0.55  0.92 ]
[ 0.72  0.51  0.99  0.44  0.90  0.39  0.23  0.28  0.87  0.63  0.76  0.65 ]
[ 0.67  0.74  0.31  0.23  0.23  0.40  0.44  0.39  0.31  0.31  0.20  0.67 ]
[ 0.65  0.26  0.90  0.39  0.63  0.39  0.55  0.80  0.80  0.85  0.95  0.25 ]
[ 0.20  0.21  0.21  0.20  0.43  0.20  0.50  0.20  0.78  0.21  0.28  0.55 ]
[ 0.41  0.72  0.20  0.69  0.30  0.20  0.25  0.23  0.74  0.25  0.76  0.82 ]
[ 0.60  0.26  0.20  0.20  0.78  0.68  0.23  0.20  0.88  0.20  0.30  0.40 ]
[ 0.24  0.93  0.94  0.63  0.75  0.89  0.92  0.80  0.95  0.86  0.99  0.90 ]
[ 0.93  0.99  0.91  0.97  0.97  0.87  0.92  1.00  0.52  0.95  0.97  0.93 ]
[ 0.99  0.99  1.00  0.95  1.00  1.00  0.97  0.97  0.99  0.99  0.99  0.46 ]

01/29 09:38:16 PM | ===
Best loss was 1.50 at iteration 6

01/29 09:38:16 PM | Looking for optimal threshold...
01/29 09:38:16 PM | Testing threshold 0.5
01/29 09:38:16 PM | Distance to target: 4,756,528
01/29 09:38:16 PM | Testing threshold 0.75
01/29 09:38:16 PM | Distance to target: 54,152,920
01/29 09:38:16 PM | Testing threshold 0.625
01/29 09:38:16 PM | Distance to target: 25,086,976
01/29 09:38:16 PM | Testing threshold 0.5625
01/29 09:38:16 PM | Distance to target: 11,348,256
01/29 09:38:16 PM | Testing threshold 0.53125
01/29 09:38:16 PM | Distance to target: 3,453,608
01/29 09:38:16 PM | Testing threshold 0.515625
01/29 09:38:16 PM | Distance to target: 790,920
01/29 09:38:16 PM | Testing threshold 0.5234375
01/29 09:38:16 PM | Distance to target: 1,155,416
01/29 09:38:16 PM | Testing threshold 0.51953125
01/29 09:38:16 PM | Distance to target: 388,968
01/29 09:38:16 PM | Testing threshold 0.517578125
01/29 09:38:16 PM | Distance to target: 331,144
01/29 09:38:16 PM | Testing threshold 0.5185546875
01/29 09:38:16 PM | Distance to target: 124,632
01/29 09:38:16 PM | Testing threshold 0.51904296875
01/29 09:38:16 PM | Distance to target: 81,256
01/29 09:38:16 PM | Testing threshold 0.519287109375
01/29 09:38:17 PM | Distance to target: 280,984
01/29 09:38:17 PM | Testing threshold 0.5191650390625
01/29 09:38:17 PM | Distance to target: 81,256
01/29 09:38:17 PM | Testing threshold 0.51922607421875
01/29 09:38:17 PM | Distance to target: 280,984
01/29 09:38:17 PM | Testing threshold 0.519195556640625
01/29 09:38:17 PM | Distance to target: 81,256
01/29 09:38:17 PM | Testing threshold 0.5192108154296875
01/29 09:38:17 PM | Distance to target: 280,984
01/29 09:38:17 PM | Testing threshold 0.5192031860351562
01/29 09:38:17 PM | Distance to target: 81,256
01/29 09:38:17 PM | Testing threshold 0.5192070007324219
01/29 09:38:17 PM | Distance to target: 81,256
01/29 09:38:17 PM | Testing threshold 0.5192089080810547
01/29 09:38:17 PM | Distance to target: 280,984
01/29 09:38:17 PM | Testing threshold 0.5192079544067383
01/29 09:38:17 PM | Distance to target: 81,256
01/29 09:38:17 PM | Testing threshold 0.5192084312438965
01/29 09:38:17 PM | Distance to target: 280,984
01/29 09:38:17 PM | Testing threshold 0.5192081928253174
01/29 09:38:17 PM | Distance to target: 81,256
01/29 09:38:17 PM | Testing threshold 0.5192083120346069
01/29 09:38:17 PM | Distance to target: 81,256
01/29 09:38:17 PM | Testing threshold 0.5192083716392517
01/29 09:38:17 PM | Distance to target: 81,256
01/29 09:38:17 PM | Testing threshold 0.5192084014415741
01/29 09:38:17 PM | Distance to target: 81,256
01/29 09:38:17 PM | Testing threshold 0.5192084163427353
01/29 09:38:17 PM | Distance to target: 81,256
01/29 09:38:17 PM | Testing threshold 0.5192084237933159
01/29 09:38:17 PM | Distance to target: 81,256
01/29 09:38:17 PM | Testing threshold 0.5192084275186062
01/29 09:38:17 PM | Distance to target: 81,256
01/29 09:38:17 PM | Testing threshold 0.5192084293812513
01/29 09:38:17 PM | Distance to target: 81,256
01/29 09:38:17 PM | Testing threshold 0.5192084303125739
01/29 09:38:17 PM | Distance to target: 81,256
01/29 09:38:17 PM | Testing threshold 0.5192084307782352
01/29 09:38:17 PM | Distance to target: 81,256
01/29 09:38:17 PM | Testing threshold 0.5192084310110658
01/29 09:38:17 PM | Distance to target: 81,256
01/29 09:38:17 PM | Testing threshold 0.5192084311274812
01/29 09:38:17 PM | Distance to target: 81,256
01/29 09:38:17 PM | Testing threshold 0.5192084311856888
01/29 09:38:17 PM | Distance to target: 81,256
01/29 09:38:17 PM | Testing threshold 0.5192084312147927
01/29 09:38:17 PM | Distance to target: 81,256
01/29 09:38:17 PM | Testing threshold 0.5192084312293446
01/29 09:38:17 PM | Distance to target: 81,256
01/29 09:38:17 PM | Testing threshold 0.5192084312366205
01/29 09:38:17 PM | Distance to target: 81,256
01/29 09:38:17 PM | Testing threshold 0.5192084312402585
01/29 09:38:17 PM | Distance to target: 81,256
01/29 09:38:17 PM | Testing threshold 0.5192084312420775
01/29 09:38:17 PM | Distance to target: 81,256
01/29 09:38:17 PM | Testing threshold 0.519208431242987
01/29 09:38:17 PM | Distance to target: 81,256
01/29 09:38:17 PM | Testing threshold 0.5192084312434417
01/29 09:38:17 PM | Distance to target: 81,256
01/29 09:38:17 PM | Testing threshold 0.5192084312436691
01/29 09:38:17 PM | Distance to target: 81,256
01/29 09:38:17 PM | Testing threshold 0.5192084312437828
01/29 09:38:17 PM | Distance to target: 81,256
01/29 09:38:17 PM | Testing threshold 0.5192084312438396
01/29 09:38:17 PM | Distance to target: 81,256
01/29 09:38:17 PM | Testing threshold 0.5192084312438681
01/29 09:38:17 PM | Distance to target: 81,256
01/29 09:38:17 PM | Testing threshold 0.5192084312438823
01/29 09:38:17 PM | Distance to target: 81,256
01/29 09:38:17 PM | Testing threshold 0.5192084312438894
01/29 09:38:17 PM | Distance to target: 81,256
01/29 09:38:17 PM | Testing threshold 0.5192084312438929
01/29 09:38:17 PM | Distance to target: 81,256
01/29 09:38:17 PM | Testing threshold 0.5192084312438947
01/29 09:38:17 PM | Distance to target: 81,256
01/29 09:38:17 PM | Testing threshold 0.5192084312438956
01/29 09:38:17 PM | Distance to target: 81,256
01/29 09:38:19 PM | attribution_score[0:12]: 
[ 1.00  1.00  0.00  0.00  0.00  0.00  0.00  0.00  0.00  0.00  0.00  1.00 ]
[ 1.00  0.00  1.00  0.00  1.00  0.00  1.00  0.00  1.00  1.00  1.00  0.00 ]
[ 1.00  1.00  0.00  1.00  0.00  1.00  1.00  1.00  0.00  0.00  0.00  1.00 ]
[ 0.00  1.00  1.00  1.00  0.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 1.00  1.00  1.00  0.00  1.00  0.00  0.00  0.00  1.00  1.00  1.00  1.00 ]
[ 1.00  1.00  0.00  0.00  0.00  1.00  0.00  0.00  0.00  0.00  0.00  1.00 ]
[ 1.00  0.00  1.00  0.00  1.00  0.00  1.00  1.00  1.00  1.00  1.00  0.00 ]
[ 0.00  0.00  0.00  0.00  0.00  0.00  1.00  0.00  1.00  0.00  0.00  1.00 ]
[ 0.00  1.00  0.00  1.00  0.00  0.00  0.00  0.00  1.00  0.00  1.00  1.00 ]
[ 1.00  0.00  0.00  0.00  1.00  1.00  0.00  0.00  1.00  0.00  0.00  0.00 ]
[ 0.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  0.00 ]

01/29 09:38:19 PM | VGG(
  (features): Sequential(
    (conv0): Conv2d(3, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm0): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu0): ReLU(inplace=True)
    (conv1): Conv2d(24, 47, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm1): BatchNorm2d(47, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu1): ReLU(inplace=True)
    (pool2): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (conv3): Conv2d(47, 84, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm3): BatchNorm2d(84, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu3): ReLU(inplace=True)
    (conv4): Conv2d(84, 110, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm4): BatchNorm2d(110, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu4): ReLU(inplace=True)
    (pool5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (conv6): Conv2d(110, 140, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm6): BatchNorm2d(140, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu6): ReLU(inplace=True)
    (conv7): Conv2d(140, 138, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm7): BatchNorm2d(138, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu7): ReLU(inplace=True)
    (conv8): Conv2d(138, 156, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm8): BatchNorm2d(156, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu8): ReLU(inplace=True)
    (pool9): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (conv10): Conv2d(156, 197, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm10): BatchNorm2d(197, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu10): ReLU(inplace=True)
    (conv11): Conv2d(197, 145, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm11): BatchNorm2d(145, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu11): ReLU(inplace=True)
    (conv12): Conv2d(145, 243, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm12): BatchNorm2d(243, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu12): ReLU(inplace=True)
    (pool13): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (conv14): Conv2d(243, 425, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm14): BatchNorm2d(425, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu14): ReLU(inplace=True)
    (conv15): Conv2d(425, 495, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm15): BatchNorm2d(495, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu15): ReLU(inplace=True)
    (conv16): Conv2d(495, 509, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm16): BatchNorm2d(509, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu16): ReLU(inplace=True)
  )
  (classifier): Sequential(
    (linear1): Linear(in_features=509, out_features=512, bias=True)
    (norm1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu1): ReLU(inplace=True)
    (linear2): Linear(in_features=512, out_features=10, bias=True)
  )
)
01/29 09:38:21 PM | ----------------------------------------
01/29 09:38:21 PM | Performances input model:
01/29 09:38:21 PM |  - flops: 314,294,272
01/29 09:38:21 PM |  - params: 14,991,946
01/29 09:38:21 PM |  - accuracy: 93.95999908447266
01/29 09:38:21 PM | ----------------------------------------
01/29 09:38:21 PM | Performances pseudo-pruned model:
01/29 09:38:21 PM |  - flops: 314,294,272
01/29 09:38:21 PM |  - params: 14,991,946
01/29 09:38:21 PM |  - accuracy: 46.03999710083008
01/29 09:38:21 PM | ----------------------------------------
01/29 09:38:21 PM | Performances pruned model:
01/29 09:38:21 PM |  - flops: 108,580,000
01/29 09:38:21 PM |  - params: 6,852,370
01/29 09:38:21 PM |  - accuracy: 46.03999710083008
01/29 09:38:21 PM | ----------------------------------------
01/29 09:38:21 PM | Total time: 21.66s
