01/29 03:17:40 AM | args = Namespace(output_dir='result/rebuttal/nb_epoch/vgg/nbbtchs40/seed_01', loaded_model_path='./checkpoints/cifar10/vgg_16_bn.pt', resume=False, test_only=False, mode='prune', batch_size=64, nb_batches=40, Mflops_target=None, lr=0.6, momentum=0.9, beta=6, gamma=0.4, gpu='0', num_workers=4, dataset='cifar10', arch='vgg_16_bn', save_plot=False, seed=1, lr_finetuning=0.02, epoch_finetuning=200, wd=0.002, data_dir='./data/cifar10/', print_freq=200, num_classes=10, device_ids=[0], device=device(type='cuda', index=0), name_base='')
01/29 03:17:46 AM | ----------------------------------------
01/29 03:17:46 AM | ==> Building model...
01/29 03:17:46 AM | ----------------------------------------
01/29 03:17:46 AM | ==> Loading weights into the model...
01/29 03:17:46 AM | ----------------------------------------
01/29 03:17:46 AM | VGG(
  (features): Sequential(
    (conv0): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm0): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu0): ReLU(inplace=True)
    (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu1): ReLU(inplace=True)
    (pool2): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (conv3): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu3): ReLU(inplace=True)
    (conv4): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm4): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu4): ReLU(inplace=True)
    (pool5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (conv6): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm6): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu6): ReLU(inplace=True)
    (conv7): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm7): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu7): ReLU(inplace=True)
    (conv8): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm8): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu8): ReLU(inplace=True)
    (pool9): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (conv10): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm10): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu10): ReLU(inplace=True)
    (conv11): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm11): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu11): ReLU(inplace=True)
    (conv12): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm12): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu12): ReLU(inplace=True)
    (pool13): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (conv14): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm14): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu14): ReLU(inplace=True)
    (conv15): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm15): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu15): ReLU(inplace=True)
    (conv16): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm16): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu16): ReLU(inplace=True)
  )
  (classifier): Sequential(
    (linear1): Linear(in_features=512, out_features=512, bias=True)
    (norm1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu1): ReLU(inplace=True)
    (linear2): Linear(in_features=512, out_features=10, bias=True)
  )
)
01/29 03:17:47 AM | Save modules info...
01/29 03:17:47 AM | FLOPS pruning ratio is 0.65
01/29 03:17:48 AM | Pruning with information flow
01/29 03:17:48 AM | -----
01/29 03:17:48 AM | module: Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
01/29 03:17:48 AM | cin: None
01/29 03:17:48 AM | cout: [0]
01/29 03:17:48 AM | inactive
01/29 03:17:48 AM | -----
01/29 03:17:48 AM | module: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 03:17:48 AM | cin: [0]
01/29 03:17:48 AM | cout: [0]
01/29 03:17:48 AM | inactive
01/29 03:17:48 AM | -----
01/29 03:17:48 AM | module: ReLU(inplace=True)
01/29 03:17:48 AM | cin: [0]
01/29 03:17:48 AM | cout: [0]
01/29 03:17:48 AM | active
01/29 03:17:48 AM | -----
01/29 03:17:48 AM | module: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
01/29 03:17:48 AM | cin: [0]
01/29 03:17:48 AM | cout: [1]
01/29 03:17:48 AM | inactive
01/29 03:17:48 AM | -----
01/29 03:17:48 AM | module: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 03:17:48 AM | cin: [1]
01/29 03:17:48 AM | cout: [1]
01/29 03:17:48 AM | inactive
01/29 03:17:48 AM | -----
01/29 03:17:48 AM | module: ReLU(inplace=True)
01/29 03:17:48 AM | cin: [1]
01/29 03:17:48 AM | cout: [1]
01/29 03:17:48 AM | active
01/29 03:17:48 AM | -----
01/29 03:17:48 AM | module: MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
01/29 03:17:48 AM | cin: [1]
01/29 03:17:48 AM | cout: [1]
01/29 03:17:48 AM | inactive
01/29 03:17:48 AM | -----
01/29 03:17:48 AM | module: Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
01/29 03:17:48 AM | cin: [1]
01/29 03:17:48 AM | cout: [2]
01/29 03:17:48 AM | inactive
01/29 03:17:48 AM | -----
01/29 03:17:48 AM | module: BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 03:17:48 AM | cin: [2]
01/29 03:17:48 AM | cout: [2]
01/29 03:17:48 AM | inactive
01/29 03:17:48 AM | -----
01/29 03:17:48 AM | module: ReLU(inplace=True)
01/29 03:17:48 AM | cin: [2]
01/29 03:17:48 AM | cout: [2]
01/29 03:17:48 AM | active
01/29 03:17:48 AM | -----
01/29 03:17:48 AM | module: Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
01/29 03:17:48 AM | cin: [2]
01/29 03:17:48 AM | cout: [3]
01/29 03:17:48 AM | inactive
01/29 03:17:48 AM | -----
01/29 03:17:48 AM | module: BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 03:17:48 AM | cin: [3]
01/29 03:17:48 AM | cout: [3]
01/29 03:17:48 AM | inactive
01/29 03:17:48 AM | -----
01/29 03:17:48 AM | module: ReLU(inplace=True)
01/29 03:17:48 AM | cin: [3]
01/29 03:17:48 AM | cout: [3]
01/29 03:17:48 AM | active
01/29 03:17:48 AM | -----
01/29 03:17:48 AM | module: MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
01/29 03:17:48 AM | cin: [3]
01/29 03:17:48 AM | cout: [3]
01/29 03:17:48 AM | inactive
01/29 03:17:48 AM | -----
01/29 03:17:48 AM | module: Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
01/29 03:17:48 AM | cin: [3]
01/29 03:17:48 AM | cout: [4]
01/29 03:17:48 AM | inactive
01/29 03:17:48 AM | -----
01/29 03:17:48 AM | module: BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 03:17:48 AM | cin: [4]
01/29 03:17:48 AM | cout: [4]
01/29 03:17:48 AM | inactive
01/29 03:17:48 AM | -----
01/29 03:17:48 AM | module: ReLU(inplace=True)
01/29 03:17:48 AM | cin: [4]
01/29 03:17:48 AM | cout: [4]
01/29 03:17:48 AM | active
01/29 03:17:48 AM | -----
01/29 03:17:48 AM | module: Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
01/29 03:17:48 AM | cin: [4]
01/29 03:17:48 AM | cout: [5]
01/29 03:17:48 AM | inactive
01/29 03:17:48 AM | -----
01/29 03:17:48 AM | module: BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 03:17:48 AM | cin: [5]
01/29 03:17:48 AM | cout: [5]
01/29 03:17:48 AM | inactive
01/29 03:17:48 AM | -----
01/29 03:17:48 AM | module: ReLU(inplace=True)
01/29 03:17:48 AM | cin: [5]
01/29 03:17:48 AM | cout: [5]
01/29 03:17:48 AM | active
01/29 03:17:48 AM | -----
01/29 03:17:48 AM | module: Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
01/29 03:17:48 AM | cin: [5]
01/29 03:17:48 AM | cout: [6]
01/29 03:17:48 AM | inactive
01/29 03:17:48 AM | -----
01/29 03:17:48 AM | module: BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 03:17:48 AM | cin: [6]
01/29 03:17:48 AM | cout: [6]
01/29 03:17:48 AM | inactive
01/29 03:17:48 AM | -----
01/29 03:17:48 AM | module: ReLU(inplace=True)
01/29 03:17:48 AM | cin: [6]
01/29 03:17:48 AM | cout: [6]
01/29 03:17:48 AM | active
01/29 03:17:48 AM | -----
01/29 03:17:48 AM | module: MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
01/29 03:17:48 AM | cin: [6]
01/29 03:17:48 AM | cout: [6]
01/29 03:17:48 AM | inactive
01/29 03:17:48 AM | -----
01/29 03:17:48 AM | module: Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
01/29 03:17:48 AM | cin: [6]
01/29 03:17:48 AM | cout: [7]
01/29 03:17:48 AM | inactive
01/29 03:17:48 AM | -----
01/29 03:17:48 AM | module: BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 03:17:48 AM | cin: [7]
01/29 03:17:48 AM | cout: [7]
01/29 03:17:48 AM | inactive
01/29 03:17:48 AM | -----
01/29 03:17:48 AM | module: ReLU(inplace=True)
01/29 03:17:48 AM | cin: [7]
01/29 03:17:48 AM | cout: [7]
01/29 03:17:48 AM | active
01/29 03:17:48 AM | -----
01/29 03:17:48 AM | module: Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
01/29 03:17:48 AM | cin: [7]
01/29 03:17:48 AM | cout: [8]
01/29 03:17:48 AM | inactive
01/29 03:17:48 AM | -----
01/29 03:17:48 AM | module: BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 03:17:48 AM | cin: [8]
01/29 03:17:48 AM | cout: [8]
01/29 03:17:48 AM | inactive
01/29 03:17:48 AM | -----
01/29 03:17:48 AM | module: ReLU(inplace=True)
01/29 03:17:48 AM | cin: [8]
01/29 03:17:48 AM | cout: [8]
01/29 03:17:48 AM | active
01/29 03:17:48 AM | -----
01/29 03:17:48 AM | module: Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
01/29 03:17:48 AM | cin: [8]
01/29 03:17:48 AM | cout: [9]
01/29 03:17:48 AM | inactive
01/29 03:17:48 AM | -----
01/29 03:17:48 AM | module: BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 03:17:48 AM | cin: [9]
01/29 03:17:48 AM | cout: [9]
01/29 03:17:48 AM | inactive
01/29 03:17:48 AM | -----
01/29 03:17:48 AM | module: ReLU(inplace=True)
01/29 03:17:48 AM | cin: [9]
01/29 03:17:48 AM | cout: [9]
01/29 03:17:48 AM | active
01/29 03:17:48 AM | -----
01/29 03:17:48 AM | module: MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
01/29 03:17:48 AM | cin: [9]
01/29 03:17:48 AM | cout: [9]
01/29 03:17:48 AM | inactive
01/29 03:17:48 AM | -----
01/29 03:17:48 AM | module: Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
01/29 03:17:48 AM | cin: [9]
01/29 03:17:48 AM | cout: [10]
01/29 03:17:48 AM | inactive
01/29 03:17:48 AM | -----
01/29 03:17:48 AM | module: BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 03:17:48 AM | cin: [10]
01/29 03:17:48 AM | cout: [10]
01/29 03:17:48 AM | inactive
01/29 03:17:48 AM | -----
01/29 03:17:48 AM | module: ReLU(inplace=True)
01/29 03:17:48 AM | cin: [10]
01/29 03:17:48 AM | cout: [10]
01/29 03:17:48 AM | active
01/29 03:17:48 AM | -----
01/29 03:17:48 AM | module: Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
01/29 03:17:48 AM | cin: [10]
01/29 03:17:48 AM | cout: [11]
01/29 03:17:48 AM | inactive
01/29 03:17:48 AM | -----
01/29 03:17:48 AM | module: BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 03:17:48 AM | cin: [11]
01/29 03:17:48 AM | cout: [11]
01/29 03:17:48 AM | inactive
01/29 03:17:48 AM | -----
01/29 03:17:48 AM | module: ReLU(inplace=True)
01/29 03:17:48 AM | cin: [11]
01/29 03:17:48 AM | cout: [11]
01/29 03:17:48 AM | active
01/29 03:17:48 AM | -----
01/29 03:17:48 AM | module: Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
01/29 03:17:48 AM | cin: [11]
01/29 03:17:48 AM | cout: [12]
01/29 03:17:48 AM | inactive
01/29 03:17:48 AM | -----
01/29 03:17:48 AM | module: BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 03:17:48 AM | cin: [12]
01/29 03:17:48 AM | cout: [12]
01/29 03:17:48 AM | inactive
01/29 03:17:48 AM | -----
01/29 03:17:48 AM | module: ReLU(inplace=True)
01/29 03:17:48 AM | cin: [12]
01/29 03:17:48 AM | cout: [12]
01/29 03:17:48 AM | active
01/29 03:17:48 AM | -----
01/29 03:17:48 AM | module: Linear(in_features=512, out_features=512, bias=True)
01/29 03:17:48 AM | cin: [12]
01/29 03:17:48 AM | cout: None
01/29 03:17:48 AM | inactive
01/29 03:17:48 AM | -----
01/29 03:17:48 AM | module: ReLU(inplace=True)
01/29 03:17:48 AM | cin: None
01/29 03:17:48 AM | cout: None
01/29 03:17:48 AM | active
01/29 03:17:48 AM | -----
01/29 03:17:48 AM | module: Linear(in_features=512, out_features=10, bias=True)
01/29 03:17:48 AM | cin: None
01/29 03:17:48 AM | cout: None
01/29 03:17:48 AM | inactive
01/29 03:17:48 AM | Used masks: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
01/29 03:17:48 AM | 13 unique masks in total
01/29 03:17:48 AM | === Batch 1/40
01/29 03:17:48 AM | loss = 0.121 + 4.266 + 0.040 = 4.427
01/29 03:17:48 AM | attribution_score[0:12]: 
[ 0.94  0.94  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.94  0.83  0.83 ]
[ 0.83  0.83  0.94  0.83  0.94  0.83  0.83  0.83  0.83  0.94  0.83  0.83 ]
[ 0.83  0.94  0.83  0.83  0.83  0.83  0.83  0.94  0.83  0.83  0.83  0.94 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.94  0.83  0.83  0.94 ]
[ 0.83  0.83  0.94  0.83  0.83  0.83  0.94  0.83  0.94  0.94  0.83  0.83 ]
[ 0.83  0.83  0.94  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.94  0.83  0.83  0.83  0.83  0.94  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.94  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.94  0.83  0.83  0.83  0.83 ]
[ 0.94  0.94  0.94  0.83  0.94  0.94  0.83  0.94  0.83  0.94  0.94  0.83 ]

01/29 03:17:48 AM | === Batch 2/40
01/29 03:17:49 AM | loss = 0.130 + 3.498 + 0.058 = 3.685
01/29 03:17:49 AM | attribution_score[0:12]: 
[ 0.96  0.97  0.73  0.73  0.73  0.74  0.74  0.73  0.73  0.91  0.73  0.86 ]
[ 0.87  0.73  0.92  0.73  0.97  0.75  0.86  0.73  0.73  0.94  0.73  0.73 ]
[ 0.88  0.96  0.73  0.87  0.73  0.86  0.84  0.95  0.75  0.74  0.74  0.97 ]
[ 0.75  0.74  0.75  0.84  0.73  0.76  0.76  0.73  0.96  0.73  0.78  0.96 ]
[ 0.73  0.73  0.96  0.73  0.74  0.73  0.93  0.77  0.95  0.92  0.74  0.74 ]
[ 0.75  0.73  0.92  0.74  0.73  0.74  0.74  0.76  0.73  0.73  0.73  0.74 ]
[ 0.79  0.74  0.75  0.73  0.96  0.73  0.73  0.73  0.74  0.95  0.73  0.73 ]
[ 0.73  0.74  0.73  0.84  0.79  0.73  0.77  0.73  0.81  0.75  0.73  0.73 ]
[ 0.73  0.73  0.73  0.73  0.73  0.73  0.73  0.74  0.73  0.73  0.73  0.74 ]
[ 0.73  0.73  0.73  0.73  0.75  0.73  0.73  0.73  0.74  0.73  0.73  0.73 ]
[ 0.73  0.79  0.75  0.73  0.73  0.78  0.74  0.78  0.74  0.73  0.97  0.73 ]
[ 0.88  0.88  0.73  0.73  0.88  0.73  0.83  0.97  0.73  0.88  0.77  0.73 ]
[ 0.97  0.97  0.97  0.74  0.97  0.97  0.82  0.97  0.87  0.97  0.97  0.74 ]

01/29 03:17:49 AM | === Batch 3/40
01/29 03:17:49 AM | loss = 0.481 + 2.548 + 0.081 = 3.109
01/29 03:17:49 AM | attribution_score[0:12]: 
[ 0.98  0.97  0.60  0.60  0.61  0.61  0.62  0.60  0.60  0.87  0.61  0.87 ]
[ 0.84  0.60  0.89  0.60  0.97  0.67  0.85  0.60  0.70  0.95  0.60  0.61 ]
[ 0.91  0.97  0.60  0.90  0.61  0.90  0.81  0.95  0.64  0.63  0.62  0.97 ]
[ 0.66  0.62  0.77  0.87  0.72  0.76  0.65  0.60  0.97  0.60  0.69  0.97 ]
[ 0.60  0.65  0.96  0.64  0.71  0.74  0.89  0.75  0.96  0.89  0.63  0.63 ]
[ 0.65  0.79  0.88  0.63  0.61  0.62  0.65  0.65  0.61  0.60  0.60  0.72 ]
[ 0.77  0.62  0.73  0.64  0.97  0.61  0.61  0.60  0.63  0.97  0.77  0.61 ]
[ 0.60  0.62  0.60  0.82  0.71  0.66  0.73  0.60  0.81  0.65  0.60  0.60 ]
[ 0.60  0.61  0.60  0.60  0.61  0.60  0.60  0.61  0.63  0.60  0.61  0.76 ]
[ 0.62  0.60  0.60  0.60  0.64  0.63  0.60  0.60  0.63  0.60  0.61  0.62 ]
[ 0.60  0.84  0.80  0.61  0.60  0.72  0.78  0.83  0.61  0.69  0.98  0.61 ]
[ 0.92  0.92  0.74  0.79  0.93  0.73  0.88  0.98  0.65  0.92  0.82  0.62 ]
[ 0.98  0.98  0.98  0.61  0.98  0.98  0.87  0.98  0.92  0.98  0.98  0.62 ]

01/29 03:17:49 AM | === Batch 4/40
01/29 03:17:50 AM | loss = 0.751 + 1.667 + 0.102 = 2.521
01/29 03:17:50 AM | attribution_score[0:12]: 
[ 0.98  0.96  0.45  0.46  0.46  0.53  0.49  0.45  0.45  0.80  0.47  0.86 ]
[ 0.81  0.45  0.84  0.46  0.97  0.56  0.86  0.46  0.69  0.93  0.66  0.47 ]
[ 0.93  0.98  0.45  0.93  0.46  0.93  0.74  0.95  0.51  0.49  0.48  0.97 ]
[ 0.53  0.48  0.76  0.89  0.73  0.75  0.56  0.50  0.98  0.53  0.62  0.98 ]
[ 0.60  0.57  0.96  0.60  0.74  0.76  0.87  0.73  0.97  0.83  0.65  0.51 ]
[ 0.60  0.85  0.81  0.52  0.48  0.48  0.61  0.52  0.47  0.57  0.45  0.66 ]
[ 0.71  0.49  0.69  0.65  0.97  0.50  0.51  0.61  0.50  0.98  0.83  0.48 ]
[ 0.45  0.49  0.46  0.76  0.61  0.58  0.65  0.45  0.86  0.53  0.47  0.45 ]
[ 0.46  0.61  0.45  0.62  0.47  0.45  0.48  0.53  0.67  0.45  0.62  0.82 ]
[ 0.59  0.48  0.45  0.45  0.54  0.62  0.45  0.45  0.66  0.45  0.48  0.57 ]
[ 0.46  0.89  0.84  0.63  0.66  0.63  0.84  0.84  0.68  0.75  0.99  0.68 ]
[ 0.92  0.95  0.79  0.86  0.95  0.74  0.92  0.99  0.55  0.92  0.88  0.69 ]
[ 0.99  0.99  0.99  0.63  0.98  0.99  0.91  0.99  0.95  0.98  0.98  0.52 ]

01/29 03:17:50 AM | === Batch 5/40
01/29 03:17:50 AM | loss = 0.793 + 0.947 + 0.113 = 1.853
01/29 03:17:50 AM | attribution_score[0:12]: 
[ 0.99  0.96  0.32  0.32  0.33  0.46  0.37  0.31  0.31  0.76  0.33  0.88 ]
[ 0.81  0.33  0.77  0.32  0.97  0.43  0.90  0.33  0.66  0.90  0.70  0.37 ]
[ 0.95  0.98  0.31  0.94  0.32  0.95  0.64  0.95  0.37  0.36  0.34  0.97 ]
[ 0.40  0.34  0.74  0.90  0.66  0.77  0.50  0.47  0.98  0.51  0.55  0.98 ]
[ 0.66  0.46  0.94  0.56  0.73  0.81  0.85  0.69  0.97  0.78  0.71  0.49 ]
[ 0.56  0.86  0.72  0.40  0.36  0.41  0.66  0.43  0.36  0.60  0.31  0.65 ]
[ 0.73  0.42  0.67  0.60  0.97  0.41  0.41  0.61  0.47  0.98  0.88  0.42 ]
[ 0.31  0.41  0.34  0.67  0.51  0.47  0.54  0.31  0.88  0.41  0.33  0.32 ]
[ 0.38  0.62  0.31  0.67  0.43  0.31  0.38  0.43  0.74  0.36  0.68  0.87 ]
[ 0.60  0.36  0.31  0.31  0.42  0.60  0.31  0.31  0.73  0.31  0.35  0.53 ]
[ 0.40  0.93  0.84  0.69  0.73  0.65  0.89  0.88  0.76  0.81  0.99  0.76 ]
[ 0.90  0.97  0.83  0.90  0.96  0.77  0.94  0.99  0.43  0.90  0.92  0.77 ]
[ 0.99  0.99  0.99  0.71  0.99  0.99  0.93  0.99  0.97  0.98  0.98  0.40 ]

01/29 03:17:50 AM | === Batch 6/40
01/29 03:17:50 AM | loss = 1.012 + 0.368 + 0.098 = 1.477
01/29 03:17:51 AM | attribution_score[0:12]: 
[ 0.99  0.95  0.22  0.20  0.23  0.39  0.27  0.20  0.20  0.77  0.22  0.91 ]
[ 0.83  0.23  0.67  0.21  0.97  0.31  0.92  0.21  0.60  0.87  0.77  0.35 ]
[ 0.97  0.98  0.20  0.95  0.20  0.96  0.53  0.96  0.25  0.25  0.23  0.98 ]
[ 0.31  0.23  0.76  0.91  0.57  0.75  0.53  0.43  0.98  0.48  0.51  0.98 ]
[ 0.73  0.34  0.92  0.50  0.76  0.86  0.83  0.62  0.98  0.78  0.78  0.53 ]
[ 0.59  0.86  0.60  0.30  0.24  0.43  0.73  0.33  0.27  0.66  0.20  0.67 ]
[ 0.79  0.36  0.68  0.57  0.97  0.31  0.30  0.55  0.39  0.98  0.92  0.41 ]
[ 0.20  0.35  0.23  0.56  0.41  0.45  0.56  0.20  0.88  0.29  0.24  0.21 ]
[ 0.29  0.59  0.20  0.73  0.43  0.20  0.28  0.35  0.80  0.30  0.75  0.91 ]
[ 0.58  0.25  0.20  0.20  0.36  0.59  0.20  0.20  0.81  0.21  0.26  0.53 ]
[ 0.42  0.95  0.83  0.75  0.80  0.72  0.92  0.91  0.83  0.84  0.99  0.82 ]
[ 0.90  0.98  0.87  0.93  0.97  0.82  0.95  0.99  0.40  0.88  0.95  0.84 ]
[ 0.99  1.00  1.00  0.77  0.99  1.00  0.95  0.99  0.98  0.97  0.97  0.29 ]

01/29 03:17:51 AM | === Batch 7/40
01/29 03:17:51 AM | loss = 1.174 + 0.097 + 0.083 = 1.354
01/29 03:17:51 AM | attribution_score[0:12]: 
[ 0.99  0.96  0.23  0.16  0.21  0.42  0.24  0.16  0.15  0.81  0.19  0.93 ]
[ 0.87  0.19  0.69  0.17  0.97  0.30  0.94  0.16  0.59  0.89  0.83  0.40 ]
[ 0.97  0.97  0.16  0.96  0.17  0.97  0.55  0.96  0.22  0.20  0.19  0.98 ]
[ 0.26  0.18  0.82  0.93  0.58  0.78  0.60  0.47  0.97  0.53  0.55  0.98 ]
[ 0.79  0.34  0.92  0.50  0.78  0.90  0.83  0.66  0.98  0.82  0.84  0.56 ]
[ 0.66  0.88  0.62  0.29  0.22  0.51  0.80  0.31  0.22  0.74  0.15  0.73 ]
[ 0.85  0.37  0.73  0.61  0.98  0.31  0.26  0.54  0.42  0.98  0.95  0.46 ]
[ 0.15  0.37  0.20  0.53  0.41  0.51  0.63  0.15  0.89  0.29  0.24  0.15 ]
[ 0.30  0.64  0.17  0.80  0.47  0.17  0.26  0.38  0.85  0.33  0.82  0.94 ]
[ 0.63  0.26  0.16  0.16  0.37  0.64  0.18  0.17  0.87  0.20  0.25  0.60 ]
[ 0.48  0.96  0.87  0.78  0.83  0.79  0.94  0.94  0.88  0.86  1.00  0.86 ]
[ 0.92  0.99  0.91  0.94  0.98  0.88  0.95  0.99  0.45  0.89  0.97  0.89 ]
[ 1.00  1.00  1.00  0.82  0.99  1.00  0.96  0.99  0.99  0.97  0.96  0.24 ]

01/29 03:17:51 AM | === Batch 8/40
01/29 03:17:51 AM | loss = 1.276 + 0.027 + 0.075 = 1.379
01/29 03:17:52 AM | attribution_score[0:12]: 
[ 0.99  0.96  0.24  0.12  0.18  0.39  0.21  0.12  0.12  0.81  0.16  0.93 ]
[ 0.91  0.16  0.74  0.13  0.97  0.32  0.96  0.12  0.64  0.92  0.80  0.46 ]
[ 0.98  0.97  0.13  0.97  0.13  0.97  0.54  0.96  0.20  0.16  0.17  0.98 ]
[ 0.22  0.14  0.84  0.95  0.62  0.82  0.58  0.50  0.97  0.56  0.56  0.98 ]
[ 0.84  0.37  0.92  0.49  0.77  0.93  0.82  0.69  0.98  0.86  0.84  0.53 ]
[ 0.72  0.90  0.63  0.29  0.20  0.56  0.82  0.30  0.19  0.78  0.11  0.75 ]
[ 0.89  0.37  0.74  0.68  0.98  0.32  0.23  0.57  0.49  0.98  0.96  0.48 ]
[ 0.11  0.37  0.16  0.48  0.42  0.58  0.72  0.11  0.90  0.27  0.21  0.11 ]
[ 0.31  0.66  0.14  0.83  0.50  0.14  0.22  0.36  0.86  0.35  0.84  0.96 ]
[ 0.62  0.25  0.12  0.12  0.38  0.66  0.16  0.13  0.91  0.17  0.24  0.61 ]
[ 0.50  0.97  0.89  0.78  0.85  0.83  0.94  0.96  0.91  0.87  1.00  0.88 ]
[ 0.94  0.99  0.93  0.95  0.98  0.89  0.96  1.00  0.46  0.91  0.98  0.91 ]
[ 1.00  1.00  1.00  0.85  1.00  1.00  0.97  0.99  0.99  0.98  0.97  0.22 ]

01/29 03:17:52 AM | === Batch 9/40
01/29 03:17:52 AM | loss = 1.126 + 0.038 + 0.070 = 1.234
01/29 03:17:52 AM | attribution_score[0:12]: 
[ 0.99  0.97  0.24  0.09  0.16  0.36  0.19  0.09  0.08  0.77  0.12  0.93 ]
[ 0.94  0.14  0.80  0.09  0.95  0.37  0.97  0.09  0.71  0.94  0.75  0.54 ]
[ 0.98  0.96  0.10  0.97  0.10  0.98  0.50  0.97  0.18  0.13  0.16  0.98 ]
[ 0.18  0.10  0.84  0.96  0.69  0.87  0.56  0.47  0.96  0.53  0.53  0.98 ]
[ 0.86  0.43  0.93  0.51  0.73  0.95  0.79  0.74  0.98  0.91  0.82  0.48 ]
[ 0.80  0.93  0.62  0.32  0.17  0.58  0.80  0.30  0.16  0.82  0.08  0.78 ]
[ 0.92  0.35  0.74  0.75  0.98  0.34  0.19  0.54  0.57  0.99  0.96  0.50 ]
[ 0.08  0.36  0.13  0.44  0.41  0.65  0.78  0.08  0.89  0.24  0.18  0.08 ]
[ 0.30  0.66  0.11  0.83  0.53  0.11  0.17  0.33  0.86  0.36  0.84  0.97 ]
[ 0.58  0.22  0.09  0.10  0.37  0.66  0.14  0.10  0.93  0.14  0.24  0.61 ]
[ 0.50  0.97  0.90  0.76  0.87  0.86  0.95  0.97  0.93  0.87  1.00  0.89 ]
[ 0.95  1.00  0.94  0.96  0.99  0.88  0.97  1.00  0.42  0.93  0.98  0.92 ]
[ 1.00  1.00  1.00  0.89  1.00  1.00  0.97  0.99  0.99  0.98  0.97  0.22 ]

01/29 03:17:52 AM | === Batch 10/40
01/29 03:17:52 AM | loss = 0.792 + 0.011 + 0.065 = 0.868
01/29 03:17:52 AM | attribution_score[0:12]: 
[ 1.00  0.98  0.23  0.06  0.13  0.32  0.16  0.06  0.06  0.75  0.09  0.93 ]
[ 0.96  0.12  0.85  0.07  0.93  0.41  0.98  0.07  0.75  0.96  0.69  0.61 ]
[ 0.99  0.95  0.08  0.98  0.08  0.98  0.44  0.97  0.16  0.10  0.14  0.98 ]
[ 0.14  0.08  0.85  0.97  0.73  0.90  0.55  0.45  0.94  0.50  0.51  0.97 ]
[ 0.87  0.46  0.92  0.48  0.68  0.96  0.75  0.77  0.98  0.93  0.79  0.43 ]
[ 0.83  0.94  0.59  0.31  0.13  0.61  0.79  0.31  0.15  0.84  0.06  0.80 ]
[ 0.94  0.36  0.69  0.80  0.98  0.35  0.16  0.48  0.63  0.99  0.97  0.51 ]
[ 0.06  0.37  0.10  0.40  0.39  0.74  0.83  0.06  0.88  0.22  0.16  0.05 ]
[ 0.29  0.66  0.09  0.83  0.57  0.09  0.13  0.30  0.84  0.34  0.84  0.98 ]
[ 0.53  0.18  0.07  0.07  0.38  0.63  0.12  0.08  0.95  0.11  0.24  0.59 ]
[ 0.50  0.98  0.90  0.74  0.87  0.88  0.95  0.98  0.95  0.86  1.00  0.90 ]
[ 0.96  1.00  0.94  0.96  0.99  0.88  0.97  1.00  0.39  0.94  0.99  0.93 ]
[ 1.00  1.00  1.00  0.91  1.00  1.00  0.98  0.99  1.00  0.99  0.98  0.22 ]

01/29 03:17:52 AM | === Batch 11/40
01/29 03:17:53 AM | loss = 0.838 + 0.081 + 0.061 = 0.979
01/29 03:17:53 AM | attribution_score[0:12]: 
[ 1.00  0.98  0.25  0.05  0.12  0.33  0.16  0.05  0.05  0.77  0.08  0.94 ]
[ 0.97  0.12  0.88  0.06  0.93  0.46  0.99  0.05  0.78  0.97  0.68  0.68 ]
[ 0.99  0.95  0.07  0.98  0.06  0.99  0.45  0.97  0.16  0.09  0.15  0.99 ]
[ 0.12  0.06  0.87  0.97  0.78  0.92  0.56  0.46  0.94  0.51  0.56  0.98 ]
[ 0.89  0.52  0.91  0.50  0.67  0.97  0.76  0.82  0.98  0.95  0.79  0.40 ]
[ 0.85  0.95  0.63  0.30  0.12  0.66  0.77  0.34  0.15  0.86  0.05  0.84 ]
[ 0.95  0.42  0.67  0.84  0.99  0.37  0.15  0.40  0.67  0.99  0.97  0.57 ]
[ 0.04  0.41  0.08  0.42  0.43  0.82  0.87  0.05  0.88  0.25  0.16  0.04 ]
[ 0.32  0.71  0.08  0.83  0.64  0.07  0.11  0.32  0.83  0.35  0.86  0.99 ]
[ 0.53  0.15  0.06  0.06  0.41  0.61  0.12  0.06  0.96  0.10  0.27  0.62 ]
[ 0.52  0.98  0.92  0.72  0.87  0.91  0.95  0.99  0.96  0.85  1.00  0.90 ]
[ 0.97  1.00  0.95  0.97  0.99  0.88  0.97  1.00  0.39  0.95  0.99  0.94 ]
[ 1.00  1.00  1.00  0.92  1.00  1.00  0.98  1.00  1.00  0.99  0.98  0.25 ]

01/29 03:17:53 AM | === Batch 12/40
01/29 03:17:53 AM | loss = 0.805 + 0.048 + 0.058 = 0.911
01/29 03:17:53 AM | attribution_score[0:12]: 
[ 1.00  0.99  0.24  0.04  0.11  0.36  0.14  0.04  0.04  0.78  0.07  0.94 ]
[ 0.98  0.12  0.91  0.05  0.93  0.54  0.99  0.04  0.82  0.98  0.70  0.71 ]
[ 0.99  0.95  0.05  0.98  0.05  0.99  0.45  0.98  0.15  0.08  0.14  0.99 ]
[ 0.09  0.05  0.88  0.97  0.81  0.93  0.55  0.52  0.94  0.53  0.60  0.98 ]
[ 0.90  0.55  0.89  0.51  0.65  0.97  0.79  0.85  0.98  0.96  0.80  0.36 ]
[ 0.85  0.95  0.65  0.26  0.11  0.71  0.76  0.34  0.16  0.86  0.04  0.87 ]
[ 0.96  0.47  0.63  0.85  0.99  0.33  0.13  0.35  0.68  0.99  0.98  0.63 ]
[ 0.03  0.43  0.07  0.42  0.45  0.83  0.90  0.04  0.89  0.27  0.16  0.03 ]
[ 0.34  0.76  0.07  0.84  0.71  0.06  0.09  0.33  0.83  0.35  0.87  0.99 ]
[ 0.54  0.13  0.05  0.05  0.45  0.57  0.11  0.05  0.97  0.09  0.30  0.63 ]
[ 0.54  0.98  0.93  0.71  0.88  0.93  0.95  0.99  0.97  0.83  1.00  0.90 ]
[ 0.97  1.00  0.95  0.97  0.99  0.89  0.97  1.00  0.38  0.96  0.99  0.95 ]
[ 1.00  1.00  1.00  0.93  1.00  1.00  0.98  1.00  1.00  0.99  0.99  0.25 ]

01/29 03:17:53 AM | === Batch 13/40
01/29 03:17:53 AM | loss = 0.618 + 0.104 + 0.055 = 0.777
01/29 03:17:54 AM | attribution_score[0:12]: 
[ 1.00  0.99  0.24  0.03  0.09  0.42  0.13  0.04  0.03  0.81  0.06  0.95 ]
[ 0.98  0.13  0.92  0.04  0.92  0.62  0.99  0.03  0.85  0.98  0.74  0.72 ]
[ 0.99  0.94  0.05  0.99  0.04  0.99  0.44  0.98  0.14  0.06  0.13  0.99 ]
[ 0.08  0.04  0.89  0.98  0.85  0.94  0.56  0.59  0.94  0.56  0.62  0.98 ]
[ 0.91  0.54  0.88  0.51  0.63  0.98  0.81  0.86  0.98  0.97  0.80  0.34 ]
[ 0.85  0.96  0.65  0.23  0.10  0.75  0.75  0.33  0.16  0.84  0.03  0.89 ]
[ 0.96  0.47  0.58  0.86  0.99  0.29  0.12  0.33  0.69  0.99  0.98  0.66 ]
[ 0.03  0.46  0.06  0.41  0.44  0.84  0.91  0.03  0.92  0.29  0.16  0.03 ]
[ 0.33  0.81  0.06  0.85  0.76  0.05  0.08  0.34  0.82  0.32  0.89  0.99 ]
[ 0.54  0.11  0.04  0.04  0.48  0.53  0.10  0.04  0.97  0.08  0.33  0.63 ]
[ 0.53  0.99  0.94  0.70  0.88  0.94  0.96  0.99  0.98  0.83  1.00  0.91 ]
[ 0.98  1.00  0.95  0.98  0.99  0.90  0.97  1.00  0.37  0.97  0.99  0.96 ]
[ 1.00  1.00  1.00  0.93  1.00  1.00  0.99  1.00  1.00  0.99  0.99  0.24 ]

01/29 03:17:54 AM | === Batch 14/40
01/29 03:17:54 AM | loss = 0.739 + 0.137 + 0.053 = 0.929
01/29 03:17:54 AM | attribution_score[0:12]: 
[ 1.00  0.99  0.22  0.03  0.08  0.48  0.12  0.03  0.02  0.82  0.05  0.95 ]
[ 0.99  0.13  0.93  0.03  0.93  0.69  0.99  0.03  0.88  0.98  0.78  0.70 ]
[ 0.99  0.94  0.04  0.99  0.03  0.99  0.42  0.98  0.14  0.05  0.13  0.99 ]
[ 0.07  0.03  0.90  0.98  0.87  0.94  0.56  0.67  0.94  0.60  0.64  0.98 ]
[ 0.92  0.49  0.84  0.51  0.67  0.98  0.83  0.86  0.99  0.97  0.82  0.35 ]
[ 0.85  0.96  0.65  0.20  0.09  0.77  0.73  0.29  0.16  0.82  0.03  0.91 ]
[ 0.97  0.48  0.50  0.85  0.99  0.23  0.11  0.32  0.70  0.99  0.98  0.70 ]
[ 0.02  0.48  0.05  0.38  0.41  0.83  0.93  0.02  0.93  0.29  0.16  0.02 ]
[ 0.29  0.85  0.05  0.85  0.80  0.04  0.06  0.35  0.82  0.29  0.90  0.99 ]
[ 0.53  0.08  0.03  0.04  0.49  0.46  0.09  0.04  0.98  0.07  0.34  0.63 ]
[ 0.53  0.99  0.95  0.71  0.89  0.95  0.96  0.99  0.98  0.83  1.00  0.91 ]
[ 0.98  1.00  0.95  0.98  1.00  0.90  0.98  1.00  0.35  0.98  0.99  0.96 ]
[ 1.00  1.00  1.00  0.94  1.00  1.00  0.99  1.00  1.00  0.99  0.99  0.22 ]

01/29 03:17:54 AM | === Batch 15/40
01/29 03:17:54 AM | loss = 0.657 + 0.139 + 0.050 = 0.846
01/29 03:17:54 AM | attribution_score[0:12]: 
[ 1.00  0.99  0.19  0.02  0.07  0.54  0.11  0.02  0.02  0.83  0.04  0.95 ]
[ 0.99  0.13  0.94  0.03  0.93  0.74  0.99  0.02  0.91  0.99  0.81  0.66 ]
[ 0.99  0.94  0.03  0.99  0.03  0.99  0.37  0.98  0.13  0.05  0.12  0.98 ]
[ 0.06  0.03  0.91  0.98  0.90  0.94  0.58  0.72  0.95  0.61  0.65  0.98 ]
[ 0.93  0.44  0.80  0.53  0.71  0.98  0.84  0.85  0.99  0.98  0.83  0.39 ]
[ 0.85  0.96  0.64  0.17  0.08  0.80  0.74  0.26  0.16  0.81  0.02  0.92 ]
[ 0.97  0.50  0.44  0.84  0.99  0.20  0.10  0.33  0.68  0.99  0.99  0.73 ]
[ 0.02  0.50  0.04  0.33  0.36  0.81  0.94  0.02  0.94  0.27  0.17  0.02 ]
[ 0.26  0.88  0.05  0.86  0.84  0.04  0.05  0.35  0.82  0.26  0.91  1.00 ]
[ 0.53  0.07  0.03  0.03  0.49  0.42  0.08  0.03  0.98  0.06  0.33  0.64 ]
[ 0.52  0.99  0.95  0.72  0.89  0.96  0.96  0.99  0.98  0.83  1.00  0.92 ]
[ 0.98  1.00  0.95  0.98  1.00  0.91  0.98  1.00  0.32  0.98  0.99  0.96 ]
[ 1.00  1.00  1.00  0.94  1.00  1.00  0.99  1.00  1.00  1.00  0.99  0.19 ]

01/29 03:17:54 AM | === Batch 16/40
01/29 03:17:55 AM | loss = 0.503 + 0.124 + 0.048 = 0.675
01/29 03:17:55 AM | attribution_score[0:12]: 
[ 1.00  0.99  0.16  0.02  0.06  0.61  0.10  0.02  0.02  0.84  0.03  0.95 ]
[ 0.99  0.13  0.94  0.02  0.92  0.78  0.99  0.02  0.92  0.99  0.84  0.63 ]
[ 1.00  0.94  0.03  0.99  0.02  0.99  0.33  0.98  0.11  0.04  0.11  0.98 ]
[ 0.05  0.02  0.91  0.97  0.91  0.94  0.61  0.77  0.94  0.61  0.64  0.98 ]
[ 0.93  0.38  0.77  0.55  0.75  0.99  0.85  0.84  0.99  0.98  0.85  0.42 ]
[ 0.86  0.96  0.62  0.15  0.07  0.81  0.75  0.23  0.16  0.79  0.02  0.93 ]
[ 0.97  0.53  0.38  0.84  0.99  0.17  0.09  0.31  0.64  0.99  0.99  0.77 ]
[ 0.02  0.50  0.04  0.29  0.31  0.79  0.95  0.02  0.95  0.25  0.19  0.01 ]
[ 0.24  0.90  0.04  0.87  0.87  0.03  0.04  0.36  0.83  0.25  0.93  1.00 ]
[ 0.53  0.05  0.02  0.03  0.50  0.39  0.07  0.02  0.98  0.05  0.31  0.64 ]
[ 0.51  0.99  0.96  0.73  0.90  0.97  0.97  0.99  0.99  0.82  1.00  0.92 ]
[ 0.98  1.00  0.95  0.99  1.00  0.91  0.98  1.00  0.29  0.98  0.99  0.97 ]
[ 1.00  1.00  1.00  0.95  1.00  1.00  0.99  1.00  1.00  1.00  0.99  0.16 ]

01/29 03:17:55 AM | === Batch 17/40
01/29 03:17:55 AM | loss = 0.527 + 0.091 + 0.046 = 0.664
01/29 03:17:55 AM | attribution_score[0:12]: 
[ 1.00  0.99  0.14  0.01  0.05  0.64  0.09  0.02  0.01  0.86  0.03  0.95 ]
[ 0.99  0.12  0.95  0.02  0.92  0.80  0.99  0.02  0.94  0.99  0.86  0.58 ]
[ 1.00  0.94  0.02  0.99  0.02  0.99  0.28  0.99  0.10  0.03  0.10  0.98 ]
[ 0.05  0.02  0.91  0.97  0.93  0.94  0.65  0.81  0.94  0.59  0.63  0.98 ]
[ 0.93  0.32  0.72  0.54  0.77  0.99  0.85  0.83  0.99  0.98  0.86  0.45 ]
[ 0.86  0.96  0.58  0.13  0.06  0.81  0.75  0.20  0.16  0.77  0.02  0.94 ]
[ 0.97  0.57  0.31  0.83  0.99  0.14  0.07  0.29  0.60  0.99  0.99  0.80 ]
[ 0.01  0.48  0.04  0.25  0.26  0.77  0.96  0.01  0.95  0.24  0.21  0.01 ]
[ 0.22  0.92  0.04  0.88  0.89  0.03  0.04  0.34  0.83  0.24  0.93  1.00 ]
[ 0.51  0.04  0.02  0.02  0.52  0.35  0.06  0.02  0.99  0.04  0.29  0.64 ]
[ 0.49  0.99  0.96  0.72  0.91  0.97  0.97  1.00  0.99  0.81  1.00  0.92 ]
[ 0.99  1.00  0.95  0.99  1.00  0.91  0.98  1.00  0.26  0.98  0.99  0.97 ]
[ 1.00  1.00  1.00  0.96  1.00  1.00  0.99  1.00  1.00  1.00  0.99  0.14 ]

01/29 03:17:55 AM | === Batch 18/40
01/29 03:17:55 AM | loss = 0.457 + 0.043 + 0.044 = 0.544
01/29 03:17:56 AM | attribution_score[0:12]: 
[ 1.00  0.99  0.12  0.01  0.04  0.66  0.08  0.02  0.01  0.87  0.02  0.96 ]
[ 0.99  0.11  0.95  0.02  0.93  0.80  1.00  0.01  0.94  0.99  0.88  0.54 ]
[ 1.00  0.94  0.02  0.99  0.02  0.99  0.24  0.99  0.09  0.03  0.09  0.98 ]
[ 0.04  0.02  0.91  0.97  0.94  0.94  0.69  0.82  0.94  0.56  0.62  0.98 ]
[ 0.93  0.28  0.66  0.51  0.78  0.99  0.84  0.82  0.99  0.98  0.88  0.48 ]
[ 0.86  0.96  0.55  0.11  0.05  0.81  0.73  0.18  0.15  0.72  0.01  0.94 ]
[ 0.97  0.60  0.24  0.82  0.99  0.11  0.06  0.28  0.57  0.99  0.99  0.83 ]
[ 0.01  0.45  0.03  0.22  0.21  0.76  0.96  0.01  0.96  0.24  0.22  0.01 ]
[ 0.21  0.93  0.03  0.88  0.91  0.02  0.03  0.32  0.82  0.24  0.94  1.00 ]
[ 0.48  0.04  0.02  0.02  0.53  0.30  0.05  0.02  0.99  0.03  0.28  0.63 ]
[ 0.46  0.99  0.96  0.70  0.91  0.98  0.97  1.00  0.99  0.79  1.00  0.93 ]
[ 0.99  1.00  0.95  0.99  1.00  0.91  0.98  1.00  0.23  0.98  1.00  0.97 ]
[ 1.00  1.00  1.00  0.96  1.00  1.00  0.99  1.00  1.00  1.00  0.99  0.12 ]

01/29 03:17:56 AM | === Batch 19/40
01/29 03:17:56 AM | loss = 0.383 + 0.025 + 0.043 = 0.451
01/29 03:17:56 AM | attribution_score[0:12]: 
[ 1.00  0.99  0.12  0.01  0.04  0.70  0.08  0.01  0.01  0.90  0.02  0.96 ]
[ 1.00  0.10  0.95  0.01  0.94  0.81  1.00  0.01  0.95  0.99  0.89  0.51 ]
[ 1.00  0.95  0.02  0.99  0.01  0.99  0.22  0.99  0.09  0.02  0.08  0.98 ]
[ 0.04  0.01  0.92  0.97  0.95  0.94  0.74  0.84  0.94  0.55  0.63  0.98 ]
[ 0.93  0.28  0.68  0.50  0.79  0.99  0.83  0.83  0.99  0.99  0.90  0.53 ]
[ 0.87  0.96  0.56  0.10  0.04  0.82  0.73  0.18  0.15  0.67  0.01  0.95 ]
[ 0.97  0.64  0.20  0.82  0.99  0.10  0.06  0.28  0.58  0.99  0.99  0.85 ]
[ 0.01  0.46  0.03  0.22  0.19  0.77  0.97  0.01  0.96  0.26  0.24  0.01 ]
[ 0.23  0.94  0.03  0.89  0.92  0.02  0.03  0.32  0.83  0.27  0.95  1.00 ]
[ 0.48  0.03  0.01  0.02  0.58  0.30  0.05  0.02  0.99  0.03  0.28  0.66 ]
[ 0.46  0.99  0.97  0.69  0.91  0.98  0.97  1.00  0.99  0.78  1.00  0.93 ]
[ 0.99  1.00  0.95  0.99  1.00  0.92  0.98  1.00  0.22  0.98  1.00  0.98 ]
[ 1.00  1.00  1.00  0.96  1.00  1.00  0.99  1.00  1.00  1.00  0.99  0.11 ]

01/29 03:17:56 AM | === Batch 20/40
01/29 03:17:56 AM | loss = 0.633 + 0.016 + 0.041 = 0.691
01/29 03:17:56 AM | === Batch 21/40
01/29 03:17:57 AM | loss = 0.460 + 0.032 + 0.040 = 0.532
01/29 03:17:57 AM | === Batch 22/40
01/29 03:17:57 AM | loss = 0.694 + 0.032 + 0.038 = 0.765
01/29 03:17:57 AM | === Batch 23/40
01/29 03:17:57 AM | loss = 0.488 + 0.017 + 0.037 = 0.542
01/29 03:17:58 AM | === Batch 24/40
01/29 03:17:58 AM | loss = 0.495 + 0.023 + 0.036 = 0.554
01/29 03:17:58 AM | === Batch 25/40
01/29 03:17:58 AM | loss = 0.389 + 0.018 + 0.035 = 0.442
01/29 03:17:59 AM | === Batch 26/40
01/29 03:17:59 AM | loss = 0.426 + 0.034 + 0.034 = 0.493
01/29 03:17:59 AM | === Batch 27/40
01/29 03:17:59 AM | loss = 0.362 + 0.032 + 0.033 = 0.427
01/29 03:17:59 AM | === Batch 28/40
01/29 03:18:00 AM | loss = 0.464 + 0.017 + 0.032 = 0.514
01/29 03:18:00 AM | === Batch 29/40
01/29 03:18:00 AM | loss = 0.522 + 0.006 + 0.031 = 0.560
01/29 03:18:00 AM | === Batch 30/40
01/29 03:18:00 AM | loss = 0.707 + 0.026 + 0.031 = 0.764
01/29 03:18:01 AM | === Batch 31/40
01/29 03:18:01 AM | loss = 0.330 + 0.041 + 0.030 = 0.402
01/29 03:18:01 AM | === Batch 32/40
01/29 03:18:01 AM | loss = 0.401 + 0.043 + 0.029 = 0.473
01/29 03:18:01 AM | === Batch 33/40
01/29 03:18:02 AM | loss = 0.315 + 0.034 + 0.029 = 0.377
01/29 03:18:02 AM | === Batch 34/40
01/29 03:18:02 AM | loss = 0.374 + 0.012 + 0.028 = 0.413
01/29 03:18:02 AM | === Batch 35/40
01/29 03:18:02 AM | loss = 0.488 + 0.039 + 0.028 = 0.555
01/29 03:18:03 AM | === Batch 36/40
01/29 03:18:03 AM | loss = 0.518 + 0.016 + 0.027 = 0.561
01/29 03:18:03 AM | === Batch 37/40
01/29 03:18:03 AM | loss = 0.411 + 0.040 + 0.027 = 0.478
01/29 03:18:03 AM | === Batch 38/40
01/29 03:18:04 AM | loss = 0.399 + 0.070 + 0.026 = 0.495
01/29 03:18:04 AM | === Batch 39/40
01/29 03:18:04 AM | loss = 0.380 + 0.085 + 0.026 = 0.491
01/29 03:18:04 AM | === Batch 40/40
01/29 03:18:04 AM | loss = 0.473 + 0.089 + 0.025 = 0.588
01/29 03:18:05 AM | ===
Best loss was 0.38 at iteration 33

01/29 03:18:05 AM | Looking for optimal threshold...
01/29 03:18:05 AM | Testing threshold 0.5
01/29 03:18:05 AM | Distance to target: 1,852,928
01/29 03:18:05 AM | Testing threshold 0.75
01/29 03:18:05 AM | Distance to target: 16,647,240
01/29 03:18:05 AM | Testing threshold 0.625
01/29 03:18:05 AM | Distance to target: 5,932,512
01/29 03:18:05 AM | Testing threshold 0.5625
01/29 03:18:05 AM | Distance to target: 1,196,032
01/29 03:18:05 AM | Testing threshold 0.53125
01/29 03:18:05 AM | Distance to target: 314,560
01/29 03:18:05 AM | Testing threshold 0.546875
01/29 03:18:05 AM | Distance to target: 263,968
01/29 03:18:05 AM | Testing threshold 0.5390625
01/29 03:18:05 AM | Distance to target: 143,808
01/29 03:18:05 AM | Testing threshold 0.54296875
01/29 03:18:05 AM | Distance to target: 83,480
01/29 03:18:05 AM | Testing threshold 0.541015625
01/29 03:18:05 AM | Distance to target: 74,944
01/29 03:18:05 AM | Testing threshold 0.5419921875
01/29 03:18:05 AM | Distance to target: 49,128
01/29 03:18:06 AM | attribution_score[0:12]: 
[ 1.00  1.00  0.00  0.00  0.00  1.00  0.00  0.00  0.00  1.00  0.00  1.00 ]
[ 1.00  0.00  1.00  0.00  1.00  1.00  1.00  0.00  1.00  1.00  1.00  0.00 ]
[ 1.00  1.00  0.00  1.00  0.00  1.00  0.00  1.00  0.00  0.00  0.00  1.00 ]
[ 0.00  0.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  0.00  1.00  1.00 ]
[ 1.00  0.00  0.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 1.00  1.00  0.00  0.00  0.00  1.00  0.00  0.00  0.00  0.00  0.00  1.00 ]
[ 1.00  1.00  0.00  1.00  1.00  0.00  0.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.00  0.00  0.00  0.00  0.00  1.00  1.00  0.00  1.00  0.00  1.00  0.00 ]
[ 0.00  1.00  0.00  1.00  1.00  0.00  0.00  0.00  1.00  0.00  1.00  1.00 ]
[ 0.00  0.00  0.00  0.00  1.00  0.00  0.00  0.00  1.00  0.00  0.00  1.00 ]
[ 0.00  1.00  1.00  0.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  0.00  1.00  1.00  1.00 ]
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  0.00 ]

01/29 03:18:06 AM | VGG(
  (features): Sequential(
    (conv0): Conv2d(3, 25, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm0): BatchNorm2d(25, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu0): ReLU(inplace=True)
    (conv1): Conv2d(25, 47, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm1): BatchNorm2d(47, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu1): ReLU(inplace=True)
    (pool2): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (conv3): Conv2d(47, 77, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm3): BatchNorm2d(77, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu3): ReLU(inplace=True)
    (conv4): Conv2d(77, 100, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm4): BatchNorm2d(100, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu4): ReLU(inplace=True)
    (pool5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (conv6): Conv2d(100, 170, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm6): BatchNorm2d(170, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu6): ReLU(inplace=True)
    (conv7): Conv2d(170, 130, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm7): BatchNorm2d(130, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu7): ReLU(inplace=True)
    (conv8): Conv2d(130, 155, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm8): BatchNorm2d(155, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu8): ReLU(inplace=True)
    (pool9): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (conv10): Conv2d(155, 224, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm10): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu10): ReLU(inplace=True)
    (conv11): Conv2d(224, 175, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm11): BatchNorm2d(175, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu11): ReLU(inplace=True)
    (conv12): Conv2d(175, 254, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm12): BatchNorm2d(254, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu12): ReLU(inplace=True)
    (pool13): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (conv14): Conv2d(254, 410, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm14): BatchNorm2d(410, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu14): ReLU(inplace=True)
    (conv15): Conv2d(410, 463, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm15): BatchNorm2d(463, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu15): ReLU(inplace=True)
    (conv16): Conv2d(463, 506, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (norm16): BatchNorm2d(506, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu16): ReLU(inplace=True)
  )
  (classifier): Sequential(
    (linear1): Linear(in_features=506, out_features=512, bias=True)
    (norm1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu1): ReLU(inplace=True)
    (linear2): Linear(in_features=512, out_features=10, bias=True)
  )
)
01/29 03:18:08 AM | ----------------------------------------
01/29 03:18:08 AM | Performances input model:
01/29 03:18:08 AM |  - flops: 314,294,272
01/29 03:18:08 AM |  - params: 14,991,946
01/29 03:18:08 AM |  - accuracy: 93.95999908447266
01/29 03:18:08 AM | ----------------------------------------
01/29 03:18:08 AM | Performances pseudo-pruned model:
01/29 03:18:08 AM |  - flops: 314,294,272
01/29 03:18:08 AM |  - params: 14,991,946
01/29 03:18:08 AM |  - accuracy: 79.75999450683594
01/29 03:18:08 AM | ----------------------------------------
01/29 03:18:08 AM | Performances pruned model:
01/29 03:18:08 AM |  - flops: 108,546,772
01/29 03:18:08 AM |  - params: 6,739,879
01/29 03:18:08 AM |  - accuracy: 79.75999450683594
01/29 03:18:08 AM | ----------------------------------------
01/29 03:18:08 AM | Total time: 27.27s
