01/29 05:59:15 AM | args = Namespace(output_dir='result/rebuttal/nb_epoch/resnet56/nbbtchs250/seed_00', loaded_model_path='./checkpoints/cifar10/resnet_56.pt', resume=False, test_only=False, mode='prune', batch_size=64, nb_batches=250, Mflops_target=None, lr=0.6, momentum=0.9, beta=6, gamma=0.4, gpu='0', num_workers=4, dataset='cifar10', arch='resnet_56', save_plot=False, seed=0, lr_finetuning=0.02, epoch_finetuning=200, wd=0.002, data_dir='./data/cifar10/', print_freq=200, num_classes=10, device_ids=[0], device=device(type='cuda', index=0), name_base='')
01/29 05:59:20 AM | ----------------------------------------
01/29 05:59:20 AM | ==> Building model...
01/29 05:59:20 AM | ----------------------------------------
01/29 05:59:20 AM | ==> Loading weights into the model...
01/29 05:59:20 AM | ----------------------------------------
01/29 05:59:20 AM | ResNet(
  (conv1): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (1): BasicBlock(
      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (2): BasicBlock(
      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (3): BasicBlock(
      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (4): BasicBlock(
      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (5): BasicBlock(
      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (6): BasicBlock(
      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (7): BasicBlock(
      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (8): BasicBlock(
      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): LambdaLayer()
    )
    (1): BasicBlock(
      (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (2): BasicBlock(
      (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (3): BasicBlock(
      (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (4): BasicBlock(
      (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (5): BasicBlock(
      (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (6): BasicBlock(
      (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (7): BasicBlock(
      (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (8): BasicBlock(
      (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): LambdaLayer()
    )
    (1): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (2): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (3): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (4): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (5): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (6): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (7): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (8): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
  (linear): Linear(in_features=64, out_features=10, bias=True)
)
01/29 05:59:22 AM | Save modules info...
01/29 05:59:22 AM | FLOPS pruning ratio is 0.56
01/29 05:59:22 AM | Pruning with information flow
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 05:59:22 AM | cin: None
01/29 05:59:22 AM | cout: None
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 05:59:22 AM | cin: None
01/29 05:59:22 AM | cout: None
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: ReLU(inplace=True)
01/29 05:59:22 AM | cin: None
01/29 05:59:22 AM | cout: None
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 05:59:22 AM | cin: None
01/29 05:59:22 AM | cout: [1]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 05:59:22 AM | cin: [1]
01/29 05:59:22 AM | cout: [1]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: ReLU(inplace=True)
01/29 05:59:22 AM | cin: [1]
01/29 05:59:22 AM | cout: [1]
01/29 05:59:22 AM | active
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 05:59:22 AM | cin: [1]
01/29 05:59:22 AM | cout: [2]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 05:59:22 AM | cin: [2]
01/29 05:59:22 AM | cout: [2]
01/29 05:59:22 AM | active
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: ReLU(inplace=True)
01/29 05:59:22 AM | cin: None
01/29 05:59:22 AM | cout: None
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 05:59:22 AM | cin: None
01/29 05:59:22 AM | cout: [3]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 05:59:22 AM | cin: [3]
01/29 05:59:22 AM | cout: [3]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: ReLU(inplace=True)
01/29 05:59:22 AM | cin: [3]
01/29 05:59:22 AM | cout: [3]
01/29 05:59:22 AM | active
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 05:59:22 AM | cin: [3]
01/29 05:59:22 AM | cout: [4]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 05:59:22 AM | cin: [4]
01/29 05:59:22 AM | cout: [4]
01/29 05:59:22 AM | active
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: ReLU(inplace=True)
01/29 05:59:22 AM | cin: None
01/29 05:59:22 AM | cout: None
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 05:59:22 AM | cin: None
01/29 05:59:22 AM | cout: [5]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 05:59:22 AM | cin: [5]
01/29 05:59:22 AM | cout: [5]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: ReLU(inplace=True)
01/29 05:59:22 AM | cin: [5]
01/29 05:59:22 AM | cout: [5]
01/29 05:59:22 AM | active
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 05:59:22 AM | cin: [5]
01/29 05:59:22 AM | cout: [6]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 05:59:22 AM | cin: [6]
01/29 05:59:22 AM | cout: [6]
01/29 05:59:22 AM | active
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: ReLU(inplace=True)
01/29 05:59:22 AM | cin: None
01/29 05:59:22 AM | cout: None
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 05:59:22 AM | cin: None
01/29 05:59:22 AM | cout: [7]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 05:59:22 AM | cin: [7]
01/29 05:59:22 AM | cout: [7]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: ReLU(inplace=True)
01/29 05:59:22 AM | cin: [7]
01/29 05:59:22 AM | cout: [7]
01/29 05:59:22 AM | active
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 05:59:22 AM | cin: [7]
01/29 05:59:22 AM | cout: [8]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 05:59:22 AM | cin: [8]
01/29 05:59:22 AM | cout: [8]
01/29 05:59:22 AM | active
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: ReLU(inplace=True)
01/29 05:59:22 AM | cin: None
01/29 05:59:22 AM | cout: None
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 05:59:22 AM | cin: None
01/29 05:59:22 AM | cout: [9]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 05:59:22 AM | cin: [9]
01/29 05:59:22 AM | cout: [9]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: ReLU(inplace=True)
01/29 05:59:22 AM | cin: [9]
01/29 05:59:22 AM | cout: [9]
01/29 05:59:22 AM | active
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 05:59:22 AM | cin: [9]
01/29 05:59:22 AM | cout: [10]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 05:59:22 AM | cin: [10]
01/29 05:59:22 AM | cout: [10]
01/29 05:59:22 AM | active
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: ReLU(inplace=True)
01/29 05:59:22 AM | cin: None
01/29 05:59:22 AM | cout: None
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 05:59:22 AM | cin: None
01/29 05:59:22 AM | cout: [11]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 05:59:22 AM | cin: [11]
01/29 05:59:22 AM | cout: [11]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: ReLU(inplace=True)
01/29 05:59:22 AM | cin: [11]
01/29 05:59:22 AM | cout: [11]
01/29 05:59:22 AM | active
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 05:59:22 AM | cin: [11]
01/29 05:59:22 AM | cout: [12]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 05:59:22 AM | cin: [12]
01/29 05:59:22 AM | cout: [12]
01/29 05:59:22 AM | active
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: ReLU(inplace=True)
01/29 05:59:22 AM | cin: None
01/29 05:59:22 AM | cout: None
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 05:59:22 AM | cin: None
01/29 05:59:22 AM | cout: [13]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 05:59:22 AM | cin: [13]
01/29 05:59:22 AM | cout: [13]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: ReLU(inplace=True)
01/29 05:59:22 AM | cin: [13]
01/29 05:59:22 AM | cout: [13]
01/29 05:59:22 AM | active
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 05:59:22 AM | cin: [13]
01/29 05:59:22 AM | cout: [14]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 05:59:22 AM | cin: [14]
01/29 05:59:22 AM | cout: [14]
01/29 05:59:22 AM | active
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: ReLU(inplace=True)
01/29 05:59:22 AM | cin: None
01/29 05:59:22 AM | cout: None
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 05:59:22 AM | cin: None
01/29 05:59:22 AM | cout: [15]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 05:59:22 AM | cin: [15]
01/29 05:59:22 AM | cout: [15]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: ReLU(inplace=True)
01/29 05:59:22 AM | cin: [15]
01/29 05:59:22 AM | cout: [15]
01/29 05:59:22 AM | active
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 05:59:22 AM | cin: [15]
01/29 05:59:22 AM | cout: [16]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 05:59:22 AM | cin: [16]
01/29 05:59:22 AM | cout: [16]
01/29 05:59:22 AM | active
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: ReLU(inplace=True)
01/29 05:59:22 AM | cin: None
01/29 05:59:22 AM | cout: None
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 05:59:22 AM | cin: None
01/29 05:59:22 AM | cout: [17]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 05:59:22 AM | cin: [17]
01/29 05:59:22 AM | cout: [17]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: ReLU(inplace=True)
01/29 05:59:22 AM | cin: [17]
01/29 05:59:22 AM | cout: [17]
01/29 05:59:22 AM | active
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 05:59:22 AM | cin: [17]
01/29 05:59:22 AM | cout: [18]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 05:59:22 AM | cin: [18]
01/29 05:59:22 AM | cout: [18]
01/29 05:59:22 AM | active
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: ReLU(inplace=True)
01/29 05:59:22 AM | cin: None
01/29 05:59:22 AM | cout: None
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
01/29 05:59:22 AM | cin: None
01/29 05:59:22 AM | cout: [19]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 05:59:22 AM | cin: [19]
01/29 05:59:22 AM | cout: [19]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: ReLU(inplace=True)
01/29 05:59:22 AM | cin: [19]
01/29 05:59:22 AM | cout: [19]
01/29 05:59:22 AM | active
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 05:59:22 AM | cin: [19]
01/29 05:59:22 AM | cout: [20]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 05:59:22 AM | cin: [20]
01/29 05:59:22 AM | cout: [20]
01/29 05:59:22 AM | active
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: ReLU(inplace=True)
01/29 05:59:22 AM | cin: None
01/29 05:59:22 AM | cout: None
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 05:59:22 AM | cin: None
01/29 05:59:22 AM | cout: [21]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 05:59:22 AM | cin: [21]
01/29 05:59:22 AM | cout: [21]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: ReLU(inplace=True)
01/29 05:59:22 AM | cin: [21]
01/29 05:59:22 AM | cout: [21]
01/29 05:59:22 AM | active
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 05:59:22 AM | cin: [21]
01/29 05:59:22 AM | cout: [22]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 05:59:22 AM | cin: [22]
01/29 05:59:22 AM | cout: [22]
01/29 05:59:22 AM | active
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: ReLU(inplace=True)
01/29 05:59:22 AM | cin: None
01/29 05:59:22 AM | cout: None
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 05:59:22 AM | cin: None
01/29 05:59:22 AM | cout: [23]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 05:59:22 AM | cin: [23]
01/29 05:59:22 AM | cout: [23]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: ReLU(inplace=True)
01/29 05:59:22 AM | cin: [23]
01/29 05:59:22 AM | cout: [23]
01/29 05:59:22 AM | active
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 05:59:22 AM | cin: [23]
01/29 05:59:22 AM | cout: [24]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 05:59:22 AM | cin: [24]
01/29 05:59:22 AM | cout: [24]
01/29 05:59:22 AM | active
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: ReLU(inplace=True)
01/29 05:59:22 AM | cin: None
01/29 05:59:22 AM | cout: None
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 05:59:22 AM | cin: None
01/29 05:59:22 AM | cout: [25]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 05:59:22 AM | cin: [25]
01/29 05:59:22 AM | cout: [25]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: ReLU(inplace=True)
01/29 05:59:22 AM | cin: [25]
01/29 05:59:22 AM | cout: [25]
01/29 05:59:22 AM | active
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 05:59:22 AM | cin: [25]
01/29 05:59:22 AM | cout: [26]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 05:59:22 AM | cin: [26]
01/29 05:59:22 AM | cout: [26]
01/29 05:59:22 AM | active
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: ReLU(inplace=True)
01/29 05:59:22 AM | cin: None
01/29 05:59:22 AM | cout: None
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 05:59:22 AM | cin: None
01/29 05:59:22 AM | cout: [27]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 05:59:22 AM | cin: [27]
01/29 05:59:22 AM | cout: [27]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: ReLU(inplace=True)
01/29 05:59:22 AM | cin: [27]
01/29 05:59:22 AM | cout: [27]
01/29 05:59:22 AM | active
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 05:59:22 AM | cin: [27]
01/29 05:59:22 AM | cout: [28]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 05:59:22 AM | cin: [28]
01/29 05:59:22 AM | cout: [28]
01/29 05:59:22 AM | active
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: ReLU(inplace=True)
01/29 05:59:22 AM | cin: None
01/29 05:59:22 AM | cout: None
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 05:59:22 AM | cin: None
01/29 05:59:22 AM | cout: [29]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 05:59:22 AM | cin: [29]
01/29 05:59:22 AM | cout: [29]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: ReLU(inplace=True)
01/29 05:59:22 AM | cin: [29]
01/29 05:59:22 AM | cout: [29]
01/29 05:59:22 AM | active
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 05:59:22 AM | cin: [29]
01/29 05:59:22 AM | cout: [30]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 05:59:22 AM | cin: [30]
01/29 05:59:22 AM | cout: [30]
01/29 05:59:22 AM | active
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: ReLU(inplace=True)
01/29 05:59:22 AM | cin: None
01/29 05:59:22 AM | cout: None
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 05:59:22 AM | cin: None
01/29 05:59:22 AM | cout: [31]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 05:59:22 AM | cin: [31]
01/29 05:59:22 AM | cout: [31]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: ReLU(inplace=True)
01/29 05:59:22 AM | cin: [31]
01/29 05:59:22 AM | cout: [31]
01/29 05:59:22 AM | active
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 05:59:22 AM | cin: [31]
01/29 05:59:22 AM | cout: [32]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 05:59:22 AM | cin: [32]
01/29 05:59:22 AM | cout: [32]
01/29 05:59:22 AM | active
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: ReLU(inplace=True)
01/29 05:59:22 AM | cin: None
01/29 05:59:22 AM | cout: None
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 05:59:22 AM | cin: None
01/29 05:59:22 AM | cout: [33]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 05:59:22 AM | cin: [33]
01/29 05:59:22 AM | cout: [33]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: ReLU(inplace=True)
01/29 05:59:22 AM | cin: [33]
01/29 05:59:22 AM | cout: [33]
01/29 05:59:22 AM | active
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 05:59:22 AM | cin: [33]
01/29 05:59:22 AM | cout: [34]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 05:59:22 AM | cin: [34]
01/29 05:59:22 AM | cout: [34]
01/29 05:59:22 AM | active
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: ReLU(inplace=True)
01/29 05:59:22 AM | cin: None
01/29 05:59:22 AM | cout: None
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 05:59:22 AM | cin: None
01/29 05:59:22 AM | cout: [35]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 05:59:22 AM | cin: [35]
01/29 05:59:22 AM | cout: [35]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: ReLU(inplace=True)
01/29 05:59:22 AM | cin: [35]
01/29 05:59:22 AM | cout: [35]
01/29 05:59:22 AM | active
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 05:59:22 AM | cin: [35]
01/29 05:59:22 AM | cout: [36]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 05:59:22 AM | cin: [36]
01/29 05:59:22 AM | cout: [36]
01/29 05:59:22 AM | active
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: ReLU(inplace=True)
01/29 05:59:22 AM | cin: None
01/29 05:59:22 AM | cout: None
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
01/29 05:59:22 AM | cin: None
01/29 05:59:22 AM | cout: [37]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 05:59:22 AM | cin: [37]
01/29 05:59:22 AM | cout: [37]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: ReLU(inplace=True)
01/29 05:59:22 AM | cin: [37]
01/29 05:59:22 AM | cout: [37]
01/29 05:59:22 AM | active
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 05:59:22 AM | cin: [37]
01/29 05:59:22 AM | cout: [38]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 05:59:22 AM | cin: [38]
01/29 05:59:22 AM | cout: [38]
01/29 05:59:22 AM | active
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: ReLU(inplace=True)
01/29 05:59:22 AM | cin: None
01/29 05:59:22 AM | cout: None
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 05:59:22 AM | cin: None
01/29 05:59:22 AM | cout: [39]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 05:59:22 AM | cin: [39]
01/29 05:59:22 AM | cout: [39]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: ReLU(inplace=True)
01/29 05:59:22 AM | cin: [39]
01/29 05:59:22 AM | cout: [39]
01/29 05:59:22 AM | active
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 05:59:22 AM | cin: [39]
01/29 05:59:22 AM | cout: [40]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 05:59:22 AM | cin: [40]
01/29 05:59:22 AM | cout: [40]
01/29 05:59:22 AM | active
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: ReLU(inplace=True)
01/29 05:59:22 AM | cin: None
01/29 05:59:22 AM | cout: None
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 05:59:22 AM | cin: None
01/29 05:59:22 AM | cout: [41]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 05:59:22 AM | cin: [41]
01/29 05:59:22 AM | cout: [41]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: ReLU(inplace=True)
01/29 05:59:22 AM | cin: [41]
01/29 05:59:22 AM | cout: [41]
01/29 05:59:22 AM | active
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 05:59:22 AM | cin: [41]
01/29 05:59:22 AM | cout: [42]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 05:59:22 AM | cin: [42]
01/29 05:59:22 AM | cout: [42]
01/29 05:59:22 AM | active
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: ReLU(inplace=True)
01/29 05:59:22 AM | cin: None
01/29 05:59:22 AM | cout: None
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 05:59:22 AM | cin: None
01/29 05:59:22 AM | cout: [43]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 05:59:22 AM | cin: [43]
01/29 05:59:22 AM | cout: [43]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: ReLU(inplace=True)
01/29 05:59:22 AM | cin: [43]
01/29 05:59:22 AM | cout: [43]
01/29 05:59:22 AM | active
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 05:59:22 AM | cin: [43]
01/29 05:59:22 AM | cout: [44]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 05:59:22 AM | cin: [44]
01/29 05:59:22 AM | cout: [44]
01/29 05:59:22 AM | active
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: ReLU(inplace=True)
01/29 05:59:22 AM | cin: None
01/29 05:59:22 AM | cout: None
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 05:59:22 AM | cin: None
01/29 05:59:22 AM | cout: [45]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 05:59:22 AM | cin: [45]
01/29 05:59:22 AM | cout: [45]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: ReLU(inplace=True)
01/29 05:59:22 AM | cin: [45]
01/29 05:59:22 AM | cout: [45]
01/29 05:59:22 AM | active
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 05:59:22 AM | cin: [45]
01/29 05:59:22 AM | cout: [46]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 05:59:22 AM | cin: [46]
01/29 05:59:22 AM | cout: [46]
01/29 05:59:22 AM | active
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: ReLU(inplace=True)
01/29 05:59:22 AM | cin: None
01/29 05:59:22 AM | cout: None
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 05:59:22 AM | cin: None
01/29 05:59:22 AM | cout: [47]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 05:59:22 AM | cin: [47]
01/29 05:59:22 AM | cout: [47]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: ReLU(inplace=True)
01/29 05:59:22 AM | cin: [47]
01/29 05:59:22 AM | cout: [47]
01/29 05:59:22 AM | active
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 05:59:22 AM | cin: [47]
01/29 05:59:22 AM | cout: [48]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 05:59:22 AM | cin: [48]
01/29 05:59:22 AM | cout: [48]
01/29 05:59:22 AM | active
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: ReLU(inplace=True)
01/29 05:59:22 AM | cin: None
01/29 05:59:22 AM | cout: None
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 05:59:22 AM | cin: None
01/29 05:59:22 AM | cout: [49]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 05:59:22 AM | cin: [49]
01/29 05:59:22 AM | cout: [49]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: ReLU(inplace=True)
01/29 05:59:22 AM | cin: [49]
01/29 05:59:22 AM | cout: [49]
01/29 05:59:22 AM | active
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 05:59:22 AM | cin: [49]
01/29 05:59:22 AM | cout: [50]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 05:59:22 AM | cin: [50]
01/29 05:59:22 AM | cout: [50]
01/29 05:59:22 AM | active
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: ReLU(inplace=True)
01/29 05:59:22 AM | cin: None
01/29 05:59:22 AM | cout: None
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 05:59:22 AM | cin: None
01/29 05:59:22 AM | cout: [51]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 05:59:22 AM | cin: [51]
01/29 05:59:22 AM | cout: [51]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: ReLU(inplace=True)
01/29 05:59:22 AM | cin: [51]
01/29 05:59:22 AM | cout: [51]
01/29 05:59:22 AM | active
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 05:59:22 AM | cin: [51]
01/29 05:59:22 AM | cout: [52]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 05:59:22 AM | cin: [52]
01/29 05:59:22 AM | cout: [52]
01/29 05:59:22 AM | active
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: ReLU(inplace=True)
01/29 05:59:22 AM | cin: None
01/29 05:59:22 AM | cout: None
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 05:59:22 AM | cin: None
01/29 05:59:22 AM | cout: [53]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 05:59:22 AM | cin: [53]
01/29 05:59:22 AM | cout: [53]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: ReLU(inplace=True)
01/29 05:59:22 AM | cin: [53]
01/29 05:59:22 AM | cout: [53]
01/29 05:59:22 AM | active
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 05:59:22 AM | cin: [53]
01/29 05:59:22 AM | cout: [54]
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 05:59:22 AM | cin: [54]
01/29 05:59:22 AM | cout: [54]
01/29 05:59:22 AM | active
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: ReLU(inplace=True)
01/29 05:59:22 AM | cin: None
01/29 05:59:22 AM | cout: None
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: AdaptiveAvgPool2d(output_size=(1, 1))
01/29 05:59:22 AM | cin: None
01/29 05:59:22 AM | cout: None
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | -----
01/29 05:59:22 AM | module: Linear(in_features=64, out_features=10, bias=True)
01/29 05:59:22 AM | cin: None
01/29 05:59:22 AM | cout: None
01/29 05:59:22 AM | inactive
01/29 05:59:22 AM | Used masks: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54]
01/29 05:59:22 AM | 55 unique masks in total
01/29 05:59:23 AM | === Batch 1/250
01/29 05:59:24 AM | loss = 0.145 + 4.444 + 0.040 = 4.629
01/29 05:59:24 AM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.94  0.83  0.83  0.94  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.94  0.94  0.83  0.83  0.83  0.83  0.94 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.94  0.83  0.83  0.83  0.83 ]
[ 0.83  0.94  0.83  0.83  0.94  0.94  0.94  0.94  0.83  0.83  0.83  0.94 ]
[ 0.83  0.83  0.83  0.83  0.94  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.94  0.83  0.83  0.94  0.94  0.83  0.94  0.83  0.83  0.94 ]
[ 0.83  0.83  0.83  0.83  0.94  0.83  0.83  0.83  0.94  0.83  0.83  0.83 ]
[ 0.83  0.83  0.94  0.83  0.83  0.83  0.94  0.83  0.83  0.83  0.83  0.94 ]
[ 0.83  0.83  0.83  0.83  0.94  0.83  0.83  0.83  0.83  0.83  0.94  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.94  0.83  0.83  0.94  0.83 ]
[ 0.83  0.94  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.94  0.83 ]
[ 0.83  0.94  0.83  0.83  0.83  0.83  0.83  0.83  0.94  0.83  0.83  0.94 ]
[ 0.83  0.83  0.83  0.83  0.94  0.94  0.83  0.94  0.83  0.83  0.94  0.83 ]
[ 0.83  0.94  0.94  0.83  0.83  0.83  0.94  0.83  0.94  0.83  0.83  0.94 ]
[ 0.83  0.83  0.83  0.94  0.83  0.94  0.94  0.83  0.94  0.83  0.83  0.83 ]
[ 0.83  0.94  0.94  0.83  0.94  0.83  0.94  0.83  0.94  0.83  0.83  0.94 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.94  0.94  0.83  0.94  0.83  0.83  0.83  0.83  0.83  0.83  0.94 ]
[ 0.94  0.83  0.94  0.94  0.83  0.83  0.94  0.83  0.94  0.94  0.94  0.94 ]
[ 0.83  0.83  0.94  0.94  0.83  0.83  0.83  0.94  0.83  0.94  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.94  0.83  0.94  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.94  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.94  0.83  0.83  0.83  0.83  0.94  0.83  0.83  0.83  0.83 ]
[ 0.94  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.94  0.83  0.83  0.83  0.83  0.83  0.94  0.83  0.83  0.94 ]
[ 0.83  0.83  0.83  0.83  0.94  0.83  0.94  0.83  0.94  0.83  0.83  0.83 ]
[ 0.83  0.83  0.94  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.94 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.94  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.94 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.94  0.94  0.83  0.94 ]
[ 0.83  0.83  0.94  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.94  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.94 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.94  0.83  0.83  0.94  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.94  0.94  0.83  0.94  0.83  0.83  0.94  0.94  0.94  0.94  0.83  0.94 ]
[ 0.83  0.94  0.83  0.83  0.94  0.83  0.94  0.83  0.94  0.94  0.94  0.94 ]
[ 0.83  0.94  0.83  0.83  0.83  0.83  0.83  0.94  0.94  0.83  0.83  0.83 ]
[ 0.83  0.94  0.83  0.83  0.94  0.94  0.83  0.83  0.83  0.83  0.94  0.94 ]
[ 0.83  0.94  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.94  0.83 ]
[ 0.83  0.83  0.94  0.83  0.94  0.94  0.83  0.83  0.83  0.83  0.94  0.94 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.94  0.94  0.94  0.83  0.83  0.83 ]
[ 0.83  0.83  0.94  0.83  0.83  0.94  0.83  0.94  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.94  0.83  0.83  0.94  0.94 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.94  0.83  0.83  0.94  0.83 ]
[ 0.83  0.83  0.94  0.83  0.83  0.83  0.83  0.94  0.94  0.94  0.83  0.83 ]
[ 0.94  0.83  0.94  0.83  0.94  0.83  0.94  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.94  0.83  0.83  0.83  0.83  0.94  0.83  0.83  0.83 ]
[ 0.94  0.94  0.94  0.83  0.83  0.83  0.94  0.94  0.94  0.83  0.83  0.94 ]
[ 0.83  0.83  0.94  0.83  0.83  0.83  0.83  0.83  0.94  0.94  0.83  0.83 ]
[ 0.94  0.94  0.83  0.83  0.94  0.83  0.83  0.94  0.83  0.83  0.83  0.94 ]
[ 0.94  0.83  0.83  0.94  0.83  0.83  0.94  0.94  0.83  0.83  0.94  0.83 ]
[ 0.83  0.94  0.83  0.83  0.94  0.83  0.83  0.94  0.83  0.83  0.83  0.94 ]

01/29 05:59:24 AM | === Batch 2/250
01/29 05:59:25 AM | loss = 0.222 + 3.844 + 0.055 = 4.121
01/29 05:59:26 AM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.73  0.74  0.73  0.75  0.74  0.74  0.73  0.95  0.73  0.75  0.93  0.73 ]
[ 0.73  0.74  0.73  0.88  0.82  0.91  0.97  0.76  0.73  0.88  0.73  0.96 ]
[ 0.73  0.73  0.73  0.73  0.75  0.74  0.75  0.96  0.74  0.74  0.74  0.75 ]
[ 0.73  0.92  0.74  0.73  0.96  0.96  0.97  0.95  0.74  0.75  0.74  0.95 ]
[ 0.74  0.75  0.73  0.73  0.93  0.73  0.73  0.74  0.73  0.73  0.73  0.75 ]
[ 0.74  0.73  0.93  0.74  0.75  0.91  0.97  0.75  0.97  0.87  0.75  0.96 ]
[ 0.73  0.73  0.73  0.73  0.93  0.73  0.73  0.75  0.92  0.74  0.73  0.81 ]
[ 0.76  0.80  0.93  0.87  0.73  0.73  0.95  0.75  0.73  0.84  0.73  0.96 ]
[ 0.75  0.73  0.73  0.75  0.93  0.73  0.75  0.75  0.73  0.75  0.97  0.73 ]
[ 0.84  0.81  0.75  0.73  0.88  0.73  0.74  0.93  0.88  0.88  0.92  0.73 ]
[ 0.73  0.92  0.73  0.74  0.73  0.73  0.87  0.84  0.73  0.73  0.93  0.73 ]
[ 0.82  0.93  0.73  0.83  0.81  0.73  0.89  0.74  0.97  0.81  0.75  0.95 ]
[ 0.73  0.74  0.86  0.84  0.92  0.93  0.79  0.96  0.74  0.75  0.93  0.74 ]
[ 0.80  0.95  0.96  0.73  0.79  0.76  0.97  0.74  0.97  0.73  0.88  0.96 ]
[ 0.75  0.88  0.73  0.94  0.81  0.93  0.93  0.81  0.94  0.73  0.74  0.75 ]
[ 0.85  0.95  0.93  0.73  0.94  0.73  0.96  0.74  0.97  0.76  0.88  0.96 ]
[ 0.73  0.73  0.74  0.86  0.75  0.73  0.73  0.75  0.73  0.73  0.78  0.75 ]
[ 0.85  0.94  0.93  0.73  0.95  0.73  0.76  0.73  0.88  0.77  0.87  0.92 ]
[ 0.95  0.86  0.95  0.96  0.87  0.86  0.97  0.79  0.96  0.95  0.96  0.97 ]
[ 0.73  0.81  0.96  0.92  0.79  0.73  0.87  0.97  0.85  0.96  0.88  0.85 ]
[ 0.76  0.73  0.73  0.73  0.78  0.73  0.92  0.87  0.92  0.83  0.73  0.75 ]
[ 0.76  0.73  0.76  0.75  0.85  0.74  0.88  0.96  0.83  0.74  0.73  0.74 ]
[ 0.73  0.81  0.73  0.74  0.73  0.73  0.74  0.74  0.75  0.75  0.73  0.73 ]
[ 0.76  0.74  0.94  0.74  0.82  0.75  0.82  0.93  0.84  0.73  0.85  0.74 ]
[ 0.94  0.85  0.79  0.73  0.83  0.73  0.73  0.87  0.73  0.84  0.79  0.73 ]
[ 0.75  0.74  0.92  0.74  0.79  0.74  0.82  0.80  0.93  0.87  0.78  0.93 ]
[ 0.84  0.74  0.73  0.73  0.92  0.76  0.94  0.73  0.96  0.74  0.79  0.73 ]
[ 0.76  0.77  0.94  0.73  0.84  0.75  0.74  0.73  0.74  0.78  0.81  0.92 ]
[ 0.73  0.73  0.73  0.74  0.74  0.73  0.73  0.73  0.76  0.75  0.73  0.73 ]
[ 0.76  0.75  0.94  0.73  0.84  0.73  0.79  0.74  0.73  0.73  0.76  0.95 ]
[ 0.74  0.73  0.88  0.77  0.74  0.74  0.74  0.74  0.94  0.97  0.74  0.95 ]
[ 0.74  0.81  0.93  0.73  0.75  0.74  0.73  0.73  0.81  0.75  0.75  0.73 ]
[ 0.73  0.76  0.75  0.75  0.74  0.73  0.74  0.75  0.76  0.73  0.73  0.73 ]
[ 0.76  0.79  0.92  0.74  0.73  0.73  0.81  0.73  0.74  0.73  0.74  0.94 ]
[ 0.75  0.78  0.75  0.73  0.73  0.81  0.93  0.73  0.75  0.93  0.73  0.73 ]
[ 0.75  0.76  0.73  0.74  0.86  0.74  0.73  0.74  0.74  0.75  0.73  0.73 ]
[ 0.95  0.95  0.76  0.94  0.88  0.86  0.96  0.95  0.93  0.95  0.77  0.94 ]
[ 0.80  0.96  0.79  0.76  0.96  0.73  0.92  0.73  0.95  0.92  0.96  0.96 ]
[ 0.73  0.91  0.87  0.86  0.74  0.73  0.73  0.93  0.96  0.74  0.74  0.74 ]
[ 0.75  0.97  0.74  0.75  0.95  0.93  0.73  0.88  0.76  0.76  0.96  0.92 ]
[ 0.80  0.96  0.73  0.75  0.74  0.74  0.73  0.81  0.74  0.76  0.97  0.88 ]
[ 0.78  0.74  0.95  0.74  0.96  0.95  0.75  0.77  0.79  0.84  0.97  0.96 ]
[ 0.73  0.74  0.73  0.74  0.73  0.76  0.95  0.95  0.96  0.73  0.74  0.74 ]
[ 0.73  0.74  0.94  0.73  0.74  0.92  0.74  0.97  0.84  0.73  0.83  0.73 ]
[ 0.74  0.86  0.73  0.85  0.84  0.73  0.73  0.96  0.81  0.73  0.95  0.92 ]
[ 0.74  0.73  0.75  0.74  0.75  0.84  0.87  0.95  0.74  0.75  0.96  0.73 ]
[ 0.87  0.73  0.92  0.74  0.73  0.77  0.82  0.94  0.94  0.95  0.73  0.78 ]
[ 0.95  0.74  0.94  0.74  0.96  0.75  0.91  0.73  0.76  0.85  0.74  0.73 ]
[ 0.73  0.74  0.73  0.92  0.75  0.80  0.84  0.74  0.95  0.74  0.74  0.73 ]
[ 0.94  0.94  0.95  0.85  0.74  0.73  0.96  0.92  0.96  0.74  0.77  0.96 ]
[ 0.81  0.85  0.95  0.74  0.74  0.81  0.78  0.86  0.96  0.96  0.74  0.88 ]
[ 0.93  0.97  0.74  0.87  0.95  0.74  0.74  0.95  0.73  0.74  0.75  0.95 ]
[ 0.95  0.73  0.75  0.92  0.74  0.85  0.93  0.96  0.77  0.74  0.95  0.74 ]
[ 0.73  0.96  0.73  0.74  0.95  0.73  0.73  0.95  0.74  0.82  0.88  0.96 ]

01/29 05:59:26 AM | === Batch 3/250
01/29 05:59:27 AM | loss = 0.587 + 3.077 + 0.074 = 3.738
01/29 05:59:28 AM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.60  0.72  0.62  0.66  0.62  0.65  0.60  0.94  0.60  0.63  0.91  0.60 ]
[ 0.60  0.62  0.61  0.91  0.86  0.86  0.98  0.75  0.71  0.91  0.64  0.95 ]
[ 0.61  0.62  0.61  0.67  0.66  0.62  0.77  0.97  0.62  0.62  0.63  0.63 ]
[ 0.61  0.91  0.62  0.73  0.98  0.95  0.98  0.95  0.73  0.76  0.68  0.93 ]
[ 0.62  0.63  0.60  0.62  0.89  0.64  0.60  0.62  0.60  0.63  0.60  0.66 ]
[ 0.64  0.60  0.89  0.76  0.71  0.87  0.98  0.63  0.97  0.90  0.70  0.95 ]
[ 0.60  0.60  0.60  0.61  0.89  0.60  0.67  0.64  0.87  0.61  0.61  0.82 ]
[ 0.80  0.83  0.90  0.91  0.72  0.60  0.95  0.64  0.61  0.85  0.60  0.95 ]
[ 0.70  0.60  0.60  0.64  0.90  0.62  0.64  0.64  0.60  0.64  0.98  0.63 ]
[ 0.88  0.83  0.64  0.70  0.92  0.60  0.74  0.91  0.87  0.91  0.88  0.63 ]
[ 0.60  0.87  0.60  0.61  0.60  0.65  0.91  0.88  0.68  0.60  0.91  0.61 ]
[ 0.86  0.90  0.64  0.86  0.86  0.60  0.93  0.61  0.97  0.81  0.65  0.93 ]
[ 0.60  0.61  0.90  0.83  0.88  0.91  0.79  0.98  0.61  0.65  0.92  0.63 ]
[ 0.80  0.95  0.96  0.60  0.70  0.70  0.98  0.62  0.98  0.60  0.91  0.95 ]
[ 0.70  0.92  0.60  0.94  0.86  0.90  0.90  0.85  0.93  0.60  0.63  0.63 ]
[ 0.88  0.95  0.89  0.62  0.91  0.62  0.96  0.63  0.97  0.65  0.91  0.96 ]
[ 0.73  0.60  0.63  0.89  0.64  0.60  0.61  0.63  0.60  0.60  0.70  0.63 ]
[ 0.89  0.92  0.91  0.61  0.94  0.61  0.65  0.60  0.85  0.69  0.90  0.88 ]
[ 0.97  0.89  0.93  0.97  0.88  0.85  0.97  0.74  0.95  0.95  0.95  0.98 ]
[ 0.60  0.85  0.96  0.94  0.74  0.77  0.91  0.97  0.89  0.97  0.92  0.83 ]
[ 0.65  0.61  0.60  0.61  0.83  0.60  0.87  0.89  0.87  0.81  0.61  0.65 ]
[ 0.66  0.77  0.66  0.80  0.87  0.79  0.92  0.94  0.84  0.76  0.60  0.61 ]
[ 0.60  0.75  0.60  0.66  0.70  0.62  0.76  0.64  0.65  0.65  0.70  0.62 ]
[ 0.66  0.75  0.92  0.76  0.83  0.79  0.87  0.90  0.88  0.62  0.88  0.63 ]
[ 0.92  0.90  0.71  0.60  0.80  0.60  0.63  0.86  0.65  0.79  0.71  0.61 ]
[ 0.65  0.78  0.88  0.75  0.71  0.76  0.85  0.73  0.90  0.90  0.73  0.93 ]
[ 0.84  0.64  0.61  0.61  0.87  0.65  0.92  0.60  0.95  0.62  0.73  0.60 ]
[ 0.66  0.82  0.93  0.75  0.87  0.80  0.72  0.62  0.63  0.78  0.76  0.89 ]
[ 0.60  0.60  0.60  0.73  0.61  0.60  0.61  0.60  0.65  0.65  0.60  0.60 ]
[ 0.66  0.77  0.92  0.77  0.86  0.76  0.80  0.62  0.62  0.76  0.66  0.95 ]
[ 0.62  0.60  0.93  0.68  0.61  0.62  0.61  0.62  0.92  0.98  0.62  0.94 ]
[ 0.63  0.84  0.90  0.70  0.67  0.67  0.63  0.61  0.75  0.79  0.63  0.72 ]
[ 0.61  0.69  0.64  0.64  0.64  0.61  0.73  0.63  0.73  0.60  0.60  0.61 ]
[ 0.66  0.82  0.89  0.73  0.61  0.76  0.84  0.62  0.63  0.72  0.64  0.94 ]
[ 0.71  0.68  0.67  0.60  0.61  0.78  0.90  0.65  0.63  0.90  0.62  0.60 ]
[ 0.66  0.79  0.61  0.77  0.90  0.67  0.78  0.75  0.62  0.71  0.64  0.61 ]
[ 0.96  0.96  0.67  0.92  0.91  0.88  0.96  0.95  0.95  0.96  0.78  0.94 ]
[ 0.83  0.95  0.75  0.79  0.97  0.60  0.93  0.60  0.96  0.88  0.98  0.96 ]
[ 0.70  0.87  0.91  0.90  0.61  0.60  0.70  0.90  0.96  0.73  0.63  0.70 ]
[ 0.64  0.96  0.76  0.70  0.95  0.90  0.79  0.89  0.80  0.67  0.98  0.89 ]
[ 0.73  0.97  0.60  0.65  0.72  0.65  0.60  0.75  0.63  0.77  0.98  0.90 ]
[ 0.80  0.69  0.96  0.72  0.95  0.95  0.64  0.68  0.81  0.88  0.98  0.97 ]
[ 0.74  0.64  0.60  0.63  0.60  0.66  0.95  0.94  0.95  0.60  0.78  0.72 ]
[ 0.73  0.81  0.92  0.78  0.66  0.89  0.80  0.98  0.79  0.62  0.87  0.62 ]
[ 0.75  0.86  0.66  0.81  0.84  0.60  0.61  0.97  0.83  0.64  0.93  0.92 ]
[ 0.77  0.74  0.63  0.79  0.67  0.86  0.86  0.95  0.73  0.65  0.97  0.78 ]
[ 0.84  0.60  0.92  0.65  0.62  0.69  0.82  0.95  0.92  0.96  0.62  0.69 ]
[ 0.95  0.78  0.93  0.64  0.97  0.64  0.91  0.60  0.68  0.80  0.61  0.74 ]
[ 0.60  0.61  0.61  0.89  0.77  0.72  0.86  0.62  0.95  0.61  0.63  0.60 ]
[ 0.92  0.92  0.96  0.89  0.61  0.77  0.97  0.89  0.96  0.65  0.80  0.95 ]
[ 0.80  0.85  0.96  0.77  0.61  0.75  0.73  0.87  0.96  0.97  0.63  0.84 ]
[ 0.91  0.96  0.61  0.88  0.96  0.62  0.70  0.95  0.61  0.64  0.64  0.95 ]
[ 0.94  0.63  0.63  0.88  0.79  0.83  0.92  0.97  0.68  0.65  0.95  0.63 ]
[ 0.77  0.95  0.70  0.76  0.96  0.60  0.67  0.93  0.79  0.76  0.91  0.95 ]

01/29 05:59:28 AM | === Batch 4/250
01/29 05:59:28 AM | loss = 0.720 + 2.288 + 0.094 = 3.102
01/29 05:59:29 AM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.46  0.76  0.51  0.69  0.50  0.65  0.46  0.96  0.46  0.65  0.90  0.47 ]
[ 0.56  0.52  0.50  0.94  0.84  0.79  0.98  0.81  0.73  0.92  0.67  0.95 ]
[ 0.49  0.51  0.47  0.71  0.70  0.52  0.81  0.98  0.65  0.60  0.51  0.65 ]
[ 0.55  0.87  0.68  0.78  0.99  0.95  0.98  0.97  0.79  0.81  0.61  0.93 ]
[ 0.49  0.62  0.48  0.51  0.89  0.65  0.46  0.63  0.46  0.66  0.47  0.71 ]
[ 0.52  0.47  0.87  0.82  0.65  0.81  0.97  0.66  0.96  0.90  0.72  0.96 ]
[ 0.53  0.47  0.47  0.49  0.88  0.45  0.73  0.52  0.84  0.47  0.47  0.77 ]
[ 0.81  0.81  0.92  0.94  0.76  0.46  0.96  0.65  0.64  0.81  0.51  0.96 ]
[ 0.73  0.61  0.46  0.51  0.89  0.49  0.54  0.63  0.46  0.66  0.97  0.51 ]
[ 0.86  0.79  0.68  0.74  0.93  0.46  0.67  0.90  0.83  0.91  0.82  0.58 ]
[ 0.49  0.81  0.46  0.47  0.64  0.63  0.91  0.92  0.74  0.46  0.91  0.50 ]
[ 0.83  0.86  0.67  0.90  0.88  0.49  0.92  0.56  0.96  0.75  0.66  0.90 ]
[ 0.46  0.49  0.93  0.77  0.91  0.92  0.73  0.98  0.47  0.54  0.93  0.52 ]
[ 0.74  0.94  0.97  0.45  0.61  0.61  0.98  0.51  0.98  0.46  0.90  0.96 ]
[ 0.74  0.92  0.46  0.95  0.90  0.86  0.86  0.89  0.91  0.46  0.51  0.50 ]
[ 0.86  0.96  0.91  0.49  0.92  0.48  0.97  0.54  0.96  0.55  0.91  0.97 ]
[ 0.78  0.46  0.54  0.92  0.51  0.45  0.46  0.51  0.46  0.46  0.60  0.51 ]
[ 0.88  0.90  0.93  0.46  0.96  0.47  0.57  0.46  0.80  0.59  0.90  0.90 ]
[ 0.96  0.89  0.94  0.97  0.87  0.87  0.98  0.66  0.94  0.94  0.93  0.99 ]
[ 0.46  0.89  0.97  0.96  0.66  0.77  0.92  0.96  0.85  0.97  0.95  0.79 ]
[ 0.54  0.46  0.45  0.47  0.79  0.45  0.83  0.86  0.89  0.75  0.48  0.52 ]
[ 0.69  0.83  0.65  0.86  0.86  0.79  0.93  0.93  0.80  0.82  0.46  0.61 ]
[ 0.55  0.66  0.62  0.72  0.74  0.49  0.74  0.51  0.51  0.68  0.76  0.51 ]
[ 0.70  0.81  0.90  0.82  0.80  0.75  0.91  0.89  0.87  0.49  0.90  0.59 ]
[ 0.92  0.89  0.61  0.61  0.83  0.46  0.51  0.82  0.57  0.71  0.62  0.47 ]
[ 0.69  0.84  0.88  0.81  0.63  0.70  0.84  0.63  0.91  0.88  0.65  0.94 ]
[ 0.78  0.51  0.52  0.47  0.88  0.67  0.92  0.45  0.92  0.52  0.64  0.46 ]
[ 0.68  0.87  0.91  0.81  0.86  0.78  0.65  0.52  0.59  0.82  0.68  0.83 ]
[ 0.46  0.48  0.47  0.67  0.49  0.60  0.50  0.46  0.52  0.53  0.47  0.46 ]
[ 0.67  0.82  0.92  0.83  0.87  0.72  0.80  0.64  0.60  0.82  0.53  0.94 ]
[ 0.56  0.46  0.94  0.57  0.46  0.48  0.62  0.49  0.92  0.98  0.48  0.92 ]
[ 0.58  0.88  0.86  0.64  0.72  0.59  0.55  0.60  0.80  0.85  0.49  0.65 ]
[ 0.50  0.59  0.55  0.62  0.69  0.46  0.75  0.59  0.77  0.52  0.45  0.61 ]
[ 0.69  0.87  0.86  0.78  0.53  0.75  0.87  0.49  0.51  0.78  0.54  0.93 ]
[ 0.77  0.57  0.71  0.50  0.47  0.72  0.92  0.68  0.56  0.85  0.52  0.57 ]
[ 0.69  0.85  0.47  0.82  0.93  0.58  0.79  0.69  0.47  0.63  0.54  0.54 ]
[ 0.96  0.96  0.58  0.93  0.90  0.88  0.95  0.94  0.96  0.97  0.82  0.92 ]
[ 0.83  0.93  0.78  0.84  0.98  0.46  0.95  0.46  0.95  0.85  0.98  0.97 ]
[ 0.62  0.80  0.90  0.91  0.49  0.47  0.72  0.90  0.95  0.78  0.67  0.75 ]
[ 0.64  0.94  0.82  0.76  0.96  0.91  0.85  0.86  0.76  0.60  0.99  0.91 ]
[ 0.75  0.97  0.46  0.54  0.77  0.62  0.46  0.67  0.53  0.71  0.98  0.91 ]
[ 0.84  0.76  0.97  0.78  0.93  0.96  0.51  0.57  0.86  0.92  0.98  0.98 ]
[ 0.77  0.67  0.60  0.50  0.57  0.54  0.95  0.93  0.93  0.49  0.79  0.77 ]
[ 0.79  0.87  0.94  0.84  0.55  0.90  0.85  0.97  0.84  0.49  0.90  0.51 ]
[ 0.81  0.81  0.72  0.78  0.88  0.46  0.50  0.97  0.85  0.52  0.93  0.93 ]
[ 0.84  0.81  0.65  0.85  0.72  0.83  0.83  0.96  0.78  0.66  0.96  0.84 ]
[ 0.78  0.46  0.93  0.63  0.51  0.65  0.82  0.94  0.88  0.96  0.51  0.59 ]
[ 0.95  0.84  0.92  0.53  0.97  0.70  0.92  0.61  0.72  0.83  0.46  0.69 ]
[ 0.46  0.57  0.47  0.90  0.82  0.63  0.87  0.48  0.96  0.50  0.60  0.46 ]
[ 0.94  0.88  0.96  0.91  0.60  0.71  0.97  0.91  0.97  0.54  0.78  0.96 ]
[ 0.83  0.81  0.95  0.83  0.63  0.67  0.65  0.89  0.96  0.98  0.55  0.77 ]
[ 0.89  0.95  0.49  0.85  0.97  0.63  0.76  0.95  0.67  0.56  0.66  0.96 ]
[ 0.95  0.68  0.61  0.86  0.77  0.87  0.94  0.97  0.71  0.57  0.95  0.66 ]
[ 0.78  0.93  0.76  0.81  0.97  0.47  0.73  0.90  0.74  0.78  0.88  0.96 ]

01/29 05:59:29 AM | === Batch 5/250
01/29 05:59:30 AM | loss = 0.698 + 1.709 + 0.104 = 2.512
01/29 05:59:31 AM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.31  0.77  0.42  0.70  0.38  0.60  0.31  0.96  0.31  0.64  0.91  0.34 ]
[ 0.47  0.41  0.39  0.96  0.86  0.68  0.98  0.84  0.71  0.91  0.70  0.96 ]
[ 0.35  0.40  0.33  0.69  0.71  0.44  0.79  0.98  0.67  0.54  0.39  0.62 ]
[ 0.57  0.89  0.72  0.83  0.99  0.94  0.98  0.97  0.81  0.85  0.51  0.94 ]
[ 0.39  0.57  0.41  0.41  0.88  0.69  0.32  0.61  0.32  0.65  0.37  0.72 ]
[ 0.48  0.35  0.88  0.87  0.71  0.74  0.97  0.64  0.96  0.89  0.76  0.96 ]
[ 0.44  0.42  0.34  0.39  0.87  0.31  0.75  0.51  0.86  0.38  0.34  0.72 ]
[ 0.78  0.79  0.93  0.96  0.77  0.33  0.97  0.64  0.65  0.75  0.40  0.96 ]
[ 0.69  0.62  0.32  0.38  0.86  0.37  0.44  0.57  0.32  0.65  0.98  0.39 ]
[ 0.82  0.74  0.72  0.79  0.94  0.32  0.64  0.88  0.80  0.90  0.77  0.49 ]
[ 0.38  0.81  0.32  0.33  0.62  0.58  0.91  0.95  0.75  0.32  0.91  0.40 ]
[ 0.77  0.88  0.69  0.93  0.91  0.37  0.92  0.47  0.95  0.67  0.68  0.84 ]
[ 0.46  0.36  0.95  0.68  0.92  0.93  0.64  0.98  0.33  0.44  0.93  0.43 ]
[ 0.65  0.95  0.98  0.31  0.49  0.50  0.98  0.38  0.98  0.32  0.89  0.96 ]
[ 0.79  0.92  0.35  0.96  0.92  0.87  0.86  0.90  0.93  0.33  0.48  0.37 ]
[ 0.81  0.97  0.92  0.36  0.92  0.35  0.98  0.44  0.95  0.43  0.90  0.97 ]
[ 0.78  0.32  0.42  0.92  0.37  0.32  0.33  0.38  0.31  0.31  0.48  0.39 ]
[ 0.84  0.91  0.94  0.33  0.96  0.34  0.49  0.33  0.75  0.49  0.89  0.89 ]
[ 0.95  0.91  0.95  0.98  0.86  0.90  0.98  0.55  0.92  0.94  0.92  0.99 ]
[ 0.32  0.92  0.97  0.98  0.59  0.71  0.94  0.95  0.81  0.97  0.97  0.77 ]
[ 0.42  0.34  0.31  0.33  0.74  0.34  0.76  0.85  0.91  0.67  0.35  0.41 ]
[ 0.74  0.87  0.59  0.90  0.87  0.76  0.95  0.90  0.74  0.82  0.32  0.64 ]
[ 0.51  0.59  0.62  0.79  0.71  0.38  0.68  0.39  0.47  0.70  0.79  0.39 ]
[ 0.76  0.85  0.86  0.86  0.78  0.68  0.94  0.88  0.86  0.37  0.91  0.63 ]
[ 0.90  0.88  0.59  0.56  0.88  0.31  0.38  0.76  0.47  0.63  0.56  0.37 ]
[ 0.75  0.89  0.85  0.86  0.53  0.63  0.84  0.52  0.91  0.84  0.56  0.95 ]
[ 0.71  0.39  0.42  0.34  0.91  0.69  0.92  0.31  0.89  0.43  0.55  0.32 ]
[ 0.73  0.91  0.88  0.85  0.88  0.73  0.61  0.42  0.56  0.81  0.63  0.81 ]
[ 0.32  0.36  0.35  0.62  0.37  0.59  0.44  0.32  0.48  0.42  0.33  0.31 ]
[ 0.71  0.87  0.91  0.88  0.90  0.66  0.83  0.61  0.55  0.83  0.53  0.94 ]
[ 0.46  0.31  0.95  0.48  0.33  0.36  0.65  0.40  0.90  0.98  0.35  0.92 ]
[ 0.56  0.91  0.81  0.61  0.74  0.50  0.46  0.56  0.82  0.87  0.46  0.56 ]
[ 0.38  0.47  0.52  0.58  0.76  0.32  0.72  0.60  0.83  0.42  0.31  0.55 ]
[ 0.75  0.90  0.80  0.83  0.44  0.70  0.91  0.39  0.38  0.82  0.48  0.94 ]
[ 0.75  0.44  0.76  0.40  0.34  0.62  0.93  0.69  0.48  0.82  0.40  0.58 ]
[ 0.75  0.89  0.33  0.87  0.95  0.46  0.82  0.61  0.34  0.61  0.49  0.59 ]
[ 0.96  0.96  0.47  0.94  0.89  0.87  0.94  0.92  0.96  0.98  0.84  0.92 ]
[ 0.83  0.91  0.83  0.87  0.99  0.32  0.96  0.32  0.96  0.81  0.98  0.97 ]
[ 0.53  0.80  0.91  0.91  0.53  0.36  0.78  0.90  0.93  0.80  0.71  0.77 ]
[ 0.64  0.92  0.88  0.77  0.96  0.92  0.89  0.82  0.78  0.51  0.99  0.91 ]
[ 0.73  0.98  0.32  0.55  0.79  0.56  0.32  0.62  0.57  0.68  0.97  0.91 ]
[ 0.88  0.80  0.98  0.80  0.91  0.96  0.45  0.45  0.87  0.95  0.98  0.98 ]
[ 0.75  0.69  0.61  0.46  0.49  0.57  0.95  0.90  0.93  0.42  0.80  0.80 ]
[ 0.84  0.90  0.95  0.86  0.54  0.91  0.89  0.97  0.85  0.36  0.91  0.50 ]
[ 0.84  0.77  0.75  0.78  0.91  0.32  0.40  0.97  0.85  0.48  0.92  0.93 ]
[ 0.89  0.84  0.63  0.87  0.73  0.84  0.80  0.96  0.77  0.68  0.96  0.88 ]
[ 0.73  0.31  0.95  0.58  0.40  0.57  0.76  0.95  0.83  0.96  0.39  0.47 ]
[ 0.95  0.87  0.92  0.49  0.98  0.76  0.93  0.68  0.79  0.86  0.33  0.74 ]
[ 0.33  0.56  0.35  0.91  0.80  0.54  0.86  0.34  0.95  0.47  0.66  0.32 ]
[ 0.95  0.84  0.95  0.93  0.53  0.65  0.96  0.93  0.97  0.42  0.74  0.96 ]
[ 0.79  0.77  0.95  0.86  0.66  0.56  0.55  0.90  0.96  0.98  0.53  0.68 ]
[ 0.91  0.93  0.36  0.83  0.97  0.70  0.77  0.95  0.68  0.56  0.62  0.96 ]
[ 0.95  0.71  0.53  0.83  0.79  0.86  0.94  0.96  0.78  0.48  0.95  0.63 ]
[ 0.73  0.91  0.82  0.83  0.97  0.35  0.71  0.85  0.72  0.82  0.85  0.96 ]

01/29 05:59:31 AM | === Batch 6/250
01/29 05:59:31 AM | loss = 0.566 + 1.159 + 0.097 = 1.822
01/29 05:59:32 AM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.20  0.76  0.32  0.69  0.29  0.59  0.20  0.97  0.20  0.61  0.89  0.22 ]
[ 0.46  0.30  0.27  0.97  0.89  0.55  0.97  0.85  0.68  0.89  0.74  0.96 ]
[ 0.25  0.31  0.22  0.64  0.70  0.35  0.74  0.99  0.66  0.45  0.29  0.57 ]
[ 0.62  0.90  0.73  0.84  0.99  0.94  0.98  0.98  0.83  0.85  0.39  0.92 ]
[ 0.30  0.50  0.36  0.33  0.84  0.74  0.20  0.56  0.20  0.64  0.28  0.72 ]
[ 0.41  0.24  0.87  0.89  0.74  0.65  0.97  0.57  0.96  0.87  0.80  0.96 ]
[ 0.33  0.37  0.23  0.32  0.84  0.20  0.77  0.50  0.86  0.29  0.25  0.72 ]
[ 0.77  0.83  0.93  0.98  0.80  0.23  0.97  0.59  0.62  0.67  0.28  0.97 ]
[ 0.62  0.64  0.20  0.27  0.81  0.27  0.35  0.48  0.21  0.61  0.98  0.27 ]
[ 0.80  0.75  0.72  0.81  0.96  0.21  0.62  0.83  0.78  0.90  0.69  0.39 ]
[ 0.27  0.78  0.20  0.21  0.58  0.50  0.92  0.96  0.76  0.20  0.89  0.31 ]
[ 0.74  0.88  0.68  0.95  0.93  0.29  0.92  0.36  0.95  0.61  0.66  0.80 ]
[ 0.53  0.27  0.96  0.64  0.92  0.91  0.59  0.99  0.22  0.41  0.91  0.34 ]
[ 0.59  0.94  0.98  0.20  0.46  0.47  0.98  0.27  0.98  0.21  0.89  0.96 ]
[ 0.77  0.92  0.25  0.96  0.94  0.85  0.84  0.92  0.93  0.22  0.42  0.26 ]
[ 0.76  0.97  0.92  0.25  0.90  0.24  0.98  0.33  0.95  0.33  0.91  0.97 ]
[ 0.81  0.21  0.31  0.92  0.25  0.21  0.21  0.28  0.20  0.20  0.37  0.27 ]
[ 0.83  0.89  0.94  0.22  0.96  0.28  0.39  0.24  0.73  0.40  0.89  0.89 ]
[ 0.93  0.93  0.95  0.98  0.87  0.93  0.98  0.56  0.90  0.93  0.92  0.99 ]
[ 0.20  0.95  0.97  0.98  0.55  0.65  0.94  0.94  0.79  0.97  0.98  0.80 ]
[ 0.31  0.23  0.20  0.29  0.70  0.24  0.69  0.85  0.91  0.65  0.23  0.30 ]
[ 0.77  0.91  0.52  0.93  0.89  0.73  0.96  0.85  0.70  0.83  0.22  0.65 ]
[ 0.46  0.54  0.59  0.84  0.66  0.28  0.61  0.30  0.43  0.69  0.81  0.28 ]
[ 0.78  0.90  0.81  0.89  0.81  0.62  0.96  0.83  0.86  0.26  0.91  0.68 ]
[ 0.87  0.88  0.53  0.58  0.90  0.20  0.26  0.74  0.36  0.58  0.50  0.27 ]
[ 0.77  0.92  0.83  0.90  0.45  0.56  0.85  0.40  0.89  0.80  0.50  0.95 ]
[ 0.62  0.27  0.31  0.23  0.91  0.67  0.91  0.20  0.83  0.35  0.45  0.21 ]
[ 0.74  0.94  0.83  0.89  0.90  0.68  0.54  0.34  0.53  0.84  0.60  0.84 ]
[ 0.21  0.26  0.24  0.53  0.28  0.56  0.41  0.22  0.45  0.30  0.23  0.20 ]
[ 0.72  0.90  0.88  0.92  0.92  0.59  0.85  0.55  0.49  0.85  0.54  0.95 ]
[ 0.36  0.20  0.94  0.38  0.22  0.27  0.63  0.31  0.87  0.97  0.27  0.92 ]
[ 0.51  0.93  0.73  0.63  0.75  0.41  0.37  0.49  0.85  0.90  0.39  0.50 ]
[ 0.28  0.38  0.51  0.52  0.80  0.20  0.71  0.63  0.87  0.31  0.20  0.48 ]
[ 0.76  0.92  0.73  0.86  0.36  0.64  0.94  0.34  0.31  0.86  0.41  0.94 ]
[ 0.75  0.37  0.78  0.30  0.23  0.56  0.92  0.70  0.37  0.78  0.30  0.57 ]
[ 0.77  0.92  0.21  0.91  0.96  0.35  0.83  0.59  0.23  0.59  0.43  0.64 ]
[ 0.96  0.95  0.48  0.94  0.88  0.89  0.95  0.90  0.97  0.98  0.87  0.90 ]
[ 0.85  0.89  0.87  0.89  0.99  0.20  0.96  0.20  0.96  0.83  0.99  0.97 ]
[ 0.46  0.79  0.92  0.92  0.55  0.26  0.81  0.87  0.91  0.79  0.71  0.78 ]
[ 0.66  0.89  0.91  0.79  0.96  0.93  0.91  0.76  0.79  0.51  0.99  0.91 ]
[ 0.77  0.97  0.20  0.54  0.79  0.47  0.20  0.56  0.52  0.69  0.97  0.92 ]
[ 0.91  0.84  0.98  0.82  0.91  0.96  0.42  0.33  0.87  0.96  0.98  0.98 ]
[ 0.75  0.71  0.62  0.40  0.43  0.53  0.95  0.85  0.91  0.35  0.82  0.81 ]
[ 0.88  0.92  0.94  0.87  0.59  0.90  0.90  0.97  0.86  0.26  0.91  0.48 ]
[ 0.86  0.73  0.74  0.80  0.92  0.20  0.30  0.98  0.86  0.44  0.90  0.91 ]
[ 0.92  0.86  0.69  0.89  0.73  0.86  0.82  0.96  0.74  0.71  0.95  0.90 ]
[ 0.75  0.20  0.95  0.50  0.31  0.49  0.74  0.96  0.76  0.95  0.32  0.35 ]
[ 0.95  0.90  0.94  0.46  0.98  0.78  0.93  0.75  0.78  0.89  0.26  0.79 ]
[ 0.23  0.49  0.25  0.91  0.79  0.45  0.88  0.22  0.93  0.43  0.67  0.20 ]
[ 0.95  0.78  0.94  0.95  0.52  0.58  0.96  0.95  0.97  0.30  0.74  0.96 ]
[ 0.79  0.78  0.94  0.87  0.68  0.47  0.43  0.91  0.96  0.99  0.47  0.58 ]
[ 0.92  0.91  0.31  0.80  0.97  0.71  0.77  0.93  0.68  0.54  0.60  0.96 ]
[ 0.95  0.74  0.42  0.77  0.80  0.88  0.94  0.96  0.83  0.37  0.93  0.57 ]
[ 0.68  0.88  0.84  0.85  0.96  0.24  0.69  0.77  0.68  0.86  0.83  0.96 ]

01/29 05:59:32 AM | === Batch 7/250
01/29 05:59:33 AM | loss = 0.846 + 0.667 + 0.087 = 1.600
01/29 05:59:34 AM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.12  0.77  0.28  0.67  0.21  0.60  0.12  0.97  0.12  0.57  0.90  0.15 ]
[ 0.40  0.21  0.19  0.98  0.91  0.57  0.98  0.87  0.70  0.90  0.78  0.97 ]
[ 0.17  0.25  0.14  0.57  0.68  0.29  0.68  0.99  0.66  0.40  0.21  0.51 ]
[ 0.68  0.90  0.76  0.88  1.00  0.94  0.98  0.98  0.84  0.84  0.29  0.93 ]
[ 0.28  0.47  0.37  0.26  0.85  0.78  0.12  0.53  0.12  0.62  0.20  0.71 ]
[ 0.32  0.15  0.89  0.91  0.77  0.69  0.97  0.53  0.96  0.88  0.83  0.97 ]
[ 0.24  0.32  0.15  0.29  0.83  0.12  0.78  0.47  0.86  0.25  0.18  0.71 ]
[ 0.72  0.86  0.94  0.98  0.82  0.15  0.98  0.55  0.59  0.68  0.20  0.97 ]
[ 0.59  0.66  0.12  0.19  0.79  0.18  0.26  0.43  0.12  0.56  0.98  0.27 ]
[ 0.75  0.77  0.76  0.84  0.97  0.13  0.61  0.85  0.78  0.91  0.59  0.32 ]
[ 0.18  0.76  0.12  0.13  0.55  0.40  0.92  0.97  0.76  0.12  0.88  0.24 ]
[ 0.68  0.90  0.72  0.96  0.95  0.22  0.93  0.27  0.95  0.56  0.61  0.83 ]
[ 0.53  0.19  0.96  0.61  0.93  0.91  0.52  0.99  0.14  0.36  0.90  0.24 ]
[ 0.50  0.93  0.98  0.14  0.48  0.40  0.98  0.17  0.98  0.13  0.90  0.97 ]
[ 0.75  0.92  0.20  0.97  0.94  0.83  0.82  0.93  0.93  0.14  0.36  0.17 ]
[ 0.69  0.97  0.93  0.19  0.89  0.16  0.98  0.24  0.95  0.24  0.91  0.98 ]
[ 0.81  0.14  0.22  0.93  0.17  0.14  0.15  0.20  0.12  0.12  0.29  0.19 ]
[ 0.79  0.87  0.94  0.14  0.96  0.21  0.32  0.17  0.71  0.32  0.90  0.89 ]
[ 0.93  0.94  0.96  0.98  0.90  0.94  0.98  0.57  0.91  0.94  0.94  0.99 ]
[ 0.12  0.96  0.97  0.99  0.53  0.61  0.95  0.95  0.75  0.97  0.98  0.84 ]
[ 0.23  0.15  0.12  0.28  0.64  0.17  0.67  0.85  0.91  0.69  0.19  0.23 ]
[ 0.80  0.93  0.51  0.94  0.90  0.67  0.97  0.86  0.63  0.82  0.14  0.68 ]
[ 0.40  0.48  0.54  0.88  0.62  0.22  0.52  0.21  0.38  0.68  0.81  0.20 ]
[ 0.81  0.92  0.81  0.91  0.84  0.52  0.97  0.86  0.84  0.19  0.91  0.71 ]
[ 0.86  0.90  0.47  0.64  0.90  0.12  0.23  0.75  0.26  0.54  0.45  0.18 ]
[ 0.78  0.94  0.86  0.92  0.44  0.47  0.87  0.29  0.88  0.74  0.41  0.95 ]
[ 0.57  0.19  0.21  0.15  0.91  0.64  0.92  0.12  0.77  0.28  0.36  0.13 ]
[ 0.75  0.95  0.81  0.90  0.91  0.61  0.52  0.27  0.55  0.84  0.53  0.87 ]
[ 0.15  0.18  0.16  0.44  0.20  0.52  0.37  0.15  0.40  0.21  0.15  0.12 ]
[ 0.72  0.93  0.87  0.94  0.94  0.50  0.88  0.54  0.43  0.85  0.49  0.95 ]
[ 0.26  0.12  0.95  0.29  0.14  0.21  0.59  0.25  0.82  0.97  0.20  0.92 ]
[ 0.48  0.94  0.70  0.66  0.78  0.31  0.28  0.44  0.85  0.91  0.30  0.42 ]
[ 0.19  0.27  0.48  0.48  0.83  0.12  0.67  0.62  0.90  0.25  0.12  0.38 ]
[ 0.76  0.94  0.72  0.88  0.32  0.56  0.95  0.27  0.24  0.88  0.32  0.94 ]
[ 0.75  0.28  0.77  0.21  0.15  0.47  0.90  0.70  0.26  0.73  0.22  0.61 ]
[ 0.79  0.93  0.14  0.93  0.97  0.25  0.84  0.51  0.16  0.60  0.37  0.62 ]
[ 0.97  0.96  0.54  0.95  0.87  0.90  0.95  0.88  0.96  0.98  0.89  0.87 ]
[ 0.86  0.89  0.90  0.90  0.99  0.12  0.95  0.12  0.96  0.88  0.99  0.96 ]
[ 0.38  0.81  0.93  0.92  0.56  0.18  0.81  0.82  0.90  0.73  0.70  0.81 ]
[ 0.69  0.89  0.93  0.79  0.94  0.93  0.90  0.72  0.77  0.50  0.99  0.91 ]
[ 0.78  0.97  0.12  0.52  0.77  0.37  0.12  0.52  0.46  0.68  0.98  0.93 ]
[ 0.93  0.86  0.99  0.82  0.91  0.95  0.39  0.27  0.88  0.97  0.99  0.99 ]
[ 0.73  0.69  0.60  0.33  0.35  0.52  0.95  0.78  0.91  0.27  0.83  0.78 ]
[ 0.92  0.93  0.93  0.87  0.59  0.88  0.89  0.97  0.86  0.18  0.91  0.44 ]
[ 0.87  0.71  0.71  0.81  0.93  0.12  0.21  0.98  0.84  0.39  0.90  0.89 ]
[ 0.94  0.87  0.75  0.91  0.74  0.90  0.87  0.96  0.67  0.72  0.95  0.92 ]
[ 0.76  0.12  0.96  0.39  0.24  0.44  0.74  0.96  0.74  0.95  0.29  0.24 ]
[ 0.94  0.92  0.96  0.48  0.98  0.79  0.94  0.81  0.77  0.91  0.21  0.82 ]
[ 0.15  0.43  0.16  0.89  0.76  0.39  0.89  0.15  0.90  0.38  0.66  0.12 ]
[ 0.96  0.71  0.95  0.97  0.59  0.54  0.96  0.95  0.97  0.21  0.73  0.97 ]
[ 0.80  0.80  0.94  0.88  0.68  0.40  0.35  0.91  0.96  0.99  0.39  0.56 ]
[ 0.94  0.92  0.27  0.80  0.96  0.68  0.76  0.91  0.68  0.52  0.53  0.97 ]
[ 0.94  0.76  0.31  0.77  0.81  0.90  0.93  0.95  0.87  0.31  0.91  0.48 ]
[ 0.61  0.86  0.83  0.83  0.96  0.15  0.63  0.74  0.65  0.90  0.80  0.95 ]

01/29 05:59:34 AM | === Batch 8/250
01/29 05:59:34 AM | loss = 0.939 + 0.290 + 0.080 = 1.309
01/29 05:59:35 AM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.07  0.79  0.24  0.65  0.15  0.58  0.07  0.97  0.07  0.50  0.92  0.10 ]
[ 0.32  0.15  0.12  0.99  0.93  0.64  0.98  0.88  0.66  0.93  0.83  0.97 ]
[ 0.13  0.27  0.09  0.48  0.66  0.30  0.61  0.99  0.66  0.37  0.16  0.49 ]
[ 0.75  0.89  0.81  0.91  1.00  0.96  0.98  0.98  0.84  0.80  0.26  0.94 ]
[ 0.31  0.47  0.43  0.22  0.87  0.83  0.07  0.49  0.07  0.56  0.13  0.69 ]
[ 0.24  0.10  0.92  0.94  0.78  0.75  0.97  0.53  0.97  0.90  0.84  0.97 ]
[ 0.15  0.32  0.11  0.29  0.86  0.08  0.77  0.46  0.86  0.27  0.15  0.70 ]
[ 0.63  0.87  0.95  0.99  0.83  0.10  0.98  0.54  0.53  0.72  0.13  0.98 ]
[ 0.57  0.68  0.07  0.21  0.83  0.13  0.18  0.42  0.07  0.47  0.98  0.28 ]
[ 0.67  0.77  0.82  0.88  0.98  0.08  0.62  0.88  0.80  0.93  0.47  0.27 ]
[ 0.11  0.77  0.07  0.08  0.50  0.30  0.92  0.98  0.75  0.07  0.89  0.19 ]
[ 0.59  0.92  0.77  0.98  0.96  0.15  0.93  0.21  0.96  0.55  0.54  0.85 ]
[ 0.48  0.12  0.97  0.56  0.93  0.92  0.43  0.99  0.09  0.30  0.91  0.19 ]
[ 0.39  0.94  0.99  0.11  0.50  0.31  0.98  0.11  0.98  0.08  0.91  0.97 ]
[ 0.72  0.91  0.14  0.97  0.94  0.85  0.84  0.93  0.94  0.09  0.33  0.12 ]
[ 0.59  0.98  0.95  0.15  0.87  0.11  0.99  0.19  0.95  0.18  0.92  0.98 ]
[ 0.78  0.10  0.16  0.92  0.13  0.09  0.11  0.16  0.07  0.07  0.21  0.13 ]
[ 0.72  0.88  0.95  0.09  0.96  0.15  0.28  0.11  0.73  0.27  0.90  0.89 ]
[ 0.94  0.95  0.97  0.99  0.93  0.94  0.99  0.61  0.92  0.95  0.96  1.00 ]
[ 0.07  0.97  0.97  0.99  0.53  0.60  0.96  0.97  0.68  0.98  0.99  0.89 ]
[ 0.17  0.09  0.07  0.32  0.57  0.11  0.70  0.88  0.90  0.75  0.16  0.20 ]
[ 0.81  0.93  0.51  0.95  0.92  0.61  0.98  0.89  0.53  0.77  0.09  0.69 ]
[ 0.41  0.46  0.46  0.92  0.65  0.16  0.42  0.17  0.36  0.63  0.78  0.16 ]
[ 0.81  0.93  0.84  0.92  0.88  0.45  0.98  0.89  0.80  0.15  0.91  0.73 ]
[ 0.86  0.92  0.39  0.68  0.88  0.07  0.22  0.79  0.18  0.53  0.40  0.11 ]
[ 0.78  0.95  0.88  0.93  0.49  0.39  0.90  0.20  0.90  0.70  0.31  0.94 ]
[ 0.59  0.13  0.14  0.11  0.92  0.58  0.93  0.07  0.70  0.24  0.28  0.08 ]
[ 0.72  0.96  0.84  0.89  0.93  0.54  0.59  0.21  0.60  0.81  0.43  0.89 ]
[ 0.11  0.12  0.11  0.39  0.14  0.44  0.33  0.11  0.35  0.14  0.10  0.07 ]
[ 0.68  0.93  0.89  0.94  0.95  0.42  0.92  0.57  0.37  0.81  0.41  0.94 ]
[ 0.18  0.07  0.95  0.24  0.09  0.18  0.52  0.22  0.77  0.98  0.15  0.93 ]
[ 0.43  0.95  0.70  0.73  0.82  0.24  0.19  0.36  0.85  0.90  0.21  0.38 ]
[ 0.13  0.19  0.41  0.52  0.88  0.07  0.62  0.56  0.93  0.19  0.07  0.29 ]
[ 0.74  0.94  0.76  0.88  0.28  0.48  0.97  0.20  0.17  0.88  0.24  0.95 ]
[ 0.73  0.21  0.72  0.14  0.10  0.39  0.87  0.67  0.18  0.64  0.16  0.68 ]
[ 0.78  0.93  0.09  0.95  0.98  0.17  0.87  0.42  0.11  0.65  0.29  0.61 ]
[ 0.97  0.97  0.62  0.95  0.87  0.92  0.95  0.86  0.96  0.98  0.90  0.83 ]
[ 0.84  0.91  0.92  0.91  0.99  0.07  0.93  0.07  0.97  0.91  0.99  0.95 ]
[ 0.29  0.80  0.94  0.92  0.58  0.13  0.77  0.75  0.88  0.65  0.67  0.82 ]
[ 0.70  0.90  0.94  0.78  0.95  0.91  0.88  0.72  0.79  0.54  1.00  0.90 ]
[ 0.77  0.97  0.07  0.48  0.73  0.31  0.07  0.51  0.38  0.71  0.98  0.94 ]
[ 0.93  0.87  0.99  0.80  0.89  0.94  0.39  0.26  0.87  0.98  0.99  0.99 ]
[ 0.75  0.63  0.53  0.25  0.28  0.50  0.95  0.68  0.91  0.20  0.83  0.73 ]
[ 0.93  0.94  0.90  0.85  0.53  0.84  0.88  0.97  0.87  0.13  0.89  0.48 ]
[ 0.87  0.67  0.67  0.83  0.95  0.07  0.15  0.97  0.80  0.37  0.90  0.86 ]
[ 0.94  0.87  0.81  0.92  0.79  0.93  0.90  0.97  0.58  0.75  0.95  0.93 ]
[ 0.75  0.07  0.96  0.30  0.19  0.41  0.76  0.97  0.68  0.96  0.31  0.17 ]
[ 0.94  0.92  0.97  0.51  0.98  0.79  0.96  0.84  0.73  0.92  0.18  0.86 ]
[ 0.10  0.38  0.10  0.86  0.71  0.34  0.91  0.11  0.84  0.30  0.59  0.07 ]
[ 0.96  0.70  0.97  0.97  0.66  0.60  0.97  0.95  0.97  0.16  0.70  0.96 ]
[ 0.83  0.82  0.95  0.89  0.62  0.39  0.31  0.92  0.95  0.99  0.33  0.51 ]
[ 0.96  0.93  0.25  0.80  0.97  0.71  0.75  0.90  0.67  0.46  0.46  0.96 ]
[ 0.93  0.77  0.23  0.79  0.81  0.89  0.91  0.95  0.90  0.25  0.88  0.39 ]
[ 0.50  0.85  0.81  0.79  0.97  0.09  0.53  0.76  0.66  0.91  0.78  0.94 ]

01/29 05:59:35 AM | === Batch 9/250
01/29 05:59:36 AM | loss = 0.968 + 0.026 + 0.074 = 1.067
01/29 05:59:37 AM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.04  0.80  0.18  0.63  0.10  0.60  0.04  0.97  0.04  0.43  0.93  0.07 ]
[ 0.26  0.10  0.09  0.99  0.94  0.71  0.98  0.89  0.63  0.95  0.87  0.98 ]
[ 0.09  0.26  0.06  0.40  0.63  0.28  0.54  0.99  0.66  0.33  0.11  0.44 ]
[ 0.80  0.88  0.85  0.93  1.00  0.97  0.99  0.99  0.84  0.76  0.25  0.94 ]
[ 0.34  0.44  0.49  0.18  0.88  0.87  0.04  0.43  0.04  0.51  0.09  0.67 ]
[ 0.17  0.07  0.94  0.95  0.80  0.81  0.97  0.51  0.97  0.92  0.87  0.98 ]
[ 0.10  0.31  0.07  0.27  0.89  0.05  0.77  0.44  0.85  0.26  0.13  0.70 ]
[ 0.54  0.88  0.97  0.99  0.84  0.06  0.98  0.52  0.48  0.77  0.09  0.98 ]
[ 0.56  0.72  0.04  0.22  0.86  0.09  0.12  0.40  0.05  0.38  0.98  0.33 ]
[ 0.59  0.78  0.86  0.90  0.98  0.05  0.64  0.91  0.82  0.94  0.34  0.22 ]
[ 0.07  0.76  0.04  0.05  0.45  0.26  0.92  0.98  0.75  0.04  0.89  0.15 ]
[ 0.49  0.94  0.82  0.98  0.96  0.10  0.94  0.16  0.97  0.54  0.46  0.88 ]
[ 0.45  0.08  0.97  0.51  0.94  0.92  0.36  0.99  0.05  0.25  0.92  0.15 ]
[ 0.29  0.94  0.99  0.08  0.53  0.23  0.98  0.07  0.99  0.05  0.92  0.98 ]
[ 0.65  0.91  0.10  0.98  0.93  0.85  0.84  0.93  0.95  0.06  0.29  0.08 ]
[ 0.49  0.98  0.96  0.11  0.85  0.08  0.99  0.14  0.96  0.14  0.92  0.99 ]
[ 0.76  0.08  0.11  0.91  0.10  0.06  0.08  0.12  0.04  0.04  0.15  0.09 ]
[ 0.64  0.88  0.96  0.06  0.97  0.11  0.25  0.08  0.75  0.23  0.91  0.89 ]
[ 0.95  0.96  0.97  0.99  0.95  0.94  0.99  0.64  0.92  0.96  0.97  1.00 ]
[ 0.04  0.97  0.98  0.99  0.54  0.57  0.97  0.97  0.61  0.98  0.99  0.92 ]
[ 0.13  0.06  0.04  0.37  0.51  0.08  0.69  0.90  0.88  0.80  0.14  0.17 ]
[ 0.81  0.94  0.51  0.95  0.93  0.56  0.98  0.91  0.43  0.73  0.06  0.70 ]
[ 0.37  0.41  0.38  0.94  0.67  0.12  0.32  0.13  0.32  0.56  0.74  0.12 ]
[ 0.81  0.94  0.86  0.93  0.90  0.38  0.99  0.91  0.77  0.11  0.89  0.74 ]
[ 0.86  0.93  0.30  0.74  0.86  0.04  0.21  0.82  0.12  0.51  0.35  0.07 ]
[ 0.77  0.96  0.90  0.93  0.54  0.31  0.92  0.14  0.91  0.69  0.23  0.93 ]
[ 0.58  0.08  0.09  0.08  0.92  0.51  0.93  0.04  0.62  0.21  0.21  0.04 ]
[ 0.68  0.97  0.86  0.89  0.94  0.46  0.63  0.16  0.64  0.79  0.34  0.91 ]
[ 0.07  0.08  0.07  0.33  0.09  0.35  0.29  0.08  0.28  0.10  0.06  0.04 ]
[ 0.63  0.94  0.89  0.95  0.96  0.34  0.94  0.59  0.31  0.77  0.34  0.93 ]
[ 0.12  0.04  0.95  0.20  0.06  0.14  0.43  0.18  0.70  0.98  0.11  0.93 ]
[ 0.39  0.95  0.69  0.76  0.85  0.17  0.14  0.28  0.84  0.90  0.15  0.36 ]
[ 0.08  0.13  0.32  0.56  0.90  0.04  0.54  0.50  0.95  0.14  0.04  0.21 ]
[ 0.70  0.95  0.77  0.89  0.24  0.40  0.97  0.16  0.12  0.87  0.18  0.95 ]
[ 0.71  0.15  0.66  0.09  0.06  0.33  0.82  0.64  0.12  0.55  0.12  0.72 ]
[ 0.77  0.93  0.06  0.96  0.99  0.12  0.89  0.34  0.07  0.68  0.25  0.57 ]
[ 0.98  0.97  0.70  0.95  0.86  0.93  0.94  0.84  0.96  0.98  0.90  0.78 ]
[ 0.82  0.92  0.93  0.91  0.99  0.04  0.91  0.04  0.97  0.94  0.99  0.95 ]
[ 0.21  0.77  0.94  0.91  0.61  0.09  0.72  0.64  0.87  0.56  0.63  0.81 ]
[ 0.73  0.91  0.95  0.77  0.96  0.89  0.85  0.72  0.78  0.53  1.00  0.88 ]
[ 0.76  0.97  0.04  0.43  0.67  0.26  0.04  0.47  0.29  0.71  0.98  0.95 ]
[ 0.93  0.88  0.99  0.78  0.89  0.92  0.36  0.26  0.87  0.98  0.99  0.99 ]
[ 0.76  0.55  0.45  0.19  0.20  0.47  0.95  0.62  0.89  0.15  0.84  0.66 ]
[ 0.94  0.94  0.86  0.83  0.49  0.79  0.86  0.97  0.87  0.09  0.87  0.51 ]
[ 0.87  0.64  0.59  0.82  0.96  0.04  0.11  0.97  0.75  0.35  0.89  0.83 ]
[ 0.94  0.87  0.85  0.93  0.82  0.95  0.93  0.97  0.50  0.76  0.96  0.94 ]
[ 0.72  0.04  0.96  0.22  0.15  0.38  0.78  0.97  0.60  0.97  0.34  0.12 ]
[ 0.93  0.93  0.98  0.53  0.98  0.78  0.97  0.86  0.68  0.93  0.18  0.89 ]
[ 0.07  0.30  0.06  0.83  0.65  0.30  0.92  0.07  0.81  0.24  0.51  0.04 ]
[ 0.96  0.71  0.98  0.98  0.72  0.66  0.98  0.95  0.97  0.12  0.65  0.95 ]
[ 0.85  0.84  0.95  0.89  0.55  0.37  0.27  0.92  0.94  0.99  0.26  0.48 ]
[ 0.97  0.94  0.26  0.80  0.97  0.74  0.73  0.91  0.66  0.38  0.37  0.96 ]
[ 0.92  0.76  0.16  0.80  0.81  0.90  0.89  0.95  0.90  0.20  0.85  0.29 ]
[ 0.41  0.82  0.75  0.74  0.97  0.05  0.44  0.79  0.66  0.92  0.76  0.93 ]

01/29 05:59:37 AM | === Batch 10/250
01/29 05:59:38 AM | loss = 1.427 + 0.267 + 0.069 = 1.762
01/29 05:59:38 AM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.03  0.84  0.15  0.63  0.08  0.66  0.03  0.97  0.03  0.40  0.95  0.05 ]
[ 0.20  0.08  0.07  1.00  0.95  0.77  0.98  0.91  0.64  0.96  0.90  0.98 ]
[ 0.07  0.26  0.04  0.35  0.61  0.27  0.54  0.99  0.71  0.35  0.09  0.45 ]
[ 0.85  0.88  0.88  0.95  1.00  0.97  0.99  0.99  0.83  0.71  0.27  0.93 ]
[ 0.36  0.44  0.58  0.16  0.89  0.91  0.03  0.40  0.03  0.51  0.07  0.65 ]
[ 0.14  0.05  0.95  0.97  0.82  0.83  0.98  0.52  0.98  0.94  0.90  0.98 ]
[ 0.07  0.36  0.06  0.28  0.91  0.04  0.78  0.49  0.86  0.25  0.13  0.73 ]
[ 0.43  0.90  0.97  1.00  0.84  0.05  0.98  0.54  0.45  0.82  0.07  0.99 ]
[ 0.62  0.78  0.03  0.25  0.89  0.07  0.10  0.44  0.03  0.35  0.98  0.37 ]
[ 0.50  0.78  0.90  0.92  0.98  0.03  0.68  0.93  0.85  0.95  0.28  0.18 ]
[ 0.05  0.78  0.03  0.04  0.43  0.29  0.93  0.98  0.75  0.03  0.89  0.12 ]
[ 0.38  0.95  0.86  0.99  0.97  0.07  0.95  0.13  0.97  0.57  0.41  0.89 ]
[ 0.46  0.06  0.97  0.47  0.94  0.93  0.35  0.99  0.04  0.22  0.94  0.13 ]
[ 0.21  0.94  0.99  0.06  0.55  0.19  0.99  0.04  0.99  0.03  0.93  0.98 ]
[ 0.67  0.91  0.08  0.98  0.93  0.87  0.86  0.93  0.95  0.04  0.28  0.06 ]
[ 0.39  0.99  0.96  0.11  0.86  0.06  0.99  0.12  0.96  0.11  0.93  0.99 ]
[ 0.74  0.06  0.08  0.92  0.08  0.04  0.07  0.10  0.03  0.03  0.14  0.07 ]
[ 0.54  0.89  0.97  0.04  0.97  0.08  0.23  0.05  0.76  0.20  0.91  0.88 ]
[ 0.96  0.97  0.98  0.99  0.96  0.94  0.99  0.67  0.93  0.97  0.98  1.00 ]
[ 0.03  0.97  0.98  0.99  0.53  0.57  0.97  0.98  0.51  0.99  0.99  0.94 ]
[ 0.11  0.04  0.03  0.45  0.53  0.06  0.74  0.91  0.88  0.84  0.14  0.17 ]
[ 0.82  0.94  0.49  0.96  0.94  0.53  0.99  0.92  0.33  0.70  0.04  0.74 ]
[ 0.31  0.39  0.33  0.95  0.67  0.10  0.31  0.12  0.28  0.50  0.71  0.10 ]
[ 0.81  0.95  0.86  0.94  0.92  0.32  0.99  0.93  0.72  0.09  0.87  0.78 ]
[ 0.86  0.95  0.26  0.81  0.84  0.03  0.21  0.85  0.10  0.50  0.32  0.05 ]
[ 0.75  0.96  0.91  0.94  0.58  0.26  0.94  0.10  0.92  0.72  0.19  0.92 ]
[ 0.62  0.06  0.06  0.06  0.93  0.49  0.93  0.03  0.67  0.19  0.17  0.03 ]
[ 0.64  0.97  0.86  0.89  0.94  0.40  0.65  0.14  0.69  0.77  0.31  0.93 ]
[ 0.05  0.06  0.05  0.31  0.07  0.32  0.28  0.06  0.28  0.08  0.04  0.03 ]
[ 0.58  0.94  0.87  0.95  0.97  0.27  0.95  0.59  0.27  0.74  0.32  0.92 ]
[ 0.09  0.03  0.96  0.18  0.04  0.12  0.37  0.16  0.71  0.98  0.09  0.94 ]
[ 0.35  0.95  0.66  0.78  0.90  0.14  0.11  0.21  0.83  0.90  0.11  0.30 ]
[ 0.06  0.09  0.29  0.62  0.92  0.03  0.51  0.47  0.97  0.12  0.03  0.17 ]
[ 0.67  0.95  0.76  0.90  0.21  0.33  0.98  0.14  0.09  0.88  0.16  0.96 ]
[ 0.68  0.10  0.59  0.06  0.04  0.29  0.83  0.67  0.08  0.59  0.09  0.77 ]
[ 0.75  0.93  0.04  0.97  0.99  0.08  0.91  0.33  0.05  0.73  0.25  0.54 ]
[ 0.98  0.98  0.75  0.95  0.86  0.94  0.94  0.85  0.96  0.98  0.90  0.80 ]
[ 0.82  0.93  0.94  0.91  0.99  0.03  0.92  0.03  0.97  0.94  0.99  0.94 ]
[ 0.19  0.74  0.95  0.93  0.65  0.07  0.70  0.64  0.88  0.51  0.65  0.81 ]
[ 0.76  0.92  0.95  0.77  0.96  0.89  0.86  0.76  0.78  0.50  1.00  0.87 ]
[ 0.71  0.97  0.03  0.39  0.63  0.23  0.03  0.46  0.24  0.71  0.99  0.95 ]
[ 0.94  0.89  0.99  0.77  0.90  0.92  0.36  0.29  0.87  0.98  0.99  0.99 ]
[ 0.78  0.55  0.41  0.17  0.16  0.52  0.93  0.63  0.89  0.13  0.85  0.57 ]
[ 0.95  0.94  0.83  0.80  0.47  0.79  0.87  0.98  0.89  0.07  0.84  0.55 ]
[ 0.89  0.66  0.50  0.80  0.97  0.03  0.08  0.96  0.72  0.34  0.87  0.85 ]
[ 0.95  0.87  0.87  0.94  0.85  0.96  0.94  0.98  0.47  0.79  0.96  0.95 ]
[ 0.69  0.03  0.96  0.17  0.11  0.36  0.77  0.98  0.64  0.97  0.38  0.09 ]
[ 0.94  0.93  0.98  0.56  0.99  0.79  0.97  0.88  0.67  0.93  0.20  0.92 ]
[ 0.07  0.24  0.04  0.85  0.60  0.27  0.93  0.06  0.84  0.20  0.46  0.03 ]
[ 0.96  0.73  0.98  0.98  0.79  0.69  0.99  0.94  0.97  0.11  0.57  0.94 ]
[ 0.85  0.85  0.96  0.90  0.49  0.39  0.23  0.93  0.94  0.99  0.21  0.48 ]
[ 0.97  0.95  0.31  0.80  0.97  0.75  0.71  0.92  0.67  0.34  0.28  0.96 ]
[ 0.92  0.73  0.13  0.82  0.80  0.89  0.89  0.96  0.90  0.17  0.85  0.24 ]
[ 0.34  0.82  0.69  0.70  0.97  0.04  0.36  0.81  0.64  0.91  0.74  0.92 ]

01/29 05:59:38 AM | === Batch 11/250
01/29 05:59:39 AM | loss = 0.766 + 0.343 + 0.064 = 1.173
01/29 05:59:40 AM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.02  0.87  0.13  0.66  0.07  0.74  0.02  0.98  0.02  0.38  0.97  0.04 ]
[ 0.18  0.06  0.06  1.00  0.96  0.82  0.98  0.92  0.68  0.97  0.93  0.98 ]
[ 0.07  0.31  0.03  0.36  0.61  0.28  0.58  0.99  0.77  0.38  0.08  0.47 ]
[ 0.88  0.90  0.91  0.97  1.00  0.98  0.99  0.99  0.83  0.67  0.31  0.94 ]
[ 0.36  0.47  0.68  0.16  0.88  0.94  0.02  0.37  0.02  0.54  0.06  0.66 ]
[ 0.14  0.04  0.96  0.98  0.84  0.85  0.98  0.52  0.98  0.96  0.92  0.98 ]
[ 0.05  0.44  0.05  0.30  0.93  0.03  0.80  0.56  0.88  0.27  0.14  0.77 ]
[ 0.38  0.91  0.98  1.00  0.86  0.03  0.99  0.57  0.42  0.86  0.05  0.99 ]
[ 0.70  0.84  0.02  0.30  0.92  0.06  0.09  0.49  0.02  0.34  0.99  0.40 ]
[ 0.48  0.80  0.92  0.94  0.99  0.02  0.73  0.95  0.87  0.97  0.25  0.15 ]
[ 0.04  0.81  0.02  0.03  0.43  0.35  0.95  0.99  0.76  0.02  0.90  0.10 ]
[ 0.33  0.96  0.89  0.99  0.98  0.05  0.96  0.10  0.97  0.63  0.37  0.90 ]
[ 0.51  0.05  0.97  0.46  0.94  0.93  0.39  0.99  0.03  0.20  0.95  0.12 ]
[ 0.17  0.94  1.00  0.05  0.58  0.16  0.99  0.03  0.99  0.02  0.93  0.98 ]
[ 0.72  0.93  0.07  0.98  0.93  0.89  0.88  0.93  0.96  0.03  0.30  0.05 ]
[ 0.34  0.99  0.97  0.11  0.87  0.05  0.99  0.11  0.96  0.10  0.94  0.99 ]
[ 0.76  0.05  0.07  0.93  0.07  0.03  0.06  0.09  0.02  0.02  0.13  0.06 ]
[ 0.50  0.89  0.97  0.03  0.97  0.06  0.23  0.04  0.76  0.19  0.92  0.85 ]
[ 0.97  0.98  0.98  0.99  0.97  0.93  0.99  0.70  0.94  0.97  0.98  1.00 ]
[ 0.02  0.98  0.98  1.00  0.54  0.61  0.97  0.98  0.50  0.99  0.99  0.96 ]
[ 0.09  0.03  0.02  0.55  0.58  0.05  0.80  0.92  0.89  0.88  0.14  0.17 ]
[ 0.82  0.94  0.48  0.96  0.94  0.53  0.99  0.93  0.28  0.71  0.03  0.79 ]
[ 0.29  0.39  0.31  0.96  0.69  0.08  0.31  0.12  0.27  0.44  0.69  0.09 ]
[ 0.81  0.95  0.86  0.95  0.93  0.30  0.99  0.94  0.73  0.08  0.84  0.83 ]
[ 0.86  0.96  0.24  0.87  0.82  0.02  0.23  0.87  0.09  0.52  0.32  0.03 ]
[ 0.74  0.97  0.92  0.95  0.63  0.24  0.95  0.09  0.94  0.77  0.17  0.91 ]
[ 0.69  0.05  0.05  0.05  0.94  0.49  0.94  0.02  0.73  0.18  0.14  0.02 ]
[ 0.60  0.97  0.86  0.89  0.95  0.40  0.67  0.12  0.72  0.77  0.30  0.95 ]
[ 0.04  0.04  0.04  0.32  0.07  0.32  0.28  0.05  0.32  0.07  0.03  0.02 ]
[ 0.54  0.94  0.84  0.96  0.98  0.25  0.96  0.58  0.23  0.74  0.33  0.90 ]
[ 0.07  0.02  0.97  0.18  0.03  0.11  0.31  0.16  0.76  0.99  0.07  0.94 ]
[ 0.33  0.95  0.66  0.81  0.93  0.12  0.09  0.16  0.83  0.90  0.09  0.24 ]
[ 0.04  0.07  0.29  0.70  0.93  0.02  0.49  0.47  0.98  0.10  0.02  0.15 ]
[ 0.63  0.95  0.74  0.91  0.19  0.30  0.98  0.14  0.07  0.88  0.16  0.97 ]
[ 0.66  0.08  0.55  0.05  0.03  0.29  0.86  0.73  0.06  0.65  0.07  0.82 ]
[ 0.74  0.92  0.03  0.98  0.99  0.06  0.92  0.36  0.04  0.76  0.28  0.50 ]
[ 0.98  0.99  0.80  0.95  0.86  0.95  0.94  0.87  0.96  0.98  0.91  0.83 ]
[ 0.83  0.94  0.95  0.92  1.00  0.02  0.93  0.02  0.97  0.94  1.00  0.95 ]
[ 0.19  0.71  0.96  0.94  0.69  0.06  0.71  0.64  0.89  0.50  0.69  0.82 ]
[ 0.80  0.93  0.96  0.78  0.96  0.90  0.87  0.80  0.77  0.51  1.00  0.87 ]
[ 0.66  0.97  0.02  0.39  0.62  0.22  0.02  0.46  0.21  0.71  0.99  0.96 ]
[ 0.94  0.90  0.99  0.77  0.92  0.93  0.37  0.33  0.88  0.99  0.99  0.99 ]
[ 0.82  0.58  0.40  0.16  0.15  0.58  0.92  0.66  0.89  0.11  0.88  0.47 ]
[ 0.96  0.94  0.81  0.79  0.48  0.79  0.88  0.98  0.91  0.05  0.79  0.58 ]
[ 0.90  0.71  0.44  0.76  0.98  0.02  0.07  0.96  0.71  0.36  0.87  0.87 ]
[ 0.96  0.88  0.89  0.95  0.88  0.97  0.95  0.98  0.48  0.82  0.97  0.95 ]
[ 0.66  0.02  0.96  0.15  0.09  0.36  0.77  0.98  0.69  0.98  0.44  0.08 ]
[ 0.95  0.94  0.99  0.56  0.99  0.80  0.98  0.90  0.65  0.93  0.23  0.93 ]
[ 0.07  0.21  0.03  0.88  0.57  0.26  0.94  0.05  0.87  0.19  0.44  0.02 ]
[ 0.96  0.76  0.99  0.98  0.84  0.72  0.99  0.93  0.98  0.11  0.47  0.94 ]
[ 0.85  0.85  0.97  0.91  0.43  0.44  0.20  0.94  0.93  0.99  0.18  0.49 ]
[ 0.96  0.96  0.37  0.78  0.97  0.76  0.68  0.94  0.70  0.33  0.21  0.96 ]
[ 0.92  0.68  0.11  0.81  0.80  0.89  0.89  0.97  0.89  0.15  0.86  0.22 ]
[ 0.28  0.79  0.60  0.70  0.97  0.02  0.30  0.83  0.62  0.88  0.74  0.91 ]

01/29 05:59:40 AM | === Batch 12/250
01/29 05:59:41 AM | loss = 0.818 + 0.281 + 0.060 = 1.160
01/29 05:59:41 AM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.01  0.90  0.12  0.71  0.06  0.80  0.01  0.98  0.01  0.39  0.98  0.04 ]
[ 0.17  0.05  0.06  1.00  0.97  0.85  0.98  0.93  0.73  0.98  0.95  0.99 ]
[ 0.06  0.39  0.02  0.41  0.65  0.29  0.64  1.00  0.82  0.43  0.08  0.52 ]
[ 0.91  0.92  0.92  0.98  1.00  0.98  0.99  0.99  0.84  0.64  0.38  0.94 ]
[ 0.40  0.53  0.78  0.17  0.88  0.96  0.01  0.38  0.01  0.59  0.06  0.69 ]
[ 0.15  0.03  0.96  0.98  0.87  0.87  0.98  0.53  0.98  0.97  0.94  0.98 ]
[ 0.04  0.53  0.04  0.34  0.95  0.02  0.83  0.64  0.89  0.30  0.18  0.81 ]
[ 0.35  0.92  0.98  1.00  0.89  0.03  0.99  0.60  0.42  0.89  0.05  0.99 ]
[ 0.78  0.88  0.01  0.36  0.94  0.05  0.08  0.57  0.02  0.35  0.99  0.44 ]
[ 0.49  0.81  0.94  0.96  0.99  0.02  0.77  0.96  0.89  0.97  0.23  0.13 ]
[ 0.03  0.84  0.01  0.02  0.47  0.44  0.96  0.99  0.79  0.01  0.90  0.09 ]
[ 0.29  0.97  0.92  0.99  0.98  0.04  0.97  0.09  0.98  0.68  0.35  0.91 ]
[ 0.58  0.04  0.97  0.49  0.95  0.93  0.46  0.99  0.02  0.20  0.96  0.12 ]
[ 0.13  0.94  1.00  0.05  0.61  0.15  0.99  0.02  0.99  0.02  0.93  0.98 ]
[ 0.78  0.94  0.06  0.99  0.94  0.90  0.90  0.95  0.97  0.02  0.32  0.04 ]
[ 0.32  0.99  0.97  0.12  0.87  0.04  0.99  0.10  0.97  0.09  0.94  0.99 ]
[ 0.80  0.04  0.06  0.94  0.06  0.03  0.05  0.09  0.01  0.01  0.14  0.05 ]
[ 0.48  0.88  0.98  0.02  0.98  0.05  0.23  0.03  0.76  0.17  0.94  0.82 ]
[ 0.98  0.98  0.99  0.99  0.97  0.93  0.99  0.74  0.95  0.98  0.98  1.00 ]
[ 0.01  0.98  0.98  1.00  0.57  0.67  0.98  0.98  0.51  0.99  0.99  0.97 ]
[ 0.09  0.02  0.01  0.65  0.65  0.04  0.85  0.93  0.91  0.90  0.15  0.19 ]
[ 0.82  0.94  0.47  0.96  0.95  0.56  0.99  0.93  0.24  0.74  0.02  0.83 ]
[ 0.29  0.41  0.31  0.97  0.70  0.08  0.32  0.13  0.29  0.41  0.69  0.08 ]
[ 0.81  0.95  0.86  0.96  0.94  0.29  0.99  0.94  0.74  0.06  0.83  0.87 ]
[ 0.88  0.97  0.24  0.91  0.83  0.01  0.26  0.89  0.08  0.57  0.34  0.03 ]
[ 0.74  0.97  0.93  0.95  0.69  0.23  0.96  0.08  0.95  0.80  0.17  0.90 ]
[ 0.75  0.05  0.04  0.04  0.95  0.51  0.94  0.01  0.79  0.18  0.13  0.01 ]
[ 0.59  0.97  0.85  0.90  0.95  0.41  0.68  0.12  0.75  0.79  0.31  0.96 ]
[ 0.03  0.04  0.03  0.37  0.07  0.33  0.29  0.04  0.37  0.06  0.02  0.01 ]
[ 0.51  0.95  0.80  0.96  0.98  0.24  0.97  0.56  0.21  0.76  0.36  0.86 ]
[ 0.06  0.01  0.98  0.19  0.02  0.10  0.27  0.16  0.81  0.99  0.06  0.95 ]
[ 0.32  0.95  0.66  0.84  0.95  0.11  0.07  0.13  0.83  0.91  0.07  0.19 ]
[ 0.03  0.05  0.31  0.77  0.94  0.01  0.51  0.50  0.99  0.10  0.01  0.14 ]
[ 0.61  0.95  0.71  0.92  0.19  0.30  0.99  0.15  0.06  0.89  0.17  0.97 ]
[ 0.67  0.06  0.53  0.04  0.02  0.32  0.88  0.79  0.05  0.71  0.06  0.86 ]
[ 0.74  0.92  0.02  0.98  0.99  0.05  0.93  0.41  0.03  0.78  0.32  0.46 ]
[ 0.98  0.99  0.84  0.95  0.86  0.96  0.94  0.91  0.96  0.98  0.92  0.86 ]
[ 0.84  0.95  0.96  0.93  1.00  0.01  0.94  0.01  0.97  0.94  1.00  0.95 ]
[ 0.20  0.69  0.96  0.95  0.69  0.05  0.72  0.67  0.91  0.52  0.75  0.84 ]
[ 0.83  0.94  0.97  0.79  0.97  0.91  0.88  0.83  0.76  0.54  1.00  0.88 ]
[ 0.61  0.97  0.01  0.43  0.63  0.22  0.01  0.50  0.21  0.70  0.99  0.96 ]
[ 0.95  0.91  0.99  0.77  0.94  0.94  0.38  0.39  0.90  0.99  1.00  0.99 ]
[ 0.86  0.63  0.40  0.17  0.14  0.65  0.89  0.72  0.90  0.11  0.90  0.39 ]
[ 0.97  0.94  0.79  0.79  0.51  0.81  0.90  0.99  0.92  0.04  0.74  0.59 ]
[ 0.92  0.76  0.41  0.68  0.98  0.01  0.06  0.96  0.75  0.39  0.89  0.90 ]
[ 0.96  0.88  0.91  0.95  0.90  0.97  0.96  0.99  0.51  0.86  0.98  0.96 ]
[ 0.65  0.01  0.96  0.13  0.08  0.38  0.77  0.99  0.76  0.98  0.49  0.07 ]
[ 0.96  0.94  0.99  0.57  0.99  0.82  0.98  0.92  0.61  0.93  0.27  0.94 ]
[ 0.08  0.19  0.02  0.91  0.56  0.26  0.95  0.04  0.89  0.18  0.43  0.01 ]
[ 0.95  0.78  0.99  0.98  0.88  0.72  0.99  0.93  0.98  0.13  0.38  0.94 ]
[ 0.86  0.86  0.97  0.92  0.39  0.51  0.19  0.95  0.94  0.99  0.18  0.54 ]
[ 0.96  0.96  0.45  0.77  0.97  0.75  0.64  0.95  0.75  0.33  0.16  0.96 ]
[ 0.93  0.64  0.09  0.79  0.78  0.89  0.89  0.98  0.86  0.14  0.88  0.21 ]
[ 0.24  0.74  0.53  0.70  0.97  0.02  0.26  0.85  0.56  0.85  0.75  0.92 ]

01/29 05:59:41 AM | === Batch 13/250
01/29 05:59:42 AM | loss = 0.948 + 0.129 + 0.057 = 1.134
01/29 05:59:43 AM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.01  0.93  0.12  0.76  0.05  0.86  0.01  0.98  0.01  0.42  0.98  0.03 ]
[ 0.16  0.04  0.06  1.00  0.97  0.89  0.99  0.94  0.78  0.98  0.96  0.99 ]
[ 0.06  0.49  0.02  0.46  0.71  0.32  0.71  1.00  0.87  0.50  0.08  0.59 ]
[ 0.93  0.94  0.94  0.98  1.00  0.98  0.99  0.99  0.84  0.62  0.47  0.95 ]
[ 0.47  0.62  0.85  0.18  0.89  0.97  0.01  0.41  0.01  0.66  0.06  0.72 ]
[ 0.16  0.02  0.97  0.99  0.89  0.89  0.98  0.55  0.99  0.97  0.96  0.98 ]
[ 0.03  0.61  0.04  0.39  0.96  0.02  0.86  0.71  0.91  0.34  0.22  0.85 ]
[ 0.34  0.93  0.98  1.00  0.91  0.02  0.99  0.64  0.43  0.92  0.04  0.99 ]
[ 0.85  0.92  0.01  0.44  0.95  0.05  0.08  0.65  0.01  0.39  0.99  0.50 ]
[ 0.52  0.83  0.95  0.97  0.99  0.01  0.81  0.97  0.90  0.98  0.23  0.12 ]
[ 0.02  0.87  0.01  0.02  0.52  0.55  0.97  0.99  0.82  0.01  0.91  0.08 ]
[ 0.27  0.97  0.94  1.00  0.99  0.03  0.97  0.08  0.98  0.74  0.34  0.92 ]
[ 0.66  0.03  0.98  0.53  0.95  0.94  0.55  0.99  0.02  0.21  0.97  0.13 ]
[ 0.11  0.94  1.00  0.04  0.66  0.13  0.99  0.02  0.99  0.01  0.94  0.98 ]
[ 0.84  0.95  0.06  0.99  0.96  0.92  0.92  0.96  0.97  0.02  0.36  0.04 ]
[ 0.32  0.99  0.97  0.14  0.89  0.03  0.99  0.09  0.97  0.08  0.95  0.99 ]
[ 0.84  0.04  0.05  0.96  0.05  0.02  0.05  0.10  0.01  0.01  0.16  0.04 ]
[ 0.48  0.88  0.98  0.01  0.98  0.04  0.24  0.02  0.75  0.17  0.95  0.81 ]
[ 0.98  0.99  0.99  0.99  0.98  0.93  1.00  0.78  0.96  0.98  0.99  1.00 ]
[ 0.01  0.98  0.98  1.00  0.61  0.73  0.98  0.99  0.55  0.99  0.99  0.98 ]
[ 0.08  0.02  0.01  0.74  0.71  0.03  0.89  0.94  0.92  0.92  0.18  0.21 ]
[ 0.84  0.94  0.47  0.96  0.95  0.58  0.99  0.93  0.22  0.77  0.02  0.87 ]
[ 0.32  0.46  0.31  0.98  0.73  0.07  0.35  0.14  0.35  0.41  0.71  0.08 ]
[ 0.81  0.95  0.87  0.97  0.95  0.29  1.00  0.95  0.77  0.05  0.84  0.90 ]
[ 0.89  0.98  0.25  0.94  0.85  0.01  0.30  0.91  0.08  0.64  0.36  0.02 ]
[ 0.75  0.97  0.94  0.96  0.75  0.22  0.96  0.08  0.96  0.83  0.17  0.92 ]
[ 0.82  0.04  0.03  0.04  0.96  0.55  0.95  0.01  0.84  0.18  0.12  0.01 ]
[ 0.59  0.98  0.83  0.89  0.96  0.42  0.67  0.12  0.78  0.81  0.31  0.97 ]
[ 0.03  0.03  0.02  0.44  0.07  0.37  0.31  0.03  0.44  0.06  0.02  0.01 ]
[ 0.52  0.95  0.77  0.97  0.98  0.23  0.97  0.56  0.20  0.80  0.39  0.87 ]
[ 0.05  0.01  0.99  0.21  0.02  0.10  0.26  0.18  0.85  0.99  0.06  0.96 ]
[ 0.33  0.96  0.67  0.86  0.97  0.10  0.07  0.12  0.84  0.92  0.06  0.15 ]
[ 0.03  0.04  0.34  0.84  0.94  0.01  0.54  0.55  0.99  0.10  0.01  0.14 ]
[ 0.61  0.95  0.69  0.93  0.20  0.29  0.99  0.16  0.05  0.91  0.18  0.98 ]
[ 0.69  0.05  0.53  0.03  0.02  0.38  0.90  0.84  0.05  0.78  0.05  0.90 ]
[ 0.75  0.92  0.01  0.99  0.99  0.04  0.93  0.46  0.03  0.78  0.37  0.50 ]
[ 0.98  0.99  0.88  0.96  0.87  0.97  0.95  0.93  0.96  0.99  0.93  0.88 ]
[ 0.86  0.96  0.97  0.94  1.00  0.01  0.95  0.01  0.96  0.95  1.00  0.97 ]
[ 0.22  0.69  0.97  0.96  0.71  0.05  0.76  0.73  0.93  0.55  0.80  0.87 ]
[ 0.87  0.94  0.97  0.80  0.97  0.93  0.90  0.87  0.74  0.58  1.00  0.90 ]
[ 0.59  0.97  0.01  0.48  0.67  0.22  0.01  0.55  0.22  0.67  0.99  0.97 ]
[ 0.96  0.91  0.99  0.79  0.95  0.95  0.41  0.42  0.92  0.99  1.00  0.99 ]
[ 0.89  0.68  0.45  0.19  0.14  0.71  0.88  0.78  0.91  0.10  0.92  0.33 ]
[ 0.98  0.95  0.78  0.79  0.57  0.84  0.91  0.99  0.93  0.03  0.74  0.58 ]
[ 0.93  0.80  0.39  0.67  0.99  0.01  0.06  0.97  0.78  0.45  0.91  0.92 ]
[ 0.97  0.89  0.92  0.96  0.91  0.98  0.97  0.99  0.56  0.87  0.98  0.96 ]
[ 0.65  0.01  0.96  0.13  0.07  0.43  0.77  0.99  0.82  0.99  0.54  0.06 ]
[ 0.97  0.95  1.00  0.57  0.99  0.84  0.99  0.93  0.57  0.93  0.34  0.95 ]
[ 0.09  0.18  0.02  0.93  0.56  0.26  0.96  0.04  0.91  0.18  0.43  0.01 ]
[ 0.95  0.78  0.99  0.98  0.92  0.71  0.99  0.92  0.98  0.12  0.30  0.94 ]
[ 0.86  0.87  0.98  0.93  0.36  0.57  0.17  0.96  0.94  0.99  0.18  0.61 ]
[ 0.95  0.96  0.52  0.75  0.97  0.75  0.61  0.96  0.79  0.31  0.12  0.96 ]
[ 0.93  0.61  0.08  0.79  0.76  0.90  0.90  0.98  0.84  0.14  0.90  0.21 ]
[ 0.22  0.66  0.48  0.71  0.97  0.01  0.23  0.87  0.48  0.83  0.75  0.93 ]

01/29 05:59:43 AM | === Batch 14/250
01/29 05:59:43 AM | loss = 1.079 + 0.062 + 0.054 = 1.195
01/29 05:59:44 AM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.01  0.95  0.12  0.80  0.05  0.89  0.01  0.99  0.01  0.47  0.99  0.03 ]
[ 0.16  0.03  0.07  1.00  0.98  0.91  0.99  0.95  0.82  0.99  0.97  0.99 ]
[ 0.07  0.57  0.02  0.51  0.75  0.32  0.77  1.00  0.90  0.58  0.08  0.66 ]
[ 0.94  0.95  0.95  0.99  1.00  0.99  0.99  0.99  0.86  0.63  0.53  0.96 ]
[ 0.52  0.69  0.89  0.19  0.90  0.98  0.01  0.45  0.01  0.72  0.06  0.75 ]
[ 0.18  0.02  0.97  0.99  0.91  0.90  0.99  0.60  0.99  0.98  0.97  0.98 ]
[ 0.03  0.64  0.03  0.41  0.97  0.01  0.89  0.74  0.92  0.37  0.24  0.85 ]
[ 0.35  0.94  0.99  1.00  0.93  0.02  0.99  0.69  0.44  0.93  0.03  0.99 ]
[ 0.89  0.95  0.01  0.48  0.96  0.04  0.08  0.73  0.01  0.44  1.00  0.54 ]
[ 0.56  0.83  0.96  0.97  0.99  0.01  0.82  0.98  0.91  0.98  0.20  0.12 ]
[ 0.02  0.88  0.01  0.01  0.59  0.66  0.97  0.99  0.85  0.01  0.91  0.07 ]
[ 0.26  0.98  0.95  1.00  0.99  0.03  0.97  0.07  0.98  0.76  0.32  0.93 ]
[ 0.72  0.03  0.98  0.56  0.96  0.94  0.59  1.00  0.01  0.21  0.98  0.13 ]
[ 0.10  0.94  1.00  0.04  0.72  0.12  0.99  0.01  0.99  0.01  0.94  0.98 ]
[ 0.86  0.96  0.06  0.99  0.96  0.92  0.92  0.97  0.97  0.01  0.38  0.03 ]
[ 0.31  0.99  0.98  0.12  0.91  0.03  0.99  0.09  0.96  0.07  0.96  0.99 ]
[ 0.87  0.03  0.05  0.97  0.05  0.02  0.05  0.10  0.01  0.01  0.17  0.04 ]
[ 0.48  0.87  0.98  0.01  0.98  0.04  0.26  0.02  0.73  0.15  0.95  0.81 ]
[ 0.99  0.99  0.99  1.00  0.98  0.94  1.00  0.78  0.97  0.99  0.99  1.00 ]
[ 0.01  0.98  0.98  1.00  0.64  0.77  0.98  0.99  0.57  0.99  0.99  0.98 ]
[ 0.08  0.01  0.01  0.78  0.73  0.03  0.91  0.95  0.94  0.94  0.23  0.24 ]
[ 0.86  0.95  0.45  0.96  0.95  0.58  0.99  0.93  0.19  0.80  0.02  0.90 ]
[ 0.34  0.48  0.28  0.98  0.75  0.07  0.35  0.14  0.40  0.43  0.73  0.07 ]
[ 0.83  0.96  0.87  0.97  0.95  0.27  1.00  0.95  0.79  0.05  0.85  0.93 ]
[ 0.90  0.98  0.24  0.96  0.89  0.01  0.36  0.92  0.08  0.69  0.38  0.02 ]
[ 0.78  0.97  0.94  0.96  0.80  0.21  0.97  0.08  0.97  0.85  0.16  0.94 ]
[ 0.86  0.04  0.03  0.04  0.96  0.60  0.95  0.01  0.88  0.18  0.11  0.01 ]
[ 0.63  0.98  0.82  0.88  0.96  0.42  0.63  0.11  0.79  0.84  0.31  0.98 ]
[ 0.03  0.03  0.02  0.49  0.07  0.40  0.32  0.02  0.48  0.05  0.02  0.01 ]
[ 0.56  0.95  0.73  0.97  0.98  0.21  0.97  0.56  0.18  0.84  0.41  0.90 ]
[ 0.05  0.01  0.99  0.22  0.01  0.09  0.25  0.18  0.89  0.99  0.05  0.96 ]
[ 0.36  0.96  0.64  0.88  0.98  0.08  0.06  0.10  0.84  0.93  0.05  0.14 ]
[ 0.02  0.04  0.35  0.88  0.95  0.01  0.56  0.58  0.99  0.11  0.01  0.14 ]
[ 0.65  0.96  0.68  0.93  0.21  0.28  0.99  0.16  0.04  0.92  0.19  0.98 ]
[ 0.72  0.05  0.54  0.03  0.02  0.45  0.91  0.88  0.04  0.81  0.04  0.92 ]
[ 0.78  0.92  0.01  0.99  1.00  0.03  0.93  0.52  0.02  0.78  0.40  0.57 ]
[ 0.99  0.99  0.91  0.96  0.87  0.97  0.95  0.95  0.97  0.99  0.93  0.89 ]
[ 0.88  0.96  0.97  0.95  1.00  0.01  0.96  0.01  0.96  0.95  1.00  0.98 ]
[ 0.24  0.67  0.97  0.97  0.69  0.04  0.79  0.78  0.95  0.59  0.83  0.90 ]
[ 0.90  0.95  0.97  0.81  0.97  0.94  0.91  0.89  0.71  0.63  1.00  0.92 ]
[ 0.58  0.97  0.01  0.53  0.72  0.23  0.01  0.57  0.24  0.61  1.00  0.97 ]
[ 0.97  0.92  0.99  0.82  0.96  0.96  0.42  0.42  0.94  0.99  1.00  0.99 ]
[ 0.92  0.71  0.51  0.19  0.15  0.75  0.87  0.82  0.91  0.10  0.94  0.32 ]
[ 0.98  0.95  0.76  0.80  0.63  0.86  0.92  0.99  0.94  0.03  0.78  0.55 ]
[ 0.94  0.83  0.38  0.71  0.99  0.01  0.05  0.98  0.80  0.47  0.94  0.94 ]
[ 0.97  0.90  0.92  0.96  0.92  0.98  0.97  0.99  0.62  0.87  0.98  0.96 ]
[ 0.69  0.01  0.95  0.13  0.06  0.48  0.76  0.99  0.86  0.99  0.54  0.05 ]
[ 0.97  0.95  1.00  0.55  0.99  0.87  0.99  0.94  0.54  0.94  0.42  0.96 ]
[ 0.09  0.19  0.02  0.94  0.53  0.26  0.96  0.03  0.93  0.18  0.45  0.01 ]
[ 0.95  0.74  1.00  0.98  0.94  0.67  0.99  0.92  0.99  0.09  0.28  0.94 ]
[ 0.87  0.87  0.98  0.94  0.37  0.59  0.15  0.97  0.96  1.00  0.17  0.70 ]
[ 0.94  0.96  0.51  0.71  0.97  0.74  0.56  0.97  0.83  0.26  0.09  0.97 ]
[ 0.94  0.60  0.07  0.80  0.72  0.91  0.91  0.98  0.83  0.15  0.92  0.21 ]
[ 0.21  0.55  0.46  0.73  0.96  0.01  0.21  0.89  0.39  0.83  0.72  0.94 ]

01/29 05:59:44 AM | === Batch 15/250
01/29 05:59:45 AM | loss = 0.624 + 0.175 + 0.051 = 0.850
01/29 05:59:46 AM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.01  0.96  0.12  0.84  0.04  0.92  0.01  0.99  0.01  0.52  0.99  0.02 ]
[ 0.16  0.03  0.07  1.00  0.98  0.93  0.99  0.95  0.85  0.99  0.98  0.99 ]
[ 0.06  0.62  0.01  0.55  0.80  0.31  0.82  1.00  0.92  0.66  0.07  0.71 ]
[ 0.95  0.96  0.96  0.99  1.00  0.99  0.99  0.99  0.87  0.64  0.55  0.96 ]
[ 0.55  0.74  0.92  0.18  0.91  0.99  0.01  0.50  0.01  0.78  0.05  0.78 ]
[ 0.20  0.02  0.98  0.99  0.92  0.91  0.99  0.65  0.99  0.98  0.98  0.98 ]
[ 0.02  0.63  0.03  0.42  0.97  0.01  0.91  0.74  0.92  0.38  0.24  0.85 ]
[ 0.37  0.94  0.99  1.00  0.94  0.01  0.99  0.73  0.44  0.94  0.03  0.99 ]
[ 0.92  0.96  0.01  0.50  0.97  0.03  0.07  0.79  0.01  0.47  1.00  0.56 ]
[ 0.62  0.82  0.97  0.98  1.00  0.01  0.82  0.98  0.92  0.99  0.16  0.11 ]
[ 0.02  0.88  0.01  0.01  0.64  0.75  0.98  0.99  0.88  0.01  0.92  0.06 ]
[ 0.26  0.98  0.96  1.00  0.99  0.02  0.98  0.07  0.98  0.76  0.29  0.93 ]
[ 0.77  0.03  0.98  0.58  0.96  0.93  0.61  1.00  0.01  0.21  0.98  0.13 ]
[ 0.09  0.95  1.00  0.03  0.78  0.12  0.99  0.01  0.99  0.01  0.95  0.98 ]
[ 0.87  0.96  0.05  0.99  0.97  0.93  0.93  0.97  0.97  0.01  0.38  0.03 ]
[ 0.31  0.99  0.98  0.10  0.92  0.02  0.99  0.09  0.96  0.07  0.96  0.99 ]
[ 0.90  0.03  0.04  0.97  0.05  0.02  0.04  0.10  0.01  0.01  0.17  0.03 ]
[ 0.51  0.87  0.99  0.01  0.99  0.03  0.28  0.01  0.70  0.14  0.96  0.82 ]
[ 0.99  0.99  0.99  1.00  0.98  0.95  1.00  0.76  0.98  0.99  0.99  1.00 ]
[ 0.01  0.98  0.98  1.00  0.65  0.80  0.98  0.99  0.59  0.99  1.00  0.98 ]
[ 0.07  0.01  0.01  0.80  0.74  0.03  0.92  0.95  0.95  0.95  0.28  0.25 ]
[ 0.88  0.95  0.44  0.96  0.95  0.59  0.99  0.93  0.17  0.82  0.01  0.91 ]
[ 0.36  0.49  0.25  0.98  0.77  0.07  0.33  0.13  0.44  0.46  0.75  0.07 ]
[ 0.85  0.96  0.89  0.98  0.96  0.26  1.00  0.95  0.81  0.04  0.86  0.94 ]
[ 0.92  0.98  0.21  0.97  0.92  0.01  0.39  0.93  0.08  0.72  0.39  0.01 ]
[ 0.82  0.97  0.94  0.96  0.84  0.20  0.97  0.08  0.97  0.87  0.15  0.96 ]
[ 0.88  0.04  0.03  0.03  0.97  0.65  0.95  0.01  0.90  0.17  0.09  0.01 ]
[ 0.67  0.98  0.83  0.87  0.97  0.44  0.57  0.11  0.80  0.87  0.31  0.99 ]
[ 0.03  0.02  0.02  0.51  0.07  0.41  0.33  0.02  0.49  0.05  0.01  0.01 ]
[ 0.61  0.96  0.71  0.97  0.99  0.20  0.98  0.55  0.17  0.86  0.44  0.93 ]
[ 0.05  0.01  0.99  0.22  0.01  0.08  0.24  0.17  0.92  0.99  0.05  0.97 ]
[ 0.39  0.96  0.59  0.90  0.98  0.07  0.06  0.09  0.85  0.94  0.04  0.15 ]
[ 0.02  0.03  0.36  0.90  0.95  0.01  0.59  0.61  1.00  0.13  0.01  0.13 ]
[ 0.69  0.96  0.70  0.93  0.22  0.26  0.99  0.17  0.03  0.93  0.19  0.99 ]
[ 0.76  0.04  0.56  0.02  0.01  0.53  0.93  0.91  0.03  0.83  0.03  0.94 ]
[ 0.81  0.92  0.01  0.99  1.00  0.03  0.93  0.58  0.02  0.78  0.43  0.65 ]
[ 0.99  1.00  0.93  0.97  0.88  0.97  0.95  0.96  0.98  0.99  0.94  0.90 ]
[ 0.90  0.96  0.98  0.95  1.00  0.01  0.96  0.01  0.94  0.96  1.00  0.98 ]
[ 0.23  0.68  0.98  0.97  0.65  0.04  0.83  0.82  0.95  0.61  0.86  0.92 ]
[ 0.92  0.95  0.98  0.81  0.97  0.95  0.92  0.91  0.69  0.66  1.00  0.93 ]
[ 0.60  0.97  0.01  0.59  0.77  0.23  0.01  0.58  0.23  0.53  1.00  0.98 ]
[ 0.97  0.93  0.99  0.85  0.97  0.97  0.45  0.39  0.96  0.99  1.00  0.99 ]
[ 0.94  0.74  0.58  0.19  0.15  0.77  0.87  0.85  0.91  0.10  0.95  0.32 ]
[ 0.98  0.96  0.73  0.82  0.68  0.89  0.93  0.99  0.95  0.02  0.83  0.51 ]
[ 0.95  0.83  0.38  0.75  0.99  0.01  0.05  0.98  0.83  0.46  0.96  0.95 ]
[ 0.97  0.91  0.91  0.97  0.93  0.98  0.97  0.99  0.69  0.87  0.99  0.97 ]
[ 0.70  0.01  0.94  0.13  0.06  0.55  0.76  0.99  0.89  0.99  0.51  0.05 ]
[ 0.97  0.95  1.00  0.51  0.99  0.89  0.99  0.94  0.49  0.95  0.52  0.96 ]
[ 0.08  0.21  0.01  0.96  0.51  0.24  0.96  0.03  0.94  0.18  0.48  0.01 ]
[ 0.94  0.69  1.00  0.98  0.95  0.63  0.99  0.92  0.99  0.08  0.29  0.94 ]
[ 0.87  0.87  0.98  0.94  0.38  0.60  0.13  0.97  0.96  1.00  0.17  0.77 ]
[ 0.93  0.96  0.47  0.65  0.97  0.72  0.51  0.97  0.87  0.22  0.08  0.97 ]
[ 0.94  0.60  0.06  0.80  0.67  0.92  0.92  0.99  0.83  0.16  0.93  0.21 ]
[ 0.19  0.43  0.46  0.76  0.96  0.01  0.19  0.90  0.31  0.83  0.65  0.96 ]

01/29 05:59:46 AM | === Batch 16/250
01/29 05:59:46 AM | loss = 0.601 + 0.247 + 0.048 = 0.896
01/29 05:59:47 AM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.00  0.96  0.12  0.87  0.04  0.94  0.00  0.99  0.00  0.56  0.99  0.02 ]
[ 0.17  0.02  0.08  1.00  0.98  0.94  0.99  0.96  0.87  0.99  0.98  0.99 ]
[ 0.06  0.69  0.01  0.60  0.84  0.27  0.85  1.00  0.93  0.69  0.06  0.75 ]
[ 0.96  0.97  0.97  0.99  1.00  0.99  0.99  0.99  0.88  0.66  0.54  0.97 ]
[ 0.55  0.78  0.94  0.18  0.91  0.99  0.00  0.54  0.00  0.82  0.05  0.81 ]
[ 0.21  0.01  0.98  0.99  0.93  0.92  0.99  0.67  0.99  0.98  0.98  0.99 ]
[ 0.02  0.60  0.02  0.43  0.98  0.01  0.92  0.75  0.93  0.38  0.21  0.84 ]
[ 0.41  0.94  0.99  1.00  0.95  0.01  0.99  0.75  0.43  0.95  0.03  0.99 ]
[ 0.94  0.97  0.00  0.51  0.98  0.03  0.07  0.83  0.01  0.49  1.00  0.56 ]
[ 0.69  0.81  0.97  0.98  1.00  0.01  0.82  0.99  0.93  0.99  0.13  0.10 ]
[ 0.01  0.87  0.00  0.01  0.69  0.81  0.98  0.99  0.90  0.00  0.92  0.06 ]
[ 0.28  0.98  0.97  1.00  0.99  0.02  0.98  0.06  0.99  0.75  0.26  0.93 ]
[ 0.82  0.02  0.99  0.59  0.96  0.93  0.62  1.00  0.01  0.20  0.99  0.12 ]
[ 0.08  0.95  1.00  0.03  0.83  0.11  0.99  0.01  0.99  0.01  0.95  0.98 ]
[ 0.88  0.96  0.05  0.99  0.97  0.93  0.93  0.98  0.98  0.01  0.36  0.02 ]
[ 0.33  0.99  0.98  0.08  0.93  0.02  0.99  0.08  0.96  0.06  0.96  0.99 ]
[ 0.92  0.03  0.04  0.98  0.04  0.01  0.04  0.10  0.00  0.00  0.16  0.03 ]
[ 0.56  0.87  0.99  0.01  0.99  0.03  0.29  0.01  0.67  0.12  0.97  0.84 ]
[ 0.99  0.99  0.99  1.00  0.99  0.96  1.00  0.74  0.98  0.99  0.99  1.00 ]
[ 0.00  0.98  0.98  1.00  0.67  0.83  0.98  0.99  0.63  1.00  1.00  0.99 ]
[ 0.07  0.01  0.00  0.79  0.75  0.02  0.92  0.95  0.96  0.95  0.33  0.27 ]
[ 0.90  0.95  0.42  0.96  0.96  0.60  1.00  0.93  0.16  0.84  0.01  0.93 ]
[ 0.37  0.48  0.22  0.99  0.79  0.06  0.30  0.11  0.45  0.50  0.77  0.06 ]
[ 0.86  0.97  0.90  0.98  0.96  0.26  1.00  0.96  0.85  0.04  0.86  0.96 ]
[ 0.93  0.98  0.17  0.98  0.94  0.00  0.41  0.94  0.07  0.74  0.41  0.01 ]
[ 0.85  0.98  0.95  0.96  0.88  0.21  0.97  0.08  0.97  0.89  0.14  0.97 ]
[ 0.90  0.04  0.02  0.03  0.97  0.69  0.96  0.01  0.91  0.15  0.08  0.01 ]
[ 0.71  0.98  0.84  0.85  0.97  0.47  0.50  0.11  0.80  0.89  0.31  0.99 ]
[ 0.02  0.02  0.01  0.50  0.06  0.41  0.35  0.02  0.48  0.04  0.01  0.00 ]
[ 0.65  0.96  0.72  0.96  0.99  0.19  0.98  0.54  0.15  0.88  0.46  0.95 ]
[ 0.04  0.00  0.99  0.22  0.01  0.07  0.23  0.16  0.93  0.99  0.04  0.97 ]
[ 0.42  0.97  0.55  0.92  0.99  0.06  0.06  0.08  0.84  0.95  0.04  0.15 ]
[ 0.02  0.02  0.38  0.92  0.96  0.00  0.62  0.62  1.00  0.14  0.00  0.12 ]
[ 0.73  0.96  0.73  0.93  0.23  0.26  0.99  0.18  0.03  0.93  0.20  0.99 ]
[ 0.80  0.04  0.59  0.02  0.01  0.61  0.94  0.93  0.03  0.85  0.03  0.95 ]
[ 0.84  0.92  0.01  0.99  1.00  0.02  0.93  0.63  0.02  0.77  0.46  0.73 ]
[ 0.99  1.00  0.94  0.97  0.88  0.98  0.96  0.97  0.98  0.99  0.95  0.91 ]
[ 0.91  0.96  0.98  0.96  1.00  0.00  0.97  0.00  0.93  0.96  1.00  0.99 ]
[ 0.22  0.70  0.98  0.97  0.60  0.03  0.86  0.84  0.96  0.63  0.89  0.93 ]
[ 0.93  0.95  0.98  0.82  0.97  0.96  0.93  0.92  0.66  0.71  1.00  0.94 ]
[ 0.63  0.96  0.00  0.65  0.81  0.22  0.00  0.56  0.21  0.45  1.00  0.98 ]
[ 0.97  0.93  1.00  0.88  0.97  0.97  0.50  0.34  0.97  0.99  1.00  0.99 ]
[ 0.96  0.76  0.64  0.19  0.15  0.78  0.89  0.87  0.89  0.09  0.96  0.34 ]
[ 0.99  0.96  0.72  0.83  0.73  0.90  0.94  0.99  0.95  0.02  0.87  0.46 ]
[ 0.95  0.82  0.41  0.78  0.99  0.00  0.04  0.99  0.87  0.43  0.97  0.95 ]
[ 0.97  0.91  0.91  0.97  0.94  0.98  0.98  0.99  0.73  0.86  0.99  0.97 ]
[ 0.72  0.00  0.92  0.12  0.05  0.61  0.76  0.99  0.90  0.99  0.47  0.04 ]
[ 0.98  0.96  1.00  0.48  0.99  0.91  0.99  0.95  0.45  0.96  0.57  0.96 ]
[ 0.07  0.21  0.01  0.96  0.52  0.23  0.97  0.03  0.95  0.17  0.50  0.00 ]
[ 0.94  0.63  1.00  0.98  0.96  0.59  0.99  0.93  0.99  0.06  0.32  0.94 ]
[ 0.87  0.87  0.99  0.95  0.39  0.60  0.11  0.98  0.97  1.00  0.17  0.81 ]
[ 0.92  0.95  0.41  0.60  0.97  0.70  0.48  0.98  0.89  0.18  0.08  0.97 ]
[ 0.95  0.61  0.05  0.80  0.62  0.93  0.93  0.99  0.83  0.16  0.94  0.20 ]
[ 0.18  0.32  0.46  0.78  0.96  0.01  0.18  0.90  0.24  0.84  0.56  0.97 ]

01/29 05:59:47 AM | === Batch 17/250
01/29 05:59:48 AM | loss = 0.500 + 0.286 + 0.046 = 0.832
01/29 05:59:49 AM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.00  0.97  0.11  0.89  0.04  0.95  0.00  0.99  0.00  0.58  0.99  0.02 ]
[ 0.18  0.02  0.08  1.00  0.98  0.95  0.98  0.96  0.89  0.99  0.99  0.99 ]
[ 0.05  0.74  0.01  0.63  0.87  0.22  0.87  1.00  0.94  0.72  0.05  0.77 ]
[ 0.97  0.97  0.97  0.99  1.00  0.99  0.99  0.99  0.89  0.67  0.51  0.97 ]
[ 0.54  0.80  0.95  0.17  0.91  0.99  0.00  0.55  0.00  0.85  0.04  0.83 ]
[ 0.22  0.01  0.98  0.99  0.94  0.93  0.99  0.67  0.99  0.98  0.99  0.99 ]
[ 0.02  0.56  0.02  0.42  0.98  0.01  0.93  0.75  0.93  0.36  0.19  0.83 ]
[ 0.47  0.95  0.99  1.00  0.96  0.01  0.99  0.75  0.41  0.95  0.02  0.99 ]
[ 0.95  0.98  0.00  0.50  0.98  0.03  0.06  0.85  0.00  0.51  1.00  0.53 ]
[ 0.76  0.80  0.98  0.98  1.00  0.01  0.82  0.99  0.93  0.99  0.10  0.09 ]
[ 0.01  0.86  0.00  0.01  0.72  0.86  0.98  1.00  0.91  0.00  0.91  0.05 ]
[ 0.32  0.99  0.98  1.00  0.99  0.02  0.98  0.05  0.99  0.74  0.22  0.94 ]
[ 0.85  0.02  0.99  0.60  0.96  0.92  0.64  1.00  0.01  0.19  0.99  0.11 ]
[ 0.07  0.95  1.00  0.02  0.86  0.11  0.99  0.01  0.99  0.01  0.96  0.98 ]
[ 0.88  0.96  0.04  0.99  0.98  0.93  0.93  0.98  0.98  0.01  0.34  0.02 ]
[ 0.35  0.99  0.98  0.06  0.94  0.02  0.99  0.07  0.95  0.05  0.97  0.99 ]
[ 0.93  0.02  0.03  0.98  0.04  0.01  0.04  0.09  0.00  0.00  0.15  0.02 ]
[ 0.62  0.86  0.99  0.01  0.99  0.03  0.29  0.01  0.63  0.10  0.97  0.85 ]
[ 0.99  0.99  1.00  1.00  0.99  0.97  1.00  0.72  0.98  0.99  0.99  1.00 ]
[ 0.00  0.99  0.98  1.00  0.68  0.85  0.98  0.99  0.67  1.00  1.00  0.99 ]
[ 0.06  0.01  0.00  0.78  0.75  0.02  0.92  0.95  0.96  0.96  0.37  0.28 ]
[ 0.92  0.96  0.39  0.96  0.96  0.62  1.00  0.93  0.16  0.85  0.01  0.94 ]
[ 0.38  0.47  0.19  0.99  0.80  0.05  0.26  0.10  0.47  0.52  0.79  0.05 ]
[ 0.88  0.97  0.90  0.98  0.97  0.28  1.00  0.96  0.88  0.03  0.87  0.97 ]
[ 0.93  0.98  0.14  0.98  0.96  0.00  0.42  0.94  0.06  0.75  0.42  0.01 ]
[ 0.87  0.98  0.95  0.96  0.90  0.21  0.97  0.08  0.97  0.90  0.13  0.98 ]
[ 0.91  0.04  0.02  0.03  0.98  0.71  0.96  0.00  0.92  0.14  0.07  0.00 ]
[ 0.75  0.98  0.85  0.83  0.97  0.51  0.45  0.11  0.78  0.91  0.32  0.99 ]
[ 0.02  0.02  0.01  0.49  0.06  0.39  0.36  0.01  0.45  0.03  0.01  0.00 ]
[ 0.68  0.96  0.71  0.96  0.99  0.19  0.98  0.53  0.13  0.90  0.48  0.96 ]
[ 0.04  0.00  0.99  0.22  0.01  0.07  0.20  0.16  0.94  1.00  0.04  0.98 ]
[ 0.44  0.97  0.49  0.93  0.99  0.06  0.06  0.07  0.83  0.95  0.03  0.16 ]
[ 0.02  0.02  0.39  0.93  0.96  0.00  0.64  0.63  1.00  0.14  0.00  0.10 ]
[ 0.76  0.97  0.74  0.93  0.24  0.26  0.99  0.19  0.03  0.94  0.20  0.99 ]
[ 0.84  0.03  0.61  0.02  0.01  0.69  0.94  0.94  0.03  0.86  0.03  0.95 ]
[ 0.86  0.92  0.01  0.99  1.00  0.02  0.93  0.67  0.01  0.76  0.48  0.80 ]
[ 0.99  1.00  0.95  0.98  0.89  0.98  0.96  0.98  0.99  0.99  0.96  0.91 ]
[ 0.92  0.96  0.99  0.96  1.00  0.00  0.97  0.00  0.92  0.97  1.00  0.99 ]
[ 0.20  0.71  0.98  0.98  0.54  0.03  0.89  0.86  0.96  0.63  0.91  0.94 ]
[ 0.95  0.95  0.98  0.83  0.96  0.96  0.93  0.93  0.65  0.75  1.00  0.95 ]
[ 0.67  0.96  0.00  0.69  0.83  0.22  0.00  0.55  0.19  0.38  1.00  0.98 ]
[ 0.98  0.94  1.00  0.90  0.98  0.98  0.56  0.29  0.97  1.00  1.00  0.99 ]
[ 0.97  0.76  0.69  0.18  0.14  0.78  0.90  0.88  0.88  0.08  0.96  0.38 ]
[ 0.99  0.96  0.72  0.84  0.77  0.92  0.94  0.99  0.96  0.02  0.90  0.42 ]
[ 0.96  0.81  0.43  0.80  0.99  0.00  0.04  0.99  0.89  0.39  0.98  0.96 ]
[ 0.98  0.92  0.91  0.97  0.94  0.99  0.98  0.99  0.76  0.85  0.99  0.97 ]
[ 0.73  0.00  0.90  0.11  0.05  0.66  0.79  0.99  0.92  0.99  0.42  0.04 ]
[ 0.98  0.96  1.00  0.47  0.99  0.92  0.99  0.95  0.42  0.96  0.62  0.96 ]
[ 0.06  0.20  0.01  0.97  0.52  0.21  0.97  0.03  0.96  0.15  0.52  0.00 ]
[ 0.93  0.56  1.00  0.98  0.97  0.55  0.99  0.93  0.99  0.05  0.36  0.94 ]
[ 0.88  0.86  0.99  0.95  0.40  0.60  0.10  0.98  0.98  1.00  0.16  0.84 ]
[ 0.89  0.95  0.35  0.61  0.97  0.68  0.45  0.98  0.91  0.15  0.07  0.98 ]
[ 0.94  0.61  0.05  0.79  0.58  0.93  0.93  0.99  0.83  0.16  0.94  0.19 ]
[ 0.18  0.24  0.47  0.81  0.96  0.00  0.17  0.91  0.19  0.84  0.47  0.97 ]

01/29 05:59:49 AM | === Batch 18/250
01/29 05:59:49 AM | loss = 0.619 + 0.298 + 0.044 = 0.961
01/29 05:59:50 AM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.00  0.97  0.10  0.91  0.03  0.96  0.00  0.99  0.00  0.59  0.99  0.02 ]
[ 0.20  0.02  0.08  1.00  0.99  0.95  0.98  0.96  0.90  0.99  0.99  0.99 ]
[ 0.05  0.77  0.01  0.66  0.89  0.18  0.89  1.00  0.95  0.73  0.05  0.77 ]
[ 0.97  0.97  0.97  0.99  1.00  0.99  0.99  0.99  0.89  0.67  0.47  0.97 ]
[ 0.49  0.82  0.95  0.16  0.90  0.99  0.00  0.55  0.00  0.88  0.04  0.85 ]
[ 0.22  0.01  0.98  0.99  0.95  0.93  0.99  0.64  0.99  0.99  0.99  0.99 ]
[ 0.01  0.52  0.02  0.40  0.98  0.01  0.94  0.75  0.93  0.33  0.16  0.83 ]
[ 0.53  0.95  0.99  1.00  0.96  0.01  0.99  0.75  0.38  0.96  0.02  0.99 ]
[ 0.96  0.98  0.00  0.47  0.98  0.02  0.06  0.87  0.00  0.52  1.00  0.49 ]
[ 0.81  0.79  0.98  0.98  1.00  0.00  0.82  0.99  0.94  0.99  0.07  0.07 ]
[ 0.01  0.85  0.00  0.01  0.73  0.89  0.99  1.00  0.92  0.00  0.91  0.04 ]
[ 0.35  0.99  0.98  1.00  0.99  0.02  0.98  0.04  0.99  0.73  0.18  0.94 ]
[ 0.87  0.02  0.99  0.60  0.96  0.91  0.64  1.00  0.01  0.18  0.99  0.10 ]
[ 0.07  0.96  1.00  0.02  0.88  0.11  0.99  0.01  0.99  0.00  0.96  0.98 ]
[ 0.87  0.96  0.04  0.99  0.98  0.93  0.94  0.98  0.98  0.01  0.31  0.02 ]
[ 0.38  0.99  0.98  0.05  0.94  0.02  0.99  0.06  0.95  0.05  0.97  0.99 ]
[ 0.94  0.02  0.03  0.99  0.03  0.01  0.03  0.09  0.00  0.00  0.15  0.02 ]
[ 0.68  0.85  0.99  0.00  0.99  0.03  0.27  0.01  0.60  0.09  0.98  0.84 ]
[ 0.99  0.99  1.00  1.00  0.99  0.97  1.00  0.71  0.98  0.99  0.99  1.00 ]
[ 0.00  0.99  0.98  1.00  0.69  0.86  0.98  0.99  0.70  1.00  1.00  0.99 ]
[ 0.06  0.01  0.00  0.76  0.75  0.02  0.91  0.95  0.97  0.96  0.37  0.28 ]
[ 0.93  0.96  0.36  0.96  0.96  0.64  1.00  0.93  0.16  0.86  0.01  0.94 ]
[ 0.38  0.46  0.17  0.99  0.80  0.04  0.24  0.09  0.45  0.53  0.80  0.05 ]
[ 0.89  0.97  0.90  0.98  0.97  0.29  1.00  0.96  0.91  0.03  0.88  0.97 ]
[ 0.94  0.99  0.12  0.99  0.97  0.00  0.40  0.95  0.06  0.77  0.42  0.01 ]
[ 0.89  0.98  0.95  0.96  0.92  0.22  0.97  0.08  0.98  0.91  0.12  0.98 ]
[ 0.93  0.03  0.02  0.02  0.98  0.72  0.95  0.00  0.92  0.12  0.06  0.00 ]
[ 0.77  0.98  0.85  0.82  0.98  0.55  0.42  0.10  0.76  0.92  0.32  0.99 ]
[ 0.02  0.01  0.01  0.47  0.05  0.36  0.37  0.01  0.43  0.03  0.01  0.00 ]
[ 0.71  0.97  0.70  0.96  0.99  0.19  0.98  0.51  0.12  0.91  0.51  0.97 ]
[ 0.04  0.00  0.99  0.22  0.01  0.06  0.17  0.15  0.95  1.00  0.04  0.98 ]
[ 0.45  0.97  0.43  0.93  0.99  0.05  0.06  0.07  0.81  0.96  0.03  0.18 ]
[ 0.01  0.02  0.40  0.94  0.97  0.00  0.66  0.63  1.00  0.14  0.00  0.09 ]
[ 0.79  0.97  0.74  0.93  0.24  0.26  0.99  0.20  0.02  0.94  0.21  0.99 ]
[ 0.86  0.03  0.63  0.01  0.01  0.76  0.95  0.95  0.02  0.86  0.02  0.96 ]
[ 0.88  0.92  0.00  0.99  1.00  0.02  0.93  0.71  0.01  0.75  0.50  0.84 ]
[ 0.99  1.00  0.96  0.98  0.89  0.98  0.96  0.98  0.99  0.99  0.97  0.92 ]
[ 0.93  0.97  0.99  0.97  1.00  0.00  0.97  0.00  0.92  0.97  1.00  0.99 ]
[ 0.17  0.70  0.98  0.98  0.49  0.03  0.90  0.88  0.96  0.63  0.92  0.95 ]
[ 0.96  0.95  0.98  0.83  0.96  0.96  0.94  0.94  0.64  0.77  1.00  0.95 ]
[ 0.69  0.95  0.00  0.72  0.85  0.21  0.00  0.51  0.16  0.32  1.00  0.98 ]
[ 0.98  0.94  1.00  0.91  0.98  0.98  0.64  0.25  0.98  1.00  1.00  1.00 ]
[ 0.98  0.77  0.74  0.17  0.13  0.79  0.90  0.89  0.86  0.07  0.97  0.43 ]
[ 0.99  0.96  0.72  0.84  0.81  0.93  0.95  0.99  0.96  0.02  0.92  0.41 ]
[ 0.96  0.80  0.46  0.83  0.99  0.00  0.03  0.99  0.91  0.33  0.99  0.96 ]
[ 0.98  0.92  0.91  0.97  0.95  0.99  0.98  0.99  0.77  0.82  0.99  0.97 ]
[ 0.74  0.00  0.89  0.10  0.04  0.68  0.81  0.99  0.92  0.99  0.35  0.03 ]
[ 0.98  0.96  1.00  0.46  0.99  0.93  0.99  0.95  0.37  0.97  0.62  0.97 ]
[ 0.05  0.19  0.01  0.98  0.52  0.19  0.97  0.02  0.96  0.14  0.53  0.00 ]
[ 0.92  0.50  1.00  0.99  0.97  0.53  0.99  0.94  0.99  0.04  0.39  0.94 ]
[ 0.88  0.86  0.99  0.95  0.41  0.60  0.09  0.98  0.98  1.00  0.15  0.86 ]
[ 0.85  0.94  0.29  0.59  0.97  0.67  0.41  0.98  0.92  0.13  0.07  0.98 ]
[ 0.94  0.60  0.04  0.77  0.57  0.94  0.94  0.99  0.85  0.15  0.94  0.18 ]
[ 0.17  0.18  0.49  0.83  0.96  0.00  0.16  0.91  0.16  0.84  0.38  0.98 ]

01/29 05:59:50 AM | === Batch 19/250
01/29 05:59:51 AM | loss = 0.576 + 0.287 + 0.042 = 0.905
01/29 05:59:52 AM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.00  0.98  0.09  0.92  0.03  0.96  0.00  0.99  0.00  0.58  1.00  0.01 ]
[ 0.21  0.01  0.08  1.00  0.99  0.96  0.98  0.96  0.91  0.99  0.99  1.00 ]
[ 0.04  0.79  0.01  0.68  0.90  0.14  0.90  1.00  0.95  0.72  0.04  0.76 ]
[ 0.97  0.98  0.98  0.99  1.00  0.99  0.99  1.00  0.90  0.65  0.42  0.98 ]
[ 0.44  0.82  0.96  0.15  0.89  1.00  0.00  0.52  0.00  0.89  0.03  0.86 ]
[ 0.23  0.01  0.98  0.99  0.96  0.94  0.99  0.60  0.99  0.99  0.99  0.99 ]
[ 0.01  0.48  0.02  0.38  0.98  0.01  0.95  0.75  0.93  0.29  0.13  0.84 ]
[ 0.59  0.95  0.99  1.00  0.97  0.01  0.99  0.74  0.34  0.96  0.02  0.99 ]
[ 0.97  0.99  0.00  0.42  0.98  0.02  0.06  0.87  0.00  0.51  1.00  0.43 ]
[ 0.86  0.78  0.98  0.99  1.00  0.00  0.82  0.99  0.94  0.99  0.06  0.07 ]
[ 0.01  0.84  0.00  0.00  0.73  0.91  0.99  1.00  0.93  0.00  0.89  0.04 ]
[ 0.39  0.99  0.98  1.00  1.00  0.01  0.98  0.04  0.99  0.72  0.14  0.94 ]
[ 0.89  0.02  0.99  0.60  0.96  0.89  0.63  1.00  0.01  0.17  0.99  0.09 ]
[ 0.07  0.96  1.00  0.02  0.90  0.12  0.99  0.00  1.00  0.00  0.97  0.98 ]
[ 0.86  0.97  0.04  0.99  0.98  0.93  0.94  0.99  0.98  0.01  0.29  0.01 ]
[ 0.41  0.99  0.98  0.04  0.94  0.02  0.99  0.06  0.95  0.04  0.97  0.99 ]
[ 0.95  0.02  0.03  0.99  0.03  0.01  0.03  0.08  0.00  0.00  0.14  0.02 ]
[ 0.73  0.84  0.99  0.00  0.99  0.03  0.24  0.01  0.59  0.08  0.98  0.83 ]
[ 0.99  0.99  1.00  1.00  0.99  0.98  1.00  0.69  0.99  0.99  0.99  1.00 ]
[ 0.00  0.99  0.98  1.00  0.68  0.87  0.98  0.99  0.74  1.00  1.00  0.99 ]
[ 0.05  0.01  0.00  0.74  0.75  0.02  0.91  0.96  0.97  0.96  0.35  0.28 ]
[ 0.94  0.96  0.32  0.96  0.96  0.66  1.00  0.93  0.16  0.86  0.01  0.95 ]
[ 0.36  0.44  0.14  0.99  0.80  0.04  0.21  0.08  0.43  0.53  0.80  0.04 ]
[ 0.90  0.98  0.90  0.99  0.97  0.32  1.00  0.96  0.93  0.03  0.89  0.98 ]
[ 0.94  0.99  0.11  0.99  0.98  0.00  0.38  0.95  0.05  0.76  0.43  0.01 ]
[ 0.90  0.98  0.95  0.96  0.93  0.23  0.97  0.08  0.98  0.92  0.11  0.99 ]
[ 0.93  0.03  0.02  0.02  0.98  0.72  0.95  0.00  0.93  0.11  0.06  0.00 ]
[ 0.79  0.99  0.84  0.81  0.98  0.59  0.39  0.10  0.74  0.93  0.33  1.00 ]
[ 0.02  0.01  0.01  0.44  0.04  0.33  0.38  0.01  0.40  0.03  0.01  0.00 ]
[ 0.73  0.97  0.67  0.96  0.99  0.20  0.98  0.50  0.10  0.92  0.54  0.98 ]
[ 0.03  0.00  0.99  0.22  0.01  0.05  0.15  0.14  0.96  1.00  0.03  0.98 ]
[ 0.45  0.97  0.39  0.94  0.99  0.04  0.05  0.06  0.80  0.96  0.03  0.19 ]
[ 0.01  0.01  0.42  0.95  0.97  0.00  0.65  0.63  1.00  0.14  0.00  0.07 ]
[ 0.81  0.97  0.73  0.93  0.22  0.27  0.99  0.21  0.02  0.95  0.21  0.99 ]
[ 0.88  0.03  0.63  0.01  0.01  0.80  0.95  0.96  0.02  0.87  0.02  0.96 ]
[ 0.89  0.92  0.00  0.99  1.00  0.01  0.93  0.74  0.01  0.74  0.53  0.88 ]
[ 0.99  1.00  0.97  0.98  0.89  0.98  0.96  0.99  0.99  1.00  0.97  0.93 ]
[ 0.93  0.97  0.99  0.97  1.00  0.00  0.98  0.00  0.93  0.97  1.00  0.99 ]
[ 0.14  0.73  0.98  0.98  0.50  0.02  0.91  0.89  0.95  0.60  0.93  0.96 ]
[ 0.97  0.95  0.99  0.83  0.96  0.96  0.94  0.94  0.67  0.78  1.00  0.96 ]
[ 0.71  0.94  0.00  0.76  0.86  0.21  0.00  0.48  0.12  0.28  1.00  0.98 ]
[ 0.98  0.94  1.00  0.93  0.98  0.98  0.72  0.22  0.98  1.00  1.00  1.00 ]
[ 0.98  0.77  0.78  0.16  0.12  0.79  0.90  0.88  0.84  0.07  0.97  0.48 ]
[ 0.99  0.97  0.71  0.85  0.84  0.93  0.95  1.00  0.97  0.02  0.94  0.43 ]
[ 0.96  0.78  0.46  0.85  0.99  0.00  0.03  0.99  0.93  0.29  0.99  0.97 ]
[ 0.98  0.93  0.91  0.98  0.95  0.99  0.98  0.99  0.76  0.80  0.99  0.97 ]
[ 0.76  0.00  0.90  0.09  0.04  0.69  0.82  1.00  0.93  0.99  0.28  0.03 ]
[ 0.98  0.96  1.00  0.44  0.99  0.94  0.99  0.95  0.35  0.97  0.62  0.97 ]
[ 0.04  0.19  0.01  0.98  0.50  0.17  0.97  0.02  0.97  0.12  0.53  0.00 ]
[ 0.90  0.44  1.00  0.99  0.98  0.54  0.99  0.94  0.99  0.04  0.41  0.93 ]
[ 0.87  0.86  0.99  0.96  0.41  0.60  0.08  0.98  0.98  1.00  0.14  0.87 ]
[ 0.80  0.93  0.24  0.58  0.97  0.69  0.39  0.98  0.93  0.11  0.06  0.98 ]
[ 0.93  0.59  0.04  0.73  0.60  0.94  0.93  0.99  0.87  0.14  0.94  0.16 ]
[ 0.17  0.14  0.52  0.85  0.95  0.00  0.15  0.92  0.13  0.85  0.32  0.98 ]

01/29 05:59:52 AM | === Batch 20/250
01/29 05:59:52 AM | loss = 0.548 + 0.262 + 0.041 = 0.851
01/29 05:59:53 AM | === Batch 21/250
01/29 05:59:54 AM | loss = 0.631 + 0.226 + 0.039 = 0.896
01/29 05:59:55 AM | === Batch 22/250
01/29 05:59:55 AM | loss = 0.524 + 0.179 + 0.038 = 0.740
01/29 05:59:56 AM | === Batch 23/250
01/29 05:59:57 AM | loss = 0.653 + 0.124 + 0.036 = 0.813
01/29 05:59:58 AM | === Batch 24/250
01/29 05:59:58 AM | loss = 0.296 + 0.068 + 0.035 = 0.399
01/29 05:59:59 AM | === Batch 25/250
01/29 06:00:00 AM | loss = 0.630 + 0.006 + 0.034 = 0.670
01/29 06:00:00 AM | === Batch 26/250
01/29 06:00:01 AM | loss = 0.684 + 0.080 + 0.033 = 0.797
01/29 06:00:02 AM | === Batch 27/250
01/29 06:00:03 AM | loss = 0.652 + 0.114 + 0.032 = 0.798
01/29 06:00:03 AM | === Batch 28/250
01/29 06:00:04 AM | loss = 0.429 + 0.105 + 0.031 = 0.565
01/29 06:00:05 AM | === Batch 29/250
01/29 06:00:05 AM | loss = 0.720 + 0.063 + 0.030 = 0.814
01/29 06:00:06 AM | === Batch 30/250
01/29 06:00:07 AM | loss = 0.379 + 0.001 + 0.029 = 0.409
01/29 06:00:08 AM | === Batch 31/250
01/29 06:00:08 AM | loss = 0.458 + 0.031 + 0.028 = 0.518
01/29 06:00:09 AM | === Batch 32/250
01/29 06:00:10 AM | loss = 0.567 + 0.043 + 0.028 = 0.638
01/29 06:00:11 AM | === Batch 33/250
01/29 06:00:11 AM | loss = 0.369 + 0.040 + 0.027 = 0.436
01/29 06:00:12 AM | === Batch 34/250
01/29 06:00:13 AM | loss = 0.352 + 0.026 + 0.026 = 0.404
01/29 06:00:14 AM | === Batch 35/250
01/29 06:00:14 AM | loss = 0.602 + 0.001 + 0.026 = 0.629
01/29 06:00:15 AM | === Batch 36/250
01/29 06:00:16 AM | loss = 0.232 + 0.038 + 0.025 = 0.295
01/29 06:00:17 AM | === Batch 37/250
01/29 06:00:17 AM | loss = 0.409 + 0.045 + 0.025 = 0.478
01/29 06:00:18 AM | === Batch 38/250
01/29 06:00:19 AM | loss = 0.332 + 0.022 + 0.024 = 0.378
01/29 06:00:20 AM | === Batch 39/250
01/29 06:00:20 AM | loss = 0.375 + 0.019 + 0.024 = 0.418
01/29 06:00:21 AM | === Batch 40/250
01/29 06:00:22 AM | loss = 0.277 + 0.043 + 0.023 = 0.343
01/29 06:00:22 AM | === Batch 41/250
01/29 06:00:23 AM | loss = 0.312 + 0.054 + 0.023 = 0.389
01/29 06:00:24 AM | === Batch 42/250
01/29 06:00:25 AM | loss = 0.263 + 0.055 + 0.022 = 0.340
01/29 06:00:25 AM | === Batch 43/250
01/29 06:00:26 AM | loss = 0.340 + 0.045 + 0.022 = 0.407
01/29 06:00:27 AM | === Batch 44/250
01/29 06:00:27 AM | loss = 0.311 + 0.029 + 0.021 = 0.361
01/29 06:00:28 AM | === Batch 45/250
01/29 06:00:29 AM | loss = 0.364 + 0.005 + 0.021 = 0.390
01/29 06:00:30 AM | === Batch 46/250
01/29 06:00:30 AM | loss = 0.299 + 0.031 + 0.021 = 0.351
01/29 06:00:31 AM | === Batch 47/250
01/29 06:00:32 AM | loss = 0.454 + 0.043 + 0.020 = 0.518
01/29 06:00:33 AM | === Batch 48/250
01/29 06:00:33 AM | loss = 0.463 + 0.029 + 0.020 = 0.512
01/29 06:00:34 AM | === Batch 49/250
01/29 06:00:35 AM | loss = 0.353 + 0.004 + 0.020 = 0.376
01/29 06:00:36 AM | === Batch 50/250
01/29 06:00:36 AM | loss = 0.335 + 0.020 + 0.019 = 0.374
01/29 06:00:37 AM | === Batch 51/250
01/29 06:00:38 AM | loss = 0.170 + 0.024 + 0.019 = 0.214
01/29 06:00:39 AM | === Batch 52/250
01/29 06:00:39 AM | loss = 0.343 + 0.019 + 0.019 = 0.381
01/29 06:00:40 AM | === Batch 53/250
01/29 06:00:41 AM | loss = 0.442 + 0.006 + 0.019 = 0.467
01/29 06:00:41 AM | === Batch 54/250
01/29 06:00:42 AM | loss = 0.440 + 0.020 + 0.019 = 0.479
01/29 06:00:43 AM | === Batch 55/250
01/29 06:00:44 AM | loss = 0.358 + 0.024 + 0.018 = 0.400
01/29 06:00:44 AM | === Batch 56/250
01/29 06:00:45 AM | loss = 0.397 + 0.007 + 0.018 = 0.422
01/29 06:00:46 AM | === Batch 57/250
01/29 06:00:46 AM | loss = 0.350 + 0.021 + 0.018 = 0.390
01/29 06:00:47 AM | === Batch 58/250
01/29 06:00:48 AM | loss = 0.490 + 0.037 + 0.018 = 0.545
01/29 06:00:49 AM | === Batch 59/250
01/29 06:00:49 AM | loss = 0.344 + 0.042 + 0.018 = 0.404
01/29 06:00:50 AM | === Batch 60/250
01/29 06:00:51 AM | loss = 0.473 + 0.036 + 0.018 = 0.527
01/29 06:00:52 AM | === Batch 61/250
01/29 06:00:52 AM | loss = 0.469 + 0.023 + 0.018 = 0.510
01/29 06:00:53 AM | === Batch 62/250
01/29 06:00:54 AM | loss = 0.293 + 0.004 + 0.018 = 0.314
01/29 06:00:55 AM | === Batch 63/250
01/29 06:00:55 AM | loss = 0.245 + 0.027 + 0.017 = 0.288
01/29 06:00:56 AM | === Batch 64/250
01/29 06:00:57 AM | loss = 0.391 + 0.036 + 0.017 = 0.444
01/29 06:00:57 AM | === Batch 65/250
01/29 06:00:58 AM | loss = 0.355 + 0.023 + 0.017 = 0.396
01/29 06:00:59 AM | === Batch 66/250
01/29 06:01:00 AM | loss = 0.437 + 0.007 + 0.017 = 0.460
01/29 06:01:00 AM | === Batch 67/250
01/29 06:01:01 AM | loss = 0.353 + 0.021 + 0.017 = 0.391
01/29 06:01:02 AM | === Batch 68/250
01/29 06:01:02 AM | loss = 0.384 + 0.025 + 0.017 = 0.426
01/29 06:01:03 AM | === Batch 69/250
01/29 06:01:04 AM | loss = 0.220 + 0.023 + 0.017 = 0.259
01/29 06:01:05 AM | === Batch 70/250
01/29 06:01:05 AM | loss = 0.372 + 0.012 + 0.016 = 0.400
01/29 06:01:06 AM | === Batch 71/250
01/29 06:01:07 AM | loss = 0.267 + 0.006 + 0.016 = 0.290
01/29 06:01:08 AM | === Batch 72/250
01/29 06:01:08 AM | loss = 0.386 + 0.008 + 0.016 = 0.410
01/29 06:01:09 AM | === Batch 73/250
01/29 06:01:10 AM | loss = 0.282 + 0.006 + 0.016 = 0.304
01/29 06:01:11 AM | === Batch 74/250
01/29 06:01:11 AM | loss = 0.151 + 0.007 + 0.016 = 0.175
01/29 06:01:12 AM | === Batch 75/250
01/29 06:01:13 AM | loss = 0.259 + 0.000 + 0.016 = 0.275
01/29 06:01:14 AM | === Batch 76/250
01/29 06:01:14 AM | loss = 0.320 + 0.019 + 0.016 = 0.355
01/29 06:01:15 AM | === Batch 77/250
01/29 06:01:16 AM | loss = 0.317 + 0.019 + 0.016 = 0.352
01/29 06:01:16 AM | === Batch 78/250
01/29 06:01:17 AM | loss = 0.302 + 0.002 + 0.015 = 0.320
01/29 06:01:18 AM | === Batch 79/250
01/29 06:01:19 AM | loss = 0.354 + 0.024 + 0.015 = 0.393
01/29 06:01:19 AM | === Batch 80/250
01/29 06:01:20 AM | loss = 0.463 + 0.038 + 0.015 = 0.517
01/29 06:01:21 AM | === Batch 81/250
01/29 06:01:22 AM | loss = 0.285 + 0.045 + 0.015 = 0.345
01/29 06:01:22 AM | === Batch 82/250
01/29 06:01:23 AM | loss = 0.369 + 0.044 + 0.015 = 0.427
01/29 06:01:24 AM | === Batch 83/250
01/29 06:01:24 AM | loss = 0.198 + 0.037 + 0.015 = 0.250
01/29 06:01:25 AM | === Batch 84/250
01/29 06:01:26 AM | loss = 0.377 + 0.023 + 0.014 = 0.414
01/29 06:01:27 AM | === Batch 85/250
01/29 06:01:27 AM | loss = 0.347 + 0.003 + 0.014 = 0.365
01/29 06:01:28 AM | === Batch 86/250
01/29 06:01:29 AM | loss = 0.469 + 0.030 + 0.014 = 0.514
01/29 06:01:30 AM | === Batch 87/250
01/29 06:01:30 AM | loss = 0.256 + 0.041 + 0.014 = 0.312
01/29 06:01:31 AM | === Batch 88/250
01/29 06:01:32 AM | loss = 0.302 + 0.033 + 0.014 = 0.350
01/29 06:01:32 AM | === Batch 89/250
01/29 06:01:33 AM | loss = 0.364 + 0.010 + 0.014 = 0.389
01/29 06:01:34 AM | === Batch 90/250
01/29 06:01:35 AM | loss = 0.295 + 0.021 + 0.014 = 0.330
01/29 06:01:35 AM | === Batch 91/250
01/29 06:01:36 AM | loss = 0.296 + 0.040 + 0.014 = 0.350
01/29 06:01:37 AM | === Batch 92/250
01/29 06:01:38 AM | loss = 0.335 + 0.049 + 0.014 = 0.398
01/29 06:01:38 AM | === Batch 93/250
01/29 06:01:39 AM | loss = 0.339 + 0.049 + 0.014 = 0.401
01/29 06:01:40 AM | === Batch 94/250
01/29 06:01:40 AM | loss = 0.297 + 0.041 + 0.013 = 0.351
01/29 06:01:41 AM | === Batch 95/250
01/29 06:01:42 AM | loss = 0.370 + 0.026 + 0.013 = 0.409
01/29 06:01:43 AM | === Batch 96/250
01/29 06:01:43 AM | loss = 0.298 + 0.007 + 0.013 = 0.318
01/29 06:01:44 AM | === Batch 97/250
01/29 06:01:45 AM | loss = 0.399 + 0.021 + 0.013 = 0.433
01/29 06:01:46 AM | === Batch 98/250
01/29 06:01:46 AM | loss = 0.243 + 0.031 + 0.013 = 0.287
01/29 06:01:47 AM | === Batch 99/250
01/29 06:01:48 AM | loss = 0.242 + 0.025 + 0.013 = 0.280
01/29 06:01:48 AM | === Batch 100/250
01/29 06:01:49 AM | loss = 0.330 + 0.003 + 0.013 = 0.346
01/29 06:01:50 AM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.00  0.99  0.87  0.96  0.01  0.99  0.00  1.00  0.00  0.05  1.00  0.00 ]
[ 0.99  0.00  0.01  1.00  1.00  0.96  1.00  0.99  0.98  1.00  1.00  1.00 ]
[ 0.00  0.87  0.00  0.08  0.97  0.01  0.98  1.00  0.96  0.12  0.01  0.93 ]
[ 1.00  0.98  0.99  1.00  1.00  0.99  1.00  1.00  0.73  0.02  0.02  1.00 ]
[ 0.02  0.94  0.98  0.01  0.97  1.00  0.00  0.02  0.00  0.95  0.00  0.93 ]
[ 0.99  0.00  1.00  1.00  1.00  0.98  1.00  0.03  1.00  0.99  1.00  1.00 ]
[ 0.00  0.04  0.00  0.04  1.00  0.00  0.98  0.84  0.99  0.02  0.00  0.92 ]
[ 0.97  0.98  1.00  1.00  1.00  0.00  1.00  0.94  0.01  0.99  0.00  1.00 ]
[ 0.99  1.00  0.00  0.09  0.99  0.00  0.03  0.52  0.00  0.16  1.00  0.52 ]
[ 0.99  0.81  1.00  0.99  1.00  0.00  0.96  1.00  0.99  1.00  0.00  0.01 ]
[ 0.00  0.29  0.00  0.00  0.32  0.99  1.00  1.00  0.90  0.00  0.91  0.01 ]
[ 0.74  1.00  1.00  1.00  1.00  0.00  1.00  0.00  1.00  0.95  0.02  0.83 ]
[ 0.97  0.00  1.00  0.07  0.98  1.00  0.06  1.00  0.00  0.01  1.00  0.01 ]
[ 0.02  0.98  1.00  0.00  0.99  0.02  1.00  0.00  1.00  0.00  1.00  1.00 ]
[ 0.88  0.99  0.01  1.00  0.99  0.96  0.99  1.00  0.99  0.00  0.02  0.00 ]
[ 0.83  1.00  1.00  0.00  0.93  0.00  1.00  0.01  0.99  0.01  1.00  1.00 ]
[ 0.98  0.00  0.00  1.00  0.00  0.00  0.01  0.01  0.00  0.00  0.04  0.00 ]
[ 0.95  0.08  1.00  0.00  1.00  0.01  0.03  0.00  0.97  0.01  1.00  0.99 ]
[ 0.99  1.00  1.00  1.00  1.00  0.99  1.00  0.98  1.00  1.00  1.00  1.00 ]
[ 0.00  0.99  1.00  1.00  0.98  0.98  1.00  0.99  0.99  1.00  1.00  1.00 ]
[ 0.01  0.00  0.00  0.05  0.98  0.00  0.97  1.00  0.98  0.95  0.04  0.10 ]
[ 0.98  0.98  0.08  0.98  0.99  0.96  1.00  0.98  0.02  0.97  0.00  0.98 ]
[ 0.00  0.07  0.04  0.99  0.98  0.00  0.99  0.05  0.02  0.59  0.08  0.01 ]
[ 0.95  0.99  0.99  1.00  1.00  0.95  1.00  0.99  0.99  0.01  0.99  1.00 ]
[ 1.00  0.99  0.03  1.00  1.00  0.00  0.55  0.99  0.24  0.96  0.96  0.00 ]
[ 0.98  0.99  1.00  0.97  0.99  0.94  1.00  0.04  0.98  0.97  0.03  1.00 ]
[ 0.99  0.01  0.01  0.01  0.99  0.05  1.00  0.00  0.98  0.01  0.01  0.00 ]
[ 0.86  0.99  0.99  0.91  0.99  0.98  0.88  0.02  0.90  0.97  0.06  1.00 ]
[ 0.01  0.00  0.00  0.98  0.00  0.02  0.45  0.00  0.02  0.00  0.00  0.00 ]
[ 0.72  0.99  0.96  0.94  1.00  0.07  1.00  0.99  0.01  0.98  0.94  1.00 ]
[ 0.00  0.00  1.00  0.83  0.00  0.04  0.01  0.02  0.99  1.00  0.00  1.00 ]
[ 0.07  0.98  0.99  1.00  1.00  0.01  0.14  0.01  0.03  0.94  0.01  0.65 ]
[ 0.00  0.00  0.05  0.99  0.99  0.00  0.31  0.90  1.00  0.04  0.00  0.00 ]
[ 0.85  0.99  1.00  0.99  0.98  0.10  1.00  0.98  0.01  0.98  0.06  1.00 ]
[ 0.99  0.01  0.06  0.00  0.00  0.99  0.99  0.97  0.01  0.65  0.01  0.94 ]
[ 0.96  0.63  0.00  1.00  1.00  0.00  0.97  0.99  0.00  0.75  0.87  0.99 ]
[ 1.00  1.00  0.99  1.00  0.97  1.00  0.08  1.00  1.00  1.00  1.00  0.99 ]
[ 0.90  0.99  1.00  0.99  1.00  0.00  0.98  0.00  1.00  1.00  1.00  1.00 ]
[ 0.01  0.01  0.99  0.99  0.98  0.00  0.97  0.96  0.99  0.03  0.99  1.00 ]
[ 1.00  1.00  0.99  0.96  1.00  0.99  0.98  1.00  0.97  0.98  1.00  1.00 ]
[ 0.10  1.00  0.00  0.98  0.98  0.04  0.00  0.89  0.00  0.90  1.00  0.03 ]
[ 0.99  0.99  1.00  0.98  1.00  0.99  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 1.00  0.99  0.85  0.03  0.00  0.88  0.99  0.96  1.00  0.02  1.00  0.87 ]
[ 1.00  0.98  0.21  0.86  0.94  0.98  0.99  1.00  0.99  0.01  0.99  0.97 ]
[ 0.92  0.96  0.88  0.95  1.00  0.00  0.01  0.07  0.99  0.04  1.00  1.00 ]
[ 0.99  0.96  0.99  1.00  0.99  1.00  0.99  1.00  0.97  0.02  1.00  0.99 ]
[ 0.16  0.00  1.00  0.03  0.01  0.97  0.68  1.00  0.96  0.99  0.01  0.01 ]
[ 0.99  0.98  1.00  0.09  1.00  0.99  1.00  0.99  0.07  0.99  0.98  0.99 ]
[ 0.01  0.02  0.00  1.00  0.03  0.02  1.00  0.02  0.98  0.01  0.17  0.00 ]
[ 1.00  0.92  1.00  0.99  1.00  0.93  1.00  1.00  1.00  0.01  0.91  0.98 ]
[ 0.98  0.69  1.00  0.80  0.03  0.01  0.02  1.00  0.97  1.00  0.01  0.95 ]
[ 1.00  0.99  0.02  0.97  1.00  0.90  0.97  1.00  0.97  0.02  0.05  0.99 ]
[ 1.00  0.03  0.01  0.86  0.96  0.98  0.06  1.00  0.99  0.01  0.98  0.01 ]
[ 0.03  0.01  0.99  0.99  1.00  0.00  0.43  0.99  0.04  0.99  0.09  0.99 ]

01/29 06:01:50 AM | === Batch 101/250
01/29 06:01:51 AM | loss = 0.409 + 0.022 + 0.013 = 0.444
01/29 06:01:51 AM | === Batch 102/250
01/29 06:01:52 AM | loss = 0.188 + 0.040 + 0.013 = 0.241
01/29 06:01:53 AM | === Batch 103/250
01/29 06:01:54 AM | loss = 0.218 + 0.048 + 0.012 = 0.278
01/29 06:01:54 AM | === Batch 104/250
01/29 06:01:55 AM | loss = 0.206 + 0.050 + 0.012 = 0.268
01/29 06:01:56 AM | === Batch 105/250
01/29 06:01:57 AM | loss = 0.235 + 0.045 + 0.012 = 0.292
01/29 06:01:57 AM | === Batch 106/250
01/29 06:01:58 AM | loss = 0.364 + 0.034 + 0.012 = 0.410
01/29 06:01:59 AM | === Batch 107/250
01/29 06:02:00 AM | loss = 0.342 + 0.018 + 0.012 = 0.373
01/29 06:02:00 AM | === Batch 108/250
01/29 06:02:01 AM | loss = 0.158 + 0.003 + 0.012 = 0.173
01/29 06:02:02 AM | === Batch 109/250
01/29 06:02:03 AM | loss = 0.356 + 0.015 + 0.012 = 0.383
01/29 06:02:03 AM | === Batch 110/250
01/29 06:02:04 AM | loss = 0.156 + 0.013 + 0.012 = 0.181
01/29 06:02:05 AM | === Batch 111/250
01/29 06:02:05 AM | loss = 0.375 + 0.002 + 0.012 = 0.389
01/29 06:02:06 AM | === Batch 112/250
01/29 06:02:07 AM | loss = 0.239 + 0.009 + 0.012 = 0.260
01/29 06:02:08 AM | === Batch 113/250
01/29 06:02:08 AM | loss = 0.232 + 0.008 + 0.012 = 0.252
01/29 06:02:09 AM | === Batch 114/250
01/29 06:02:10 AM | loss = 0.243 + 0.002 + 0.012 = 0.256
01/29 06:02:11 AM | === Batch 115/250
01/29 06:02:11 AM | loss = 0.264 + 0.013 + 0.012 = 0.288
01/29 06:02:12 AM | === Batch 116/250
01/29 06:02:13 AM | loss = 0.313 + 0.014 + 0.011 = 0.339
01/29 06:02:14 AM | === Batch 117/250
01/29 06:02:14 AM | loss = 0.170 + 0.002 + 0.011 = 0.183
01/29 06:02:15 AM | === Batch 118/250
01/29 06:02:16 AM | loss = 0.391 + 0.017 + 0.011 = 0.419
01/29 06:02:17 AM | === Batch 119/250
01/29 06:02:18 AM | loss = 0.245 + 0.029 + 0.011 = 0.285
01/29 06:02:18 AM | === Batch 120/250
01/29 06:02:19 AM | loss = 0.226 + 0.036 + 0.011 = 0.273
01/29 06:02:20 AM | === Batch 121/250
01/29 06:02:21 AM | loss = 0.359 + 0.035 + 0.011 = 0.405
01/29 06:02:21 AM | === Batch 122/250
01/29 06:02:22 AM | loss = 0.248 + 0.030 + 0.011 = 0.288
01/29 06:02:23 AM | === Batch 123/250
01/29 06:02:24 AM | loss = 0.193 + 0.019 + 0.011 = 0.223
01/29 06:02:24 AM | === Batch 124/250
01/29 06:02:25 AM | loss = 0.282 + 0.003 + 0.011 = 0.296
01/29 06:02:26 AM | === Batch 125/250
01/29 06:02:27 AM | loss = 0.218 + 0.021 + 0.011 = 0.249
01/29 06:02:28 AM | === Batch 126/250
01/29 06:02:28 AM | loss = 0.220 + 0.030 + 0.011 = 0.261
01/29 06:02:29 AM | === Batch 127/250
01/29 06:02:30 AM | loss = 0.266 + 0.025 + 0.011 = 0.302
01/29 06:02:31 AM | === Batch 128/250
01/29 06:02:31 AM | loss = 0.260 + 0.009 + 0.011 = 0.280
01/29 06:02:32 AM | === Batch 129/250
01/29 06:02:33 AM | loss = 0.226 + 0.013 + 0.010 = 0.249
01/29 06:02:34 AM | === Batch 130/250
01/29 06:02:34 AM | loss = 0.282 + 0.024 + 0.010 = 0.316
01/29 06:02:35 AM | === Batch 131/250
01/29 06:02:36 AM | loss = 0.286 + 0.030 + 0.010 = 0.326
01/29 06:02:37 AM | === Batch 132/250
01/29 06:02:37 AM | loss = 0.226 + 0.030 + 0.010 = 0.266
01/29 06:02:38 AM | === Batch 133/250
01/29 06:02:39 AM | loss = 0.170 + 0.026 + 0.010 = 0.206
01/29 06:02:40 AM | === Batch 134/250
01/29 06:02:40 AM | loss = 0.303 + 0.017 + 0.010 = 0.330
01/29 06:02:41 AM | === Batch 135/250
01/29 06:02:42 AM | loss = 0.284 + 0.006 + 0.010 = 0.300
01/29 06:02:43 AM | === Batch 136/250
01/29 06:02:43 AM | loss = 0.197 + 0.010 + 0.010 = 0.216
01/29 06:02:44 AM | === Batch 137/250
01/29 06:02:45 AM | loss = 0.102 + 0.014 + 0.010 = 0.125
01/29 06:02:46 AM | === Batch 138/250
01/29 06:02:46 AM | loss = 0.194 + 0.009 + 0.010 = 0.212
01/29 06:02:47 AM | === Batch 139/250
01/29 06:02:48 AM | loss = 0.307 + 0.004 + 0.010 = 0.320
01/29 06:02:49 AM | === Batch 140/250
01/29 06:02:49 AM | loss = 0.516 + 0.008 + 0.010 = 0.533
01/29 06:02:50 AM | === Batch 141/250
01/29 06:02:51 AM | loss = 0.323 + 0.007 + 0.010 = 0.340
01/29 06:02:52 AM | === Batch 142/250
01/29 06:02:52 AM | loss = 0.212 + 0.002 + 0.010 = 0.223
01/29 06:02:53 AM | === Batch 143/250
01/29 06:02:54 AM | loss = 0.280 + 0.010 + 0.010 = 0.300
01/29 06:02:55 AM | === Batch 144/250
01/29 06:02:55 AM | loss = 0.465 + 0.011 + 0.009 = 0.485
01/29 06:02:56 AM | === Batch 145/250
01/29 06:02:57 AM | loss = 0.362 + 0.003 + 0.009 = 0.375
01/29 06:02:58 AM | === Batch 146/250
01/29 06:02:58 AM | loss = 0.403 + 0.011 + 0.009 = 0.423
01/29 06:02:59 AM | === Batch 147/250
01/29 06:03:00 AM | loss = 0.335 + 0.021 + 0.009 = 0.365
01/29 06:03:01 AM | === Batch 148/250
01/29 06:03:01 AM | loss = 0.469 + 0.025 + 0.009 = 0.503
01/29 06:03:02 AM | === Batch 149/250
01/29 06:03:03 AM | loss = 0.250 + 0.024 + 0.009 = 0.284
01/29 06:03:04 AM | === Batch 150/250
01/29 06:03:04 AM | loss = 0.133 + 0.019 + 0.010 = 0.162
01/29 06:03:05 AM | === Batch 151/250
01/29 06:03:06 AM | loss = 0.271 + 0.010 + 0.010 = 0.290
01/29 06:03:07 AM | === Batch 152/250
01/29 06:03:07 AM | loss = 0.456 + 0.005 + 0.010 = 0.470
01/29 06:03:08 AM | === Batch 153/250
01/29 06:03:09 AM | loss = 0.317 + 0.009 + 0.010 = 0.336
01/29 06:03:10 AM | === Batch 154/250
01/29 06:03:10 AM | loss = 0.152 + 0.002 + 0.010 = 0.164
01/29 06:03:11 AM | === Batch 155/250
01/29 06:03:12 AM | loss = 0.280 + 0.012 + 0.010 = 0.302
01/29 06:03:13 AM | === Batch 156/250
01/29 06:03:13 AM | loss = 0.429 + 0.020 + 0.010 = 0.459
01/29 06:03:14 AM | === Batch 157/250
01/29 06:03:15 AM | loss = 0.287 + 0.021 + 0.010 = 0.317
01/29 06:03:16 AM | === Batch 158/250
01/29 06:03:16 AM | loss = 0.292 + 0.018 + 0.010 = 0.320
01/29 06:03:17 AM | === Batch 159/250
01/29 06:03:18 AM | loss = 0.229 + 0.010 + 0.010 = 0.248
01/29 06:03:18 AM | === Batch 160/250
01/29 06:03:19 AM | loss = 0.429 + 0.003 + 0.010 = 0.442
01/29 06:03:20 AM | === Batch 161/250
01/29 06:03:21 AM | loss = 0.284 + 0.004 + 0.010 = 0.298
01/29 06:03:21 AM | === Batch 162/250
01/29 06:03:22 AM | loss = 0.181 + 0.004 + 0.009 = 0.195
01/29 06:03:23 AM | === Batch 163/250
01/29 06:03:24 AM | loss = 0.141 + 0.005 + 0.009 = 0.155
01/29 06:03:24 AM | === Batch 164/250
01/29 06:03:25 AM | loss = 0.431 + 0.001 + 0.009 = 0.441
01/29 06:03:26 AM | === Batch 165/250
01/29 06:03:26 AM | loss = 0.447 + 0.008 + 0.009 = 0.464
01/29 06:03:27 AM | === Batch 166/250
01/29 06:03:28 AM | loss = 0.170 + 0.007 + 0.009 = 0.186
01/29 06:03:29 AM | === Batch 167/250
01/29 06:03:29 AM | loss = 0.226 + 0.002 + 0.009 = 0.238
01/29 06:03:30 AM | === Batch 168/250
01/29 06:03:31 AM | loss = 0.144 + 0.005 + 0.009 = 0.158
01/29 06:03:32 AM | === Batch 169/250
01/29 06:03:32 AM | loss = 0.254 + 0.003 + 0.010 = 0.266
01/29 06:03:33 AM | === Batch 170/250
01/29 06:03:34 AM | loss = 0.317 + 0.005 + 0.010 = 0.332
01/29 06:03:35 AM | === Batch 171/250
01/29 06:03:35 AM | loss = 0.248 + 0.004 + 0.010 = 0.262
01/29 06:03:36 AM | === Batch 172/250
01/29 06:03:37 AM | loss = 0.421 + 0.007 + 0.010 = 0.438
01/29 06:03:38 AM | === Batch 173/250
01/29 06:03:38 AM | loss = 0.450 + 0.011 + 0.010 = 0.471
01/29 06:03:39 AM | === Batch 174/250
01/29 06:03:40 AM | loss = 0.331 + 0.010 + 0.009 = 0.350
01/29 06:03:41 AM | === Batch 175/250
01/29 06:03:41 AM | loss = 0.284 + 0.003 + 0.009 = 0.297
01/29 06:03:42 AM | === Batch 176/250
01/29 06:03:43 AM | loss = 0.214 + 0.011 + 0.009 = 0.234
01/29 06:03:44 AM | === Batch 177/250
01/29 06:03:44 AM | loss = 0.284 + 0.012 + 0.009 = 0.305
01/29 06:03:45 AM | === Batch 178/250
01/29 06:03:46 AM | loss = 0.302 + 0.000 + 0.009 = 0.311
01/29 06:03:47 AM | === Batch 179/250
01/29 06:03:47 AM | loss = 0.305 + 0.019 + 0.009 = 0.333
01/29 06:03:48 AM | === Batch 180/250
01/29 06:03:49 AM | loss = 0.331 + 0.030 + 0.009 = 0.369
01/29 06:03:49 AM | === Batch 181/250
01/29 06:03:50 AM | loss = 0.261 + 0.035 + 0.009 = 0.304
01/29 06:03:51 AM | === Batch 182/250
01/29 06:03:52 AM | loss = 0.403 + 0.034 + 0.009 = 0.445
01/29 06:03:52 AM | === Batch 183/250
01/29 06:03:53 AM | loss = 0.366 + 0.030 + 0.009 = 0.405
01/29 06:03:54 AM | === Batch 184/250
01/29 06:03:55 AM | loss = 0.295 + 0.022 + 0.008 = 0.325
01/29 06:03:55 AM | === Batch 185/250
01/29 06:03:56 AM | loss = 0.284 + 0.010 + 0.008 = 0.303
01/29 06:03:57 AM | === Batch 186/250
01/29 06:03:57 AM | loss = 0.089 + 0.004 + 0.008 = 0.101
01/29 06:03:58 AM | === Batch 187/250
01/29 06:03:59 AM | loss = 0.404 + 0.010 + 0.008 = 0.422
01/29 06:04:00 AM | === Batch 188/250
01/29 06:04:00 AM | loss = 0.203 + 0.004 + 0.008 = 0.215
01/29 06:04:01 AM | === Batch 189/250
01/29 06:04:02 AM | loss = 0.223 + 0.009 + 0.008 = 0.240
01/29 06:04:03 AM | === Batch 190/250
01/29 06:04:03 AM | loss = 0.279 + 0.014 + 0.008 = 0.301
01/29 06:04:04 AM | === Batch 191/250
01/29 06:04:05 AM | loss = 0.197 + 0.014 + 0.008 = 0.219
01/29 06:04:06 AM | === Batch 192/250
01/29 06:04:06 AM | loss = 0.329 + 0.010 + 0.008 = 0.347
01/29 06:04:07 AM | === Batch 193/250
01/29 06:04:08 AM | loss = 0.282 + 0.003 + 0.008 = 0.293
01/29 06:04:09 AM | === Batch 194/250
01/29 06:04:09 AM | loss = 0.369 + 0.012 + 0.008 = 0.389
01/29 06:04:10 AM | === Batch 195/250
01/29 06:04:11 AM | loss = 0.165 + 0.014 + 0.008 = 0.187
01/29 06:04:12 AM | === Batch 196/250
01/29 06:04:12 AM | loss = 0.253 + 0.005 + 0.008 = 0.266
01/29 06:04:13 AM | === Batch 197/250
01/29 06:04:14 AM | loss = 0.185 + 0.011 + 0.008 = 0.204
01/29 06:04:15 AM | === Batch 198/250
01/29 06:04:15 AM | loss = 0.198 + 0.019 + 0.008 = 0.225
01/29 06:04:16 AM | === Batch 199/250
01/29 06:04:17 AM | loss = 0.296 + 0.020 + 0.008 = 0.325
01/29 06:04:17 AM | === Batch 200/250
01/29 06:04:18 AM | loss = 0.352 + 0.015 + 0.008 = 0.375
01/29 06:04:19 AM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.00  1.00  0.99  0.73  0.01  0.99  0.00  1.00  0.00  0.02  1.00  0.00 ]
[ 1.00  0.00  0.01  1.00  1.00  0.98  1.00  1.00  0.98  1.00  1.00  1.00 ]
[ 0.00  0.71  0.00  0.06  0.98  0.01  0.98  1.00  0.97  0.10  0.01  0.91 ]
[ 1.00  0.99  1.00  1.00  1.00  1.00  1.00  1.00  0.04  0.02  0.01  1.00 ]
[ 0.01  0.92  0.99  0.01  0.97  1.00  0.00  0.01  0.00  0.97  0.00  0.98 ]
[ 1.00  0.00  1.00  1.00  1.00  0.99  0.99  0.05  1.00  1.00  1.00  1.00 ]
[ 0.00  0.01  0.00  0.02  1.00  0.00  0.99  0.73  0.98  0.01  0.00  0.97 ]
[ 0.99  0.99  1.00  1.00  1.00  0.00  1.00  0.99  0.01  1.00  0.00  1.00 ]
[ 0.99  1.00  0.00  0.06  0.99  0.00  0.02  0.09  0.00  0.03  1.00  0.84 ]
[ 1.00  0.19  1.00  1.00  1.00  0.00  0.94  1.00  0.99  1.00  0.00  0.00 ]
[ 0.00  0.02  0.00  0.00  0.04  0.99  1.00  1.00  0.87  0.00  0.97  0.00 ]
[ 0.40  1.00  1.00  1.00  1.00  0.00  1.00  0.00  1.00  0.99  0.05  0.99 ]
[ 0.98  0.00  1.00  0.02  0.99  1.00  0.05  1.00  0.00  0.01  1.00  0.01 ]
[ 0.01  0.98  1.00  0.00  1.00  0.01  1.00  0.00  1.00  0.00  1.00  1.00 ]
[ 0.93  0.99  0.00  1.00  0.99  0.98  0.99  1.00  1.00  0.00  0.02  0.00 ]
[ 0.91  1.00  1.00  0.00  0.99  0.00  1.00  0.00  1.00  0.00  1.00  1.00 ]
[ 0.96  0.00  0.00  1.00  0.00  0.00  0.00  0.01  0.00  0.00  0.03  0.00 ]
[ 0.95  0.02  1.00  0.00  1.00  0.01  0.01  0.00  0.98  0.01  1.00  0.99 ]
[ 0.99  1.00  1.00  1.00  1.00  0.99  1.00  0.99  1.00  1.00  1.00  1.00 ]
[ 0.00  0.99  1.00  1.00  0.98  0.94  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.01  0.00  0.00  0.03  0.99  0.00  0.98  1.00  0.97  0.97  0.02  0.04 ]
[ 0.99  0.99  0.01  0.96  1.00  0.98  1.00  0.98  0.01  0.98  0.00  0.99 ]
[ 0.00  0.05  0.02  0.99  0.99  0.00  1.00  0.02  0.01  0.83  0.03  0.01 ]
[ 0.87  0.99  0.99  1.00  1.00  0.96  1.00  0.99  1.00  0.01  1.00  1.00 ]
[ 1.00  0.99  0.02  1.00  1.00  0.00  0.36  0.99  0.98  0.95  0.97  0.00 ]
[ 0.97  0.99  1.00  0.95  0.99  0.99  1.00  0.01  0.99  0.94  0.02  1.00 ]
[ 0.99  0.00  0.00  0.00  1.00  0.02  1.00  0.00  0.99  0.01  0.01  0.00 ]
[ 0.97  1.00  1.00  0.88  1.00  0.99  0.97  0.01  0.94  0.95  0.03  1.00 ]
[ 0.01  0.00  0.00  0.98  0.00  0.01  0.21  0.00  0.01  0.00  0.00  0.00 ]
[ 0.74  0.99  0.95  0.99  1.00  0.01  1.00  0.99  0.01  0.98  0.96  1.00 ]
[ 0.00  0.00  1.00  0.98  0.00  0.02  0.00  0.01  0.99  1.00  0.00  1.00 ]
[ 0.01  0.99  0.99  1.00  1.00  0.00  0.99  0.00  0.01  0.97  0.00  0.98 ]
[ 0.00  0.00  0.04  0.99  1.00  0.00  0.36  0.93  1.00  0.03  0.00  0.00 ]
[ 0.92  1.00  1.00  1.00  0.99  0.93  1.00  0.99  0.00  0.95  0.03  1.00 ]
[ 0.99  0.00  0.02  0.00  0.00  0.99  0.99  0.98  0.01  0.44  0.00  0.96 ]
[ 0.97  0.03  0.00  1.00  1.00  0.00  0.99  0.99  0.00  0.96  0.97  0.99 ]
[ 1.00  1.00  0.99  1.00  0.99  1.00  0.03  1.00  1.00  1.00  1.00  0.99 ]
[ 0.84  0.99  1.00  0.99  1.00  0.00  0.98  0.00  1.00  1.00  1.00  1.00 ]
[ 0.01  0.01  1.00  0.98  0.96  0.00  0.99  0.98  1.00  0.02  0.99  1.00 ]
[ 1.00  1.00  1.00  0.99  1.00  1.00  0.98  1.00  0.99  0.98  1.00  1.00 ]
[ 0.04  1.00  0.00  0.99  0.99  0.05  0.00  0.90  0.00  0.97  1.00  0.02 ]
[ 0.99  0.99  1.00  0.99  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 1.00  0.99  0.99  0.02  0.00  0.65  0.85  0.98  0.99  0.04  0.99  0.93 ]
[ 1.00  0.97  0.99  0.03  0.96  0.99  1.00  1.00  0.99  0.05  0.99  0.98 ]
[ 0.99  0.96  0.98  0.97  1.00  0.00  0.00  0.41  1.00  0.75  1.00  1.00 ]
[ 1.00  0.98  0.99  0.99  0.99  1.00  0.99  1.00  0.97  0.02  1.00  1.00 ]
[ 0.06  0.00  1.00  0.02  0.01  0.99  0.97  0.99  0.98  0.99  0.03  0.10 ]
[ 1.00  0.98  1.00  0.02  1.00  1.00  1.00  0.99  0.90  1.00  0.98  0.99 ]
[ 0.01  0.01  0.00  1.00  0.06  0.01  1.00  0.01  0.98  0.01  0.98  0.00 ]
[ 1.00  0.98  1.00  1.00  1.00  0.98  1.00  1.00  1.00  0.01  0.91  1.00 ]
[ 0.98  0.05  1.00  0.45  0.04  0.01  0.02  1.00  0.99  1.00  0.01  0.98 ]
[ 1.00  0.99  0.01  0.95  0.99  1.00  0.99  1.00  0.98  0.01  0.01  1.00 ]
[ 1.00  0.02  0.01  0.91  0.96  0.98  0.08  0.98  0.98  0.01  0.97  0.01 ]
[ 0.06  0.01  0.99  0.99  1.00  0.00  0.95  0.99  0.02  0.99  0.01  0.99 ]

01/29 06:04:19 AM | === Batch 201/250
01/29 06:04:20 AM | loss = 0.315 + 0.005 + 0.008 = 0.328
01/29 06:04:20 AM | === Batch 202/250
01/29 06:04:21 AM | loss = 0.270 + 0.010 + 0.008 = 0.288
01/29 06:04:22 AM | === Batch 203/250
01/29 06:04:23 AM | loss = 0.330 + 0.013 + 0.008 = 0.351
01/29 06:04:23 AM | === Batch 204/250
01/29 06:04:24 AM | loss = 0.359 + 0.006 + 0.008 = 0.372
01/29 06:04:25 AM | === Batch 205/250
01/29 06:04:25 AM | loss = 0.342 + 0.009 + 0.008 = 0.358
01/29 06:04:26 AM | === Batch 206/250
01/29 06:04:27 AM | loss = 0.236 + 0.017 + 0.008 = 0.261
01/29 06:04:28 AM | === Batch 207/250
01/29 06:04:28 AM | loss = 0.191 + 0.021 + 0.008 = 0.219
01/29 06:04:29 AM | === Batch 208/250
01/29 06:04:30 AM | loss = 0.298 + 0.019 + 0.008 = 0.324
01/29 06:04:31 AM | === Batch 209/250
01/29 06:04:31 AM | loss = 0.207 + 0.012 + 0.008 = 0.227
01/29 06:04:32 AM | === Batch 210/250
01/29 06:04:33 AM | loss = 0.186 + 0.000 + 0.008 = 0.194
01/29 06:04:34 AM | === Batch 211/250
01/29 06:04:34 AM | loss = 0.318 + 0.019 + 0.008 = 0.344
01/29 06:04:35 AM | === Batch 212/250
01/29 06:04:36 AM | loss = 0.414 + 0.024 + 0.008 = 0.445
01/29 06:04:37 AM | === Batch 213/250
01/29 06:04:37 AM | loss = 0.274 + 0.016 + 0.008 = 0.298
01/29 06:04:38 AM | === Batch 214/250
01/29 06:04:39 AM | loss = 0.191 + 0.003 + 0.008 = 0.201
01/29 06:04:40 AM | === Batch 215/250
01/29 06:04:40 AM | loss = 0.299 + 0.011 + 0.007 = 0.317
01/29 06:04:41 AM | === Batch 216/250
01/29 06:04:42 AM | loss = 0.315 + 0.015 + 0.007 = 0.336
01/29 06:04:43 AM | === Batch 217/250
01/29 06:04:43 AM | loss = 0.287 + 0.014 + 0.007 = 0.308
01/29 06:04:44 AM | === Batch 218/250
01/29 06:04:45 AM | loss = 0.291 + 0.009 + 0.007 = 0.307
01/29 06:04:45 AM | === Batch 219/250
01/29 06:04:46 AM | loss = 0.149 + 0.001 + 0.007 = 0.157
01/29 06:04:47 AM | === Batch 220/250
01/29 06:04:48 AM | loss = 0.266 + 0.014 + 0.007 = 0.287
01/29 06:04:48 AM | === Batch 221/250
01/29 06:04:49 AM | loss = 0.334 + 0.021 + 0.007 = 0.362
01/29 06:04:50 AM | === Batch 222/250
01/29 06:04:51 AM | loss = 0.272 + 0.019 + 0.007 = 0.298
01/29 06:04:51 AM | === Batch 223/250
01/29 06:04:52 AM | loss = 0.302 + 0.009 + 0.007 = 0.318
01/29 06:04:53 AM | === Batch 224/250
01/29 06:04:53 AM | loss = 0.101 + 0.006 + 0.007 = 0.114
01/29 06:04:54 AM | === Batch 225/250
01/29 06:04:55 AM | loss = 0.162 + 0.014 + 0.007 = 0.183
01/29 06:04:56 AM | === Batch 226/250
01/29 06:04:56 AM | loss = 0.234 + 0.017 + 0.007 = 0.258
01/29 06:04:57 AM | === Batch 227/250
01/29 06:04:57 AM | loss = 0.170 + 0.015 + 0.007 = 0.192
01/29 06:04:58 AM | === Batch 228/250
01/29 06:04:59 AM | loss = 0.336 + 0.007 + 0.007 = 0.350
01/29 06:04:59 AM | === Batch 229/250
01/29 06:05:00 AM | loss = 0.216 + 0.007 + 0.007 = 0.230
01/29 06:05:01 AM | === Batch 230/250
01/29 06:05:01 AM | loss = 0.111 + 0.011 + 0.007 = 0.129
01/29 06:05:02 AM | === Batch 231/250
01/29 06:05:03 AM | loss = 0.351 + 0.003 + 0.007 = 0.361
01/29 06:05:03 AM | === Batch 232/250
01/29 06:05:04 AM | loss = 0.396 + 0.012 + 0.007 = 0.416
01/29 06:05:05 AM | === Batch 233/250
01/29 06:05:05 AM | loss = 0.333 + 0.021 + 0.007 = 0.361
01/29 06:05:06 AM | === Batch 234/250
01/29 06:05:07 AM | loss = 0.175 + 0.024 + 0.007 = 0.205
01/29 06:05:07 AM | === Batch 235/250
01/29 06:05:08 AM | loss = 0.453 + 0.022 + 0.007 = 0.482
01/29 06:05:09 AM | === Batch 236/250
01/29 06:05:09 AM | loss = 0.179 + 0.016 + 0.007 = 0.201
01/29 06:05:10 AM | === Batch 237/250
01/29 06:05:11 AM | loss = 0.307 + 0.006 + 0.007 = 0.320
01/29 06:05:12 AM | === Batch 238/250
01/29 06:05:12 AM | loss = 0.308 + 0.009 + 0.007 = 0.323
01/29 06:05:13 AM | === Batch 239/250
01/29 06:05:13 AM | loss = 0.268 + 0.013 + 0.007 = 0.287
01/29 06:05:14 AM | === Batch 240/250
01/29 06:05:15 AM | loss = 0.204 + 0.008 + 0.007 = 0.219
01/29 06:05:16 AM | === Batch 241/250
01/29 06:05:16 AM | loss = 0.190 + 0.003 + 0.007 = 0.199
01/29 06:05:17 AM | === Batch 242/250
01/29 06:05:17 AM | loss = 0.246 + 0.006 + 0.006 = 0.259
01/29 06:05:18 AM | === Batch 243/250
01/29 06:05:19 AM | loss = 0.235 + 0.005 + 0.006 = 0.247
01/29 06:05:20 AM | === Batch 244/250
01/29 06:05:20 AM | loss = 0.394 + 0.001 + 0.006 = 0.401
01/29 06:05:21 AM | === Batch 245/250
01/29 06:05:21 AM | loss = 0.234 + 0.008 + 0.006 = 0.248
01/29 06:05:22 AM | === Batch 246/250
01/29 06:05:23 AM | loss = 0.511 + 0.007 + 0.006 = 0.524
01/29 06:05:24 AM | === Batch 247/250
01/29 06:05:24 AM | loss = 0.515 + 0.001 + 0.006 = 0.523
01/29 06:05:25 AM | === Batch 248/250
01/29 06:05:25 AM | loss = 0.181 + 0.003 + 0.006 = 0.191
01/29 06:05:26 AM | === Batch 249/250
01/29 06:05:27 AM | loss = 0.285 + 0.001 + 0.006 = 0.291
01/29 06:05:27 AM | === Batch 250/250
01/29 06:05:28 AM | loss = 0.322 + 0.004 + 0.006 = 0.333
01/29 06:05:29 AM | ===
Best loss was 0.10 at iteration 186

01/29 06:05:29 AM | Looking for optimal threshold...
01/29 06:05:29 AM | Testing threshold 0.5
01/29 06:05:29 AM | Distance to target: 445,056
01/29 06:05:29 AM | Testing threshold 0.75
01/29 06:05:29 AM | Distance to target: 1,048,512
01/29 06:05:29 AM | Testing threshold 0.625
01/29 06:05:29 AM | Distance to target: 24,320
01/29 06:05:31 AM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.00  1.00  1.00  1.00  0.00  1.00  0.00  1.00  0.00  0.00  1.00  0.00 ]
[ 1.00  0.00  0.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.00  0.00  0.00  0.00  1.00  0.00  1.00  1.00  1.00  0.00  0.00  1.00 ]
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  0.00  0.00  0.00  1.00 ]
[ 0.00  1.00  1.00  0.00  1.00  1.00  0.00  0.00  0.00  1.00  0.00  1.00 ]
[ 1.00  0.00  1.00  1.00  1.00  1.00  1.00  0.00  1.00  1.00  1.00  1.00 ]
[ 0.00  0.00  0.00  0.00  1.00  0.00  1.00  1.00  1.00  0.00  0.00  1.00 ]
[ 1.00  1.00  1.00  1.00  1.00  0.00  1.00  1.00  0.00  1.00  0.00  1.00 ]
[ 1.00  1.00  0.00  0.00  1.00  0.00  0.00  0.00  0.00  0.00  1.00  1.00 ]
[ 1.00  0.00  1.00  1.00  1.00  0.00  1.00  1.00  1.00  1.00  0.00  0.00 ]
[ 0.00  0.00  0.00  0.00  0.00  1.00  1.00  1.00  1.00  0.00  1.00  0.00 ]
[ 0.00  1.00  1.00  1.00  1.00  0.00  1.00  0.00  1.00  1.00  0.00  1.00 ]
[ 1.00  0.00  1.00  0.00  1.00  1.00  0.00  1.00  0.00  0.00  1.00  0.00 ]
[ 0.00  1.00  1.00  0.00  1.00  0.00  1.00  0.00  1.00  0.00  1.00  1.00 ]
[ 1.00  1.00  0.00  1.00  1.00  1.00  1.00  1.00  1.00  0.00  0.00  0.00 ]
[ 1.00  1.00  1.00  0.00  1.00  0.00  1.00  0.00  1.00  0.00  1.00  1.00 ]
[ 1.00  0.00  0.00  1.00  0.00  0.00  0.00  0.00  0.00  0.00  0.00  0.00 ]
[ 1.00  0.00  1.00  0.00  1.00  0.00  0.00  0.00  1.00  0.00  1.00  1.00 ]
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.00  0.00  0.00  0.00  1.00  0.00  1.00  1.00  1.00  1.00  0.00  0.00 ]
[ 1.00  1.00  0.00  1.00  1.00  1.00  1.00  1.00  0.00  1.00  0.00  1.00 ]
[ 0.00  0.00  0.00  1.00  1.00  0.00  1.00  0.00  0.00  1.00  0.00  0.00 ]
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  0.00  1.00  1.00 ]
[ 1.00  1.00  0.00  1.00  1.00  0.00  0.00  1.00  1.00  1.00  1.00  0.00 ]
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  0.00  1.00  1.00  0.00  1.00 ]
[ 1.00  0.00  0.00  0.00  1.00  0.00  1.00  0.00  1.00  0.00  0.00  0.00 ]
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  0.00  1.00  1.00  0.00  1.00 ]
[ 0.00  0.00  0.00  1.00  0.00  0.00  0.00  0.00  0.00  0.00  0.00  0.00 ]
[ 1.00  1.00  1.00  1.00  1.00  0.00  1.00  1.00  0.00  1.00  1.00  1.00 ]
[ 0.00  0.00  1.00  1.00  0.00  0.00  0.00  0.00  1.00  1.00  0.00  1.00 ]
[ 0.00  1.00  1.00  1.00  1.00  0.00  1.00  0.00  0.00  1.00  0.00  1.00 ]
[ 0.00  0.00  0.00  1.00  1.00  0.00  1.00  1.00  1.00  0.00  0.00  0.00 ]
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  0.00  1.00  0.00  1.00 ]
[ 1.00  0.00  0.00  0.00  0.00  1.00  1.00  1.00  0.00  0.00  0.00  1.00 ]
[ 1.00  0.00  0.00  1.00  1.00  0.00  1.00  1.00  0.00  1.00  1.00  1.00 ]
[ 1.00  1.00  1.00  1.00  1.00  1.00  0.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.00  1.00  1.00  1.00  1.00  0.00  1.00  0.00  1.00  1.00  1.00  1.00 ]
[ 0.00  0.00  1.00  1.00  1.00  0.00  1.00  1.00  1.00  0.00  1.00  1.00 ]
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.00  1.00  0.00  1.00  1.00  0.00  0.00  1.00  0.00  1.00  1.00  0.00 ]
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 1.00  1.00  1.00  0.00  0.00  0.00  1.00  1.00  1.00  0.00  1.00  1.00 ]
[ 1.00  1.00  1.00  0.00  1.00  1.00  1.00  1.00  1.00  0.00  1.00  1.00 ]
[ 1.00  1.00  1.00  1.00  1.00  0.00  0.00  0.00  1.00  0.00  1.00  1.00 ]
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  0.00  1.00  1.00 ]
[ 0.00  0.00  1.00  0.00  0.00  1.00  1.00  1.00  1.00  1.00  0.00  0.00 ]
[ 1.00  1.00  1.00  0.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.00  0.00  0.00  1.00  0.00  0.00  1.00  0.00  1.00  0.00  1.00  0.00 ]
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  0.00  1.00  1.00 ]
[ 1.00  0.00  1.00  0.00  0.00  0.00  0.00  1.00  1.00  1.00  0.00  1.00 ]
[ 1.00  1.00  0.00  1.00  1.00  1.00  1.00  1.00  1.00  0.00  0.00  1.00 ]
[ 1.00  0.00  0.00  1.00  1.00  1.00  0.00  1.00  1.00  0.00  1.00  0.00 ]
[ 0.00  0.00  1.00  1.00  1.00  0.00  1.00  1.00  0.00  1.00  0.00  1.00 ]

01/29 06:05:31 AM | ResNet(
  (conv1): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(16, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(8, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (1): BasicBlock(
      (conv1): Conv2d(16, 7, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(7, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(7, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (2): BasicBlock(
      (conv1): Conv2d(16, 7, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(7, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(7, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (3): BasicBlock(
      (conv1): Conv2d(16, 5, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(5, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (4): BasicBlock(
      (conv1): Conv2d(16, 6, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(6, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(6, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (5): BasicBlock(
      (conv1): Conv2d(16, 5, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(5, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (6): BasicBlock(
      (conv1): Conv2d(16, 9, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(9, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(9, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (7): BasicBlock(
      (conv1): Conv2d(16, 9, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(9, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(9, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (8): BasicBlock(
      (conv1): Conv2d(16, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(3, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(3, 9, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(9, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(16, 31, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(31, 30, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): LambdaLayer()
    )
    (1): BasicBlock(
      (conv1): Conv2d(32, 9, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(9, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(9, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (2): BasicBlock(
      (conv1): Conv2d(32, 11, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(11, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(11, 27, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(27, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (3): BasicBlock(
      (conv1): Conv2d(32, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(14, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(26, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (4): BasicBlock(
      (conv1): Conv2d(32, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(12, 25, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(25, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (5): BasicBlock(
      (conv1): Conv2d(32, 9, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(9, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(9, 25, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(25, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (6): BasicBlock(
      (conv1): Conv2d(32, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(12, 22, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(22, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (7): BasicBlock(
      (conv1): Conv2d(32, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(8, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (8): BasicBlock(
      (conv1): Conv2d(32, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(12, 22, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(22, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(32, 58, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(58, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(58, 58, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(58, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): LambdaLayer()
    )
    (1): BasicBlock(
      (conv1): Conv2d(64, 42, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(42, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(42, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(54, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (2): BasicBlock(
      (conv1): Conv2d(64, 40, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(40, 56, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(56, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (3): BasicBlock(
      (conv1): Conv2d(64, 42, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(42, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(42, 57, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(57, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (4): BasicBlock(
      (conv1): Conv2d(64, 46, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(46, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(46, 59, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(59, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (5): BasicBlock(
      (conv1): Conv2d(64, 37, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(37, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(37, 53, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(53, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (6): BasicBlock(
      (conv1): Conv2d(64, 40, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(40, 55, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(55, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (7): BasicBlock(
      (conv1): Conv2d(64, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(44, 43, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(43, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (8): BasicBlock(
      (conv1): Conv2d(64, 42, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(42, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(42, 30, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
  (linear): Linear(in_features=64, out_features=10, bias=True)
)
01/29 06:05:34 AM | ----------------------------------------
01/29 06:05:34 AM | Performances input model:
01/29 06:05:34 AM |  - flops: 126,554,816
01/29 06:05:34 AM |  - params: 853,018
01/29 06:05:34 AM |  - accuracy: 93.2699966430664
01/29 06:05:34 AM | ----------------------------------------
01/29 06:05:34 AM | Performances pseudo-pruned model:
01/29 06:05:34 AM |  - flops: 126,554,816
01/29 06:05:34 AM |  - params: 853,018
01/29 06:05:34 AM |  - accuracy: 84.36000061035156
01/29 06:05:34 AM | ----------------------------------------
01/29 06:05:34 AM | Performances pruned model:
01/29 06:05:34 AM |  - flops: 55,815,680
01/29 06:05:34 AM |  - params: 466,342
01/29 06:05:34 AM |  - accuracy: 84.36000061035156
01/29 06:05:34 AM | ----------------------------------------
01/29 06:05:34 AM | Total time: 378.73s
