01/29 06:05:43 AM | args = Namespace(output_dir='result/rebuttal/nb_epoch/resnet56/nbbtchs250/seed_01', loaded_model_path='./checkpoints/cifar10/resnet_56.pt', resume=False, test_only=False, mode='prune', batch_size=64, nb_batches=250, Mflops_target=None, lr=0.6, momentum=0.9, beta=6, gamma=0.4, gpu='0', num_workers=4, dataset='cifar10', arch='resnet_56', save_plot=False, seed=1, lr_finetuning=0.02, epoch_finetuning=200, wd=0.002, data_dir='./data/cifar10/', print_freq=200, num_classes=10, device_ids=[0], device=device(type='cuda', index=0), name_base='')
01/29 06:05:48 AM | ----------------------------------------
01/29 06:05:48 AM | ==> Building model...
01/29 06:05:48 AM | ----------------------------------------
01/29 06:05:48 AM | ==> Loading weights into the model...
01/29 06:05:48 AM | ----------------------------------------
01/29 06:05:48 AM | ResNet(
  (conv1): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (1): BasicBlock(
      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (2): BasicBlock(
      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (3): BasicBlock(
      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (4): BasicBlock(
      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (5): BasicBlock(
      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (6): BasicBlock(
      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (7): BasicBlock(
      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (8): BasicBlock(
      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): LambdaLayer()
    )
    (1): BasicBlock(
      (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (2): BasicBlock(
      (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (3): BasicBlock(
      (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (4): BasicBlock(
      (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (5): BasicBlock(
      (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (6): BasicBlock(
      (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (7): BasicBlock(
      (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (8): BasicBlock(
      (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): LambdaLayer()
    )
    (1): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (2): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (3): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (4): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (5): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (6): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (7): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (8): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
  (linear): Linear(in_features=64, out_features=10, bias=True)
)
01/29 06:05:50 AM | Save modules info...
01/29 06:05:50 AM | FLOPS pruning ratio is 0.56
01/29 06:05:50 AM | Pruning with information flow
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 06:05:50 AM | cin: None
01/29 06:05:50 AM | cout: None
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 06:05:50 AM | cin: None
01/29 06:05:50 AM | cout: None
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: ReLU(inplace=True)
01/29 06:05:50 AM | cin: None
01/29 06:05:50 AM | cout: None
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 06:05:50 AM | cin: None
01/29 06:05:50 AM | cout: [1]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 06:05:50 AM | cin: [1]
01/29 06:05:50 AM | cout: [1]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: ReLU(inplace=True)
01/29 06:05:50 AM | cin: [1]
01/29 06:05:50 AM | cout: [1]
01/29 06:05:50 AM | active
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 06:05:50 AM | cin: [1]
01/29 06:05:50 AM | cout: [2]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 06:05:50 AM | cin: [2]
01/29 06:05:50 AM | cout: [2]
01/29 06:05:50 AM | active
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: ReLU(inplace=True)
01/29 06:05:50 AM | cin: None
01/29 06:05:50 AM | cout: None
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 06:05:50 AM | cin: None
01/29 06:05:50 AM | cout: [3]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 06:05:50 AM | cin: [3]
01/29 06:05:50 AM | cout: [3]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: ReLU(inplace=True)
01/29 06:05:50 AM | cin: [3]
01/29 06:05:50 AM | cout: [3]
01/29 06:05:50 AM | active
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 06:05:50 AM | cin: [3]
01/29 06:05:50 AM | cout: [4]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 06:05:50 AM | cin: [4]
01/29 06:05:50 AM | cout: [4]
01/29 06:05:50 AM | active
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: ReLU(inplace=True)
01/29 06:05:50 AM | cin: None
01/29 06:05:50 AM | cout: None
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 06:05:50 AM | cin: None
01/29 06:05:50 AM | cout: [5]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 06:05:50 AM | cin: [5]
01/29 06:05:50 AM | cout: [5]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: ReLU(inplace=True)
01/29 06:05:50 AM | cin: [5]
01/29 06:05:50 AM | cout: [5]
01/29 06:05:50 AM | active
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 06:05:50 AM | cin: [5]
01/29 06:05:50 AM | cout: [6]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 06:05:50 AM | cin: [6]
01/29 06:05:50 AM | cout: [6]
01/29 06:05:50 AM | active
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: ReLU(inplace=True)
01/29 06:05:50 AM | cin: None
01/29 06:05:50 AM | cout: None
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 06:05:50 AM | cin: None
01/29 06:05:50 AM | cout: [7]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 06:05:50 AM | cin: [7]
01/29 06:05:50 AM | cout: [7]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: ReLU(inplace=True)
01/29 06:05:50 AM | cin: [7]
01/29 06:05:50 AM | cout: [7]
01/29 06:05:50 AM | active
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 06:05:50 AM | cin: [7]
01/29 06:05:50 AM | cout: [8]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 06:05:50 AM | cin: [8]
01/29 06:05:50 AM | cout: [8]
01/29 06:05:50 AM | active
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: ReLU(inplace=True)
01/29 06:05:50 AM | cin: None
01/29 06:05:50 AM | cout: None
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 06:05:50 AM | cin: None
01/29 06:05:50 AM | cout: [9]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 06:05:50 AM | cin: [9]
01/29 06:05:50 AM | cout: [9]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: ReLU(inplace=True)
01/29 06:05:50 AM | cin: [9]
01/29 06:05:50 AM | cout: [9]
01/29 06:05:50 AM | active
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 06:05:50 AM | cin: [9]
01/29 06:05:50 AM | cout: [10]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 06:05:50 AM | cin: [10]
01/29 06:05:50 AM | cout: [10]
01/29 06:05:50 AM | active
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: ReLU(inplace=True)
01/29 06:05:50 AM | cin: None
01/29 06:05:50 AM | cout: None
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 06:05:50 AM | cin: None
01/29 06:05:50 AM | cout: [11]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 06:05:50 AM | cin: [11]
01/29 06:05:50 AM | cout: [11]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: ReLU(inplace=True)
01/29 06:05:50 AM | cin: [11]
01/29 06:05:50 AM | cout: [11]
01/29 06:05:50 AM | active
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 06:05:50 AM | cin: [11]
01/29 06:05:50 AM | cout: [12]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 06:05:50 AM | cin: [12]
01/29 06:05:50 AM | cout: [12]
01/29 06:05:50 AM | active
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: ReLU(inplace=True)
01/29 06:05:50 AM | cin: None
01/29 06:05:50 AM | cout: None
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 06:05:50 AM | cin: None
01/29 06:05:50 AM | cout: [13]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 06:05:50 AM | cin: [13]
01/29 06:05:50 AM | cout: [13]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: ReLU(inplace=True)
01/29 06:05:50 AM | cin: [13]
01/29 06:05:50 AM | cout: [13]
01/29 06:05:50 AM | active
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 06:05:50 AM | cin: [13]
01/29 06:05:50 AM | cout: [14]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 06:05:50 AM | cin: [14]
01/29 06:05:50 AM | cout: [14]
01/29 06:05:50 AM | active
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: ReLU(inplace=True)
01/29 06:05:50 AM | cin: None
01/29 06:05:50 AM | cout: None
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 06:05:50 AM | cin: None
01/29 06:05:50 AM | cout: [15]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 06:05:50 AM | cin: [15]
01/29 06:05:50 AM | cout: [15]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: ReLU(inplace=True)
01/29 06:05:50 AM | cin: [15]
01/29 06:05:50 AM | cout: [15]
01/29 06:05:50 AM | active
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 06:05:50 AM | cin: [15]
01/29 06:05:50 AM | cout: [16]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 06:05:50 AM | cin: [16]
01/29 06:05:50 AM | cout: [16]
01/29 06:05:50 AM | active
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: ReLU(inplace=True)
01/29 06:05:50 AM | cin: None
01/29 06:05:50 AM | cout: None
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 06:05:50 AM | cin: None
01/29 06:05:50 AM | cout: [17]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 06:05:50 AM | cin: [17]
01/29 06:05:50 AM | cout: [17]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: ReLU(inplace=True)
01/29 06:05:50 AM | cin: [17]
01/29 06:05:50 AM | cout: [17]
01/29 06:05:50 AM | active
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 06:05:50 AM | cin: [17]
01/29 06:05:50 AM | cout: [18]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 06:05:50 AM | cin: [18]
01/29 06:05:50 AM | cout: [18]
01/29 06:05:50 AM | active
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: ReLU(inplace=True)
01/29 06:05:50 AM | cin: None
01/29 06:05:50 AM | cout: None
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
01/29 06:05:50 AM | cin: None
01/29 06:05:50 AM | cout: [19]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 06:05:50 AM | cin: [19]
01/29 06:05:50 AM | cout: [19]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: ReLU(inplace=True)
01/29 06:05:50 AM | cin: [19]
01/29 06:05:50 AM | cout: [19]
01/29 06:05:50 AM | active
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 06:05:50 AM | cin: [19]
01/29 06:05:50 AM | cout: [20]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 06:05:50 AM | cin: [20]
01/29 06:05:50 AM | cout: [20]
01/29 06:05:50 AM | active
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: ReLU(inplace=True)
01/29 06:05:50 AM | cin: None
01/29 06:05:50 AM | cout: None
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 06:05:50 AM | cin: None
01/29 06:05:50 AM | cout: [21]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 06:05:50 AM | cin: [21]
01/29 06:05:50 AM | cout: [21]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: ReLU(inplace=True)
01/29 06:05:50 AM | cin: [21]
01/29 06:05:50 AM | cout: [21]
01/29 06:05:50 AM | active
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 06:05:50 AM | cin: [21]
01/29 06:05:50 AM | cout: [22]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 06:05:50 AM | cin: [22]
01/29 06:05:50 AM | cout: [22]
01/29 06:05:50 AM | active
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: ReLU(inplace=True)
01/29 06:05:50 AM | cin: None
01/29 06:05:50 AM | cout: None
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 06:05:50 AM | cin: None
01/29 06:05:50 AM | cout: [23]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 06:05:50 AM | cin: [23]
01/29 06:05:50 AM | cout: [23]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: ReLU(inplace=True)
01/29 06:05:50 AM | cin: [23]
01/29 06:05:50 AM | cout: [23]
01/29 06:05:50 AM | active
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 06:05:50 AM | cin: [23]
01/29 06:05:50 AM | cout: [24]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 06:05:50 AM | cin: [24]
01/29 06:05:50 AM | cout: [24]
01/29 06:05:50 AM | active
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: ReLU(inplace=True)
01/29 06:05:50 AM | cin: None
01/29 06:05:50 AM | cout: None
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 06:05:50 AM | cin: None
01/29 06:05:50 AM | cout: [25]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 06:05:50 AM | cin: [25]
01/29 06:05:50 AM | cout: [25]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: ReLU(inplace=True)
01/29 06:05:50 AM | cin: [25]
01/29 06:05:50 AM | cout: [25]
01/29 06:05:50 AM | active
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 06:05:50 AM | cin: [25]
01/29 06:05:50 AM | cout: [26]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 06:05:50 AM | cin: [26]
01/29 06:05:50 AM | cout: [26]
01/29 06:05:50 AM | active
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: ReLU(inplace=True)
01/29 06:05:50 AM | cin: None
01/29 06:05:50 AM | cout: None
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 06:05:50 AM | cin: None
01/29 06:05:50 AM | cout: [27]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 06:05:50 AM | cin: [27]
01/29 06:05:50 AM | cout: [27]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: ReLU(inplace=True)
01/29 06:05:50 AM | cin: [27]
01/29 06:05:50 AM | cout: [27]
01/29 06:05:50 AM | active
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 06:05:50 AM | cin: [27]
01/29 06:05:50 AM | cout: [28]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 06:05:50 AM | cin: [28]
01/29 06:05:50 AM | cout: [28]
01/29 06:05:50 AM | active
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: ReLU(inplace=True)
01/29 06:05:50 AM | cin: None
01/29 06:05:50 AM | cout: None
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 06:05:50 AM | cin: None
01/29 06:05:50 AM | cout: [29]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 06:05:50 AM | cin: [29]
01/29 06:05:50 AM | cout: [29]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: ReLU(inplace=True)
01/29 06:05:50 AM | cin: [29]
01/29 06:05:50 AM | cout: [29]
01/29 06:05:50 AM | active
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 06:05:50 AM | cin: [29]
01/29 06:05:50 AM | cout: [30]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 06:05:50 AM | cin: [30]
01/29 06:05:50 AM | cout: [30]
01/29 06:05:50 AM | active
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: ReLU(inplace=True)
01/29 06:05:50 AM | cin: None
01/29 06:05:50 AM | cout: None
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 06:05:50 AM | cin: None
01/29 06:05:50 AM | cout: [31]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 06:05:50 AM | cin: [31]
01/29 06:05:50 AM | cout: [31]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: ReLU(inplace=True)
01/29 06:05:50 AM | cin: [31]
01/29 06:05:50 AM | cout: [31]
01/29 06:05:50 AM | active
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 06:05:50 AM | cin: [31]
01/29 06:05:50 AM | cout: [32]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 06:05:50 AM | cin: [32]
01/29 06:05:50 AM | cout: [32]
01/29 06:05:50 AM | active
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: ReLU(inplace=True)
01/29 06:05:50 AM | cin: None
01/29 06:05:50 AM | cout: None
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 06:05:50 AM | cin: None
01/29 06:05:50 AM | cout: [33]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 06:05:50 AM | cin: [33]
01/29 06:05:50 AM | cout: [33]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: ReLU(inplace=True)
01/29 06:05:50 AM | cin: [33]
01/29 06:05:50 AM | cout: [33]
01/29 06:05:50 AM | active
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 06:05:50 AM | cin: [33]
01/29 06:05:50 AM | cout: [34]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 06:05:50 AM | cin: [34]
01/29 06:05:50 AM | cout: [34]
01/29 06:05:50 AM | active
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: ReLU(inplace=True)
01/29 06:05:50 AM | cin: None
01/29 06:05:50 AM | cout: None
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 06:05:50 AM | cin: None
01/29 06:05:50 AM | cout: [35]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 06:05:50 AM | cin: [35]
01/29 06:05:50 AM | cout: [35]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: ReLU(inplace=True)
01/29 06:05:50 AM | cin: [35]
01/29 06:05:50 AM | cout: [35]
01/29 06:05:50 AM | active
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 06:05:50 AM | cin: [35]
01/29 06:05:50 AM | cout: [36]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 06:05:50 AM | cin: [36]
01/29 06:05:50 AM | cout: [36]
01/29 06:05:50 AM | active
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: ReLU(inplace=True)
01/29 06:05:50 AM | cin: None
01/29 06:05:50 AM | cout: None
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
01/29 06:05:50 AM | cin: None
01/29 06:05:50 AM | cout: [37]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 06:05:50 AM | cin: [37]
01/29 06:05:50 AM | cout: [37]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: ReLU(inplace=True)
01/29 06:05:50 AM | cin: [37]
01/29 06:05:50 AM | cout: [37]
01/29 06:05:50 AM | active
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 06:05:50 AM | cin: [37]
01/29 06:05:50 AM | cout: [38]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 06:05:50 AM | cin: [38]
01/29 06:05:50 AM | cout: [38]
01/29 06:05:50 AM | active
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: ReLU(inplace=True)
01/29 06:05:50 AM | cin: None
01/29 06:05:50 AM | cout: None
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 06:05:50 AM | cin: None
01/29 06:05:50 AM | cout: [39]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 06:05:50 AM | cin: [39]
01/29 06:05:50 AM | cout: [39]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: ReLU(inplace=True)
01/29 06:05:50 AM | cin: [39]
01/29 06:05:50 AM | cout: [39]
01/29 06:05:50 AM | active
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 06:05:50 AM | cin: [39]
01/29 06:05:50 AM | cout: [40]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 06:05:50 AM | cin: [40]
01/29 06:05:50 AM | cout: [40]
01/29 06:05:50 AM | active
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: ReLU(inplace=True)
01/29 06:05:50 AM | cin: None
01/29 06:05:50 AM | cout: None
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 06:05:50 AM | cin: None
01/29 06:05:50 AM | cout: [41]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 06:05:50 AM | cin: [41]
01/29 06:05:50 AM | cout: [41]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: ReLU(inplace=True)
01/29 06:05:50 AM | cin: [41]
01/29 06:05:50 AM | cout: [41]
01/29 06:05:50 AM | active
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 06:05:50 AM | cin: [41]
01/29 06:05:50 AM | cout: [42]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 06:05:50 AM | cin: [42]
01/29 06:05:50 AM | cout: [42]
01/29 06:05:50 AM | active
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: ReLU(inplace=True)
01/29 06:05:50 AM | cin: None
01/29 06:05:50 AM | cout: None
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 06:05:50 AM | cin: None
01/29 06:05:50 AM | cout: [43]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 06:05:50 AM | cin: [43]
01/29 06:05:50 AM | cout: [43]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: ReLU(inplace=True)
01/29 06:05:50 AM | cin: [43]
01/29 06:05:50 AM | cout: [43]
01/29 06:05:50 AM | active
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 06:05:50 AM | cin: [43]
01/29 06:05:50 AM | cout: [44]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 06:05:50 AM | cin: [44]
01/29 06:05:50 AM | cout: [44]
01/29 06:05:50 AM | active
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: ReLU(inplace=True)
01/29 06:05:50 AM | cin: None
01/29 06:05:50 AM | cout: None
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 06:05:50 AM | cin: None
01/29 06:05:50 AM | cout: [45]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 06:05:50 AM | cin: [45]
01/29 06:05:50 AM | cout: [45]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: ReLU(inplace=True)
01/29 06:05:50 AM | cin: [45]
01/29 06:05:50 AM | cout: [45]
01/29 06:05:50 AM | active
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 06:05:50 AM | cin: [45]
01/29 06:05:50 AM | cout: [46]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 06:05:50 AM | cin: [46]
01/29 06:05:50 AM | cout: [46]
01/29 06:05:50 AM | active
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: ReLU(inplace=True)
01/29 06:05:50 AM | cin: None
01/29 06:05:50 AM | cout: None
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 06:05:50 AM | cin: None
01/29 06:05:50 AM | cout: [47]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 06:05:50 AM | cin: [47]
01/29 06:05:50 AM | cout: [47]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: ReLU(inplace=True)
01/29 06:05:50 AM | cin: [47]
01/29 06:05:50 AM | cout: [47]
01/29 06:05:50 AM | active
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 06:05:50 AM | cin: [47]
01/29 06:05:50 AM | cout: [48]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 06:05:50 AM | cin: [48]
01/29 06:05:50 AM | cout: [48]
01/29 06:05:50 AM | active
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: ReLU(inplace=True)
01/29 06:05:50 AM | cin: None
01/29 06:05:50 AM | cout: None
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 06:05:50 AM | cin: None
01/29 06:05:50 AM | cout: [49]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 06:05:50 AM | cin: [49]
01/29 06:05:50 AM | cout: [49]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: ReLU(inplace=True)
01/29 06:05:50 AM | cin: [49]
01/29 06:05:50 AM | cout: [49]
01/29 06:05:50 AM | active
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 06:05:50 AM | cin: [49]
01/29 06:05:50 AM | cout: [50]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 06:05:50 AM | cin: [50]
01/29 06:05:50 AM | cout: [50]
01/29 06:05:50 AM | active
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: ReLU(inplace=True)
01/29 06:05:50 AM | cin: None
01/29 06:05:50 AM | cout: None
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 06:05:50 AM | cin: None
01/29 06:05:50 AM | cout: [51]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 06:05:50 AM | cin: [51]
01/29 06:05:50 AM | cout: [51]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: ReLU(inplace=True)
01/29 06:05:50 AM | cin: [51]
01/29 06:05:50 AM | cout: [51]
01/29 06:05:50 AM | active
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 06:05:50 AM | cin: [51]
01/29 06:05:50 AM | cout: [52]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 06:05:50 AM | cin: [52]
01/29 06:05:50 AM | cout: [52]
01/29 06:05:50 AM | active
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: ReLU(inplace=True)
01/29 06:05:50 AM | cin: None
01/29 06:05:50 AM | cout: None
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 06:05:50 AM | cin: None
01/29 06:05:50 AM | cout: [53]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 06:05:50 AM | cin: [53]
01/29 06:05:50 AM | cout: [53]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: ReLU(inplace=True)
01/29 06:05:50 AM | cin: [53]
01/29 06:05:50 AM | cout: [53]
01/29 06:05:50 AM | active
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 06:05:50 AM | cin: [53]
01/29 06:05:50 AM | cout: [54]
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 06:05:50 AM | cin: [54]
01/29 06:05:50 AM | cout: [54]
01/29 06:05:50 AM | active
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: ReLU(inplace=True)
01/29 06:05:50 AM | cin: None
01/29 06:05:50 AM | cout: None
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: AdaptiveAvgPool2d(output_size=(1, 1))
01/29 06:05:50 AM | cin: None
01/29 06:05:50 AM | cout: None
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | -----
01/29 06:05:50 AM | module: Linear(in_features=64, out_features=10, bias=True)
01/29 06:05:50 AM | cin: None
01/29 06:05:50 AM | cout: None
01/29 06:05:50 AM | inactive
01/29 06:05:50 AM | Used masks: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54]
01/29 06:05:50 AM | 55 unique masks in total
01/29 06:05:50 AM | === Batch 1/250
01/29 06:05:51 AM | loss = 0.046 + 4.444 + 0.040 = 4.530
01/29 06:05:52 AM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.83  0.94  0.83  0.83  0.83  0.83  0.83  0.94  0.83  0.83  0.83  0.83 ]
[ 0.94  0.83  0.83  0.94  0.94  0.94  0.83  0.83  0.83  0.94  0.94  0.94 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.94  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.94  0.94  0.83  0.83  0.94  0.83  0.83  0.83  0.94 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.94  0.94  0.83  0.83  0.94  0.83  0.83  0.83  0.94 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.94  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.94  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.94  0.83  0.83  0.94  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.94  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.94 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.94  0.83  0.83  0.94  0.83  0.83  0.83  0.94  0.83  0.83  0.83 ]
[ 0.94  0.83  0.83  0.94  0.83  0.83  0.83  0.94  0.94  0.83  0.83  0.83 ]
[ 0.83  0.94  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.94  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.94  0.83  0.83  0.94  0.94  0.83  0.94  0.83  0.94  0.83  0.83  0.94 ]
[ 0.83  0.83  0.83  0.94  0.83  0.83  0.83  0.83  0.83  0.94  0.94  0.94 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.94  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.94  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.94  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.94  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.94 ]
[ 0.83  0.83  0.94  0.83  0.83  0.83  0.83  0.83  0.83  0.94  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.94  0.83  0.83  0.83  0.83  0.83  0.94  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.94  0.94  0.83  0.94  0.83  0.83  0.83  0.94  0.94  0.83  0.83  0.83 ]
[ 0.83  0.83  0.94  0.94  0.83  0.83  0.94  0.83  0.83  0.94  0.94  0.94 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.94  0.83  0.83 ]
[ 0.84  0.83  0.83  0.83  0.83  0.83  0.94  0.83  0.83  0.83  0.83  0.94 ]
[ 0.83  0.83  0.83  0.83  0.94  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.94  0.83  0.83  0.94  0.83  0.94  0.83  0.83  0.83  0.83  0.94 ]
[ 0.83  0.94  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.94  0.83  0.94  0.83  0.83  0.94  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.94 ]
[ 0.83  0.94  0.83  0.94  0.83  0.83  0.83  0.83  0.83  0.83  0.94  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.94  0.83  0.83  0.83  0.83 ]
[ 0.83  0.94  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.94  0.83  0.83 ]
[ 0.83  0.83  0.83  0.94  0.83  0.83  0.83  0.83  0.94  0.83  0.94  0.83 ]
[ 0.83  0.83  0.94  0.83  0.83  0.94  0.83  0.83  0.83  0.83  0.83  0.94 ]
[ 0.83  0.83  0.83  0.83  0.94  0.83  0.83  0.83  0.83  0.83  0.83  0.94 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.94  0.83  0.94 ]
[ 0.94  0.83  0.83  0.83  0.94  0.83  0.94  0.83  0.83  0.83  0.94  0.83 ]
[ 0.94  0.83  0.94  0.94  0.83  0.83  0.94  0.83  0.83  0.94  0.83  0.94 ]

01/29 06:05:52 AM | === Batch 2/250
01/29 06:05:53 AM | loss = 0.803 + 3.668 + 0.060 = 4.530
01/29 06:05:54 AM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.73  0.97  0.75  0.75  0.77  0.82  0.73  0.97  0.73  0.74  0.88  0.84 ]
[ 0.92  0.74  0.75  0.97  0.96  0.96  0.88  0.87  0.73  0.97  0.93  0.96 ]
[ 0.78  0.78  0.73  0.74  0.75  0.73  0.77  0.97  0.74  0.73  0.86  0.74 ]
[ 0.75  0.86  0.75  0.96  0.97  0.88  0.88  0.97  0.76  0.74  0.88  0.96 ]
[ 0.87  0.87  0.86  0.85  0.88  0.73  0.73  0.73  0.73  0.75  0.73  0.75 ]
[ 0.87  0.80  0.88  0.97  0.94  0.88  0.88  0.97  0.88  0.88  0.74  0.96 ]
[ 0.74  0.83  0.78  0.86  0.86  0.73  0.75  0.73  0.92  0.87  0.73  0.80 ]
[ 0.75  0.82  0.89  0.97  0.75  0.73  0.88  0.73  0.74  0.87  0.74  0.88 ]
[ 0.74  0.74  0.73  0.73  0.84  0.74  0.74  0.75  0.73  0.74  0.73  0.77 ]
[ 0.75  0.83  0.88  0.75  0.97  0.74  0.87  0.97  0.88  0.88  0.73  0.81 ]
[ 0.74  0.78  0.73  0.73  0.74  0.74  0.87  0.74  0.75  0.73  0.86  0.79 ]
[ 0.75  0.88  0.87  0.97  0.74  0.74  0.88  0.73  0.88  0.87  0.74  0.97 ]
[ 0.76  0.78  0.79  0.78  0.73  0.77  0.73  0.80  0.73  0.73  0.87  0.75 ]
[ 0.75  0.95  0.88  0.79  0.97  0.75  0.88  0.74  0.96  0.73  0.88  0.87 ]
[ 0.93  0.84  0.74  0.97  0.76  0.87  0.87  0.94  0.96  0.73  0.81  0.80 ]
[ 0.76  0.97  0.88  0.73  0.75  0.75  0.88  0.74  0.88  0.84  0.88  0.88 ]
[ 0.75  0.80  0.73  0.85  0.86  0.73  0.84  0.73  0.73  0.73  0.85  0.75 ]
[ 0.75  0.93  0.88  0.79  0.88  0.74  0.83  0.73  0.88  0.84  0.87  0.81 ]
[ 0.97  0.88  0.88  0.97  0.96  0.74  0.96  0.81  0.96  0.89  0.89  0.97 ]
[ 0.73  0.76  0.88  0.92  0.86  0.74  0.88  0.88  0.73  0.97  0.95  0.96 ]
[ 0.73  0.74  0.73  0.82  0.80  0.73  0.87  0.73  0.75  0.86  0.84  0.83 ]
[ 0.74  0.76  0.86  0.93  0.88  0.75  0.76  0.88  0.74  0.73  0.73  0.74 ]
[ 0.74  0.87  0.75  0.75  0.75  0.80  0.79  0.87  0.73  0.91  0.75  0.85 ]
[ 0.74  0.75  0.88  0.74  0.88  0.75  0.76  0.88  0.83  0.83  0.73  0.75 ]
[ 0.87  0.88  0.73  0.74  0.73  0.73  0.83  0.88  0.75  0.82  0.87  0.74 ]
[ 0.73  0.75  0.88  0.74  0.83  0.75  0.76  0.73  0.87  0.87  0.74  0.88 ]
[ 0.83  0.73  0.74  0.74  0.74  0.74  0.85  0.73  0.88  0.81  0.85  0.74 ]
[ 0.75  0.75  0.86  0.94  0.88  0.75  0.74  0.87  0.87  0.74  0.73  0.88 ]
[ 0.74  0.73  0.73  0.78  0.73  0.75  0.87  0.74  0.76  0.73  0.76  0.73 ]
[ 0.75  0.75  0.88  0.92  0.88  0.75  0.73  0.88  0.73  0.74  0.74  0.97 ]
[ 0.73  0.73  0.94  0.85  0.73  0.81  0.74  0.86  0.86  0.97  0.76  0.86 ]
[ 0.74  0.74  0.86  0.75  0.88  0.74  0.86  0.73  0.77  0.74  0.75  0.87 ]
[ 0.73  0.74  0.75  0.87  0.73  0.73  0.74  0.73  0.87  0.76  0.73  0.74 ]
[ 0.75  0.74  0.87  0.75  0.74  0.74  0.74  0.73  0.74  0.74  0.74  0.73 ]
[ 0.97  0.83  0.75  0.73  0.75  0.77  0.93  0.73  0.73  0.86  0.87  0.74 ]
[ 0.74  0.75  0.73  0.73  0.88  0.74  0.74  0.74  0.76  0.88  0.75  0.87 ]
[ 0.97  0.97  0.88  0.96  0.87  0.88  0.88  0.97  0.97  0.75  0.76  0.75 ]
[ 0.76  0.88  0.92  0.94  0.79  0.73  0.92  0.73  0.88  0.97  0.97  0.97 ]
[ 0.80  0.86  0.86  0.87  0.88  0.78  0.77  0.87  0.88  0.93  0.75  0.74 ]
[ 0.77  0.88  0.76  0.75  0.85  0.88  0.92  0.87  0.88  0.74  0.73  0.96 ]
[ 0.78  0.88  0.73  0.74  0.94  0.73  0.73  0.87  0.74  0.78  0.86  0.89 ]
[ 0.76  0.93  0.75  0.75  0.93  0.79  0.97  0.88  0.73  0.73  0.88  0.97 ]
[ 0.83  0.95  0.82  0.85  0.73  0.87  0.77  0.84  0.88  0.85  0.75  0.75 ]
[ 0.76  0.92  0.76  0.91  0.73  0.87  0.92  0.81  0.85  0.73  0.83  0.74 ]
[ 0.75  0.88  0.75  0.81  0.86  0.73  0.74  0.74  0.74  0.75  0.86  0.93 ]
[ 0.75  0.92  0.76  0.92  0.84  0.74  0.88  0.87  0.87  0.76  0.96  0.75 ]
[ 0.88  0.73  0.74  0.75  0.74  0.73  0.77  0.96  0.88  0.87  0.87  0.74 ]
[ 0.79  0.92  0.88  0.84  0.81  0.87  0.73  0.76  0.84  0.94  0.76  0.74 ]
[ 0.73  0.75  0.73  0.92  0.73  0.74  0.83  0.74  0.92  0.74  0.93  0.73 ]
[ 0.87  0.73  0.97  0.85  0.87  0.94  0.88  0.86  0.88  0.74  0.85  0.92 ]
[ 0.75  0.87  0.88  0.74  0.92  0.80  0.87  0.82  0.76  0.88  0.73  0.97 ]
[ 0.88  0.88  0.73  0.86  0.88  0.76  0.76  0.87  0.73  0.95  0.74  0.97 ]
[ 0.97  0.75  0.75  0.88  0.92  0.75  0.92  0.87  0.85  0.77  0.91  0.75 ]
[ 0.91  0.86  0.92  0.92  0.88  0.73  0.91  0.88  0.88  0.94  0.88  0.97 ]

01/29 06:05:54 AM | === Batch 3/250
01/29 06:05:54 AM | loss = 0.586 + 3.152 + 0.072 = 3.811
01/29 06:05:55 AM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.60  0.96  0.64  0.78  0.67  0.79  0.60  0.98  0.60  0.64  0.91  0.79 ]
[ 0.89  0.67  0.64  0.98  0.98  0.97  0.88  0.91  0.65  0.98  0.94  0.97 ]
[ 0.70  0.81  0.61  0.76  0.76  0.62  0.76  0.98  0.61  0.61  0.85  0.64 ]
[ 0.66  0.84  0.72  0.97  0.98  0.91  0.90  0.98  0.71  0.65  0.91  0.97 ]
[ 0.87  0.87  0.84  0.81  0.91  0.63  0.60  0.63  0.60  0.64  0.60  0.78 ]
[ 0.91  0.74  0.92  0.98  0.95  0.89  0.89  0.96  0.90  0.90  0.63  0.97 ]
[ 0.62  0.79  0.74  0.83  0.90  0.60  0.70  0.72  0.92  0.89  0.62  0.73 ]
[ 0.70  0.76  0.92  0.98  0.71  0.61  0.92  0.70  0.63  0.85  0.62  0.90 ]
[ 0.63  0.62  0.60  0.62  0.84  0.63  0.71  0.63  0.60  0.72  0.62  0.71 ]
[ 0.67  0.77  0.92  0.64  0.98  0.63  0.90  0.97  0.89  0.88  0.61  0.75 ]
[ 0.61  0.69  0.60  0.61  0.70  0.63  0.89  0.74  0.70  0.60  0.90  0.71 ]
[ 0.67  0.89  0.91  0.98  0.75  0.62  0.89  0.61  0.90  0.85  0.67  0.97 ]
[ 0.66  0.75  0.83  0.68  0.79  0.83  0.63  0.84  0.61  0.62  0.91  0.66 ]
[ 0.66  0.96  0.92  0.72  0.96  0.65  0.88  0.66  0.97  0.61  0.91  0.89 ]
[ 0.90  0.86  0.61  0.98  0.67  0.90  0.89  0.93  0.98  0.60  0.75  0.75 ]
[ 0.68  0.98  0.92  0.63  0.79  0.64  0.90  0.62  0.88  0.78  0.90  0.91 ]
[ 0.63  0.75  0.61  0.88  0.87  0.62  0.81  0.65  0.60  0.60  0.83  0.63 ]
[ 0.68  0.93  0.91  0.71  0.92  0.63  0.79  0.60  0.88  0.79  0.87  0.74 ]
[ 0.97  0.87  0.92  0.98  0.97  0.78  0.97  0.74  0.96  0.90  0.92  0.97 ]
[ 0.60  0.76  0.92  0.93  0.88  0.65  0.92  0.91  0.76  0.97  0.96  0.98 ]
[ 0.62  0.62  0.60  0.76  0.76  0.60  0.87  0.60  0.70  0.84  0.80  0.82 ]
[ 0.76  0.77  0.89  0.93  0.91  0.71  0.79  0.91  0.64  0.62  0.60  0.61 ]
[ 0.70  0.86  0.73  0.72  0.76  0.73  0.71  0.86  0.63  0.89  0.72  0.82 ]
[ 0.71  0.77  0.92  0.78  0.89  0.72  0.81  0.91  0.85  0.78  0.71  0.68 ]
[ 0.92  0.88  0.62  0.63  0.67  0.60  0.77  0.89  0.67  0.76  0.88  0.63 ]
[ 0.73  0.77  0.92  0.70  0.82  0.71  0.70  0.67  0.89  0.83  0.64  0.90 ]
[ 0.76  0.62  0.65  0.62  0.65  0.73  0.89  0.60  0.88  0.75  0.82  0.63 ]
[ 0.71  0.78  0.91  0.94  0.89  0.73  0.69  0.89  0.86  0.75  0.61  0.91 ]
[ 0.63  0.63  0.61  0.70  0.66  0.64  0.87  0.61  0.67  0.64  0.66  0.60 ]
[ 0.71  0.75  0.92  0.94  0.91  0.70  0.76  0.92  0.60  0.74  0.68  0.97 ]
[ 0.60  0.60  0.92  0.82  0.60  0.74  0.61  0.84  0.89  0.96  0.67  0.83 ]
[ 0.66  0.77  0.89  0.73  0.91  0.63  0.84  0.67  0.67  0.77  0.72  0.86 ]
[ 0.60  0.62  0.70  0.90  0.76  0.61  0.67  0.60  0.88  0.65  0.60  0.65 ]
[ 0.73  0.74  0.91  0.76  0.67  0.72  0.77  0.75  0.64  0.72  0.61  0.62 ]
[ 0.98  0.84  0.73  0.61  0.64  0.78  0.90  0.60  0.62  0.86  0.88  0.63 ]
[ 0.73  0.75  0.60  0.75  0.92  0.65  0.73  0.62  0.65  0.89  0.64  0.90 ]
[ 0.98  0.97  0.91  0.98  0.87  0.92  0.91  0.96  0.98  0.78  0.77  0.65 ]
[ 0.70  0.91  0.91  0.93  0.84  0.60  0.90  0.60  0.90  0.98  0.97  0.97 ]
[ 0.76  0.90  0.91  0.85  0.89  0.69  0.68  0.89  0.90  0.91  0.63  0.73 ]
[ 0.75  0.91  0.71  0.70  0.88  0.87  0.89  0.84  0.89  0.62  0.77  0.96 ]
[ 0.70  0.90  0.60  0.74  0.93  0.70  0.60  0.86  0.62  0.79  0.87  0.91 ]
[ 0.73  0.92  0.66  0.68  0.89  0.84  0.98  0.91  0.79  0.61  0.90  0.98 ]
[ 0.87  0.94  0.77  0.85  0.60  0.90  0.68  0.86  0.86  0.80  0.68  0.71 ]
[ 0.78  0.89  0.72  0.88  0.60  0.91  0.90  0.75  0.83  0.64  0.77  0.68 ]
[ 0.74  0.90  0.76  0.78  0.90  0.60  0.77  0.61  0.68  0.65  0.88  0.93 ]
[ 0.64  0.89  0.81  0.88  0.85  0.79  0.90  0.89  0.88  0.79  0.97  0.67 ]
[ 0.86  0.60  0.77  0.65  0.66  0.62  0.75  0.96  0.88  0.87  0.90  0.61 ]
[ 0.71  0.90  0.90  0.88  0.74  0.91  0.79  0.66  0.78  0.92  0.65  0.70 ]
[ 0.61  0.64  0.60  0.90  0.79  0.62  0.80  0.61  0.89  0.62  0.90  0.60 ]
[ 0.87  0.79  0.98  0.86  0.89  0.95  0.91  0.84  0.89  0.79  0.80  0.88 ]
[ 0.67  0.91  0.91  0.77  0.89  0.73  0.91  0.79  0.72  0.92  0.77  0.96 ]
[ 0.90  0.90  0.61  0.89  0.92  0.81  0.73  0.90  0.77  0.94  0.74  0.97 ]
[ 0.98  0.64  0.65  0.88  0.89  0.79  0.89  0.90  0.89  0.69  0.87  0.71 ]
[ 0.88  0.84  0.94  0.90  0.92  0.61  0.88  0.89  0.86  0.92  0.87  0.97 ]

01/29 06:05:55 AM | === Batch 4/250
01/29 06:05:56 AM | loss = 0.586 + 2.596 + 0.086 = 3.267
01/29 06:05:57 AM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.46  0.95  0.51  0.78  0.55  0.84  0.46  0.99  0.46  0.57  0.92  0.70 ]
[ 0.90  0.56  0.62  0.98  0.99  0.97  0.86  0.90  0.68  0.98  0.96  0.98 ]
[ 0.59  0.80  0.46  0.77  0.81  0.48  0.75  0.99  0.57  0.48  0.81  0.52 ]
[ 0.58  0.81  0.64  0.97  0.99  0.91  0.90  0.99  0.71  0.53  0.93  0.97 ]
[ 0.84  0.85  0.82  0.75  0.93  0.54  0.46  0.50  0.46  0.69  0.46  0.82 ]
[ 0.94  0.63  0.93  0.98  0.95  0.89  0.88  0.95  0.91  0.91  0.56  0.97 ]
[ 0.51  0.71  0.66  0.78  0.92  0.45  0.74  0.65  0.90  0.88  0.50  0.63 ]
[ 0.70  0.71  0.94  0.98  0.70  0.49  0.93  0.63  0.50  0.83  0.55  0.91 ]
[ 0.60  0.53  0.46  0.50  0.81  0.50  0.63  0.49  0.45  0.68  0.48  0.69 ]
[ 0.68  0.73  0.94  0.51  0.99  0.53  0.90  0.98  0.89  0.87  0.49  0.65 ]
[ 0.48  0.59  0.46  0.47  0.74  0.64  0.91  0.80  0.67  0.46  0.91  0.60 ]
[ 0.68  0.88  0.92  0.98  0.81  0.55  0.88  0.47  0.91  0.81  0.57  0.96 ]
[ 0.61  0.77  0.89  0.65  0.81  0.84  0.52  0.88  0.46  0.50  0.94  0.55 ]
[ 0.66  0.96  0.94  0.61  0.95  0.64  0.87  0.58  0.97  0.46  0.93  0.89 ]
[ 0.84  0.89  0.47  0.98  0.71  0.89  0.89  0.94  0.98  0.45  0.67  0.66 ]
[ 0.68  0.98  0.94  0.50  0.81  0.53  0.91  0.47  0.86  0.71  0.92  0.92 ]
[ 0.58  0.66  0.48  0.92  0.84  0.49  0.74  0.55  0.46  0.46  0.80  0.52 ]
[ 0.69  0.91  0.92  0.60  0.94  0.60  0.71  0.46  0.86  0.71  0.90  0.66 ]
[ 0.97  0.87  0.94  0.98  0.98  0.83  0.96  0.64  0.95  0.91  0.94  0.97 ]
[ 0.46  0.79  0.95  0.93  0.89  0.56  0.94  0.91  0.82  0.98  0.98  0.98 ]
[ 0.49  0.48  0.45  0.67  0.79  0.46  0.83  0.46  0.66  0.81  0.72  0.78 ]
[ 0.76  0.81  0.91  0.93  0.93  0.73  0.80  0.91  0.59  0.61  0.45  0.47 ]
[ 0.66  0.83  0.70  0.69  0.79  0.63  0.66  0.83  0.51  0.85  0.72  0.75 ]
[ 0.69  0.81  0.93  0.84  0.88  0.73  0.84  0.93  0.89  0.71  0.75  0.59 ]
[ 0.94  0.87  0.50  0.65  0.65  0.46  0.69  0.89  0.61  0.67  0.87  0.50 ]
[ 0.70  0.81  0.94  0.64  0.86  0.71  0.60  0.57  0.87  0.85  0.57  0.90 ]
[ 0.68  0.49  0.55  0.49  0.53  0.74  0.89  0.47  0.85  0.64  0.77  0.50 ]
[ 0.65  0.83  0.91  0.93  0.88  0.74  0.60  0.90  0.82  0.80  0.54  0.93 ]
[ 0.49  0.50  0.47  0.60  0.58  0.52  0.87  0.49  0.54  0.52  0.53  0.46 ]
[ 0.69  0.80  0.93  0.94  0.93  0.68  0.76  0.93  0.46  0.80  0.65  0.98 ]
[ 0.46  0.45  0.89  0.75  0.46  0.64  0.47  0.81  0.89  0.96  0.55  0.76 ]
[ 0.58  0.80  0.91  0.73  0.94  0.50  0.81  0.65  0.55  0.82  0.71  0.83 ]
[ 0.46  0.48  0.61  0.92  0.80  0.46  0.58  0.46  0.88  0.52  0.45  0.55 ]
[ 0.70  0.77  0.93  0.71  0.59  0.75  0.80  0.72  0.66  0.76  0.47  0.49 ]
[ 0.99  0.85  0.72  0.48  0.51  0.83  0.88  0.49  0.49  0.84  0.87  0.51 ]
[ 0.69  0.76  0.46  0.72  0.94  0.58  0.67  0.62  0.54  0.87  0.51  0.93 ]
[ 0.98  0.96  0.93  0.98  0.84  0.95  0.92  0.95  0.98  0.78  0.82  0.54 ]
[ 0.73  0.92  0.90  0.95  0.87  0.46  0.88  0.46  0.88  0.98  0.98  0.98 ]
[ 0.68  0.90  0.92  0.82  0.89  0.58  0.73  0.89  0.90  0.88  0.65  0.71 ]
[ 0.80  0.92  0.72  0.74  0.87  0.88  0.87  0.79  0.87  0.49  0.83  0.97 ]
[ 0.62  0.91  0.46  0.67  0.93  0.62  0.46  0.86  0.54  0.78  0.87  0.92 ]
[ 0.75  0.92  0.61  0.72  0.88  0.89  0.99  0.92  0.85  0.62  0.92  0.99 ]
[ 0.92  0.94  0.78  0.83  0.46  0.92  0.57  0.90  0.81  0.72  0.68  0.68 ]
[ 0.83  0.88  0.70  0.89  0.47  0.94  0.89  0.66  0.79  0.63  0.79  0.59 ]
[ 0.76  0.92  0.76  0.71  0.93  0.46  0.80  0.55  0.62  0.53  0.90  0.93 ]
[ 0.52  0.88  0.78  0.87  0.84  0.82  0.91  0.91  0.89  0.85  0.98  0.57 ]
[ 0.83  0.46  0.74  0.63  0.71  0.60  0.78  0.95  0.88  0.85  0.92  0.60 ]
[ 0.60  0.92  0.90  0.88  0.73  0.94  0.84  0.54  0.70  0.89  0.64  0.63 ]
[ 0.50  0.52  0.47  0.88  0.84  0.63  0.83  0.47  0.84  0.52  0.85  0.46 ]
[ 0.84  0.75  0.98  0.89  0.91  0.94  0.92  0.82  0.89  0.80  0.79  0.86 ]
[ 0.65  0.92  0.91  0.81  0.85  0.75  0.94  0.80  0.77  0.95  0.75  0.96 ]
[ 0.89  0.91  0.48  0.89  0.95  0.84  0.75  0.91  0.82  0.92  0.76  0.98 ]
[ 0.98  0.51  0.56  0.87  0.83  0.85  0.89  0.93  0.90  0.60  0.81  0.63 ]
[ 0.87  0.79  0.92  0.88  0.94  0.46  0.86  0.90  0.81  0.90  0.86  0.97 ]

01/29 06:05:57 AM | === Batch 5/250
01/29 06:05:57 AM | loss = 1.443 + 2.014 + 0.096 = 3.553
01/29 06:05:58 AM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.32  0.93  0.37  0.77  0.42  0.88  0.32  0.99  0.32  0.52  0.90  0.59 ]
[ 0.92  0.44  0.60  0.99  0.99  0.96  0.83  0.86  0.75  0.98  0.97  0.98 ]
[ 0.46  0.75  0.32  0.75  0.80  0.34  0.69  0.99  0.62  0.34  0.75  0.41 ]
[ 0.48  0.82  0.54  0.97  0.99  0.90  0.91  0.99  0.75  0.49  0.94  0.97 ]
[ 0.80  0.79  0.78  0.66  0.92  0.59  0.32  0.41  0.32  0.74  0.36  0.83 ]
[ 0.96  0.55  0.93  0.98  0.96  0.88  0.87  0.92  0.91  0.90  0.59  0.98 ]
[ 0.42  0.66  0.55  0.70  0.92  0.31  0.75  0.68  0.89  0.86  0.38  0.58 ]
[ 0.71  0.72  0.94  0.99  0.72  0.37  0.94  0.53  0.48  0.77  0.46  0.92 ]
[ 0.62  0.58  0.32  0.37  0.74  0.36  0.52  0.35  0.31  0.60  0.55  0.75 ]
[ 0.73  0.71  0.94  0.37  0.99  0.50  0.92  0.98  0.88  0.84  0.39  0.54 ]
[ 0.35  0.51  0.32  0.33  0.72  0.69  0.94  0.86  0.67  0.32  0.90  0.47 ]
[ 0.72  0.88  0.93  0.98  0.86  0.58  0.89  0.35  0.90  0.75  0.50  0.96 ]
[ 0.66  0.76  0.92  0.56  0.78  0.81  0.53  0.91  0.32  0.43  0.94  0.45 ]
[ 0.67  0.95  0.95  0.49  0.94  0.69  0.85  0.49  0.97  0.33  0.94  0.87 ]
[ 0.77  0.91  0.36  0.98  0.76  0.88  0.89  0.96  0.98  0.32  0.55  0.55 ]
[ 0.70  0.99  0.95  0.37  0.77  0.40  0.92  0.36  0.83  0.61  0.93  0.93 ]
[ 0.52  0.56  0.35  0.94  0.78  0.35  0.65  0.47  0.32  0.32  0.74  0.39 ]
[ 0.74  0.88  0.92  0.47  0.95  0.63  0.62  0.33  0.83  0.60  0.90  0.57 ]
[ 0.96  0.89  0.95  0.98  0.98  0.88  0.95  0.52  0.93  0.91  0.96  0.97 ]
[ 0.32  0.82  0.96  0.94  0.90  0.44  0.95  0.91  0.87  0.98  0.98  0.99 ]
[ 0.38  0.35  0.31  0.56  0.77  0.35  0.78  0.38  0.69  0.76  0.66  0.71 ]
[ 0.78  0.84  0.92  0.94  0.95  0.79  0.83  0.91  0.59  0.59  0.38  0.33 ]
[ 0.63  0.84  0.67  0.71  0.82  0.51  0.58  0.78  0.41  0.79  0.71  0.66 ]
[ 0.72  0.85  0.94  0.88  0.89  0.77  0.87  0.93  0.92  0.60  0.81  0.50 ]
[ 0.95  0.86  0.43  0.72  0.68  0.31  0.63  0.88  0.64  0.55  0.84  0.45 ]
[ 0.72  0.84  0.95  0.64  0.89  0.71  0.52  0.57  0.87  0.87  0.57  0.88 ]
[ 0.65  0.38  0.52  0.35  0.40  0.76  0.86  0.33  0.81  0.53  0.69  0.37 ]
[ 0.62  0.87  0.90  0.94  0.89  0.77  0.52  0.90  0.75  0.85  0.55  0.95 ]
[ 0.41  0.39  0.34  0.58  0.58  0.40  0.85  0.37  0.48  0.40  0.39  0.32 ]
[ 0.66  0.83  0.94  0.95  0.95  0.70  0.76  0.94  0.33  0.84  0.70  0.99 ]
[ 0.32  0.31  0.88  0.75  0.32  0.53  0.33  0.77  0.88  0.94  0.42  0.74 ]
[ 0.48  0.84  0.92  0.73  0.95  0.44  0.77  0.63  0.43  0.87  0.75  0.85 ]
[ 0.32  0.43  0.54  0.94  0.85  0.33  0.49  0.32  0.90  0.42  0.31  0.52 ]
[ 0.68  0.80  0.94  0.72  0.62  0.79  0.84  0.75  0.72  0.82  0.50  0.47 ]
[ 0.99  0.84  0.74  0.34  0.38  0.86  0.85  0.54  0.36  0.87  0.83  0.40 ]
[ 0.69  0.78  0.32  0.73  0.96  0.51  0.63  0.67  0.49  0.85  0.57  0.95 ]
[ 0.99  0.96  0.95  0.98  0.83  0.96  0.92  0.94  0.98  0.82  0.86  0.58 ]
[ 0.77  0.92  0.91  0.95  0.89  0.32  0.89  0.32  0.88  0.98  0.98  0.98 ]
[ 0.67  0.89  0.93  0.84  0.87  0.45  0.80  0.91  0.88  0.85  0.71  0.69 ]
[ 0.85  0.93  0.76  0.74  0.86  0.88  0.89  0.79  0.88  0.39  0.85  0.97 ]
[ 0.51  0.91  0.32  0.64  0.93  0.62  0.32  0.84  0.45  0.79  0.84  0.93 ]
[ 0.77  0.92  0.60  0.75  0.87  0.90  0.99  0.94  0.85  0.63  0.93  0.99 ]
[ 0.94  0.95  0.78  0.81  0.35  0.91  0.47  0.90  0.78  0.63  0.67  0.63 ]
[ 0.87  0.90  0.67  0.90  0.46  0.95  0.90  0.58  0.72  0.62  0.83  0.65 ]
[ 0.76  0.93  0.73  0.65  0.94  0.32  0.82  0.56  0.63  0.41  0.91  0.94 ]
[ 0.41  0.90  0.79  0.83  0.86  0.86  0.91  0.93  0.91  0.81  0.98  0.63 ]
[ 0.80  0.31  0.73  0.66  0.68  0.62  0.78  0.95  0.86  0.82  0.93  0.67 ]
[ 0.53  0.94  0.90  0.88  0.76  0.96  0.89  0.41  0.62  0.84  0.66  0.69 ]
[ 0.39  0.41  0.35  0.88  0.85  0.55  0.86  0.33  0.79  0.47  0.77  0.32 ]
[ 0.77  0.67  0.98  0.90  0.93  0.95  0.92  0.76  0.86  0.78  0.82  0.81 ]
[ 0.57  0.94  0.92  0.79  0.87  0.74  0.94  0.79  0.82  0.97  0.68  0.95 ]
[ 0.88  0.90  0.37  0.88  0.96  0.85  0.79  0.91  0.81  0.88  0.81  0.97 ]
[ 0.98  0.53  0.48  0.83  0.76  0.82  0.89  0.93  0.89  0.50  0.80  0.54 ]
[ 0.87  0.71  0.92  0.85  0.95  0.34  0.85  0.91  0.79  0.85  0.83  0.96 ]

01/29 06:05:58 AM | === Batch 6/250
01/29 06:05:59 AM | loss = 0.454 + 1.512 + 0.091 = 2.057
01/29 06:05:59 AM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.20  0.90  0.25  0.73  0.30  0.90  0.20  0.99  0.20  0.46  0.89  0.47 ]
[ 0.94  0.32  0.54  0.99  0.99  0.95  0.82  0.81  0.79  0.98  0.97  0.98 ]
[ 0.33  0.68  0.21  0.70  0.79  0.23  0.59  0.99  0.68  0.22  0.68  0.30 ]
[ 0.53  0.84  0.42  0.97  1.00  0.89  0.92  0.99  0.78  0.49  0.94  0.97 ]
[ 0.74  0.71  0.76  0.54  0.90  0.62  0.20  0.32  0.20  0.78  0.26  0.82 ]
[ 0.97  0.45  0.92  0.98  0.97  0.86  0.87  0.88  0.90  0.87  0.65  0.98 ]
[ 0.32  0.64  0.43  0.60  0.92  0.20  0.73  0.73  0.90  0.81  0.26  0.59 ]
[ 0.74  0.73  0.94  0.99  0.68  0.27  0.95  0.41  0.46  0.68  0.35  0.92 ]
[ 0.57  0.65  0.20  0.25  0.65  0.25  0.43  0.23  0.20  0.56  0.63  0.79 ]
[ 0.78  0.68  0.95  0.26  1.00  0.46  0.93  0.98  0.87  0.78  0.32  0.42 ]
[ 0.23  0.45  0.20  0.22  0.66  0.75  0.96  0.90  0.64  0.20  0.89  0.34 ]
[ 0.75  0.88  0.94  0.99  0.90  0.60  0.91  0.24  0.90  0.66  0.47  0.97 ]
[ 0.69  0.72  0.93  0.45  0.73  0.77  0.51  0.94  0.21  0.36  0.95  0.35 ]
[ 0.69  0.95  0.96  0.37  0.93  0.73  0.83  0.39  0.97  0.21  0.95  0.84 ]
[ 0.71  0.92  0.26  0.99  0.79  0.88  0.90  0.96  0.98  0.21  0.45  0.42 ]
[ 0.72  0.99  0.96  0.25  0.70  0.28  0.92  0.25  0.80  0.49  0.93  0.93 ]
[ 0.43  0.44  0.23  0.95  0.69  0.23  0.53  0.39  0.20  0.20  0.64  0.27 ]
[ 0.77  0.86  0.92  0.34  0.95  0.66  0.52  0.22  0.80  0.48  0.89  0.45 ]
[ 0.96  0.92  0.95  0.98  0.98  0.91  0.95  0.39  0.93  0.92  0.96  0.97 ]
[ 0.20  0.82  0.97  0.96  0.89  0.39  0.96  0.90  0.91  0.98  0.99  0.99 ]
[ 0.28  0.24  0.20  0.46  0.72  0.25  0.71  0.35  0.74  0.71  0.59  0.62 ]
[ 0.83  0.85  0.91  0.95  0.96  0.84  0.85  0.91  0.59  0.53  0.30  0.23 ]
[ 0.57  0.82  0.67  0.72  0.84  0.39  0.57  0.69  0.30  0.73  0.66  0.54 ]
[ 0.77  0.87  0.93  0.92  0.90  0.82  0.89  0.93  0.94  0.50  0.85  0.47 ]
[ 0.96  0.84  0.39  0.76  0.74  0.20  0.59  0.85  0.69  0.42  0.82  0.46 ]
[ 0.78  0.86  0.96  0.66  0.91  0.73  0.42  0.57  0.85  0.87  0.57  0.89 ]
[ 0.57  0.33  0.52  0.23  0.34  0.79  0.82  0.23  0.74  0.40  0.62  0.26 ]
[ 0.65  0.88  0.87  0.94  0.90  0.80  0.43  0.90  0.66  0.87  0.55  0.96 ]
[ 0.35  0.29  0.23  0.53  0.59  0.28  0.82  0.26  0.39  0.29  0.27  0.20 ]
[ 0.70  0.85  0.94  0.96  0.96  0.73  0.77  0.94  0.22  0.87  0.76  0.99 ]
[ 0.23  0.20  0.89  0.74  0.21  0.41  0.22  0.73  0.86  0.94  0.30  0.77 ]
[ 0.43  0.85  0.92  0.70  0.96  0.38  0.73  0.57  0.33  0.90  0.80  0.88 ]
[ 0.20  0.38  0.54  0.95  0.88  0.21  0.38  0.21  0.92  0.34  0.20  0.47 ]
[ 0.71  0.80  0.94  0.77  0.67  0.82  0.88  0.80  0.74  0.85  0.55  0.50 ]
[ 0.99  0.81  0.73  0.23  0.26  0.87  0.79  0.62  0.25  0.91  0.76  0.31 ]
[ 0.74  0.77  0.21  0.75  0.97  0.43  0.58  0.73  0.42  0.82  0.65  0.96 ]
[ 0.99  0.94  0.96  0.99  0.84  0.97  0.92  0.94  0.98  0.87  0.88  0.65 ]
[ 0.78  0.91  0.93  0.96  0.89  0.20  0.92  0.20  0.89  0.98  0.98  0.98 ]
[ 0.61  0.89  0.93  0.84  0.85  0.32  0.86  0.94  0.87  0.83  0.71  0.70 ]
[ 0.89  0.93  0.82  0.77  0.84  0.87  0.91  0.80  0.89  0.31  0.86  0.97 ]
[ 0.41  0.91  0.20  0.61  0.92  0.63  0.20  0.81  0.36  0.78  0.79  0.92 ]
[ 0.77  0.92  0.61  0.76  0.89  0.90  1.00  0.96  0.85  0.63  0.93  0.98 ]
[ 0.95  0.96  0.73  0.76  0.26  0.88  0.44  0.90  0.78  0.55  0.66  0.57 ]
[ 0.91  0.93  0.64  0.90  0.50  0.95  0.92  0.55  0.67  0.60  0.83  0.72 ]
[ 0.73  0.93  0.66  0.60  0.95  0.20  0.82  0.62  0.60  0.30  0.92  0.95 ]
[ 0.34  0.93  0.81  0.76  0.86  0.88  0.90  0.94  0.92  0.79  0.98  0.68 ]
[ 0.79  0.20  0.75  0.67  0.63  0.63  0.76  0.95  0.83  0.78  0.93  0.74 ]
[ 0.43  0.95  0.90  0.88  0.79  0.97  0.93  0.31  0.52  0.82  0.70  0.76 ]
[ 0.28  0.36  0.26  0.89  0.83  0.47  0.89  0.23  0.79  0.50  0.67  0.20 ]
[ 0.70  0.57  0.98  0.92  0.95  0.96  0.93  0.67  0.81  0.74  0.84  0.74 ]
[ 0.47  0.95  0.92  0.74  0.90  0.69  0.93  0.73  0.87  0.98  0.59  0.95 ]
[ 0.87  0.88  0.28  0.85  0.97  0.86  0.82  0.91  0.78  0.85  0.85  0.96 ]
[ 0.98  0.57  0.40  0.80  0.70  0.77  0.89  0.92  0.89  0.39  0.79  0.43 ]
[ 0.89  0.62  0.92  0.79  0.95  0.22  0.82  0.93  0.81  0.81  0.79  0.95 ]

01/29 06:05:59 AM | === Batch 7/250
01/29 06:06:00 AM | loss = 0.353 + 1.033 + 0.083 = 1.469
01/29 06:06:01 AM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.12  0.87  0.17  0.69  0.20  0.90  0.12  0.99  0.12  0.37  0.88  0.36 ]
[ 0.95  0.22  0.45  0.99  1.00  0.94  0.80  0.78  0.82  0.98  0.97  0.98 ]
[ 0.22  0.59  0.13  0.63  0.76  0.15  0.49  1.00  0.72  0.14  0.61  0.22 ]
[ 0.60  0.84  0.35  0.96  1.00  0.88  0.93  0.99  0.79  0.44  0.94  0.97 ]
[ 0.66  0.62  0.75  0.43  0.88  0.65  0.12  0.23  0.12  0.81  0.18  0.80 ]
[ 0.98  0.35  0.93  0.99  0.97  0.84  0.86  0.82  0.90  0.86  0.69  0.98 ]
[ 0.22  0.61  0.32  0.52  0.92  0.12  0.71  0.74  0.90  0.76  0.19  0.59 ]
[ 0.73  0.74  0.95  0.99  0.61  0.18  0.96  0.32  0.42  0.62  0.27  0.93 ]
[ 0.49  0.69  0.12  0.17  0.57  0.16  0.33  0.15  0.12  0.49  0.68  0.80 ]
[ 0.79  0.64  0.96  0.19  1.00  0.40  0.94  0.98  0.87  0.75  0.25  0.33 ]
[ 0.14  0.39  0.12  0.14  0.58  0.77  0.97  0.92  0.58  0.12  0.88  0.24 ]
[ 0.76  0.88  0.94  0.99  0.93  0.59  0.92  0.16  0.91  0.59  0.41  0.97 ]
[ 0.70  0.65  0.94  0.35  0.68  0.74  0.45  0.95  0.13  0.28  0.95  0.26 ]
[ 0.66  0.95  0.96  0.27  0.91  0.75  0.81  0.29  0.97  0.13  0.95  0.82 ]
[ 0.61  0.91  0.18  0.99  0.80  0.89  0.90  0.97  0.99  0.13  0.34  0.30 ]
[ 0.70  0.99  0.96  0.17  0.63  0.18  0.93  0.17  0.79  0.39  0.94  0.94 ]
[ 0.33  0.32  0.15  0.95  0.59  0.15  0.41  0.30  0.12  0.12  0.55  0.19 ]
[ 0.77  0.85  0.93  0.23  0.95  0.66  0.42  0.14  0.78  0.38  0.87  0.37 ]
[ 0.96  0.94  0.96  0.99  0.98  0.93  0.95  0.29  0.94  0.93  0.97  0.97 ]
[ 0.12  0.82  0.97  0.97  0.88  0.31  0.96  0.90  0.93  0.98  0.99  0.99 ]
[ 0.19  0.15  0.12  0.36  0.65  0.17  0.63  0.36  0.78  0.64  0.50  0.55 ]
[ 0.86  0.86  0.91  0.96  0.97  0.86  0.88  0.90  0.54  0.44  0.23  0.16 ]
[ 0.53  0.81  0.67  0.73  0.84  0.28  0.60  0.64  0.22  0.71  0.58  0.42 ]
[ 0.82  0.88  0.93  0.95  0.91  0.84  0.91  0.92  0.96  0.39  0.87  0.46 ]
[ 0.96  0.82  0.36  0.77  0.79  0.12  0.56  0.83  0.73  0.31  0.79  0.44 ]
[ 0.83  0.87  0.97  0.67  0.93  0.72  0.37  0.59  0.84  0.85  0.52  0.89 ]
[ 0.51  0.27  0.50  0.15  0.31  0.79  0.77  0.14  0.69  0.30  0.53  0.16 ]
[ 0.67  0.89  0.83  0.95  0.91  0.81  0.35  0.88  0.58  0.88  0.50  0.97 ]
[ 0.27  0.19  0.15  0.46  0.55  0.19  0.76  0.19  0.30  0.19  0.17  0.12 ]
[ 0.72  0.86  0.93  0.97  0.97  0.73  0.80  0.94  0.14  0.88  0.77  0.99 ]
[ 0.15  0.12  0.88  0.72  0.13  0.37  0.14  0.67  0.84  0.92  0.20  0.78 ]
[ 0.36  0.86  0.91  0.66  0.96  0.29  0.66  0.48  0.24  0.91  0.83  0.90 ]
[ 0.12  0.31  0.54  0.95  0.91  0.13  0.27  0.13  0.93  0.25  0.12  0.40 ]
[ 0.74  0.79  0.95  0.80  0.70  0.83  0.91  0.83  0.72  0.86  0.55  0.53 ]
[ 0.99  0.76  0.69  0.14  0.16  0.86  0.70  0.68  0.17  0.92  0.68  0.26 ]
[ 0.80  0.75  0.13  0.76  0.98  0.33  0.52  0.78  0.32  0.80  0.69  0.97 ]
[ 0.99  0.94  0.97  0.99  0.85  0.97  0.92  0.94  0.99  0.90  0.89  0.72 ]
[ 0.79  0.91  0.95  0.96  0.89  0.12  0.93  0.12  0.91  0.99  0.99  0.98 ]
[ 0.52  0.89  0.93  0.80  0.84  0.23  0.89  0.95  0.85  0.80  0.69  0.67 ]
[ 0.92  0.93  0.86  0.81  0.82  0.85  0.93  0.81  0.90  0.26  0.86  0.97 ]
[ 0.32  0.90  0.12  0.60  0.92  0.62  0.12  0.77  0.27  0.80  0.75  0.92 ]
[ 0.77  0.91  0.57  0.78  0.91  0.88  1.00  0.97  0.84  0.60  0.94  0.98 ]
[ 0.96  0.96  0.67  0.68  0.18  0.85  0.41  0.88  0.79  0.46  0.67  0.53 ]
[ 0.93  0.94  0.59  0.91  0.50  0.94  0.93  0.53  0.67  0.59  0.83  0.78 ]
[ 0.70  0.94  0.60  0.61  0.96  0.12  0.82  0.61  0.54  0.21  0.93  0.96 ]
[ 0.28  0.94  0.83  0.73  0.87  0.91  0.90  0.95  0.93  0.78  0.98  0.74 ]
[ 0.76  0.12  0.77  0.67  0.55  0.64  0.76  0.95  0.79  0.72  0.93  0.78 ]
[ 0.35  0.96  0.89  0.86  0.80  0.97  0.95  0.24  0.48  0.84  0.75  0.80 ]
[ 0.19  0.33  0.19  0.88  0.80  0.39  0.91  0.15  0.79  0.49  0.55  0.12 ]
[ 0.64  0.50  0.99  0.94  0.96  0.97  0.93  0.59  0.83  0.68  0.85  0.63 ]
[ 0.39  0.95  0.92  0.67  0.92  0.66  0.92  0.70  0.88  0.98  0.51  0.94 ]
[ 0.87  0.86  0.20  0.81  0.98  0.87  0.84  0.91  0.75  0.82  0.87  0.95 ]
[ 0.97  0.58  0.31  0.76  0.72  0.72  0.88  0.90  0.91  0.30  0.76  0.33 ]
[ 0.89  0.55  0.93  0.77  0.96  0.14  0.77  0.94  0.84  0.79  0.74  0.93 ]

01/29 06:06:01 AM | === Batch 8/250
01/29 06:06:02 AM | loss = 0.915 + 0.596 + 0.076 = 1.587
01/29 06:06:02 AM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.07  0.89  0.11  0.67  0.13  0.91  0.07  0.99  0.07  0.27  0.89  0.27 ]
[ 0.96  0.15  0.36  0.99  1.00  0.95  0.80  0.79  0.84  0.98  0.98  0.99 ]
[ 0.15  0.51  0.07  0.53  0.77  0.10  0.37  1.00  0.72  0.10  0.57  0.18 ]
[ 0.68  0.84  0.29  0.97  1.00  0.88  0.93  0.99  0.81  0.36  0.95  0.97 ]
[ 0.56  0.61  0.79  0.31  0.86  0.67  0.07  0.16  0.07  0.82  0.11  0.79 ]
[ 0.99  0.25  0.93  0.99  0.97  0.82  0.86  0.80  0.91  0.85  0.70  0.98 ]
[ 0.15  0.59  0.22  0.41  0.91  0.07  0.73  0.73  0.89  0.70  0.13  0.58 ]
[ 0.70  0.74  0.95  0.99  0.52  0.12  0.96  0.26  0.41  0.57  0.21  0.95 ]
[ 0.46  0.72  0.07  0.11  0.54  0.10  0.27  0.10  0.07  0.46  0.70  0.80 ]
[ 0.80  0.59  0.96  0.17  1.00  0.32  0.95  0.98  0.87  0.74  0.19  0.32 ]
[ 0.09  0.31  0.07  0.08  0.57  0.78  0.98  0.93  0.51  0.07  0.88  0.16 ]
[ 0.73  0.89  0.95  0.99  0.95  0.54  0.93  0.10  0.91  0.56  0.33  0.98 ]
[ 0.68  0.61  0.96  0.31  0.62  0.71  0.37  0.97  0.08  0.21  0.96  0.18 ]
[ 0.61  0.95  0.97  0.22  0.92  0.75  0.81  0.20  0.97  0.09  0.96  0.83 ]
[ 0.60  0.92  0.15  0.99  0.80  0.88  0.89  0.97  0.99  0.08  0.25  0.20 ]
[ 0.66  0.99  0.97  0.13  0.63  0.12  0.93  0.12  0.78  0.30  0.95  0.95 ]
[ 0.25  0.23  0.09  0.95  0.51  0.10  0.31  0.24  0.07  0.07  0.48  0.13 ]
[ 0.75  0.81  0.93  0.15  0.96  0.63  0.32  0.09  0.77  0.30  0.88  0.37 ]
[ 0.96  0.95  0.96  0.99  0.99  0.94  0.95  0.25  0.95  0.94  0.98  0.98 ]
[ 0.07  0.81  0.98  0.97  0.84  0.22  0.97  0.90  0.94  0.98  0.99  0.99 ]
[ 0.12  0.11  0.07  0.34  0.55  0.11  0.67  0.37  0.82  0.56  0.52  0.53 ]
[ 0.89  0.86  0.90  0.96  0.97  0.85  0.90  0.89  0.47  0.36  0.17  0.12 ]
[ 0.48  0.82  0.66  0.76  0.83  0.20  0.64  0.65  0.16  0.76  0.50  0.35 ]
[ 0.85  0.89  0.93  0.96  0.91  0.81  0.93  0.92  0.96  0.29  0.88  0.51 ]
[ 0.96  0.82  0.34  0.77  0.76  0.07  0.58  0.83  0.78  0.23  0.73  0.39 ]
[ 0.85  0.87  0.97  0.66  0.93  0.67  0.31  0.64  0.85  0.82  0.46  0.88 ]
[ 0.51  0.21  0.47  0.10  0.34  0.78  0.73  0.09  0.69  0.24  0.44  0.10 ]
[ 0.66  0.90  0.80  0.95  0.91  0.77  0.27  0.86  0.56  0.89  0.43  0.97 ]
[ 0.21  0.13  0.09  0.37  0.51  0.14  0.67  0.13  0.26  0.14  0.11  0.07 ]
[ 0.72  0.87  0.93  0.97  0.97  0.67  0.81  0.94  0.09  0.89  0.77  0.99 ]
[ 0.10  0.07  0.89  0.68  0.08  0.35  0.09  0.59  0.80  0.91  0.13  0.79 ]
[ 0.28  0.85  0.90  0.61  0.97  0.21  0.59  0.37  0.21  0.92  0.83  0.90 ]
[ 0.07  0.24  0.56  0.96  0.91  0.08  0.18  0.08  0.94  0.20  0.07  0.36 ]
[ 0.73  0.78  0.95  0.82  0.72  0.79  0.93  0.86  0.70  0.88  0.52  0.58 ]
[ 0.99  0.68  0.64  0.09  0.11  0.84  0.60  0.74  0.11  0.93  0.63  0.22 ]
[ 0.81  0.71  0.08  0.80  0.98  0.23  0.44  0.81  0.25  0.78  0.71  0.97 ]
[ 0.99  0.94  0.97  0.99  0.86  0.98  0.93  0.94  0.99  0.92  0.91  0.78 ]
[ 0.78  0.90  0.96  0.96  0.90  0.07  0.94  0.07  0.91  0.99  0.99  0.99 ]
[ 0.42  0.88  0.94  0.74  0.86  0.16  0.89  0.96  0.84  0.78  0.66  0.65 ]
[ 0.94  0.92  0.88  0.85  0.76  0.81  0.93  0.82  0.91  0.21  0.86  0.97 ]
[ 0.23  0.90  0.07  0.62  0.90  0.64  0.07  0.77  0.20  0.83  0.76  0.93 ]
[ 0.74  0.93  0.49  0.80  0.92  0.84  1.00  0.97  0.83  0.59  0.94  0.98 ]
[ 0.97  0.97  0.58  0.58  0.12  0.79  0.34  0.84  0.82  0.41  0.67  0.46 ]
[ 0.94  0.96  0.54  0.91  0.50  0.94  0.94  0.49  0.69  0.56  0.82  0.79 ]
[ 0.69  0.94  0.52  0.67  0.96  0.07  0.80  0.58  0.45  0.15  0.92  0.97 ]
[ 0.23  0.95  0.85  0.75  0.86  0.93  0.90  0.95  0.94  0.80  0.99  0.77 ]
[ 0.71  0.07  0.80  0.64  0.45  0.71  0.70  0.96  0.80  0.67  0.93  0.81 ]
[ 0.33  0.97  0.89  0.83  0.82  0.98  0.96  0.23  0.50  0.88  0.76  0.83 ]
[ 0.13  0.33  0.13  0.87  0.74  0.32  0.91  0.09  0.83  0.43  0.59  0.07 ]
[ 0.66  0.46  0.99  0.96  0.96  0.98  0.94  0.64  0.85  0.58  0.86  0.61 ]
[ 0.35  0.95  0.93  0.59  0.93  0.58  0.91  0.70  0.88  0.99  0.43  0.96 ]
[ 0.88  0.85  0.14  0.76  0.98  0.86  0.85  0.92  0.76  0.85  0.87  0.95 ]
[ 0.97  0.56  0.23  0.74  0.77  0.69  0.87  0.86  0.92  0.23  0.75  0.26 ]
[ 0.87  0.46  0.94  0.79  0.96  0.08  0.70  0.94  0.85  0.83  0.71  0.93 ]

01/29 06:06:02 AM | === Batch 9/250
01/29 06:06:03 AM | loss = 0.682 + 0.281 + 0.070 = 1.034
01/29 06:06:04 AM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.04  0.92  0.08  0.67  0.08  0.91  0.04  0.99  0.04  0.19  0.91  0.20 ]
[ 0.96  0.10  0.30  0.99  1.00  0.96  0.79  0.83  0.85  0.98  0.98  0.99 ]
[ 0.10  0.42  0.04  0.42  0.78  0.07  0.28  1.00  0.70  0.07  0.49  0.15 ]
[ 0.76  0.83  0.25  0.98  1.00  0.88  0.94  0.99  0.82  0.27  0.95  0.97 ]
[ 0.48  0.64  0.83  0.21  0.85  0.67  0.04  0.12  0.04  0.83  0.07  0.79 ]
[ 0.99  0.16  0.94  0.99  0.98  0.81  0.86  0.82  0.91  0.86  0.70  0.99 ]
[ 0.09  0.53  0.15  0.31  0.90  0.05  0.75  0.68  0.88  0.64  0.10  0.54 ]
[ 0.63  0.74  0.96  0.99  0.42  0.08  0.97  0.23  0.40  0.56  0.16  0.96 ]
[ 0.45  0.72  0.04  0.07  0.57  0.06  0.21  0.07  0.04  0.40  0.70  0.78 ]
[ 0.79  0.53  0.97  0.16  1.00  0.24  0.95  0.99  0.88  0.76  0.14  0.32 ]
[ 0.05  0.25  0.04  0.05  0.56  0.77  0.98  0.94  0.48  0.04  0.90  0.11 ]
[ 0.68  0.91  0.95  0.99  0.96  0.46  0.93  0.07  0.92  0.57  0.26  0.98 ]
[ 0.65  0.53  0.96  0.28  0.60  0.70  0.29  0.97  0.05  0.16  0.96  0.13 ]
[ 0.53  0.95  0.97  0.18  0.94  0.74  0.79  0.13  0.98  0.06  0.97  0.86 ]
[ 0.61  0.92  0.12  0.99  0.80  0.87  0.86  0.97  0.99  0.05  0.17  0.13 ]
[ 0.58  1.00  0.97  0.09  0.65  0.07  0.94  0.09  0.79  0.24  0.95  0.96 ]
[ 0.19  0.16  0.06  0.96  0.45  0.07  0.24  0.19  0.04  0.04  0.40  0.09 ]
[ 0.70  0.75  0.94  0.10  0.96  0.58  0.23  0.05  0.77  0.25  0.90  0.40 ]
[ 0.96  0.96  0.97  0.99  0.99  0.95  0.96  0.23  0.96  0.95  0.98  0.98 ]
[ 0.04  0.83  0.98  0.97  0.79  0.16  0.97  0.91  0.94  0.99  1.00  0.99 ]
[ 0.08  0.08  0.04  0.32  0.43  0.07  0.70  0.37  0.83  0.49  0.55  0.51 ]
[ 0.90  0.87  0.90  0.96  0.98  0.83  0.92  0.89  0.37  0.28  0.12  0.09 ]
[ 0.40  0.84  0.61  0.78  0.81  0.13  0.62  0.65  0.11  0.81  0.41  0.30 ]
[ 0.87  0.90  0.94  0.97  0.91  0.78  0.94  0.93  0.97  0.21  0.89  0.53 ]
[ 0.97  0.83  0.29  0.77  0.70  0.04  0.58  0.83  0.81  0.17  0.67  0.33 ]
[ 0.86  0.88  0.98  0.59  0.93  0.59  0.27  0.66  0.87  0.77  0.38  0.87 ]
[ 0.49  0.15  0.40  0.08  0.37  0.76  0.71  0.06  0.71  0.19  0.34  0.06 ]
[ 0.63  0.90  0.81  0.94  0.91  0.72  0.20  0.83  0.58  0.89  0.36  0.98 ]
[ 0.15  0.08  0.06  0.28  0.46  0.10  0.58  0.09  0.21  0.09  0.07  0.04 ]
[ 0.70  0.87  0.92  0.97  0.98  0.60  0.83  0.94  0.06  0.89  0.76  1.00 ]
[ 0.07  0.04  0.87  0.64  0.05  0.33  0.06  0.48  0.75  0.89  0.08  0.80 ]
[ 0.21  0.85  0.89  0.58  0.97  0.14  0.50  0.30  0.18  0.93  0.81  0.91 ]
[ 0.04  0.17  0.53  0.96  0.92  0.05  0.12  0.05  0.96  0.17  0.04  0.31 ]
[ 0.70  0.77  0.96  0.81  0.74  0.75  0.94  0.88  0.65  0.88  0.48  0.60 ]
[ 0.99  0.59  0.59  0.05  0.07  0.81  0.50  0.77  0.07  0.93  0.59  0.19 ]
[ 0.81  0.67  0.05  0.80  0.98  0.16  0.37  0.82  0.20  0.76  0.72  0.98 ]
[ 0.99  0.94  0.97  0.99  0.86  0.98  0.93  0.94  0.99  0.93  0.91  0.82 ]
[ 0.75  0.89  0.97  0.97  0.91  0.04  0.94  0.04  0.92  0.99  0.99  0.99 ]
[ 0.32  0.87  0.94  0.70  0.88  0.11  0.88  0.97  0.82  0.72  0.63  0.69 ]
[ 0.95  0.91  0.91  0.89  0.75  0.74  0.94  0.84  0.91  0.18  0.86  0.98 ]
[ 0.16  0.91  0.04  0.61  0.88  0.64  0.04  0.77  0.14  0.86  0.77  0.94 ]
[ 0.70  0.94  0.43  0.81  0.93  0.79  1.00  0.97  0.82  0.59  0.95  0.98 ]
[ 0.98  0.97  0.57  0.48  0.08  0.72  0.27  0.78  0.85  0.33  0.65  0.40 ]
[ 0.95  0.97  0.49  0.92  0.47  0.93  0.94  0.44  0.70  0.52  0.86  0.79 ]
[ 0.67  0.94  0.47  0.71  0.97  0.04  0.77  0.55  0.37  0.11  0.92  0.97 ]
[ 0.21  0.96  0.87  0.79  0.86  0.94  0.90  0.95  0.95  0.80  0.99  0.81 ]
[ 0.64  0.04  0.81  0.59  0.36  0.77  0.66  0.96  0.81  0.60  0.93  0.82 ]
[ 0.34  0.98  0.87  0.79  0.83  0.98  0.97  0.24  0.50  0.91  0.78  0.85 ]
[ 0.09  0.32  0.09  0.85  0.67  0.28  0.92  0.06  0.84  0.35  0.61  0.04 ]
[ 0.71  0.44  0.99  0.97  0.97  0.98  0.95  0.68  0.87  0.47  0.85  0.60 ]
[ 0.32  0.95  0.94  0.50  0.94  0.49  0.90  0.74  0.88  0.99  0.37  0.96 ]
[ 0.89  0.85  0.10  0.69  0.99  0.84  0.87  0.93  0.78  0.87  0.86  0.95 ]
[ 0.97  0.52  0.17  0.74  0.81  0.67  0.86  0.82  0.93  0.18  0.73  0.21 ]
[ 0.82  0.40  0.94  0.82  0.96  0.05  0.59  0.94  0.85  0.86  0.68  0.93 ]

01/29 06:06:04 AM | === Batch 10/250
01/29 06:06:05 AM | loss = 0.801 + 0.018 + 0.066 = 0.885
01/29 06:06:05 AM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.03  0.94  0.05  0.67  0.05  0.92  0.03  1.00  0.03  0.13  0.92  0.15 ]
[ 0.96  0.07  0.29  1.00  1.00  0.97  0.77  0.86  0.85  0.98  0.99  0.99 ]
[ 0.08  0.36  0.03  0.32  0.80  0.05  0.20  1.00  0.69  0.05  0.40  0.13 ]
[ 0.81  0.81  0.21  0.98  1.00  0.89  0.94  0.99  0.83  0.19  0.96  0.98 ]
[ 0.39  0.67  0.86  0.14  0.85  0.70  0.03  0.09  0.03  0.85  0.04  0.80 ]
[ 0.99  0.10  0.94  0.99  0.97  0.81  0.84  0.86  0.91  0.87  0.74  0.99 ]
[ 0.06  0.44  0.09  0.22  0.89  0.03  0.78  0.61  0.85  0.57  0.07  0.51 ]
[ 0.55  0.77  0.96  0.99  0.35  0.05  0.97  0.20  0.40  0.59  0.12  0.97 ]
[ 0.44  0.74  0.03  0.05  0.58  0.04  0.15  0.05  0.03  0.34  0.68  0.75 ]
[ 0.78  0.53  0.97  0.17  1.00  0.18  0.96  0.99  0.89  0.79  0.10  0.34 ]
[ 0.03  0.18  0.03  0.03  0.53  0.77  0.98  0.94  0.48  0.03  0.90  0.07 ]
[ 0.61  0.91  0.96  0.99  0.96  0.38  0.93  0.05  0.92  0.61  0.20  0.99 ]
[ 0.60  0.49  0.97  0.28  0.58  0.66  0.23  0.98  0.03  0.12  0.97  0.09 ]
[ 0.45  0.94  0.98  0.16  0.95  0.71  0.77  0.08  0.98  0.04  0.97  0.88 ]
[ 0.58  0.92  0.10  0.99  0.81  0.84  0.82  0.98  0.99  0.03  0.11  0.08 ]
[ 0.50  1.00  0.98  0.07  0.67  0.05  0.94  0.07  0.78  0.20  0.96  0.97 ]
[ 0.15  0.11  0.04  0.96  0.38  0.05  0.19  0.15  0.03  0.03  0.37  0.06 ]
[ 0.66  0.67  0.94  0.06  0.97  0.52  0.15  0.03  0.75  0.22  0.92  0.45 ]
[ 0.95  0.97  0.98  0.99  0.99  0.95  0.96  0.23  0.97  0.96  0.98  0.98 ]
[ 0.03  0.86  0.98  0.97  0.77  0.11  0.98  0.92  0.94  0.99  1.00  0.99 ]
[ 0.05  0.06  0.03  0.29  0.32  0.05  0.73  0.37  0.82  0.45  0.58  0.45 ]
[ 0.91  0.88  0.90  0.95  0.98  0.79  0.94  0.88  0.28  0.24  0.09  0.08 ]
[ 0.31  0.86  0.54  0.81  0.77  0.09  0.62  0.65  0.08  0.83  0.37  0.25 ]
[ 0.89  0.92  0.94  0.98  0.92  0.73  0.95  0.93  0.97  0.14  0.90  0.56 ]
[ 0.97  0.84  0.24  0.77  0.62  0.03  0.53  0.84  0.82  0.13  0.60  0.25 ]
[ 0.87  0.89  0.98  0.52  0.94  0.50  0.22  0.64  0.89  0.73  0.29  0.86 ]
[ 0.46  0.11  0.31  0.06  0.37  0.72  0.69  0.04  0.70  0.14  0.24  0.04 ]
[ 0.59  0.91  0.83  0.93  0.91  0.65  0.14  0.80  0.61  0.89  0.27  0.98 ]
[ 0.11  0.05  0.04  0.21  0.47  0.07  0.50  0.06  0.16  0.07  0.04  0.03 ]
[ 0.66  0.89  0.92  0.97  0.98  0.51  0.83  0.95  0.05  0.90  0.72  1.00 ]
[ 0.05  0.03  0.84  0.58  0.03  0.27  0.04  0.36  0.68  0.86  0.05  0.78 ]
[ 0.16  0.85  0.88  0.58  0.98  0.10  0.48  0.24  0.15  0.94  0.79  0.91 ]
[ 0.03  0.12  0.46  0.97  0.92  0.03  0.08  0.04  0.97  0.20  0.03  0.24 ]
[ 0.67  0.77  0.96  0.79  0.77  0.69  0.95  0.88  0.59  0.90  0.40  0.63 ]
[ 0.99  0.48  0.53  0.03  0.05  0.79  0.40  0.80  0.04  0.92  0.53  0.18 ]
[ 0.82  0.67  0.03  0.79  0.99  0.11  0.29  0.83  0.17  0.73  0.69  0.98 ]
[ 0.99  0.95  0.98  0.99  0.85  0.98  0.94  0.94  0.99  0.93  0.93  0.82 ]
[ 0.75  0.88  0.98  0.97  0.92  0.03  0.93  0.03  0.92  0.99  0.99  0.99 ]
[ 0.23  0.85  0.95  0.70  0.88  0.07  0.85  0.98  0.82  0.63  0.65  0.76 ]
[ 0.96  0.91  0.92  0.92  0.72  0.69  0.93  0.86  0.91  0.15  0.85  0.98 ]
[ 0.12  0.92  0.03  0.57  0.85  0.60  0.03  0.78  0.10  0.88  0.80  0.95 ]
[ 0.67  0.95  0.42  0.83  0.94  0.75  1.00  0.98  0.83  0.56  0.95  0.99 ]
[ 0.98  0.97  0.59  0.39  0.06  0.66  0.21  0.69  0.86  0.27  0.61  0.32 ]
[ 0.96  0.97  0.44  0.93  0.44  0.93  0.94  0.39  0.70  0.46  0.89  0.79 ]
[ 0.65  0.93  0.48  0.71  0.97  0.03  0.74  0.51  0.31  0.08  0.92  0.98 ]
[ 0.19  0.97  0.87  0.82  0.85  0.95  0.91  0.95  0.95  0.79  0.99  0.84 ]
[ 0.56  0.03  0.79  0.51  0.28  0.81  0.61  0.96  0.82  0.53  0.94  0.81 ]
[ 0.32  0.98  0.84  0.75  0.84  0.98  0.97  0.24  0.51  0.93  0.79  0.86 ]
[ 0.07  0.30  0.06  0.81  0.63  0.23  0.93  0.03  0.83  0.29  0.62  0.03 ]
[ 0.76  0.44  0.99  0.97  0.98  0.99  0.95  0.71  0.88  0.39  0.83  0.61 ]
[ 0.32  0.96  0.94  0.43  0.94  0.43  0.90  0.78  0.88  0.99  0.31  0.97 ]
[ 0.90  0.85  0.06  0.59  0.99  0.82  0.88  0.94  0.82  0.88  0.84  0.96 ]
[ 0.98  0.48  0.12  0.73  0.82  0.66  0.85  0.76  0.94  0.14  0.68  0.18 ]
[ 0.76  0.36  0.94  0.84  0.96  0.03  0.49  0.94  0.81  0.88  0.63  0.94 ]

01/29 06:06:05 AM | === Batch 11/250
01/29 06:06:06 AM | loss = 1.051 + 0.257 + 0.062 = 1.370
01/29 06:06:07 AM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.02  0.95  0.04  0.71  0.03  0.93  0.02  1.00  0.02  0.10  0.93  0.13 ]
[ 0.96  0.05  0.31  1.00  1.00  0.97  0.76  0.89  0.85  0.99  0.99  0.99 ]
[ 0.06  0.34  0.02  0.29  0.80  0.04  0.15  1.00  0.72  0.04  0.35  0.12 ]
[ 0.87  0.83  0.19  0.99  1.00  0.89  0.94  0.99  0.84  0.15  0.96  0.98 ]
[ 0.38  0.73  0.89  0.10  0.84  0.75  0.02  0.07  0.02  0.87  0.03  0.81 ]
[ 0.99  0.07  0.95  0.99  0.98  0.82  0.82  0.89  0.91  0.88  0.79  0.99 ]
[ 0.04  0.42  0.07  0.20  0.90  0.02  0.83  0.61  0.82  0.56  0.06  0.53 ]
[ 0.44  0.81  0.96  1.00  0.38  0.03  0.97  0.18  0.39  0.60  0.10  0.98 ]
[ 0.51  0.78  0.02  0.04  0.65  0.03  0.12  0.04  0.02  0.28  0.71  0.74 ]
[ 0.76  0.56  0.98  0.17  1.00  0.13  0.96  0.99  0.90  0.82  0.07  0.35 ]
[ 0.02  0.15  0.02  0.02  0.55  0.79  0.98  0.95  0.54  0.02  0.90  0.05 ]
[ 0.53  0.92  0.96  1.00  0.97  0.31  0.93  0.04  0.93  0.62  0.18  0.99 ]
[ 0.63  0.48  0.98  0.28  0.61  0.66  0.22  0.98  0.02  0.11  0.97  0.07 ]
[ 0.37  0.92  0.98  0.14  0.96  0.69  0.75  0.05  0.98  0.03  0.98  0.89 ]
[ 0.61  0.91  0.09  0.99  0.83  0.81  0.80  0.98  0.99  0.02  0.08  0.05 ]
[ 0.41  1.00  0.98  0.06  0.67  0.03  0.94  0.05  0.79  0.17  0.97  0.97 ]
[ 0.15  0.09  0.03  0.97  0.37  0.03  0.17  0.15  0.02  0.02  0.35  0.04 ]
[ 0.58  0.56  0.95  0.05  0.97  0.48  0.11  0.02  0.75  0.19  0.93  0.47 ]
[ 0.95  0.97  0.98  0.99  0.99  0.96  0.96  0.25  0.97  0.97  0.99  0.98 ]
[ 0.02  0.88  0.99  0.96  0.79  0.08  0.98  0.92  0.95  0.99  1.00  1.00 ]
[ 0.04  0.04  0.02  0.30  0.28  0.03  0.77  0.40  0.81  0.45  0.63  0.45 ]
[ 0.91  0.90  0.92  0.95  0.98  0.79  0.95  0.88  0.20  0.21  0.06  0.07 ]
[ 0.27  0.89  0.53  0.84  0.77  0.06  0.66  0.65  0.06  0.85  0.35  0.23 ]
[ 0.90  0.93  0.95  0.98  0.94  0.71  0.96  0.94  0.97  0.09  0.90  0.61 ]
[ 0.97  0.85  0.21  0.81  0.57  0.02  0.51  0.86  0.82  0.12  0.58  0.19 ]
[ 0.88  0.91  0.98  0.49  0.95  0.47  0.22  0.67  0.90  0.71  0.23  0.86 ]
[ 0.48  0.08  0.27  0.05  0.34  0.72  0.73  0.02  0.68  0.12  0.19  0.03 ]
[ 0.54  0.92  0.85  0.92  0.92  0.63  0.10  0.79  0.67  0.90  0.23  0.98 ]
[ 0.09  0.03  0.03  0.21  0.53  0.06  0.50  0.05  0.14  0.05  0.03  0.02 ]
[ 0.60  0.90  0.93  0.98  0.99  0.48  0.84  0.95  0.04  0.91  0.71  1.00 ]
[ 0.04  0.02  0.82  0.59  0.02  0.23  0.03  0.36  0.63  0.86  0.04  0.80 ]
[ 0.12  0.85  0.89  0.63  0.98  0.08  0.48  0.19  0.13  0.95  0.76  0.92 ]
[ 0.02  0.08  0.42  0.97  0.93  0.02  0.06  0.03  0.98  0.21  0.02  0.22 ]
[ 0.62  0.78  0.96  0.78  0.80  0.68  0.96  0.89  0.52  0.91  0.36  0.68 ]
[ 0.99  0.44  0.52  0.02  0.03  0.80  0.43  0.84  0.03  0.92  0.51  0.18 ]
[ 0.81  0.68  0.02  0.79  0.99  0.08  0.26  0.84  0.15  0.73  0.70  0.98 ]
[ 0.99  0.96  0.98  1.00  0.85  0.99  0.94  0.94  0.99  0.93  0.94  0.83 ]
[ 0.76  0.88  0.99  0.98  0.92  0.02  0.93  0.02  0.92  1.00  0.99  0.99 ]
[ 0.18  0.85  0.96  0.73  0.88  0.06  0.84  0.98  0.81  0.54  0.68  0.82 ]
[ 0.97  0.91  0.93  0.94  0.71  0.67  0.93  0.89  0.90  0.14  0.84  0.99 ]
[ 0.09  0.92  0.02  0.56  0.83  0.57  0.02  0.80  0.07  0.89  0.84  0.96 ]
[ 0.66  0.95  0.38  0.85  0.95  0.74  1.00  0.98  0.86  0.58  0.96  0.99 ]
[ 0.98  0.97  0.65  0.36  0.04  0.67  0.19  0.72  0.86  0.21  0.60  0.28 ]
[ 0.97  0.98  0.42  0.93  0.46  0.93  0.94  0.39  0.74  0.45  0.91  0.79 ]
[ 0.67  0.93  0.49  0.68  0.98  0.02  0.75  0.50  0.30  0.06  0.93  0.98 ]
[ 0.19  0.97  0.88  0.84  0.84  0.96  0.92  0.96  0.96  0.80  0.99  0.86 ]
[ 0.45  0.02  0.79  0.44  0.26  0.85  0.61  0.97  0.83  0.51  0.95  0.82 ]
[ 0.35  0.99  0.83  0.76  0.87  0.99  0.98  0.23  0.57  0.94  0.79  0.88 ]
[ 0.06  0.27  0.04  0.76  0.64  0.21  0.94  0.02  0.78  0.24  0.57  0.02 ]
[ 0.79  0.43  0.99  0.98  0.98  0.99  0.96  0.71  0.90  0.39  0.80  0.62 ]
[ 0.33  0.96  0.95  0.37  0.94  0.43  0.90  0.82  0.89  0.99  0.29  0.97 ]
[ 0.91  0.85  0.05  0.56  0.99  0.80  0.89  0.94  0.86  0.87  0.81  0.96 ]
[ 0.98  0.41  0.07  0.72  0.81  0.67  0.81  0.78  0.94  0.11  0.60  0.15 ]
[ 0.71  0.33  0.93  0.84  0.96  0.02  0.42  0.94  0.76  0.88  0.61  0.93 ]

01/29 06:06:07 AM | === Batch 12/250
01/29 06:06:08 AM | loss = 0.828 + 0.318 + 0.058 = 1.203
01/29 06:06:08 AM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.01  0.97  0.03  0.76  0.02  0.94  0.01  1.00  0.01  0.08  0.95  0.12 ]
[ 0.96  0.04  0.32  1.00  1.00  0.98  0.75  0.92  0.86  0.99  0.99  0.99 ]
[ 0.05  0.34  0.01  0.30  0.79  0.03  0.13  1.00  0.75  0.03  0.34  0.11 ]
[ 0.91  0.86  0.18  0.99  1.00  0.90  0.95  1.00  0.84  0.13  0.97  0.98 ]
[ 0.42  0.79  0.93  0.08  0.83  0.81  0.01  0.06  0.01  0.88  0.02  0.84 ]
[ 1.00  0.04  0.95  1.00  0.98  0.84  0.81  0.92  0.92  0.89  0.84  0.99 ]
[ 0.03  0.44  0.05  0.21  0.92  0.01  0.88  0.65  0.83  0.58  0.06  0.58 ]
[ 0.34  0.84  0.97  1.00  0.44  0.02  0.97  0.17  0.39  0.62  0.09  0.98 ]
[ 0.60  0.82  0.01  0.03  0.72  0.02  0.11  0.04  0.01  0.22  0.76  0.75 ]
[ 0.74  0.61  0.98  0.19  1.00  0.11  0.96  0.99  0.91  0.83  0.06  0.33 ]
[ 0.01  0.13  0.01  0.02  0.60  0.83  0.98  0.96  0.62  0.01  0.90  0.03 ]
[ 0.45  0.93  0.97  1.00  0.98  0.27  0.94  0.03  0.93  0.63  0.19  0.99 ]
[ 0.69  0.47  0.98  0.27  0.67  0.69  0.25  0.98  0.01  0.11  0.97  0.06 ]
[ 0.29  0.89  0.98  0.13  0.96  0.68  0.76  0.04  0.98  0.02  0.98  0.90 ]
[ 0.68  0.90  0.07  1.00  0.86  0.80  0.79  0.99  0.99  0.02  0.06  0.04 ]
[ 0.32  1.00  0.98  0.05  0.68  0.02  0.95  0.04  0.80  0.14  0.97  0.98 ]
[ 0.17  0.08  0.02  0.97  0.41  0.02  0.16  0.17  0.01  0.01  0.34  0.03 ]
[ 0.50  0.45  0.95  0.03  0.97  0.45  0.08  0.02  0.76  0.16  0.94  0.47 ]
[ 0.96  0.98  0.98  1.00  0.99  0.96  0.96  0.28  0.97  0.97  0.99  0.99 ]
[ 0.01  0.90  0.99  0.97  0.82  0.06  0.98  0.93  0.95  0.99  1.00  1.00 ]
[ 0.03  0.03  0.01  0.32  0.27  0.03  0.82  0.47  0.83  0.47  0.69  0.48 ]
[ 0.92  0.91  0.93  0.95  0.99  0.79  0.96  0.88  0.15  0.20  0.05  0.06 ]
[ 0.27  0.92  0.57  0.87  0.77  0.05  0.71  0.67  0.05  0.87  0.36  0.24 ]
[ 0.92  0.94  0.96  0.99  0.95  0.70  0.97  0.94  0.97  0.06  0.91  0.68 ]
[ 0.98  0.87  0.19  0.84  0.57  0.01  0.53  0.88  0.83  0.13  0.60  0.15 ]
[ 0.89  0.92  0.99  0.50  0.96  0.45  0.23  0.70  0.92  0.73  0.21  0.87 ]
[ 0.52  0.07  0.26  0.04  0.31  0.75  0.79  0.02  0.68  0.10  0.17  0.02 ]
[ 0.51  0.93  0.85  0.91  0.93  0.63  0.08  0.79  0.73  0.92  0.21  0.99 ]
[ 0.07  0.02  0.02  0.23  0.61  0.05  0.50  0.04  0.13  0.04  0.02  0.01 ]
[ 0.57  0.92  0.92  0.98  0.99  0.46  0.85  0.95  0.03  0.92  0.72  1.00 ]
[ 0.03  0.01  0.83  0.64  0.02  0.21  0.02  0.40  0.64  0.87  0.03  0.83 ]
[ 0.10  0.85  0.89  0.69  0.98  0.06  0.47  0.15  0.12  0.96  0.74  0.92 ]
[ 0.01  0.07  0.40  0.98  0.93  0.01  0.04  0.03  0.98  0.20  0.01  0.22 ]
[ 0.59  0.79  0.97  0.79  0.85  0.68  0.96  0.89  0.47  0.92  0.36  0.74 ]
[ 1.00  0.44  0.54  0.02  0.02  0.83  0.50  0.88  0.02  0.93  0.50  0.19 ]
[ 0.81  0.70  0.02  0.81  0.99  0.06  0.24  0.86  0.14  0.73  0.73  0.98 ]
[ 1.00  0.97  0.98  1.00  0.85  0.99  0.94  0.94  1.00  0.94  0.94  0.83 ]
[ 0.75  0.89  0.99  0.98  0.93  0.01  0.92  0.01  0.92  1.00  0.99  0.99 ]
[ 0.16  0.84  0.96  0.77  0.90  0.05  0.85  0.98  0.82  0.49  0.73  0.87 ]
[ 0.97  0.92  0.93  0.95  0.73  0.67  0.93  0.92  0.89  0.15  0.82  0.99 ]
[ 0.07  0.93  0.01  0.59  0.83  0.59  0.01  0.82  0.06  0.90  0.87  0.96 ]
[ 0.64  0.96  0.32  0.87  0.96  0.75  1.00  0.98  0.88  0.64  0.96  0.99 ]
[ 0.99  0.97  0.71  0.34  0.03  0.70  0.19  0.76  0.88  0.17  0.61  0.26 ]
[ 0.97  0.98  0.42  0.93  0.47  0.93  0.95  0.42  0.78  0.49  0.93  0.80 ]
[ 0.72  0.93  0.51  0.66  0.98  0.01  0.77  0.52  0.31  0.05  0.94  0.98 ]
[ 0.19  0.97  0.88  0.85  0.86  0.97  0.93  0.96  0.96  0.79  0.99  0.89 ]
[ 0.36  0.01  0.80  0.41  0.25  0.88  0.61  0.97  0.84  0.52  0.96  0.84 ]
[ 0.40  0.99  0.85  0.79  0.88  0.99  0.98  0.22  0.62  0.95  0.81  0.89 ]
[ 0.05  0.24  0.03  0.74  0.65  0.19  0.95  0.02  0.74  0.21  0.52  0.01 ]
[ 0.83  0.43  0.99  0.98  0.98  0.99  0.97  0.69  0.92  0.42  0.78  0.61 ]
[ 0.34  0.96  0.96  0.34  0.94  0.48  0.90  0.86  0.90  0.99  0.29  0.98 ]
[ 0.92  0.86  0.04  0.53  0.99  0.79  0.90  0.95  0.89  0.86  0.80  0.96 ]
[ 0.98  0.34  0.05  0.70  0.79  0.67  0.77  0.82  0.94  0.10  0.59  0.12 ]
[ 0.67  0.30  0.92  0.84  0.96  0.01  0.38  0.94  0.70  0.86  0.60  0.92 ]

01/29 06:06:08 AM | === Batch 13/250
01/29 06:06:09 AM | loss = 0.489 + 0.260 + 0.054 = 0.803
01/29 06:06:10 AM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.01  0.98  0.03  0.80  0.02  0.95  0.01  1.00  0.01  0.07  0.96  0.11 ]
[ 0.95  0.03  0.34  1.00  1.00  0.98  0.75  0.94  0.87  0.99  0.99  1.00 ]
[ 0.05  0.37  0.01  0.33  0.80  0.03  0.13  1.00  0.79  0.02  0.34  0.11 ]
[ 0.94  0.89  0.18  0.99  1.00  0.91  0.95  1.00  0.84  0.11  0.97  0.98 ]
[ 0.47  0.85  0.95  0.07  0.83  0.85  0.01  0.06  0.01  0.90  0.02  0.87 ]
[ 1.00  0.03  0.96  1.00  0.98  0.85  0.80  0.94  0.93  0.90  0.87  0.99 ]
[ 0.02  0.49  0.04  0.24  0.94  0.01  0.91  0.69  0.84  0.63  0.06  0.64 ]
[ 0.28  0.87  0.97  1.00  0.52  0.02  0.97  0.17  0.43  0.64  0.08  0.98 ]
[ 0.69  0.86  0.01  0.03  0.79  0.02  0.11  0.04  0.01  0.18  0.81  0.77 ]
[ 0.72  0.65  0.98  0.23  1.00  0.09  0.97  0.99  0.92  0.84  0.06  0.33 ]
[ 0.01  0.12  0.01  0.01  0.67  0.86  0.98  0.97  0.70  0.01  0.91  0.03 ]
[ 0.37  0.93  0.97  1.00  0.98  0.22  0.94  0.02  0.94  0.63  0.22  0.99 ]
[ 0.75  0.50  0.98  0.25  0.74  0.74  0.29  0.98  0.01  0.12  0.97  0.05 ]
[ 0.23  0.86  0.98  0.13  0.97  0.67  0.77  0.03  0.98  0.01  0.98  0.91 ]
[ 0.75  0.88  0.07  1.00  0.89  0.79  0.79  0.99  0.99  0.01  0.05  0.03 ]
[ 0.26  1.00  0.98  0.04  0.69  0.02  0.95  0.04  0.81  0.12  0.97  0.98 ]
[ 0.20  0.07  0.01  0.97  0.47  0.02  0.16  0.20  0.01  0.01  0.36  0.03 ]
[ 0.43  0.36  0.96  0.02  0.97  0.41  0.06  0.01  0.76  0.13  0.94  0.47 ]
[ 0.97  0.98  0.99  1.00  0.99  0.97  0.96  0.33  0.97  0.98  0.99  0.99 ]
[ 0.01  0.92  0.99  0.97  0.86  0.05  0.99  0.94  0.95  0.99  1.00  1.00 ]
[ 0.02  0.03  0.01  0.36  0.27  0.02  0.87  0.56  0.85  0.51  0.75  0.53 ]
[ 0.93  0.92  0.94  0.95  0.99  0.79  0.97  0.88  0.11  0.21  0.04  0.05 ]
[ 0.29  0.94  0.63  0.91  0.79  0.04  0.77  0.69  0.05  0.89  0.39  0.27 ]
[ 0.93  0.94  0.96  0.99  0.96  0.70  0.97  0.94  0.97  0.05  0.92  0.76 ]
[ 0.98  0.89  0.19  0.87  0.59  0.01  0.57  0.90  0.84  0.15  0.62  0.13 ]
[ 0.90  0.93  0.99  0.53  0.97  0.45  0.25  0.75  0.93  0.76  0.20  0.87 ]
[ 0.59  0.06  0.27  0.04  0.31  0.79  0.85  0.01  0.69  0.09  0.16  0.01 ]
[ 0.50  0.94  0.87  0.91  0.94  0.64  0.07  0.80  0.78  0.93  0.20  0.99 ]
[ 0.07  0.02  0.01  0.29  0.70  0.04  0.48  0.03  0.13  0.03  0.01  0.01 ]
[ 0.56  0.93  0.93  0.98  0.99  0.46  0.87  0.95  0.03  0.94  0.75  1.00 ]
[ 0.03  0.01  0.86  0.70  0.01  0.22  0.01  0.44  0.68  0.90  0.03  0.87 ]
[ 0.08  0.86  0.91  0.75  0.98  0.05  0.43  0.12  0.11  0.96  0.73  0.93 ]
[ 0.01  0.06  0.39  0.98  0.94  0.01  0.03  0.02  0.99  0.21  0.01  0.24 ]
[ 0.57  0.81  0.97  0.80  0.88  0.68  0.97  0.90  0.43  0.94  0.36  0.79 ]
[ 1.00  0.44  0.57  0.01  0.02  0.86  0.58  0.91  0.01  0.93  0.52  0.22 ]
[ 0.81  0.72  0.01  0.84  0.99  0.05  0.24  0.88  0.14  0.75  0.77  0.99 ]
[ 1.00  0.98  0.99  1.00  0.85  0.99  0.94  0.94  1.00  0.94  0.95  0.84 ]
[ 0.75  0.89  0.99  0.98  0.94  0.01  0.91  0.01  0.93  1.00  0.99  0.99 ]
[ 0.15  0.86  0.97  0.82  0.91  0.04  0.85  0.98  0.83  0.46  0.77  0.92 ]
[ 0.98  0.93  0.93  0.96  0.77  0.67  0.93  0.94  0.89  0.17  0.81  0.99 ]
[ 0.05  0.94  0.01  0.64  0.85  0.63  0.01  0.85  0.05  0.91  0.90  0.97 ]
[ 0.62  0.96  0.28  0.88  0.97  0.77  1.00  0.99  0.89  0.69  0.97  0.99 ]
[ 0.99  0.98  0.77  0.36  0.02  0.71  0.20  0.80  0.90  0.14  0.67  0.26 ]
[ 0.98  0.98  0.42  0.93  0.45  0.93  0.95  0.45  0.82  0.54  0.94  0.82 ]
[ 0.77  0.93  0.55  0.60  0.98  0.01  0.80  0.58  0.34  0.04  0.95  0.98 ]
[ 0.19  0.98  0.88  0.86  0.89  0.97  0.94  0.97  0.97  0.79  0.99  0.90 ]
[ 0.27  0.01  0.82  0.40  0.26  0.91  0.64  0.98  0.85  0.54  0.96  0.86 ]
[ 0.48  0.99  0.86  0.83  0.89  0.99  0.98  0.20  0.68  0.95  0.84  0.90 ]
[ 0.04  0.21  0.03  0.74  0.68  0.18  0.96  0.01  0.70  0.18  0.44  0.01 ]
[ 0.85  0.43  0.99  0.98  0.99  0.99  0.97  0.68  0.93  0.46  0.78  0.60 ]
[ 0.35  0.97  0.97  0.34  0.93  0.54  0.90  0.89  0.92  1.00  0.30  0.98 ]
[ 0.93  0.87  0.04  0.51  0.99  0.78  0.92  0.96  0.92  0.85  0.80  0.96 ]
[ 0.98  0.29  0.04  0.72  0.77  0.67  0.75  0.85  0.94  0.08  0.61  0.11 ]
[ 0.65  0.29  0.90  0.84  0.96  0.01  0.36  0.95  0.64  0.84  0.59  0.92 ]

01/29 06:06:10 AM | === Batch 14/250
01/29 06:06:11 AM | loss = 0.469 + 0.131 + 0.051 = 0.651
01/29 06:06:11 AM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.01  0.98  0.03  0.85  0.01  0.96  0.01  1.00  0.01  0.06  0.97  0.11 ]
[ 0.96  0.02  0.36  1.00  1.00  0.99  0.76  0.96  0.88  0.99  0.99  1.00 ]
[ 0.05  0.43  0.01  0.37  0.83  0.03  0.13  1.00  0.83  0.02  0.36  0.12 ]
[ 0.96  0.91  0.18  0.99  1.00  0.91  0.96  1.00  0.85  0.10  0.97  0.98 ]
[ 0.53  0.90  0.97  0.07  0.85  0.89  0.01  0.06  0.01  0.91  0.02  0.90 ]
[ 1.00  0.03  0.96  1.00  0.98  0.86  0.80  0.96  0.93  0.90  0.90  0.99 ]
[ 0.02  0.56  0.03  0.28  0.95  0.01  0.94  0.74  0.86  0.70  0.06  0.71 ]
[ 0.24  0.90  0.97  1.00  0.62  0.01  0.98  0.18  0.47  0.65  0.07  0.99 ]
[ 0.77  0.90  0.01  0.03  0.85  0.01  0.11  0.04  0.01  0.17  0.85  0.80 ]
[ 0.73  0.69  0.98  0.28  1.00  0.07  0.97  0.99  0.93  0.85  0.06  0.33 ]
[ 0.01  0.12  0.01  0.01  0.75  0.89  0.99  0.97  0.78  0.01  0.93  0.02 ]
[ 0.33  0.94  0.98  1.00  0.98  0.18  0.95  0.02  0.94  0.62  0.26  1.00 ]
[ 0.80  0.56  0.99  0.24  0.80  0.79  0.34  0.99  0.01  0.13  0.98  0.04 ]
[ 0.20  0.80  0.99  0.13  0.97  0.66  0.79  0.02  0.99  0.01  0.98  0.92 ]
[ 0.82  0.87  0.06  1.00  0.91  0.80  0.80  0.99  0.99  0.01  0.04  0.02 ]
[ 0.23  1.00  0.99  0.04  0.70  0.01  0.95  0.03  0.82  0.10  0.98  0.98 ]
[ 0.24  0.06  0.01  0.98  0.54  0.02  0.17  0.25  0.01  0.01  0.40  0.02 ]
[ 0.39  0.28  0.96  0.02  0.98  0.38  0.05  0.01  0.76  0.11  0.94  0.47 ]
[ 0.98  0.98  0.99  1.00  1.00  0.97  0.96  0.38  0.97  0.98  0.99  0.99 ]
[ 0.01  0.93  0.99  0.97  0.89  0.05  0.99  0.94  0.96  0.99  1.00  1.00 ]
[ 0.02  0.02  0.01  0.40  0.28  0.02  0.90  0.65  0.87  0.57  0.80  0.59 ]
[ 0.94  0.93  0.95  0.95  0.99  0.79  0.97  0.88  0.08  0.22  0.03  0.05 ]
[ 0.33  0.96  0.70  0.93  0.82  0.03  0.83  0.72  0.04  0.91  0.43  0.32 ]
[ 0.94  0.95  0.97  0.99  0.97  0.70  0.98  0.95  0.97  0.04  0.92  0.83 ]
[ 0.98  0.90  0.20  0.90  0.64  0.01  0.63  0.92  0.85  0.18  0.67  0.11 ]
[ 0.91  0.93  0.99  0.57  0.98  0.45  0.27  0.80  0.95  0.79  0.19  0.87 ]
[ 0.66  0.06  0.29  0.03  0.33  0.83  0.89  0.01  0.71  0.08  0.16  0.01 ]
[ 0.53  0.94  0.88  0.92  0.95  0.64  0.06  0.82  0.81  0.94  0.19  0.99 ]
[ 0.07  0.01  0.01  0.36  0.78  0.04  0.47  0.03  0.14  0.02  0.01  0.01 ]
[ 0.59  0.94  0.93  0.98  0.99  0.45  0.88  0.96  0.02  0.94  0.77  1.00 ]
[ 0.03  0.01  0.88  0.77  0.01  0.23  0.01  0.51  0.73  0.92  0.02  0.90 ]
[ 0.06  0.87  0.92  0.81  0.99  0.04  0.42  0.09  0.11  0.97  0.73  0.93 ]
[ 0.01  0.05  0.40  0.98  0.95  0.01  0.03  0.02  0.99  0.23  0.01  0.26 ]
[ 0.60  0.82  0.98  0.83  0.91  0.69  0.97  0.91  0.42  0.95  0.37  0.84 ]
[ 1.00  0.47  0.60  0.01  0.01  0.89  0.67  0.93  0.01  0.94  0.55  0.26 ]
[ 0.82  0.75  0.01  0.87  0.99  0.04  0.25  0.89  0.15  0.77  0.79  0.99 ]
[ 1.00  0.98  0.99  1.00  0.86  0.99  0.94  0.95  1.00  0.95  0.96  0.85 ]
[ 0.74  0.90  0.99  0.98  0.94  0.01  0.91  0.01  0.93  1.00  0.99  0.99 ]
[ 0.15  0.89  0.97  0.86  0.92  0.04  0.87  0.99  0.84  0.48  0.81  0.95 ]
[ 0.98  0.93  0.94  0.97  0.81  0.70  0.93  0.96  0.89  0.20  0.82  0.99 ]
[ 0.04  0.95  0.01  0.70  0.86  0.68  0.01  0.88  0.04  0.92  0.92  0.97 ]
[ 0.62  0.96  0.25  0.90  0.98  0.79  1.00  0.99  0.91  0.74  0.97  0.99 ]
[ 0.99  0.98  0.82  0.39  0.02  0.73  0.22  0.83  0.92  0.12  0.73  0.28 ]
[ 0.98  0.98  0.44  0.94  0.47  0.94  0.95  0.49  0.86  0.58  0.95  0.83 ]
[ 0.82  0.94  0.59  0.58  0.99  0.01  0.84  0.63  0.41  0.03  0.96  0.98 ]
[ 0.21  0.98  0.90  0.87  0.92  0.98  0.94  0.97  0.97  0.79  0.99  0.92 ]
[ 0.23  0.01  0.84  0.41  0.27  0.93  0.65  0.98  0.86  0.57  0.97  0.88 ]
[ 0.53  0.99  0.88  0.86  0.90  0.99  0.99  0.19  0.72  0.95  0.85  0.91 ]
[ 0.04  0.19  0.02  0.76  0.71  0.17  0.97  0.01  0.65  0.18  0.40  0.01 ]
[ 0.88  0.43  0.99  0.98  0.99  0.99  0.97  0.68  0.94  0.50  0.79  0.61 ]
[ 0.34  0.97  0.97  0.36  0.93  0.60  0.90  0.92  0.93  1.00  0.31  0.98 ]
[ 0.94  0.87  0.03  0.50  0.99  0.77  0.93  0.97  0.94  0.83  0.82  0.96 ]
[ 0.99  0.25  0.03  0.75  0.75  0.67  0.73  0.87  0.94  0.08  0.62  0.10 ]
[ 0.66  0.28  0.88  0.84  0.96  0.01  0.38  0.96  0.58  0.82  0.57  0.91 ]

01/29 06:06:11 AM | === Batch 15/250
01/29 06:06:12 AM | loss = 0.319 + 0.035 + 0.047 = 0.402
01/29 06:06:13 AM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.00  0.99  0.02  0.87  0.01  0.96  0.00  1.00  0.00  0.05  0.98  0.11 ]
[ 0.96  0.02  0.33  1.00  1.00  0.99  0.78  0.97  0.88  0.99  1.00  1.00 ]
[ 0.05  0.49  0.00  0.41  0.84  0.02  0.14  1.00  0.86  0.02  0.36  0.13 ]
[ 0.97  0.93  0.17  1.00  1.00  0.92  0.96  1.00  0.84  0.10  0.97  0.99 ]
[ 0.56  0.93  0.98  0.06  0.85  0.91  0.00  0.05  0.00  0.92  0.01  0.91 ]
[ 1.00  0.02  0.96  1.00  0.99  0.87  0.81  0.97  0.94  0.90  0.92  1.00 ]
[ 0.01  0.61  0.03  0.32  0.96  0.01  0.96  0.79  0.88  0.75  0.06  0.77 ]
[ 0.23  0.92  0.97  1.00  0.70  0.01  0.98  0.18  0.49  0.67  0.07  0.99 ]
[ 0.83  0.92  0.00  0.03  0.88  0.01  0.12  0.04  0.01  0.15  0.89  0.79 ]
[ 0.76  0.73  0.99  0.32  1.00  0.06  0.98  0.99  0.93  0.85  0.05  0.32 ]
[ 0.01  0.11  0.00  0.01  0.79  0.91  0.99  0.98  0.83  0.00  0.93  0.02 ]
[ 0.31  0.95  0.98  1.00  0.99  0.15  0.95  0.02  0.95  0.62  0.29  1.00 ]
[ 0.85  0.59  0.99  0.23  0.83  0.82  0.40  0.99  0.01  0.14  0.98  0.04 ]
[ 0.17  0.72  0.99  0.13  0.98  0.64  0.82  0.02  0.99  0.01  0.99  0.93 ]
[ 0.86  0.87  0.06  1.00  0.93  0.80  0.81  0.99  0.99  0.01  0.04  0.02 ]
[ 0.21  1.00  0.99  0.04  0.69  0.01  0.95  0.03  0.83  0.09  0.98  0.99 ]
[ 0.29  0.05  0.01  0.98  0.58  0.01  0.17  0.31  0.01  0.01  0.41  0.02 ]
[ 0.38  0.22  0.97  0.01  0.98  0.35  0.04  0.01  0.76  0.09  0.94  0.45 ]
[ 0.98  0.99  0.99  1.00  1.00  0.97  0.97  0.41  0.97  0.98  0.99  0.99 ]
[ 0.00  0.94  0.99  0.97  0.91  0.04  0.99  0.95  0.96  0.99  1.00  1.00 ]
[ 0.02  0.02  0.00  0.42  0.28  0.01  0.92  0.73  0.89  0.60  0.82  0.63 ]
[ 0.95  0.94  0.96  0.95  0.99  0.79  0.98  0.88  0.07  0.22  0.03  0.05 ]
[ 0.36  0.97  0.75  0.95  0.83  0.02  0.87  0.73  0.04  0.93  0.47  0.34 ]
[ 0.95  0.95  0.97  0.99  0.97  0.70  0.98  0.95  0.97  0.03  0.93  0.88 ]
[ 0.99  0.91  0.22  0.92  0.68  0.00  0.68  0.93  0.86  0.22  0.70  0.10 ]
[ 0.92  0.94  0.99  0.61  0.98  0.45  0.29  0.84  0.95  0.81  0.19  0.87 ]
[ 0.72  0.06  0.32  0.03  0.34  0.86  0.92  0.01  0.73  0.08  0.15  0.01 ]
[ 0.56  0.95  0.89  0.92  0.96  0.65  0.05  0.84  0.83  0.94  0.19  0.99 ]
[ 0.07  0.01  0.01  0.43  0.83  0.04  0.46  0.02  0.15  0.02  0.01  0.00 ]
[ 0.63  0.94  0.92  0.98  0.99  0.45  0.89  0.96  0.02  0.95  0.79  1.00 ]
[ 0.02  0.00  0.91  0.82  0.01  0.25  0.01  0.56  0.76  0.93  0.02  0.92 ]
[ 0.06  0.87  0.93  0.84  0.99  0.04  0.39  0.07  0.10  0.97  0.73  0.93 ]
[ 0.01  0.04  0.42  0.98  0.96  0.01  0.02  0.02  0.99  0.24  0.00  0.27 ]
[ 0.63  0.83  0.98  0.85  0.93  0.70  0.97  0.92  0.42  0.95  0.38  0.88 ]
[ 1.00  0.46  0.62  0.01  0.01  0.91  0.74  0.94  0.01  0.95  0.56  0.28 ]
[ 0.84  0.76  0.01  0.89  0.99  0.03  0.26  0.90  0.15  0.77  0.82  0.99 ]
[ 1.00  0.99  0.99  1.00  0.87  0.99  0.94  0.95  1.00  0.95  0.96  0.87 ]
[ 0.74  0.90  0.99  0.98  0.95  0.00  0.91  0.00  0.93  1.00  0.99  0.99 ]
[ 0.14  0.90  0.97  0.88  0.93  0.04  0.88  0.99  0.85  0.49  0.84  0.96 ]
[ 0.98  0.94  0.94  0.98  0.83  0.72  0.93  0.97  0.90  0.22  0.83  0.99 ]
[ 0.04  0.96  0.00  0.76  0.87  0.72  0.00  0.89  0.03  0.93  0.94  0.98 ]
[ 0.62  0.96  0.23  0.91  0.98  0.82  1.00  0.99  0.92  0.78  0.97  0.99 ]
[ 0.99  0.98  0.86  0.41  0.02  0.75  0.21  0.85  0.93  0.11  0.78  0.30 ]
[ 0.98  0.98  0.45  0.94  0.46  0.94  0.95  0.52  0.89  0.61  0.96  0.85 ]
[ 0.86  0.94  0.61  0.55  0.99  0.00  0.86  0.66  0.46  0.03  0.97  0.98 ]
[ 0.23  0.98  0.91  0.87  0.94  0.98  0.95  0.97  0.97  0.79  1.00  0.93 ]
[ 0.19  0.00  0.86  0.40  0.27  0.94  0.64  0.98  0.86  0.60  0.97  0.89 ]
[ 0.55  0.99  0.89  0.88  0.90  0.99  0.99  0.18  0.74  0.96  0.87  0.92 ]
[ 0.04  0.18  0.02  0.79  0.73  0.16  0.98  0.01  0.60  0.16  0.37  0.00 ]
[ 0.89  0.43  0.99  0.99  0.99  0.99  0.98  0.67  0.95  0.54  0.79  0.61 ]
[ 0.33  0.97  0.98  0.37  0.92  0.64  0.91  0.94  0.94  1.00  0.32  0.98 ]
[ 0.95  0.87  0.03  0.49  0.99  0.76  0.94  0.97  0.95  0.82  0.82  0.96 ]
[ 0.99  0.22  0.02  0.75  0.74  0.65  0.70  0.89  0.94  0.07  0.63  0.09 ]
[ 0.68  0.28  0.87  0.85  0.96  0.01  0.40  0.96  0.54  0.80  0.57  0.89 ]

01/29 06:06:13 AM | === Batch 16/250
01/29 06:06:14 AM | loss = 0.367 + 0.126 + 0.045 = 0.538
01/29 06:06:14 AM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.00  0.99  0.02  0.89  0.01  0.97  0.00  1.00  0.00  0.05  0.98  0.10 ]
[ 0.96  0.01  0.30  1.00  1.00  0.99  0.80  0.98  0.89  0.99  1.00  1.00 ]
[ 0.04  0.55  0.00  0.44  0.86  0.02  0.14  1.00  0.88  0.02  0.33  0.13 ]
[ 0.98  0.94  0.17  1.00  1.00  0.92  0.97  1.00  0.85  0.09  0.98  0.99 ]
[ 0.57  0.95  0.98  0.05  0.84  0.93  0.00  0.05  0.00  0.93  0.01  0.93 ]
[ 1.00  0.02  0.96  1.00  0.99  0.88  0.81  0.98  0.94  0.91  0.94  1.00 ]
[ 0.01  0.63  0.02  0.34  0.97  0.01  0.97  0.82  0.89  0.77  0.06  0.80 ]
[ 0.22  0.93  0.97  1.00  0.77  0.01  0.98  0.18  0.52  0.67  0.06  0.99 ]
[ 0.88  0.93  0.00  0.02  0.91  0.01  0.12  0.04  0.00  0.13  0.91  0.77 ]
[ 0.79  0.75  0.99  0.38  1.00  0.05  0.98  0.99  0.94  0.86  0.05  0.29 ]
[ 0.00  0.10  0.00  0.01  0.82  0.93  0.99  0.98  0.86  0.00  0.93  0.01 ]
[ 0.31  0.95  0.98  1.00  0.99  0.13  0.96  0.01  0.95  0.61  0.33  1.00 ]
[ 0.88  0.60  0.99  0.21  0.86  0.84  0.44  0.99  0.01  0.15  0.98  0.04 ]
[ 0.16  0.67  0.99  0.13  0.98  0.63  0.83  0.02  0.99  0.01  0.99  0.93 ]
[ 0.90  0.86  0.05  1.00  0.94  0.80  0.83  1.00  0.99  0.01  0.03  0.01 ]
[ 0.20  1.00  0.99  0.03  0.67  0.01  0.95  0.02  0.82  0.08  0.98  0.99 ]
[ 0.33  0.05  0.01  0.98  0.61  0.01  0.16  0.35  0.00  0.00  0.40  0.02 ]
[ 0.39  0.17  0.97  0.01  0.98  0.33  0.03  0.00  0.75  0.08  0.94  0.43 ]
[ 0.99  0.99  0.99  1.00  1.00  0.97  0.97  0.42  0.97  0.99  0.99  0.99 ]
[ 0.00  0.95  0.99  0.98  0.93  0.03  0.99  0.95  0.97  0.99  1.00  1.00 ]
[ 0.01  0.02  0.00  0.40  0.28  0.01  0.94  0.78  0.90  0.61  0.84  0.63 ]
[ 0.95  0.94  0.96  0.96  0.99  0.79  0.98  0.87  0.05  0.21  0.02  0.05 ]
[ 0.37  0.97  0.78  0.96  0.84  0.02  0.89  0.72  0.04  0.94  0.49  0.34 ]
[ 0.96  0.96  0.97  1.00  0.98  0.70  0.98  0.95  0.98  0.03  0.94  0.91 ]
[ 0.99  0.91  0.22  0.93  0.73  0.00  0.71  0.93  0.86  0.26  0.74  0.09 ]
[ 0.93  0.95  0.99  0.63  0.99  0.45  0.31  0.86  0.96  0.83  0.18  0.87 ]
[ 0.77  0.05  0.33  0.03  0.35  0.88  0.94  0.01  0.74  0.07  0.14  0.01 ]
[ 0.61  0.95  0.89  0.93  0.96  0.66  0.05  0.84  0.84  0.95  0.18  0.99 ]
[ 0.07  0.01  0.01  0.47  0.87  0.04  0.44  0.02  0.15  0.02  0.01  0.00 ]
[ 0.67  0.95  0.92  0.98  0.99  0.44  0.90  0.96  0.02  0.96  0.81  1.00 ]
[ 0.02  0.00  0.92  0.85  0.01  0.25  0.01  0.59  0.77  0.94  0.02  0.94 ]
[ 0.05  0.87  0.93  0.87  0.99  0.03  0.36  0.06  0.10  0.98  0.73  0.93 ]
[ 0.00  0.04  0.42  0.99  0.96  0.00  0.02  0.02  0.99  0.26  0.00  0.26 ]
[ 0.68  0.84  0.98  0.87  0.95  0.71  0.98  0.92  0.44  0.96  0.40  0.90 ]
[ 1.00  0.44  0.64  0.01  0.01  0.92  0.80  0.95  0.01  0.95  0.58  0.29 ]
[ 0.86  0.78  0.01  0.91  1.00  0.02  0.26  0.91  0.13  0.78  0.84  0.99 ]
[ 1.00  0.99  0.99  1.00  0.87  0.99  0.93  0.96  1.00  0.95  0.97  0.87 ]
[ 0.75  0.90  0.99  0.98  0.96  0.00  0.91  0.00  0.93  1.00  0.99  0.99 ]
[ 0.13  0.92  0.98  0.90  0.93  0.04  0.89  0.99  0.85  0.48  0.86  0.97 ]
[ 0.99  0.94  0.94  0.98  0.86  0.74  0.94  0.98  0.90  0.24  0.84  0.99 ]
[ 0.03  0.96  0.00  0.80  0.87  0.75  0.00  0.90  0.03  0.94  0.95  0.98 ]
[ 0.63  0.96  0.23  0.92  0.99  0.84  1.00  0.99  0.93  0.81  0.97  0.99 ]
[ 0.99  0.98  0.89  0.42  0.01  0.76  0.20  0.87  0.94  0.09  0.82  0.31 ]
[ 0.99  0.98  0.45  0.94  0.44  0.94  0.96  0.55  0.91  0.64  0.96  0.86 ]
[ 0.88  0.95  0.63  0.51  0.99  0.00  0.87  0.67  0.52  0.03  0.97  0.98 ]
[ 0.26  0.98  0.92  0.88  0.95  0.98  0.95  0.98  0.97  0.79  1.00  0.94 ]
[ 0.17  0.00  0.87  0.37  0.27  0.95  0.63  0.99  0.87  0.58  0.98  0.90 ]
[ 0.54  0.99  0.90  0.90  0.90  0.99  0.99  0.18  0.76  0.96  0.88  0.93 ]
[ 0.03  0.17  0.02  0.82  0.74  0.15  0.98  0.01  0.55  0.16  0.33  0.00 ]
[ 0.90  0.43  1.00  0.99  0.99  0.99  0.98  0.67  0.95  0.57  0.79  0.60 ]
[ 0.31  0.98  0.98  0.37  0.92  0.67  0.90  0.95  0.94  1.00  0.31  0.98 ]
[ 0.96  0.86  0.02  0.47  0.99  0.74  0.94  0.98  0.96  0.81  0.83  0.96 ]
[ 0.99  0.19  0.02  0.73  0.74  0.64  0.68  0.90  0.94  0.06  0.64  0.08 ]
[ 0.71  0.27  0.87  0.85  0.96  0.00  0.43  0.97  0.51  0.78  0.55  0.88 ]

01/29 06:06:14 AM | === Batch 17/250
01/29 06:06:15 AM | loss = 0.564 + 0.178 + 0.043 = 0.785
01/29 06:06:16 AM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.00  0.99  0.02  0.90  0.01  0.97  0.00  1.00  0.00  0.04  0.99  0.10 ]
[ 0.97  0.01  0.26  1.00  1.00  0.99  0.82  0.98  0.90  0.99  1.00  1.00 ]
[ 0.04  0.58  0.00  0.46  0.87  0.02  0.14  1.00  0.89  0.01  0.29  0.13 ]
[ 0.98  0.95  0.16  1.00  1.00  0.93  0.97  1.00  0.85  0.09  0.98  0.99 ]
[ 0.55  0.96  0.99  0.05  0.82  0.94  0.00  0.04  0.00  0.94  0.01  0.93 ]
[ 1.00  0.01  0.96  1.00  0.99  0.88  0.82  0.98  0.95  0.91  0.95  1.00 ]
[ 0.01  0.63  0.02  0.35  0.97  0.00  0.97  0.85  0.90  0.79  0.06  0.83 ]
[ 0.22  0.94  0.98  1.00  0.82  0.01  0.98  0.17  0.54  0.69  0.05  0.99 ]
[ 0.90  0.94  0.00  0.02  0.93  0.01  0.12  0.04  0.00  0.11  0.93  0.74 ]
[ 0.81  0.77  0.99  0.41  1.00  0.04  0.98  0.99  0.94  0.87  0.05  0.25 ]
[ 0.00  0.10  0.00  0.00  0.84  0.94  0.99  0.98  0.89  0.00  0.93  0.01 ]
[ 0.31  0.95  0.98  1.00  0.99  0.12  0.97  0.01  0.95  0.60  0.37  1.00 ]
[ 0.90  0.59  0.99  0.19  0.88  0.85  0.48  0.99  0.00  0.15  0.98  0.04 ]
[ 0.14  0.61  0.99  0.12  0.98  0.64  0.84  0.01  0.99  0.01  0.99  0.94 ]
[ 0.92  0.85  0.05  1.00  0.95  0.78  0.84  1.00  0.99  0.00  0.03  0.01 ]
[ 0.19  1.00  0.99  0.03  0.63  0.01  0.95  0.02  0.82  0.06  0.98  0.99 ]
[ 0.36  0.04  0.01  0.98  0.61  0.01  0.15  0.38  0.00  0.00  0.37  0.01 ]
[ 0.40  0.14  0.97  0.01  0.98  0.33  0.03  0.00  0.74  0.07  0.94  0.40 ]
[ 0.99  0.99  0.99  1.00  1.00  0.97  0.97  0.43  0.97  0.99  0.99  0.99 ]
[ 0.00  0.96  0.99  0.98  0.94  0.03  0.99  0.95  0.97  0.99  1.00  1.00 ]
[ 0.01  0.02  0.00  0.37  0.27  0.01  0.95  0.83  0.90  0.60  0.85  0.62 ]
[ 0.96  0.95  0.97  0.96  0.99  0.80  0.98  0.87  0.04  0.20  0.02  0.05 ]
[ 0.37  0.98  0.80  0.97  0.85  0.02  0.91  0.69  0.03  0.94  0.51  0.32 ]
[ 0.97  0.96  0.97  1.00  0.98  0.71  0.99  0.95  0.98  0.02  0.94  0.94 ]
[ 0.99  0.92  0.22  0.94  0.77  0.00  0.73  0.94  0.87  0.29  0.76  0.08 ]
[ 0.94  0.95  0.99  0.65  0.99  0.45  0.33  0.88  0.96  0.83  0.17  0.89 ]
[ 0.80  0.05  0.34  0.02  0.35  0.90  0.95  0.01  0.72  0.06  0.13  0.01 ]
[ 0.63  0.96  0.88  0.93  0.97  0.67  0.04  0.85  0.85  0.95  0.18  0.99 ]
[ 0.06  0.01  0.01  0.49  0.89  0.03  0.42  0.02  0.13  0.02  0.01  0.00 ]
[ 0.70  0.96  0.91  0.99  0.99  0.45  0.91  0.96  0.02  0.96  0.83  1.00 ]
[ 0.02  0.00  0.94  0.88  0.00  0.25  0.01  0.60  0.77  0.95  0.02  0.95 ]
[ 0.04  0.88  0.93  0.89  0.99  0.03  0.30  0.05  0.09  0.98  0.73  0.94 ]
[ 0.00  0.03  0.41  0.99  0.96  0.00  0.02  0.02  1.00  0.26  0.00  0.23 ]
[ 0.71  0.85  0.98  0.88  0.96  0.72  0.98  0.93  0.46  0.96  0.40  0.93 ]
[ 1.00  0.40  0.66  0.00  0.01  0.93  0.83  0.96  0.00  0.95  0.57  0.29 ]
[ 0.87  0.81  0.00  0.92  1.00  0.02  0.27  0.92  0.12  0.78  0.86  0.99 ]
[ 1.00  0.99  0.99  1.00  0.88  0.99  0.93  0.96  1.00  0.96  0.97  0.88 ]
[ 0.77  0.90  0.99  0.99  0.96  0.00  0.91  0.00  0.94  1.00  0.99  0.99 ]
[ 0.12  0.92  0.98  0.91  0.93  0.03  0.90  0.99  0.84  0.47  0.87  0.98 ]
[ 0.99  0.94  0.95  0.99  0.88  0.76  0.94  0.98  0.90  0.27  0.83  0.99 ]
[ 0.03  0.96  0.00  0.82  0.89  0.77  0.00  0.91  0.03  0.95  0.96  0.98 ]
[ 0.64  0.97  0.22  0.94  0.99  0.86  1.00  0.99  0.94  0.85  0.97  0.99 ]
[ 0.99  0.99  0.91  0.42  0.01  0.77  0.18  0.87  0.94  0.08  0.85  0.32 ]
[ 0.99  0.99  0.44  0.94  0.40  0.95  0.96  0.57  0.93  0.64  0.97  0.87 ]
[ 0.90  0.94  0.65  0.48  0.99  0.00  0.88  0.68  0.60  0.02  0.97  0.99 ]
[ 0.30  0.98  0.92  0.89  0.96  0.98  0.95  0.98  0.97  0.77  1.00  0.95 ]
[ 0.15  0.00  0.88  0.35  0.27  0.95  0.63  0.99  0.87  0.53  0.98  0.90 ]
[ 0.52  0.99  0.90  0.91  0.90  0.99  0.99  0.18  0.78  0.96  0.89  0.93 ]
[ 0.03  0.16  0.01  0.84  0.75  0.14  0.98  0.01  0.47  0.15  0.30  0.00 ]
[ 0.91  0.43  1.00  0.99  0.99  0.99  0.98  0.67  0.96  0.59  0.81  0.58 ]
[ 0.29  0.98  0.98  0.35  0.92  0.68  0.90  0.96  0.95  1.00  0.30  0.98 ]
[ 0.96  0.85  0.02  0.42  1.00  0.72  0.95  0.98  0.97  0.78  0.84  0.95 ]
[ 0.99  0.17  0.01  0.70  0.74  0.62  0.66  0.90  0.94  0.05  0.63  0.07 ]
[ 0.74  0.27  0.87  0.86  0.97  0.00  0.46  0.97  0.51  0.76  0.49  0.87 ]

01/29 06:06:16 AM | === Batch 18/250
01/29 06:06:17 AM | loss = 0.334 + 0.196 + 0.041 = 0.571
01/29 06:06:17 AM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.00  0.99  0.02  0.90  0.01  0.97  0.00  1.00  0.00  0.03  0.99  0.09 ]
[ 0.97  0.01  0.21  1.00  1.00  0.99  0.84  0.99  0.90  0.99  1.00  1.00 ]
[ 0.04  0.59  0.00  0.47  0.88  0.02  0.13  1.00  0.90  0.01  0.25  0.12 ]
[ 0.99  0.96  0.15  1.00  1.00  0.92  0.97  1.00  0.84  0.08  0.98  0.99 ]
[ 0.51  0.96  0.99  0.04  0.79  0.95  0.00  0.04  0.00  0.94  0.01  0.94 ]
[ 1.00  0.01  0.96  1.00  0.99  0.89  0.83  0.98  0.95  0.91  0.96  1.00 ]
[ 0.01  0.62  0.02  0.34  0.97  0.00  0.98  0.86  0.91  0.81  0.05  0.85 ]
[ 0.22  0.95  0.98  1.00  0.86  0.01  0.98  0.16  0.54  0.70  0.05  0.99 ]
[ 0.92  0.95  0.00  0.02  0.94  0.01  0.12  0.03  0.00  0.10  0.94  0.68 ]
[ 0.84  0.77  0.99  0.43  1.00  0.04  0.98  0.99  0.95  0.87  0.05  0.22 ]
[ 0.00  0.09  0.00  0.00  0.85  0.95  0.99  0.99  0.90  0.00  0.93  0.01 ]
[ 0.31  0.96  0.98  1.00  0.99  0.12  0.97  0.01  0.96  0.59  0.40  1.00 ]
[ 0.92  0.57  0.99  0.17  0.89  0.86  0.50  0.99  0.00  0.14  0.98  0.03 ]
[ 0.13  0.61  0.99  0.11  0.98  0.66  0.85  0.01  0.99  0.00  0.99  0.94 ]
[ 0.93  0.84  0.04  1.00  0.96  0.77  0.85  1.00  1.00  0.00  0.02  0.01 ]
[ 0.18  1.00  0.99  0.03  0.60  0.01  0.96  0.02  0.82  0.06  0.98  0.99 ]
[ 0.38  0.04  0.00  0.98  0.60  0.01  0.13  0.40  0.00  0.00  0.33  0.01 ]
[ 0.42  0.12  0.97  0.01  0.98  0.33  0.02  0.00  0.73  0.06  0.94  0.37 ]
[ 0.99  0.99  0.99  1.00  1.00  0.97  0.97  0.41  0.97  0.99  0.99  0.99 ]
[ 0.00  0.96  0.99  0.98  0.95  0.03  0.99  0.95  0.97  0.99  1.00  1.00 ]
[ 0.01  0.01  0.00  0.32  0.25  0.01  0.96  0.85  0.91  0.57  0.85  0.60 ]
[ 0.97  0.95  0.97  0.96  0.99  0.80  0.98  0.86  0.04  0.18  0.02  0.04 ]
[ 0.35  0.98  0.82  0.97  0.85  0.01  0.93  0.65  0.03  0.94  0.53  0.29 ]
[ 0.97  0.97  0.97  1.00  0.99  0.70  0.99  0.95  0.98  0.02  0.94  0.95 ]
[ 0.99  0.91  0.22  0.94  0.81  0.00  0.73  0.94  0.87  0.31  0.77  0.08 ]
[ 0.95  0.96  0.99  0.66  0.99  0.44  0.33  0.89  0.96  0.84  0.15  0.90 ]
[ 0.83  0.04  0.34  0.02  0.36  0.91  0.96  0.00  0.71  0.06  0.11  0.00 ]
[ 0.68  0.96  0.87  0.94  0.97  0.68  0.04  0.85  0.85  0.96  0.17  0.99 ]
[ 0.06  0.01  0.00  0.47  0.90  0.03  0.40  0.02  0.12  0.01  0.00  0.00 ]
[ 0.74  0.96  0.90  0.99  0.99  0.44  0.92  0.96  0.01  0.97  0.84  1.00 ]
[ 0.02  0.00  0.94  0.90  0.00  0.25  0.01  0.60  0.76  0.96  0.01  0.96 ]
[ 0.04  0.88  0.93  0.90  0.99  0.02  0.26  0.04  0.07  0.98  0.73  0.94 ]
[ 0.00  0.03  0.40  0.99  0.97  0.00  0.01  0.02  1.00  0.26  0.00  0.20 ]
[ 0.76  0.86  0.98  0.89  0.96  0.72  0.98  0.93  0.48  0.97  0.41  0.94 ]
[ 1.00  0.35  0.68  0.00  0.01  0.94  0.86  0.97  0.00  0.95  0.56  0.27 ]
[ 0.89  0.82  0.00  0.93  1.00  0.02  0.27  0.93  0.10  0.78  0.87  0.99 ]
[ 1.00  0.99  0.99  1.00  0.89  0.99  0.92  0.96  1.00  0.96  0.97  0.88 ]
[ 0.79  0.90  0.99  0.99  0.97  0.00  0.91  0.00  0.94  1.00  0.99  0.99 ]
[ 0.11  0.93  0.98  0.92  0.93  0.03  0.90  0.99  0.82  0.44  0.88  0.98 ]
[ 0.99  0.94  0.95  0.99  0.89  0.77  0.94  0.98  0.91  0.29  0.82  0.99 ]
[ 0.02  0.97  0.00  0.84  0.90  0.78  0.00  0.91  0.02  0.96  0.97  0.98 ]
[ 0.65  0.97  0.22  0.95  0.99  0.87  1.00  0.99  0.94  0.88  0.97  0.99 ]
[ 0.99  0.99  0.93  0.41  0.01  0.78  0.18  0.88  0.95  0.07  0.87  0.34 ]
[ 0.99  0.99  0.41  0.95  0.36  0.95  0.96  0.58  0.94  0.64  0.97  0.88 ]
[ 0.91  0.94  0.67  0.47  0.99  0.00  0.88  0.67  0.67  0.02  0.98  0.99 ]
[ 0.33  0.98  0.93  0.90  0.97  0.99  0.96  0.98  0.97  0.75  1.00  0.96 ]
[ 0.14  0.00  0.88  0.31  0.25  0.96  0.60  0.99  0.87  0.48  0.98  0.91 ]
[ 0.51  0.99  0.91  0.91  0.90  0.99  0.99  0.18  0.80  0.96  0.90  0.94 ]
[ 0.03  0.15  0.01  0.87  0.75  0.12  0.99  0.00  0.41  0.14  0.29  0.00 ]
[ 0.92  0.43  1.00  0.99  0.99  0.99  0.98  0.66  0.96  0.59  0.81  0.55 ]
[ 0.27  0.98  0.99  0.33  0.92  0.66  0.90  0.97  0.95  1.00  0.28  0.98 ]
[ 0.96  0.83  0.02  0.35  1.00  0.69  0.95  0.98  0.97  0.77  0.83  0.95 ]
[ 0.99  0.15  0.01  0.66  0.76  0.58  0.64  0.90  0.95  0.05  0.61  0.06 ]
[ 0.77  0.27  0.88  0.87  0.97  0.00  0.50  0.97  0.52  0.75  0.44  0.86 ]

01/29 06:06:17 AM | === Batch 19/250
01/29 06:06:18 AM | loss = 0.487 + 0.190 + 0.039 = 0.717
01/29 06:06:19 AM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.00  1.00  0.02  0.90  0.01  0.97  0.00  1.00  0.00  0.03  0.99  0.08 ]
[ 0.97  0.01  0.17  1.00  1.00  0.99  0.85  0.99  0.90  0.99  1.00  1.00 ]
[ 0.03  0.59  0.00  0.47  0.89  0.01  0.12  1.00  0.91  0.01  0.20  0.11 ]
[ 0.99  0.96  0.15  1.00  1.00  0.92  0.97  1.00  0.84  0.07  0.98  0.99 ]
[ 0.46  0.97  0.99  0.04  0.76  0.95  0.00  0.04  0.00  0.94  0.01  0.95 ]
[ 1.00  0.01  0.96  1.00  0.99  0.89  0.84  0.99  0.95  0.91  0.97  1.00 ]
[ 0.01  0.60  0.01  0.33  0.98  0.00  0.98  0.88  0.91  0.82  0.05  0.86 ]
[ 0.22  0.95  0.98  1.00  0.88  0.00  0.98  0.15  0.53  0.72  0.04  0.99 ]
[ 0.94  0.96  0.00  0.02  0.95  0.00  0.12  0.03  0.00  0.09  0.95  0.62 ]
[ 0.86  0.75  0.99  0.43  1.00  0.03  0.99  0.99  0.95  0.88  0.04  0.19 ]
[ 0.00  0.08  0.00  0.00  0.86  0.95  0.99  0.99  0.92  0.00  0.93  0.01 ]
[ 0.30  0.96  0.99  1.00  0.99  0.11  0.97  0.01  0.96  0.60  0.43  1.00 ]
[ 0.93  0.53  0.99  0.15  0.90  0.86  0.50  0.99  0.00  0.13  0.98  0.03 ]
[ 0.12  0.67  0.99  0.10  0.98  0.65  0.85  0.01  0.99  0.00  0.99  0.94 ]
[ 0.94  0.82  0.04  1.00  0.97  0.78  0.86  1.00  1.00  0.00  0.02  0.01 ]
[ 0.17  1.00  0.99  0.02  0.58  0.01  0.96  0.02  0.82  0.05  0.98  0.99 ]
[ 0.38  0.03  0.00  0.98  0.58  0.01  0.11  0.40  0.00  0.00  0.28  0.01 ]
[ 0.42  0.11  0.97  0.01  0.98  0.32  0.02  0.00  0.73  0.05  0.94  0.34 ]
[ 0.99  0.99  0.99  1.00  1.00  0.97  0.97  0.38  0.97  0.99  0.99  1.00 ]
[ 0.00  0.97  0.99  0.98  0.95  0.02  0.99  0.95  0.98  0.99  1.00  1.00 ]
[ 0.01  0.01  0.00  0.27  0.23  0.01  0.96  0.87  0.91  0.53  0.86  0.58 ]
[ 0.97  0.96  0.97  0.96  0.99  0.80  0.99  0.86  0.03  0.15  0.02  0.04 ]
[ 0.34  0.99  0.82  0.98  0.86  0.01  0.94  0.60  0.03  0.95  0.53  0.24 ]
[ 0.98  0.97  0.97  1.00  0.99  0.70  0.99  0.95  0.98  0.01  0.95  0.97 ]
[ 0.99  0.90  0.21  0.95  0.84  0.00  0.75  0.94  0.87  0.33  0.78  0.07 ]
[ 0.95  0.96  0.99  0.67  0.99  0.43  0.32  0.90  0.96  0.84  0.14  0.91 ]
[ 0.85  0.04  0.34  0.02  0.37  0.91  0.96  0.00  0.69  0.05  0.10  0.00 ]
[ 0.73  0.96  0.86  0.94  0.98  0.68  0.04  0.84  0.84  0.96  0.17  0.99 ]
[ 0.06  0.01  0.00  0.44  0.91  0.03  0.37  0.01  0.09  0.01  0.00  0.00 ]
[ 0.78  0.96  0.89  0.99  1.00  0.43  0.93  0.96  0.01  0.97  0.85  1.00 ]
[ 0.02  0.00  0.95  0.92  0.00  0.24  0.00  0.57  0.75  0.96  0.01  0.96 ]
[ 0.03  0.88  0.93  0.91  0.99  0.02  0.24  0.03  0.06  0.98  0.71  0.94 ]
[ 0.00  0.02  0.40  0.99  0.97  0.00  0.01  0.02  1.00  0.26  0.00  0.17 ]
[ 0.80  0.87  0.98  0.90  0.97  0.72  0.98  0.94  0.48  0.97  0.41  0.95 ]
[ 1.00  0.32  0.69  0.00  0.01  0.95  0.87  0.97  0.00  0.95  0.54  0.25 ]
[ 0.91  0.83  0.00  0.94  1.00  0.01  0.26  0.93  0.08  0.77  0.88  0.99 ]
[ 1.00  0.99  0.99  1.00  0.90  1.00  0.92  0.96  1.00  0.96  0.97  0.88 ]
[ 0.80  0.90  1.00  0.99  0.97  0.00  0.91  0.00  0.95  1.00  0.99  0.99 ]
[ 0.10  0.93  0.98  0.92  0.93  0.03  0.90  0.99  0.81  0.41  0.89  0.99 ]
[ 0.99  0.94  0.95  0.99  0.90  0.78  0.95  0.99  0.92  0.31  0.80  0.99 ]
[ 0.02  0.97  0.00  0.85  0.90  0.79  0.00  0.90  0.02  0.96  0.97  0.98 ]
[ 0.66  0.97  0.21  0.95  0.99  0.88  1.00  1.00  0.95  0.91  0.97  0.99 ]
[ 0.99  0.99  0.94  0.40  0.01  0.80  0.18  0.88  0.95  0.06  0.89  0.35 ]
[ 0.99  0.99  0.37  0.95  0.30  0.95  0.96  0.59  0.95  0.63  0.97  0.88 ]
[ 0.92  0.94  0.68  0.48  0.99  0.00  0.88  0.66  0.72  0.02  0.98  0.99 ]
[ 0.37  0.98  0.94  0.91  0.97  0.99  0.96  0.98  0.97  0.75  1.00  0.96 ]
[ 0.13  0.00  0.87  0.29  0.23  0.96  0.58  0.99  0.87  0.40  0.98  0.91 ]
[ 0.50  1.00  0.91  0.92  0.90  0.99  0.99  0.19  0.82  0.97  0.91  0.94 ]
[ 0.02  0.15  0.01  0.89  0.75  0.11  0.99  0.00  0.37  0.13  0.28  0.00 ]
[ 0.92  0.43  1.00  0.99  0.99  0.99  0.98  0.67  0.97  0.58  0.81  0.52 ]
[ 0.25  0.98  0.99  0.31  0.92  0.62  0.90  0.97  0.95  1.00  0.26  0.98 ]
[ 0.97  0.81  0.01  0.30  1.00  0.69  0.96  0.98  0.97  0.75  0.82  0.95 ]
[ 0.99  0.14  0.01  0.64  0.78  0.55  0.65  0.90  0.96  0.04  0.59  0.05 ]
[ 0.79  0.26  0.90  0.88  0.97  0.00  0.53  0.97  0.55  0.75  0.37  0.86 ]

01/29 06:06:19 AM | === Batch 20/250
01/29 06:06:19 AM | loss = 0.499 + 0.168 + 0.038 = 0.705
01/29 06:06:20 AM | === Batch 21/250
01/29 06:06:21 AM | loss = 0.387 + 0.135 + 0.037 = 0.558
01/29 06:06:22 AM | === Batch 22/250
01/29 06:06:22 AM | loss = 0.371 + 0.089 + 0.036 = 0.497
01/29 06:06:23 AM | === Batch 23/250
01/29 06:06:24 AM | loss = 0.580 + 0.036 + 0.035 = 0.651
01/29 06:06:25 AM | === Batch 24/250
01/29 06:06:25 AM | loss = 0.435 + 0.028 + 0.034 = 0.496
01/29 06:06:26 AM | === Batch 25/250
01/29 06:06:26 AM | loss = 0.708 + 0.042 + 0.033 = 0.783
01/29 06:06:27 AM | === Batch 26/250
01/29 06:06:28 AM | loss = 0.387 + 0.013 + 0.032 = 0.432
01/29 06:06:28 AM | === Batch 27/250
01/29 06:06:29 AM | loss = 0.294 + 0.038 + 0.030 = 0.362
01/29 06:06:30 AM | === Batch 28/250
01/29 06:06:30 AM | loss = 0.374 + 0.064 + 0.029 = 0.468
01/29 06:06:31 AM | === Batch 29/250
01/29 06:06:32 AM | loss = 0.367 + 0.073 + 0.029 = 0.468
01/29 06:06:33 AM | === Batch 30/250
01/29 06:06:33 AM | loss = 0.504 + 0.065 + 0.028 = 0.597
01/29 06:06:34 AM | === Batch 31/250
01/29 06:06:34 AM | loss = 0.212 + 0.045 + 0.027 = 0.285
01/29 06:06:35 AM | === Batch 32/250
01/29 06:06:36 AM | loss = 0.326 + 0.012 + 0.027 = 0.365
01/29 06:06:36 AM | === Batch 33/250
01/29 06:06:37 AM | loss = 0.195 + 0.036 + 0.026 = 0.258
01/29 06:06:38 AM | === Batch 34/250
01/29 06:06:38 AM | loss = 0.461 + 0.055 + 0.026 = 0.542
01/29 06:06:39 AM | === Batch 35/250
01/29 06:06:40 AM | loss = 0.449 + 0.041 + 0.025 = 0.516
01/29 06:06:40 AM | === Batch 36/250
01/29 06:06:41 AM | loss = 0.301 + 0.000 + 0.025 = 0.325
01/29 06:06:42 AM | === Batch 37/250
01/29 06:06:42 AM | loss = 0.488 + 0.017 + 0.024 = 0.529
01/29 06:06:43 AM | === Batch 38/250
01/29 06:06:43 AM | loss = 0.403 + 0.021 + 0.023 = 0.447
01/29 06:06:44 AM | === Batch 39/250
01/29 06:06:45 AM | loss = 0.257 + 0.013 + 0.023 = 0.293
01/29 06:06:46 AM | === Batch 40/250
01/29 06:06:46 AM | loss = 0.217 + 0.005 + 0.023 = 0.244
01/29 06:06:47 AM | === Batch 41/250
01/29 06:06:47 AM | loss = 0.257 + 0.002 + 0.022 = 0.281
01/29 06:06:48 AM | === Batch 42/250
01/29 06:06:49 AM | loss = 0.416 + 0.019 + 0.022 = 0.457
01/29 06:06:49 AM | === Batch 43/250
01/29 06:06:50 AM | loss = 0.489 + 0.026 + 0.021 = 0.537
01/29 06:06:51 AM | === Batch 44/250
01/29 06:06:51 AM | loss = 0.279 + 0.021 + 0.021 = 0.322
01/29 06:06:52 AM | === Batch 45/250
01/29 06:06:53 AM | loss = 0.428 + 0.004 + 0.021 = 0.454
01/29 06:06:53 AM | === Batch 46/250
01/29 06:06:54 AM | loss = 0.386 + 0.025 + 0.021 = 0.432
01/29 06:06:55 AM | === Batch 47/250
01/29 06:06:55 AM | loss = 0.306 + 0.029 + 0.021 = 0.355
01/29 06:06:56 AM | === Batch 48/250
01/29 06:06:57 AM | loss = 0.409 + 0.009 + 0.020 = 0.437
01/29 06:06:57 AM | === Batch 49/250
01/29 06:06:58 AM | loss = 0.380 + 0.025 + 0.020 = 0.425
01/29 06:06:59 AM | === Batch 50/250
01/29 06:06:59 AM | loss = 0.233 + 0.043 + 0.019 = 0.295
01/29 06:07:00 AM | === Batch 51/250
01/29 06:07:01 AM | loss = 0.205 + 0.049 + 0.019 = 0.273
01/29 06:07:01 AM | === Batch 52/250
01/29 06:07:02 AM | loss = 0.527 + 0.044 + 0.019 = 0.590
01/29 06:07:03 AM | === Batch 53/250
01/29 06:07:03 AM | loss = 0.275 + 0.033 + 0.019 = 0.327
01/29 06:07:04 AM | === Batch 54/250
01/29 06:07:05 AM | loss = 0.249 + 0.014 + 0.019 = 0.282
01/29 06:07:05 AM | === Batch 55/250
01/29 06:07:06 AM | loss = 0.270 + 0.014 + 0.019 = 0.303
01/29 06:07:07 AM | === Batch 56/250
01/29 06:07:07 AM | loss = 0.251 + 0.021 + 0.019 = 0.291
01/29 06:07:08 AM | === Batch 57/250
01/29 06:07:08 AM | loss = 0.336 + 0.007 + 0.018 = 0.362
01/29 06:07:09 AM | === Batch 58/250
01/29 06:07:10 AM | loss = 0.271 + 0.023 + 0.018 = 0.311
01/29 06:07:11 AM | === Batch 59/250
01/29 06:07:11 AM | loss = 0.333 + 0.039 + 0.018 = 0.390
01/29 06:07:12 AM | === Batch 60/250
01/29 06:07:12 AM | loss = 0.274 + 0.042 + 0.018 = 0.334
01/29 06:07:13 AM | === Batch 61/250
01/29 06:07:14 AM | loss = 0.625 + 0.037 + 0.017 = 0.679
01/29 06:07:15 AM | === Batch 62/250
01/29 06:07:15 AM | loss = 0.316 + 0.022 + 0.017 = 0.355
01/29 06:07:16 AM | === Batch 63/250
01/29 06:07:16 AM | loss = 0.258 + 0.002 + 0.017 = 0.277
01/29 06:07:17 AM | === Batch 64/250
01/29 06:07:18 AM | loss = 0.271 + 0.011 + 0.017 = 0.299
01/29 06:07:18 AM | === Batch 65/250
01/29 06:07:19 AM | loss = 0.372 + 0.000 + 0.017 = 0.389
01/29 06:07:20 AM | === Batch 66/250
01/29 06:07:20 AM | loss = 0.240 + 0.004 + 0.017 = 0.261
01/29 06:07:21 AM | === Batch 67/250
01/29 06:07:22 AM | loss = 0.500 + 0.008 + 0.017 = 0.525
01/29 06:07:22 AM | === Batch 68/250
01/29 06:07:23 AM | loss = 0.449 + 0.007 + 0.016 = 0.472
01/29 06:07:24 AM | === Batch 69/250
01/29 06:07:24 AM | loss = 0.282 + 0.002 + 0.016 = 0.300
01/29 06:07:25 AM | === Batch 70/250
01/29 06:07:26 AM | loss = 0.229 + 0.007 + 0.016 = 0.253
01/29 06:07:27 AM | === Batch 71/250
01/29 06:07:27 AM | loss = 0.366 + 0.008 + 0.016 = 0.390
01/29 06:07:28 AM | === Batch 72/250
01/29 06:07:28 AM | loss = 0.261 + 0.002 + 0.016 = 0.279
01/29 06:07:29 AM | === Batch 73/250
01/29 06:07:30 AM | loss = 0.294 + 0.016 + 0.016 = 0.326
01/29 06:07:31 AM | === Batch 74/250
01/29 06:07:31 AM | loss = 0.277 + 0.014 + 0.016 = 0.307
01/29 06:07:32 AM | === Batch 75/250
01/29 06:07:32 AM | loss = 0.177 + 0.005 + 0.016 = 0.198
01/29 06:07:33 AM | === Batch 76/250
01/29 06:07:34 AM | loss = 0.268 + 0.008 + 0.016 = 0.293
01/29 06:07:35 AM | === Batch 77/250
01/29 06:07:35 AM | loss = 0.301 + 0.002 + 0.016 = 0.319
01/29 06:07:36 AM | === Batch 78/250
01/29 06:07:37 AM | loss = 0.219 + 0.017 + 0.016 = 0.252
01/29 06:07:37 AM | === Batch 79/250
01/29 06:07:38 AM | loss = 0.284 + 0.016 + 0.016 = 0.316
01/29 06:07:39 AM | === Batch 80/250
01/29 06:07:39 AM | loss = 0.399 + 0.003 + 0.015 = 0.417
01/29 06:07:40 AM | === Batch 81/250
01/29 06:07:41 AM | loss = 0.177 + 0.010 + 0.015 = 0.203
01/29 06:07:41 AM | === Batch 82/250
01/29 06:07:42 AM | loss = 0.227 + 0.010 + 0.015 = 0.252
01/29 06:07:43 AM | === Batch 83/250
01/29 06:07:43 AM | loss = 0.374 + 0.002 + 0.015 = 0.391
01/29 06:07:44 AM | === Batch 84/250
01/29 06:07:45 AM | loss = 0.150 + 0.017 + 0.015 = 0.183
01/29 06:07:45 AM | === Batch 85/250
01/29 06:07:46 AM | loss = 0.513 + 0.017 + 0.015 = 0.545
01/29 06:07:47 AM | === Batch 86/250
01/29 06:07:47 AM | loss = 0.183 + 0.002 + 0.015 = 0.200
01/29 06:07:48 AM | === Batch 87/250
01/29 06:07:49 AM | loss = 0.301 + 0.023 + 0.015 = 0.339
01/29 06:07:50 AM | === Batch 88/250
01/29 06:07:50 AM | loss = 0.206 + 0.038 + 0.014 = 0.259
01/29 06:07:51 AM | === Batch 89/250
01/29 06:07:51 AM | loss = 0.319 + 0.044 + 0.014 = 0.378
01/29 06:07:52 AM | === Batch 90/250
01/29 06:07:53 AM | loss = 0.184 + 0.040 + 0.014 = 0.239
01/29 06:07:54 AM | === Batch 91/250
01/29 06:07:54 AM | loss = 0.429 + 0.030 + 0.014 = 0.473
01/29 06:07:55 AM | === Batch 92/250
01/29 06:07:55 AM | loss = 0.303 + 0.013 + 0.014 = 0.331
01/29 06:07:56 AM | === Batch 93/250
01/29 06:07:57 AM | loss = 0.333 + 0.009 + 0.014 = 0.356
01/29 06:07:58 AM | === Batch 94/250
01/29 06:07:58 AM | loss = 0.439 + 0.014 + 0.014 = 0.467
01/29 06:07:59 AM | === Batch 95/250
01/29 06:07:59 AM | loss = 0.259 + 0.000 + 0.014 = 0.273
01/29 06:08:00 AM | === Batch 96/250
01/29 06:08:01 AM | loss = 0.291 + 0.006 + 0.014 = 0.310
01/29 06:08:02 AM | === Batch 97/250
01/29 06:08:02 AM | loss = 0.274 + 0.006 + 0.013 = 0.294
01/29 06:08:03 AM | === Batch 98/250
01/29 06:08:04 AM | loss = 0.321 + 0.002 + 0.013 = 0.337
01/29 06:08:04 AM | === Batch 99/250
01/29 06:08:05 AM | loss = 0.315 + 0.004 + 0.013 = 0.332
01/29 06:08:06 AM | === Batch 100/250
01/29 06:08:06 AM | loss = 0.151 + 0.001 + 0.013 = 0.166
01/29 06:08:07 AM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.00  1.00  0.01  0.71  0.00  0.97  0.00  1.00  0.00  0.00  1.00  0.02 ]
[ 1.00  0.00  0.00  1.00  1.00  0.99  1.00  1.00  0.78  1.00  1.00  1.00 ]
[ 0.01  0.75  0.00  0.05  0.98  0.00  0.08  1.00  0.89  0.00  0.02  0.09 ]
[ 1.00  0.99  0.05  1.00  1.00  0.98  0.99  1.00  0.85  0.00  0.99  1.00 ]
[ 0.02  0.99  1.00  0.01  0.84  0.99  0.00  0.00  0.00  0.92  0.00  0.93 ]
[ 1.00  0.00  0.99  1.00  1.00  0.98  0.99  1.00  0.99  0.99  1.00  1.00 ]
[ 0.00  0.02  0.00  0.06  0.99  0.00  1.00  0.96  0.98  0.89  0.01  0.95 ]
[ 0.98  0.99  1.00  1.00  0.99  0.00  0.99  0.04  0.01  0.99  0.01  1.00 ]
[ 0.99  0.99  0.00  0.01  0.99  0.00  0.06  0.03  0.00  0.14  1.00  0.85 ]
[ 0.99  0.04  1.00  0.91  1.00  0.00  1.00  1.00  0.99  0.99  0.01  0.01 ]
[ 0.00  0.01  0.00  0.00  0.85  0.99  1.00  1.00  0.95  0.00  0.76  0.00 ]
[ 0.66  0.99  1.00  1.00  1.00  0.01  1.00  0.00  0.99  0.98  0.95  1.00 ]
[ 0.99  0.02  1.00  0.02  0.94  0.89  0.07  1.00  0.00  0.01  1.00  0.01 ]
[ 0.01  1.00  1.00  0.01  1.00  0.03  0.98  0.00  1.00  0.00  1.00  0.99 ]
[ 0.98  0.98  0.01  1.00  0.99  0.98  0.98  1.00  1.00  0.00  0.01  0.00 ]
[ 0.01  1.00  1.00  0.01  0.96  0.00  0.99  0.01  0.98  0.01  1.00  1.00 ]
[ 0.14  0.01  0.00  0.99  0.05  0.00  0.01  0.16  0.00  0.00  0.06  0.00 ]
[ 0.89  0.02  0.98  0.00  1.00  0.02  0.00  0.00  0.98  0.01  0.99  0.07 ]
[ 1.00  1.00  1.00  1.00  1.00  0.94  1.00  0.17  1.00  1.00  1.00  1.00 ]
[ 0.00  0.99  1.00  0.99  0.99  0.01  1.00  0.93  1.00  1.00  1.00  1.00 ]
[ 0.00  0.00  0.00  0.02  0.74  0.00  0.99  0.99  0.95  0.06  0.94  0.78 ]
[ 0.99  0.98  0.99  0.95  1.00  0.96  1.00  0.69  0.01  0.01  0.00  0.02 ]
[ 0.01  1.00  0.16  0.99  0.76  0.00  0.99  0.95  0.01  0.95  0.04  0.02 ]
[ 0.99  0.98  0.99  1.00  1.00  0.89  1.00  0.98  1.00  0.00  0.99  1.00 ]
[ 1.00  0.96  0.02  0.96  0.98  0.00  0.93  0.99  0.94  0.10  0.96  0.06 ]
[ 0.99  0.97  1.00  0.96  1.00  0.67  0.98  0.98  0.99  0.94  0.01  1.00 ]
[ 0.99  0.02  0.04  0.00  0.07  0.92  1.00  0.00  0.96  0.01  0.01  0.00 ]
[ 0.91  0.98  1.00  0.98  0.99  0.96  0.01  0.91  0.95  0.98  0.02  1.00 ]
[ 0.03  0.00  0.00  0.64  0.96  0.01  0.09  0.00  0.01  0.00  0.00  0.00 ]
[ 0.31  0.98  0.98  0.99  1.00  0.59  0.99  0.99  0.00  0.97  0.21  1.00 ]
[ 0.01  0.00  0.99  0.99  0.00  0.04  0.00  0.08  0.95  1.00  0.00  1.00 ]
[ 0.01  0.60  0.99  0.99  1.00  0.01  0.88  0.00  0.00  0.99  0.01  0.99 ]
[ 0.00  0.00  0.28  1.00  0.99  0.00  0.00  0.02  1.00  0.89  0.00  0.00 ]
[ 0.34  0.94  1.00  0.99  1.00  0.77  1.00  0.98  0.02  0.99  0.04  1.00 ]
[ 1.00  0.02  0.03  0.00  0.00  0.97  0.98  0.99  0.00  0.85  0.51  0.01 ]
[ 0.96  0.15  0.00  0.99  1.00  0.00  0.05  0.97  0.00  0.79  0.96  1.00 ]
[ 1.00  1.00  1.00  1.00  0.98  1.00  0.97  1.00  1.00  0.99  0.99  0.97 ]
[ 0.57  0.94  1.00  1.00  0.99  0.00  0.93  0.00  0.96  1.00  1.00  1.00 ]
[ 0.01  0.97  0.99  0.97  0.99  0.01  0.98  0.99  0.03  0.01  0.99  1.00 ]
[ 1.00  0.96  0.93  1.00  0.84  0.89  0.97  1.00  0.95  0.85  0.71  1.00 ]
[ 0.00  0.99  0.00  0.98  0.99  0.96  0.00  0.99  0.01  0.97  0.99  0.94 ]
[ 0.90  0.98  0.03  0.99  1.00  0.83  1.00  1.00  0.99  1.00  1.00  1.00 ]
[ 1.00  1.00  0.99  0.63  0.00  0.99  0.35  0.13  0.98  0.01  0.98  0.03 ]
[ 1.00  0.99  0.15  1.00  0.01  0.92  0.99  0.67  0.99  0.02  0.99  0.98 ]
[ 0.98  0.86  0.74  0.86  1.00  0.00  0.86  0.69  0.98  0.01  0.99  0.99 ]
[ 0.96  0.99  0.96  0.99  1.00  1.00  0.99  0.98  0.39  0.03  1.00  0.99 ]
[ 0.12  0.00  0.09  0.99  0.06  0.99  0.84  0.99  0.97  0.13  0.98  0.96 ]
[ 0.97  1.00  1.00  0.95  0.98  1.00  1.00  0.99  0.97  0.99  0.98  0.99 ]
[ 0.00  0.16  0.00  0.98  0.64  0.02  1.00  0.00  0.14  0.02  0.04  0.00 ]
[ 0.95  0.17  1.00  0.94  1.00  1.00  1.00  0.98  0.99  0.04  1.00  0.98 ]
[ 0.12  0.86  1.00  0.01  0.92  0.89  0.41  0.99  0.96  1.00  0.07  0.98 ]
[ 0.99  0.92  0.00  0.01  1.00  0.99  0.99  1.00  0.99  0.05  0.93  0.99 ]
[ 1.00  0.03  0.00  0.05  0.97  0.87  0.86  0.95  0.99  0.01  0.04  0.01 ]
[ 0.95  0.14  0.99  0.99  0.99  0.00  0.18  1.00  0.83  0.99  0.04  0.97 ]

01/29 06:08:07 AM | === Batch 101/250
01/29 06:08:08 AM | loss = 0.144 + 0.011 + 0.013 = 0.169
01/29 06:08:08 AM | === Batch 102/250
01/29 06:08:09 AM | loss = 0.432 + 0.007 + 0.013 = 0.452
01/29 06:08:10 AM | === Batch 103/250
01/29 06:08:10 AM | loss = 0.286 + 0.012 + 0.013 = 0.312
01/29 06:08:11 AM | === Batch 104/250
01/29 06:08:12 AM | loss = 0.212 + 0.020 + 0.013 = 0.245
01/29 06:08:12 AM | === Batch 105/250
01/29 06:08:13 AM | loss = 0.237 + 0.018 + 0.013 = 0.268
01/29 06:08:14 AM | === Batch 106/250
01/29 06:08:14 AM | loss = 0.395 + 0.007 + 0.013 = 0.416
01/29 06:08:15 AM | === Batch 107/250
01/29 06:08:16 AM | loss = 0.222 + 0.014 + 0.013 = 0.249
01/29 06:08:16 AM | === Batch 108/250
01/29 06:08:17 AM | loss = 0.376 + 0.017 + 0.013 = 0.407
01/29 06:08:18 AM | === Batch 109/250
01/29 06:08:18 AM | loss = 0.167 + 0.002 + 0.013 = 0.182
01/29 06:08:19 AM | === Batch 110/250
01/29 06:08:20 AM | loss = 0.266 + 0.023 + 0.013 = 0.302
01/29 06:08:20 AM | === Batch 111/250
01/29 06:08:21 AM | loss = 0.438 + 0.036 + 0.013 = 0.487
01/29 06:08:22 AM | === Batch 112/250
01/29 06:08:22 AM | loss = 0.376 + 0.042 + 0.012 = 0.431
01/29 06:08:23 AM | === Batch 113/250
01/29 06:08:24 AM | loss = 0.155 + 0.041 + 0.012 = 0.209
01/29 06:08:24 AM | === Batch 114/250
01/29 06:08:25 AM | loss = 0.354 + 0.032 + 0.012 = 0.398
01/29 06:08:26 AM | === Batch 115/250
01/29 06:08:26 AM | loss = 0.294 + 0.016 + 0.012 = 0.322
01/29 06:08:27 AM | === Batch 116/250
01/29 06:08:28 AM | loss = 0.284 + 0.008 + 0.012 = 0.304
01/29 06:08:28 AM | === Batch 117/250
01/29 06:08:29 AM | loss = 0.245 + 0.017 + 0.012 = 0.274
01/29 06:08:30 AM | === Batch 118/250
01/29 06:08:30 AM | loss = 0.346 + 0.011 + 0.012 = 0.368
01/29 06:08:31 AM | === Batch 119/250
01/29 06:08:32 AM | loss = 0.358 + 0.009 + 0.012 = 0.379
01/29 06:08:33 AM | === Batch 120/250
01/29 06:08:33 AM | loss = 0.215 + 0.017 + 0.012 = 0.244
01/29 06:08:34 AM | === Batch 121/250
01/29 06:08:34 AM | loss = 0.235 + 0.016 + 0.012 = 0.263
01/29 06:08:35 AM | === Batch 122/250
01/29 06:08:36 AM | loss = 0.150 + 0.008 + 0.012 = 0.170
01/29 06:08:37 AM | === Batch 123/250
01/29 06:08:37 AM | loss = 0.446 + 0.010 + 0.012 = 0.467
01/29 06:08:38 AM | === Batch 124/250
01/29 06:08:38 AM | loss = 0.316 + 0.008 + 0.012 = 0.336
01/29 06:08:39 AM | === Batch 125/250
01/29 06:08:40 AM | loss = 0.447 + 0.008 + 0.012 = 0.466
01/29 06:08:41 AM | === Batch 126/250
01/29 06:08:41 AM | loss = 0.247 + 0.017 + 0.012 = 0.275
01/29 06:08:42 AM | === Batch 127/250
01/29 06:08:42 AM | loss = 0.264 + 0.017 + 0.012 = 0.293
01/29 06:08:43 AM | === Batch 128/250
01/29 06:08:44 AM | loss = 0.145 + 0.011 + 0.012 = 0.169
01/29 06:08:45 AM | === Batch 129/250
01/29 06:08:45 AM | loss = 0.296 + 0.004 + 0.012 = 0.312
01/29 06:08:46 AM | === Batch 130/250
01/29 06:08:46 AM | loss = 0.300 + 0.003 + 0.012 = 0.316
01/29 06:08:47 AM | === Batch 131/250
01/29 06:08:48 AM | loss = 0.490 + 0.011 + 0.012 = 0.513
01/29 06:08:48 AM | === Batch 132/250
01/29 06:08:49 AM | loss = 0.193 + 0.016 + 0.012 = 0.221
01/29 06:08:50 AM | === Batch 133/250
01/29 06:08:50 AM | loss = 0.254 + 0.012 + 0.012 = 0.278
01/29 06:08:51 AM | === Batch 134/250
01/29 06:08:52 AM | loss = 0.298 + 0.002 + 0.012 = 0.313
01/29 06:08:53 AM | === Batch 135/250
01/29 06:08:53 AM | loss = 0.264 + 0.003 + 0.012 = 0.279
01/29 06:08:54 AM | === Batch 136/250
01/29 06:08:54 AM | loss = 0.326 + 0.010 + 0.012 = 0.348
01/29 06:08:55 AM | === Batch 137/250
01/29 06:08:56 AM | loss = 0.200 + 0.014 + 0.012 = 0.226
01/29 06:08:57 AM | === Batch 138/250
01/29 06:08:57 AM | loss = 0.303 + 0.009 + 0.011 = 0.324
01/29 06:08:58 AM | === Batch 139/250
01/29 06:08:58 AM | loss = 0.279 + 0.003 + 0.011 = 0.294
01/29 06:08:59 AM | === Batch 140/250
01/29 06:09:00 AM | loss = 0.296 + 0.003 + 0.011 = 0.309
01/29 06:09:01 AM | === Batch 141/250
01/29 06:09:01 AM | loss = 0.219 + 0.001 + 0.011 = 0.232
01/29 06:09:02 AM | === Batch 142/250
01/29 06:09:02 AM | loss = 0.221 + 0.010 + 0.011 = 0.243
01/29 06:09:03 AM | === Batch 143/250
01/29 06:09:04 AM | loss = 0.226 + 0.014 + 0.011 = 0.251
01/29 06:09:05 AM | === Batch 144/250
01/29 06:09:05 AM | loss = 0.134 + 0.011 + 0.011 = 0.156
01/29 06:09:06 AM | === Batch 145/250
01/29 06:09:06 AM | loss = 0.343 + 0.002 + 0.011 = 0.355
01/29 06:09:07 AM | === Batch 146/250
01/29 06:09:08 AM | loss = 0.449 + 0.002 + 0.010 = 0.461
01/29 06:09:09 AM | === Batch 147/250
01/29 06:09:09 AM | loss = 0.146 + 0.003 + 0.010 = 0.159
01/29 06:09:10 AM | === Batch 148/250
01/29 06:09:10 AM | loss = 0.469 + 0.004 + 0.010 = 0.484
01/29 06:09:11 AM | === Batch 149/250
01/29 06:09:12 AM | loss = 0.333 + 0.005 + 0.010 = 0.348
01/29 06:09:13 AM | === Batch 150/250
01/29 06:09:13 AM | loss = 0.329 + 0.003 + 0.010 = 0.342
01/29 06:09:14 AM | === Batch 151/250
01/29 06:09:14 AM | loss = 0.256 + 0.005 + 0.010 = 0.271
01/29 06:09:15 AM | === Batch 152/250
01/29 06:09:16 AM | loss = 0.343 + 0.004 + 0.010 = 0.357
01/29 06:09:17 AM | === Batch 153/250
01/29 06:09:17 AM | loss = 0.323 + 0.007 + 0.010 = 0.341
01/29 06:09:18 AM | === Batch 154/250
01/29 06:09:18 AM | loss = 0.180 + 0.003 + 0.010 = 0.194
01/29 06:09:19 AM | === Batch 155/250
01/29 06:09:20 AM | loss = 0.242 + 0.012 + 0.010 = 0.264
01/29 06:09:21 AM | === Batch 156/250
01/29 06:09:21 AM | loss = 0.205 + 0.016 + 0.010 = 0.231
01/29 06:09:22 AM | === Batch 157/250
01/29 06:09:22 AM | loss = 0.204 + 0.014 + 0.010 = 0.228
01/29 06:09:23 AM | === Batch 158/250
01/29 06:09:24 AM | loss = 0.237 + 0.005 + 0.010 = 0.252
01/29 06:09:25 AM | === Batch 159/250
01/29 06:09:25 AM | loss = 0.186 + 0.011 + 0.010 = 0.207
01/29 06:09:26 AM | === Batch 160/250
01/29 06:09:26 AM | loss = 0.350 + 0.012 + 0.010 = 0.372
01/29 06:09:27 AM | === Batch 161/250
01/29 06:09:28 AM | loss = 0.551 + 0.001 + 0.010 = 0.561
01/29 06:09:29 AM | === Batch 162/250
01/29 06:09:29 AM | loss = 0.157 + 0.005 + 0.010 = 0.171
01/29 06:09:30 AM | === Batch 163/250
01/29 06:09:30 AM | loss = 0.380 + 0.001 + 0.010 = 0.391
01/29 06:09:31 AM | === Batch 164/250
01/29 06:09:32 AM | loss = 0.131 + 0.011 + 0.009 = 0.151
01/29 06:09:33 AM | === Batch 165/250
01/29 06:09:33 AM | loss = 0.438 + 0.009 + 0.009 = 0.456
01/29 06:09:34 AM | === Batch 166/250
01/29 06:09:34 AM | loss = 0.441 + 0.006 + 0.009 = 0.457
01/29 06:09:35 AM | === Batch 167/250
01/29 06:09:36 AM | loss = 0.205 + 0.012 + 0.009 = 0.226
01/29 06:09:37 AM | === Batch 168/250
01/29 06:09:37 AM | loss = 0.185 + 0.009 + 0.009 = 0.203
01/29 06:09:38 AM | === Batch 169/250
01/29 06:09:38 AM | loss = 0.226 + 0.001 + 0.009 = 0.236
01/29 06:09:39 AM | === Batch 170/250
01/29 06:09:40 AM | loss = 0.280 + 0.001 + 0.009 = 0.290
01/29 06:09:41 AM | === Batch 171/250
01/29 06:09:41 AM | loss = 0.193 + 0.005 + 0.009 = 0.208
01/29 06:09:42 AM | === Batch 172/250
01/29 06:09:43 AM | loss = 0.270 + 0.001 + 0.009 = 0.281
01/29 06:09:43 AM | === Batch 173/250
01/29 06:09:44 AM | loss = 0.342 + 0.001 + 0.009 = 0.353
01/29 06:09:45 AM | === Batch 174/250
01/29 06:09:45 AM | loss = 0.302 + 0.005 + 0.009 = 0.316
01/29 06:09:46 AM | === Batch 175/250
01/29 06:09:46 AM | loss = 0.207 + 0.002 + 0.009 = 0.218
01/29 06:09:47 AM | === Batch 176/250
01/29 06:09:48 AM | loss = 0.180 + 0.001 + 0.009 = 0.190
01/29 06:09:49 AM | === Batch 177/250
01/29 06:09:49 AM | loss = 0.226 + 0.007 + 0.009 = 0.242
01/29 06:09:50 AM | === Batch 178/250
01/29 06:09:50 AM | loss = 0.332 + 0.000 + 0.009 = 0.342
01/29 06:09:51 AM | === Batch 179/250
01/29 06:09:52 AM | loss = 0.173 + 0.016 + 0.009 = 0.199
01/29 06:09:53 AM | === Batch 180/250
01/29 06:09:53 AM | loss = 0.210 + 0.025 + 0.009 = 0.245
01/29 06:09:54 AM | === Batch 181/250
01/29 06:09:54 AM | loss = 0.323 + 0.026 + 0.009 = 0.358
01/29 06:09:55 AM | === Batch 182/250
01/29 06:09:56 AM | loss = 0.375 + 0.022 + 0.009 = 0.407
01/29 06:09:57 AM | === Batch 183/250
01/29 06:09:57 AM | loss = 0.231 + 0.013 + 0.009 = 0.253
01/29 06:09:58 AM | === Batch 184/250
01/29 06:09:59 AM | loss = 0.283 + 0.000 + 0.009 = 0.293
01/29 06:09:59 AM | === Batch 185/250
01/29 06:10:00 AM | loss = 0.438 + 0.023 + 0.009 = 0.469
01/29 06:10:01 AM | === Batch 186/250
01/29 06:10:01 AM | loss = 0.283 + 0.029 + 0.009 = 0.321
01/29 06:10:02 AM | === Batch 187/250
01/29 06:10:03 AM | loss = 0.139 + 0.021 + 0.009 = 0.168
01/29 06:10:03 AM | === Batch 188/250
01/29 06:10:04 AM | loss = 0.351 + 0.001 + 0.009 = 0.361
01/29 06:10:05 AM | === Batch 189/250
01/29 06:10:05 AM | loss = 0.196 + 0.023 + 0.009 = 0.228
01/29 06:10:06 AM | === Batch 190/250
01/29 06:10:06 AM | loss = 0.074 + 0.038 + 0.009 = 0.121
01/29 06:10:07 AM | === Batch 191/250
01/29 06:10:08 AM | loss = 0.275 + 0.045 + 0.008 = 0.328
01/29 06:10:09 AM | === Batch 192/250
01/29 06:10:09 AM | loss = 0.337 + 0.046 + 0.008 = 0.391
01/29 06:10:10 AM | === Batch 193/250
01/29 06:10:11 AM | loss = 0.176 + 0.043 + 0.008 = 0.227
01/29 06:10:11 AM | === Batch 194/250
01/29 06:10:12 AM | loss = 0.240 + 0.033 + 0.008 = 0.282
01/29 06:10:13 AM | === Batch 195/250
01/29 06:10:13 AM | loss = 0.481 + 0.020 + 0.008 = 0.509
01/29 06:10:14 AM | === Batch 196/250
01/29 06:10:15 AM | loss = 0.198 + 0.002 + 0.009 = 0.208
01/29 06:10:16 AM | === Batch 197/250
01/29 06:10:16 AM | loss = 0.394 + 0.025 + 0.008 = 0.428
01/29 06:10:17 AM | === Batch 198/250
01/29 06:10:17 AM | loss = 0.351 + 0.038 + 0.008 = 0.397
01/29 06:10:18 AM | === Batch 199/250
01/29 06:10:19 AM | loss = 0.331 + 0.037 + 0.008 = 0.377
01/29 06:10:20 AM | === Batch 200/250
01/29 06:10:20 AM | loss = 0.144 + 0.026 + 0.008 = 0.178
01/29 06:10:21 AM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.00  1.00  0.01  0.88  0.00  0.96  0.00  1.00  0.00  0.00  1.00  0.01 ]
[ 1.00  0.00  0.00  1.00  1.00  0.81  1.00  1.00  0.00  1.00  1.00  1.00 ]
[ 0.01  0.31  0.00  0.04  0.99  0.00  0.10  1.00  0.89  0.00  0.01  0.04 ]
[ 1.00  0.99  0.02  1.00  1.00  0.97  1.00  1.00  0.86  0.00  1.00  1.00 ]
[ 0.02  0.99  1.00  0.00  0.94  0.99  0.00  0.00  0.00  0.95  0.00  0.99 ]
[ 1.00  0.00  1.00  1.00  1.00  0.99  0.99  1.00  0.99  0.98  1.00  1.00 ]
[ 0.00  0.01  0.00  0.03  1.00  0.00  1.00  0.98  0.98  0.94  0.01  0.91 ]
[ 0.99  0.99  1.00  1.00  1.00  0.00  1.00  0.02  0.01  0.99  0.01  1.00 ]
[ 0.99  0.99  0.00  0.01  0.99  0.00  0.02  0.01  0.00  0.03  0.99  0.82 ]
[ 1.00  0.02  1.00  0.99  1.00  0.00  1.00  1.00  1.00  0.99  0.01  0.01 ]
[ 0.00  0.01  0.00  0.00  0.96  1.00  1.00  1.00  0.94  0.00  0.20  0.00 ]
[ 0.98  1.00  1.00  1.00  1.00  0.01  1.00  0.00  1.00  0.97  0.96  1.00 ]
[ 0.99  0.01  1.00  0.01  0.99  0.98  0.04  1.00  0.00  0.01  1.00  0.02 ]
[ 0.01  1.00  1.00  0.01  1.00  0.02  0.99  0.00  1.00  0.00  1.00  1.00 ]
[ 0.98  0.96  0.00  1.00  0.99  0.97  0.98  1.00  1.00  0.00  0.00  0.00 ]
[ 0.02  1.00  1.00  0.00  0.97  0.00  0.99  0.00  0.99  0.00  1.00  1.00 ]
[ 0.03  0.00  0.00  1.00  0.02  0.00  0.01  0.51  0.00  0.00  0.02  0.00 ]
[ 0.99  0.01  0.99  0.00  1.00  0.01  0.00  0.00  0.99  0.01  1.00  0.07 ]
[ 0.93  1.00  1.00  1.00  1.00  0.99  1.00  0.86  1.00  1.00  1.00  1.00 ]
[ 0.00  0.99  1.00  0.99  0.95  0.00  1.00  0.98  1.00  1.00  1.00  1.00 ]
[ 0.00  0.00  0.00  0.02  0.96  0.00  0.99  0.99  0.98  0.02  0.98  0.92 ]
[ 1.00  0.99  0.99  0.98  1.00  0.98  1.00  0.07  0.00  0.00  0.00  0.01 ]
[ 0.01  1.00  0.03  0.99  0.95  0.00  0.99  0.97  0.00  0.99  0.03  0.01 ]
[ 1.00  0.99  1.00  1.00  1.00  0.94  1.00  0.99  1.00  0.00  1.00  1.00 ]
[ 1.00  0.96  0.01  0.96  0.99  0.00  0.98  0.99  0.98  0.28  0.96  0.02 ]
[ 0.99  0.99  1.00  0.98  1.00  0.88  0.99  0.98  0.99  0.98  0.00  1.00 ]
[ 0.99  0.01  0.03  0.00  0.06  0.97  1.00  0.00  0.99  0.00  0.00  0.00 ]
[ 0.98  0.99  1.00  0.98  0.99  0.97  0.01  0.96  0.98  0.99  0.01  1.00 ]
[ 0.01  0.00  0.00  0.92  0.95  0.00  0.82  0.00  0.00  0.00  0.00  0.00 ]
[ 0.07  0.98  0.99  1.00  1.00  0.54  1.00  0.99  0.00  0.98  0.17  1.00 ]
[ 0.01  0.00  1.00  0.99  0.00  0.03  0.00  0.03  0.96  1.00  0.00  1.00 ]
[ 0.00  0.07  1.00  1.00  1.00  0.00  0.99  0.00  0.00  0.99  0.00  1.00 ]
[ 0.00  0.00  0.12  1.00  0.97  0.00  0.00  0.88  1.00  0.80  0.00  0.00 ]
[ 0.06  0.44  1.00  0.99  1.00  0.09  1.00  0.99  0.01  0.99  0.01  1.00 ]
[ 1.00  0.01  0.02  0.00  0.00  0.99  0.99  0.98  0.00  0.18  0.97  0.01 ]
[ 1.00  0.02  0.00  0.99  1.00  0.00  0.02  0.99  0.00  0.99  0.97  1.00 ]
[ 1.00  1.00  1.00  1.00  0.99  1.00  0.99  1.00  1.00  0.99  0.99  0.98 ]
[ 0.15  0.98  0.99  1.00  1.00  0.00  0.95  0.00  0.99  1.00  1.00  1.00 ]
[ 0.02  0.99  0.99  0.07  0.99  0.01  0.99  0.99  0.09  0.03  0.98  1.00 ]
[ 0.99  0.99  0.98  1.00  0.98  0.99  0.07  1.00  0.99  0.99  0.44  1.00 ]
[ 0.00  1.00  0.00  0.99  1.00  0.87  0.00  0.99  0.02  0.99  1.00  0.97 ]
[ 0.10  0.99  0.02  1.00  1.00  0.98  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 1.00  1.00  1.00  0.10  0.00  0.98  0.88  0.97  0.99  0.02  0.99  0.12 ]
[ 1.00  0.99  0.98  1.00  0.01  0.99  0.99  1.00  1.00  0.88  1.00  0.98 ]
[ 0.98  0.94  0.70  0.98  0.99  0.00  0.93  0.07  0.98  0.04  1.00  0.98 ]
[ 0.94  0.99  1.00  0.99  1.00  1.00  0.99  1.00  0.01  0.05  1.00  1.00 ]
[ 0.99  0.00  0.04  0.99  0.03  0.99  0.81  0.99  0.98  0.01  0.99  0.98 ]
[ 0.99  1.00  1.00  0.99  0.99  1.00  1.00  0.99  0.96  0.99  0.96  0.99 ]
[ 0.00  0.12  0.00  0.98  0.44  0.01  1.00  0.00  0.03  0.01  1.00  0.00 ]
[ 0.95  0.10  1.00  1.00  1.00  1.00  1.00  0.99  0.99  0.04  1.00  0.99 ]
[ 0.94  0.00  1.00  0.01  0.56  0.99  0.01  1.00  0.92  1.00  0.02  0.99 ]
[ 1.00  0.98  0.00  0.01  1.00  0.99  0.99  1.00  0.99  0.04  0.96  0.99 ]
[ 1.00  0.01  0.00  0.01  0.98  0.95  0.95  0.97  1.00  0.00  0.02  0.01 ]
[ 0.98  0.03  0.98  1.00  0.99  0.00  0.97  1.00  0.90  0.99  0.01  0.99 ]

01/29 06:10:21 AM | === Batch 201/250
01/29 06:10:21 AM | loss = 0.134 + 0.006 + 0.008 = 0.148
01/29 06:10:22 AM | === Batch 202/250
01/29 06:10:23 AM | loss = 0.200 + 0.018 + 0.008 = 0.226
01/29 06:10:24 AM | === Batch 203/250
01/29 06:10:24 AM | loss = 0.316 + 0.032 + 0.008 = 0.355
01/29 06:10:25 AM | === Batch 204/250
01/29 06:10:25 AM | loss = 0.200 + 0.037 + 0.008 = 0.245
01/29 06:10:26 AM | === Batch 205/250
01/29 06:10:27 AM | loss = 0.145 + 0.037 + 0.008 = 0.190
01/29 06:10:28 AM | === Batch 206/250
01/29 06:10:28 AM | loss = 0.255 + 0.032 + 0.008 = 0.295
01/29 06:10:29 AM | === Batch 207/250
01/29 06:10:29 AM | loss = 0.264 + 0.023 + 0.007 = 0.294
01/29 06:10:30 AM | === Batch 208/250
01/29 06:10:31 AM | loss = 0.195 + 0.010 + 0.007 = 0.212
01/29 06:10:32 AM | === Batch 209/250
01/29 06:10:32 AM | loss = 0.263 + 0.008 + 0.007 = 0.278
01/29 06:10:33 AM | === Batch 210/250
01/29 06:10:34 AM | loss = 0.329 + 0.017 + 0.007 = 0.354
01/29 06:10:34 AM | === Batch 211/250
01/29 06:10:35 AM | loss = 0.291 + 0.016 + 0.007 = 0.314
01/29 06:10:36 AM | === Batch 212/250
01/29 06:10:36 AM | loss = 0.397 + 0.006 + 0.007 = 0.410
01/29 06:10:37 AM | === Batch 213/250
01/29 06:10:37 AM | loss = 0.391 + 0.010 + 0.007 = 0.408
01/29 06:10:38 AM | === Batch 214/250
01/29 06:10:39 AM | loss = 0.280 + 0.019 + 0.007 = 0.306
01/29 06:10:40 AM | === Batch 215/250
01/29 06:10:40 AM | loss = 0.194 + 0.022 + 0.007 = 0.223
01/29 06:10:41 AM | === Batch 216/250
01/29 06:10:41 AM | loss = 0.396 + 0.020 + 0.007 = 0.423
01/29 06:10:42 AM | === Batch 217/250
01/29 06:10:43 AM | loss = 0.258 + 0.016 + 0.007 = 0.281
01/29 06:10:44 AM | === Batch 218/250
01/29 06:10:44 AM | loss = 0.330 + 0.007 + 0.007 = 0.344
01/29 06:10:45 AM | === Batch 219/250
01/29 06:10:46 AM | loss = 0.291 + 0.007 + 0.007 = 0.305
01/29 06:10:46 AM | === Batch 220/250
01/29 06:10:47 AM | loss = 0.269 + 0.008 + 0.007 = 0.284
01/29 06:10:48 AM | === Batch 221/250
01/29 06:10:48 AM | loss = 0.261 + 0.002 + 0.007 = 0.271
01/29 06:10:49 AM | === Batch 222/250
01/29 06:10:50 AM | loss = 0.191 + 0.004 + 0.007 = 0.202
01/29 06:10:50 AM | === Batch 223/250
01/29 06:10:51 AM | loss = 0.372 + 0.002 + 0.007 = 0.380
01/29 06:10:52 AM | === Batch 224/250
01/29 06:10:52 AM | loss = 0.300 + 0.007 + 0.007 = 0.313
01/29 06:10:53 AM | === Batch 225/250
01/29 06:10:54 AM | loss = 0.298 + 0.005 + 0.007 = 0.311
01/29 06:10:54 AM | === Batch 226/250
01/29 06:10:55 AM | loss = 0.074 + 0.003 + 0.007 = 0.084
01/29 06:10:56 AM | === Batch 227/250
01/29 06:10:56 AM | loss = 0.321 + 0.005 + 0.007 = 0.333
01/29 06:10:57 AM | === Batch 228/250
01/29 06:10:58 AM | loss = 0.186 + 0.003 + 0.007 = 0.195
01/29 06:10:58 AM | === Batch 229/250
01/29 06:10:59 AM | loss = 0.587 + 0.003 + 0.007 = 0.596
01/29 06:11:00 AM | === Batch 230/250
01/29 06:11:00 AM | loss = 0.164 + 0.000 + 0.007 = 0.171
01/29 06:11:01 AM | === Batch 231/250
01/29 06:11:02 AM | loss = 0.161 + 0.001 + 0.007 = 0.169
01/29 06:11:03 AM | === Batch 232/250
01/29 06:11:03 AM | loss = 0.449 + 0.004 + 0.007 = 0.460
01/29 06:11:04 AM | === Batch 233/250
01/29 06:11:04 AM | loss = 0.182 + 0.006 + 0.007 = 0.195
01/29 06:11:05 AM | === Batch 234/250
01/29 06:11:06 AM | loss = 0.266 + 0.004 + 0.007 = 0.277
01/29 06:11:07 AM | === Batch 235/250
01/29 06:11:07 AM | loss = 0.257 + 0.003 + 0.007 = 0.266
01/29 06:11:08 AM | === Batch 236/250
01/29 06:11:08 AM | loss = 0.338 + 0.001 + 0.007 = 0.346
01/29 06:11:09 AM | === Batch 237/250
01/29 06:11:10 AM | loss = 0.148 + 0.008 + 0.007 = 0.163
01/29 06:11:11 AM | === Batch 238/250
01/29 06:11:11 AM | loss = 0.325 + 0.011 + 0.007 = 0.343
01/29 06:11:12 AM | === Batch 239/250
01/29 06:11:12 AM | loss = 0.334 + 0.011 + 0.007 = 0.351
01/29 06:11:13 AM | === Batch 240/250
01/29 06:11:14 AM | loss = 0.214 + 0.007 + 0.007 = 0.228
01/29 06:11:15 AM | === Batch 241/250
01/29 06:11:15 AM | loss = 0.266 + 0.001 + 0.007 = 0.274
01/29 06:11:16 AM | === Batch 242/250
01/29 06:11:16 AM | loss = 0.435 + 0.002 + 0.007 = 0.443
01/29 06:11:17 AM | === Batch 243/250
01/29 06:11:18 AM | loss = 0.190 + 0.007 + 0.007 = 0.203
01/29 06:11:19 AM | === Batch 244/250
01/29 06:11:19 AM | loss = 0.240 + 0.010 + 0.007 = 0.257
01/29 06:11:20 AM | === Batch 245/250
01/29 06:11:20 AM | loss = 0.262 + 0.008 + 0.007 = 0.276
01/29 06:11:21 AM | === Batch 246/250
01/29 06:11:22 AM | loss = 0.285 + 0.002 + 0.007 = 0.294
01/29 06:11:23 AM | === Batch 247/250
01/29 06:11:23 AM | loss = 0.198 + 0.011 + 0.007 = 0.215
01/29 06:11:24 AM | === Batch 248/250
01/29 06:11:25 AM | loss = 0.256 + 0.014 + 0.007 = 0.277
01/29 06:11:25 AM | === Batch 249/250
01/29 06:11:26 AM | loss = 0.274 + 0.007 + 0.007 = 0.288
01/29 06:11:27 AM | === Batch 250/250
01/29 06:11:27 AM | loss = 0.236 + 0.007 + 0.007 = 0.250
01/29 06:11:28 AM | ===
Best loss was 0.08 at iteration 226

01/29 06:11:28 AM | Looking for optimal threshold...
01/29 06:11:28 AM | Testing threshold 0.5
01/29 06:11:28 AM | Distance to target: 190,848
01/29 06:11:28 AM | Testing threshold 0.25
01/29 06:11:28 AM | Distance to target: 1,492,544
01/29 06:11:28 AM | Testing threshold 0.375
01/29 06:11:28 AM | Distance to target: 705,024
01/29 06:11:28 AM | Testing threshold 0.4375
01/29 06:11:28 AM | Distance to target: 134,848
01/29 06:11:28 AM | Testing threshold 0.40625
01/29 06:11:28 AM | Distance to target: 97,600
01/29 06:11:28 AM | Testing threshold 0.421875
01/29 06:11:28 AM | Distance to target: 97,600
01/29 06:11:28 AM | Testing threshold 0.4296875
01/29 06:11:28 AM | Distance to target: 97,600
01/29 06:11:28 AM | Testing threshold 0.43359375
01/29 06:11:28 AM | Distance to target: 97,600
01/29 06:11:28 AM | Testing threshold 0.435546875
01/29 06:11:28 AM | Distance to target: 134,848
01/29 06:11:28 AM | Testing threshold 0.4345703125
01/29 06:11:29 AM | Distance to target: 97,600
01/29 06:11:29 AM | Testing threshold 0.43505859375
01/29 06:11:29 AM | Distance to target: 134,848
01/29 06:11:29 AM | Testing threshold 0.434814453125
01/29 06:11:29 AM | Distance to target: 97,600
01/29 06:11:29 AM | Testing threshold 0.4349365234375
01/29 06:11:29 AM | Distance to target: 97,600
01/29 06:11:29 AM | Testing threshold 0.43499755859375
01/29 06:11:29 AM | Distance to target: 97,600
01/29 06:11:29 AM | Testing threshold 0.435028076171875
01/29 06:11:29 AM | Distance to target: 134,848
01/29 06:11:29 AM | Testing threshold 0.4350128173828125
01/29 06:11:29 AM | Distance to target: 134,848
01/29 06:11:29 AM | Testing threshold 0.43500518798828125
01/29 06:11:29 AM | Distance to target: 97,600
01/29 06:11:29 AM | Testing threshold 0.4350090026855469
01/29 06:11:29 AM | Distance to target: 134,848
01/29 06:11:29 AM | Testing threshold 0.43500709533691406
01/29 06:11:29 AM | Distance to target: 134,848
01/29 06:11:29 AM | Testing threshold 0.43500614166259766
01/29 06:11:29 AM | Distance to target: 134,848
01/29 06:11:29 AM | Testing threshold 0.43500566482543945
01/29 06:11:29 AM | Distance to target: 134,848
01/29 06:11:29 AM | Testing threshold 0.43500542640686035
01/29 06:11:29 AM | Distance to target: 97,600
01/29 06:11:29 AM | Testing threshold 0.4350055456161499
01/29 06:11:29 AM | Distance to target: 134,848
01/29 06:11:29 AM | Testing threshold 0.4350054860115051
01/29 06:11:29 AM | Distance to target: 97,600
01/29 06:11:29 AM | Testing threshold 0.4350055158138275
01/29 06:11:29 AM | Distance to target: 134,848
01/29 06:11:29 AM | Testing threshold 0.4350055009126663
01/29 06:11:29 AM | Distance to target: 97,600
01/29 06:11:29 AM | Testing threshold 0.4350055083632469
01/29 06:11:29 AM | Distance to target: 97,600
01/29 06:11:29 AM | Testing threshold 0.4350055120885372
01/29 06:11:29 AM | Distance to target: 97,600
01/29 06:11:29 AM | Testing threshold 0.43500551395118237
01/29 06:11:29 AM | Distance to target: 97,600
01/29 06:11:29 AM | Testing threshold 0.43500551488250494
01/29 06:11:29 AM | Distance to target: 97,600
01/29 06:11:29 AM | Testing threshold 0.4350055153481662
01/29 06:11:29 AM | Distance to target: 97,600
01/29 06:11:29 AM | Testing threshold 0.43500551558099687
01/29 06:11:29 AM | Distance to target: 97,600
01/29 06:11:29 AM | Testing threshold 0.4350055156974122
01/29 06:11:29 AM | Distance to target: 97,600
01/29 06:11:29 AM | Testing threshold 0.43500551575561985
01/29 06:11:29 AM | Distance to target: 97,600
01/29 06:11:29 AM | Testing threshold 0.4350055157847237
01/29 06:11:29 AM | Distance to target: 97,600
01/29 06:11:29 AM | Testing threshold 0.4350055157992756
01/29 06:11:29 AM | Distance to target: 97,600
01/29 06:11:29 AM | Testing threshold 0.43500551580655156
01/29 06:11:29 AM | Distance to target: 97,600
01/29 06:11:29 AM | Testing threshold 0.43500551581018954
01/29 06:11:29 AM | Distance to target: 97,600
01/29 06:11:29 AM | Testing threshold 0.4350055158120085
01/29 06:11:29 AM | Distance to target: 97,600
01/29 06:11:29 AM | Testing threshold 0.435005515812918
01/29 06:11:29 AM | Distance to target: 97,600
01/29 06:11:29 AM | Testing threshold 0.43500551581337277
01/29 06:11:29 AM | Distance to target: 97,600
01/29 06:11:29 AM | Testing threshold 0.43500551581360014
01/29 06:11:29 AM | Distance to target: 97,600
01/29 06:11:29 AM | Testing threshold 0.43500551581371383
01/29 06:11:29 AM | Distance to target: 97,600
01/29 06:11:29 AM | Testing threshold 0.43500551581377067
01/29 06:11:29 AM | Distance to target: 97,600
01/29 06:11:29 AM | Testing threshold 0.4350055158137991
01/29 06:11:29 AM | Distance to target: 97,600
01/29 06:11:29 AM | Testing threshold 0.4350055158138133
01/29 06:11:29 AM | Distance to target: 97,600
01/29 06:11:29 AM | Testing threshold 0.4350055158138204
01/29 06:11:29 AM | Distance to target: 97,600
01/29 06:11:29 AM | Testing threshold 0.43500551581382396
01/29 06:11:29 AM | Distance to target: 97,600
01/29 06:11:29 AM | Testing threshold 0.43500551581382574
01/29 06:11:29 AM | Distance to target: 97,600
01/29 06:11:29 AM | Testing threshold 0.4350055158138266
01/29 06:11:29 AM | Distance to target: 97,600
01/29 06:11:32 AM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.00  1.00  0.00  1.00  0.00  1.00  0.00  1.00  0.00  0.00  1.00  0.00 ]
[ 1.00  0.00  0.00  1.00  1.00  1.00  1.00  1.00  0.00  1.00  1.00  1.00 ]
[ 0.00  0.00  0.00  0.00  1.00  0.00  0.00  1.00  1.00  0.00  0.00  0.00 ]
[ 1.00  1.00  0.00  1.00  1.00  1.00  1.00  1.00  1.00  0.00  1.00  1.00 ]
[ 0.00  1.00  1.00  0.00  1.00  1.00  0.00  0.00  0.00  1.00  0.00  1.00 ]
[ 1.00  0.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.00  0.00  0.00  0.00  1.00  0.00  1.00  1.00  1.00  1.00  0.00  1.00 ]
[ 1.00  1.00  1.00  1.00  1.00  0.00  1.00  0.00  0.00  1.00  0.00  1.00 ]
[ 1.00  1.00  0.00  0.00  1.00  0.00  0.00  0.00  0.00  0.00  1.00  0.00 ]
[ 1.00  0.00  1.00  1.00  1.00  0.00  1.00  1.00  1.00  1.00  0.00  0.00 ]
[ 0.00  0.00  0.00  0.00  1.00  1.00  1.00  1.00  1.00  0.00  0.00  0.00 ]
[ 1.00  1.00  1.00  1.00  1.00  0.00  1.00  0.00  1.00  1.00  1.00  1.00 ]
[ 1.00  0.00  1.00  0.00  1.00  1.00  0.00  1.00  0.00  0.00  1.00  0.00 ]
[ 0.00  1.00  1.00  0.00  1.00  0.00  1.00  0.00  1.00  0.00  1.00  1.00 ]
[ 1.00  1.00  0.00  1.00  1.00  1.00  1.00  1.00  1.00  0.00  0.00  0.00 ]
[ 0.00  1.00  1.00  0.00  1.00  0.00  1.00  0.00  1.00  0.00  1.00  1.00 ]
[ 0.00  0.00  0.00  1.00  0.00  0.00  0.00  1.00  0.00  0.00  0.00  0.00 ]
[ 1.00  0.00  1.00  0.00  1.00  0.00  0.00  0.00  1.00  0.00  1.00  0.00 ]
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.00  1.00  1.00  1.00  1.00  0.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.00  0.00  0.00  0.00  1.00  0.00  1.00  1.00  1.00  0.00  1.00  1.00 ]
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  0.00  0.00  0.00  0.00  0.00 ]
[ 0.00  1.00  0.00  1.00  1.00  0.00  1.00  1.00  0.00  1.00  0.00  0.00 ]
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  0.00  1.00  1.00 ]
[ 1.00  1.00  0.00  1.00  1.00  0.00  1.00  1.00  1.00  0.00  1.00  0.00 ]
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  0.00  1.00 ]
[ 1.00  0.00  0.00  0.00  0.00  1.00  1.00  0.00  1.00  0.00  0.00  0.00 ]
[ 1.00  1.00  1.00  1.00  1.00  1.00  0.00  1.00  1.00  1.00  0.00  1.00 ]
[ 0.00  0.00  0.00  1.00  1.00  0.00  1.00  0.00  0.00  0.00  0.00  0.00 ]
[ 0.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  0.00  1.00  0.00  1.00 ]
[ 0.00  0.00  1.00  1.00  0.00  0.00  0.00  0.00  1.00  1.00  0.00  1.00 ]
[ 0.00  0.00  1.00  1.00  1.00  0.00  1.00  0.00  0.00  1.00  0.00  1.00 ]
[ 0.00  0.00  0.00  1.00  1.00  0.00  0.00  1.00  1.00  1.00  0.00  0.00 ]
[ 0.00  1.00  1.00  1.00  1.00  0.00  1.00  1.00  0.00  1.00  0.00  1.00 ]
[ 1.00  0.00  0.00  0.00  0.00  1.00  1.00  1.00  0.00  0.00  1.00  0.00 ]
[ 1.00  0.00  0.00  1.00  1.00  0.00  0.00  1.00  0.00  1.00  1.00  1.00 ]
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.00  1.00  1.00  1.00  1.00  0.00  1.00  0.00  1.00  1.00  1.00  1.00 ]
[ 0.00  1.00  1.00  0.00  1.00  0.00  1.00  1.00  0.00  0.00  1.00  1.00 ]
[ 1.00  1.00  1.00  1.00  1.00  1.00  0.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.00  1.00  0.00  1.00  1.00  1.00  0.00  1.00  0.00  1.00  1.00  0.00 ]
[ 0.00  1.00  0.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 1.00  1.00  1.00  0.00  0.00  1.00  1.00  1.00  1.00  0.00  1.00  0.00 ]
[ 1.00  1.00  1.00  1.00  0.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 1.00  1.00  1.00  1.00  1.00  0.00  1.00  0.00  1.00  0.00  1.00  1.00 ]
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  0.00  0.00  1.00  1.00 ]
[ 1.00  0.00  0.00  1.00  0.00  1.00  1.00  1.00  1.00  0.00  1.00  1.00 ]
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.00  0.00  0.00  1.00  0.00  0.00  1.00  0.00  0.00  0.00  1.00  0.00 ]
[ 1.00  0.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  0.00  1.00  1.00 ]
[ 1.00  0.00  1.00  0.00  0.00  1.00  0.00  1.00  1.00  1.00  0.00  1.00 ]
[ 1.00  1.00  0.00  0.00  1.00  1.00  1.00  1.00  1.00  0.00  1.00  1.00 ]
[ 1.00  0.00  0.00  0.00  1.00  1.00  1.00  1.00  1.00  0.00  0.00  0.00 ]
[ 1.00  0.00  1.00  1.00  1.00  0.00  1.00  1.00  1.00  1.00  0.00  1.00 ]

01/29 06:11:32 AM | ResNet(
  (conv1): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(16, 7, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(7, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(7, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (1): BasicBlock(
      (conv1): Conv2d(16, 5, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(5, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (2): BasicBlock(
      (conv1): Conv2d(16, 7, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(7, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(7, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (3): BasicBlock(
      (conv1): Conv2d(16, 6, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(6, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(6, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (4): BasicBlock(
      (conv1): Conv2d(16, 5, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(5, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (5): BasicBlock(
      (conv1): Conv2d(16, 5, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(5, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (6): BasicBlock(
      (conv1): Conv2d(16, 9, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(9, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(9, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (7): BasicBlock(
      (conv1): Conv2d(16, 9, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(9, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(9, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (8): BasicBlock(
      (conv1): Conv2d(16, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(3, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(3, 9, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(9, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(16, 31, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(31, 29, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(29, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): LambdaLayer()
    )
    (1): BasicBlock(
      (conv1): Conv2d(32, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(14, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (2): BasicBlock(
      (conv1): Conv2d(32, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(14, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(26, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (3): BasicBlock(
      (conv1): Conv2d(32, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(13, 28, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(28, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (4): BasicBlock(
      (conv1): Conv2d(32, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(12, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(26, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (5): BasicBlock(
      (conv1): Conv2d(32, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(10, 25, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(25, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (6): BasicBlock(
      (conv1): Conv2d(32, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(12, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (7): BasicBlock(
      (conv1): Conv2d(32, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(12, 21, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(21, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (8): BasicBlock(
      (conv1): Conv2d(32, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(12, 21, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(21, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(32, 58, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(58, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(58, 58, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(58, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): LambdaLayer()
    )
    (1): BasicBlock(
      (conv1): Conv2d(64, 41, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(41, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(41, 50, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(50, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (2): BasicBlock(
      (conv1): Conv2d(64, 41, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(41, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(41, 53, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(53, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (3): BasicBlock(
      (conv1): Conv2d(64, 42, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(42, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(42, 58, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(58, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (4): BasicBlock(
      (conv1): Conv2d(64, 45, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(45, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(45, 55, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(55, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (5): BasicBlock(
      (conv1): Conv2d(64, 38, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(38, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(38, 54, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(54, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (6): BasicBlock(
      (conv1): Conv2d(64, 39, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(39, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(39, 52, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(52, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (7): BasicBlock(
      (conv1): Conv2d(64, 40, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(40, 42, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(42, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (8): BasicBlock(
      (conv1): Conv2d(64, 46, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(46, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(46, 33, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(33, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
  (linear): Linear(in_features=64, out_features=10, bias=True)
)
01/29 06:11:34 AM | ----------------------------------------
01/29 06:11:34 AM | Performances input model:
01/29 06:11:34 AM |  - flops: 126,554,816
01/29 06:11:34 AM |  - params: 853,018
01/29 06:11:34 AM |  - accuracy: 93.2699966430664
01/29 06:11:34 AM | ----------------------------------------
01/29 06:11:34 AM | Performances pseudo-pruned model:
01/29 06:11:34 AM |  - flops: 126,554,816
01/29 06:11:34 AM |  - params: 853,018
01/29 06:11:34 AM |  - accuracy: 84.36000061035156
01/29 06:11:34 AM | ----------------------------------------
01/29 06:11:34 AM | Performances pruned model:
01/29 06:11:34 AM |  - flops: 55,937,600
01/29 06:11:34 AM |  - params: 465,046
01/29 06:11:34 AM |  - accuracy: 84.36000061035156
01/29 06:11:34 AM | ----------------------------------------
01/29 06:11:34 AM | Total time: 351.20s
