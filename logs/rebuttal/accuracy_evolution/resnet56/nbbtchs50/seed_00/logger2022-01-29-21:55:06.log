01/29 09:55:06 PM | args = Namespace(output_dir='result/rebuttal/nb_epoch/resnet56/nbbtchs50/seed_00', loaded_model_path='./checkpoints/cifar10/resnet_56.pt', resume=False, test_only=False, mode='prune', batch_size=64, nb_batches=50, Mflops_target=None, lr=0.6, momentum=0.9, beta=6, gamma=0.4, gpu='0', num_workers=4, dataset='cifar10', arch='resnet_56', save_plot=False, seed=0, lr_finetuning=0.02, epoch_finetuning=200, wd=0.002, data_dir='./data/cifar10/', print_freq=200, num_classes=10, device_ids=[0], device=device(type='cuda', index=0), name_base='')
01/29 09:55:18 PM | ----------------------------------------
01/29 09:55:18 PM | ==> Building model...
01/29 09:55:18 PM | ----------------------------------------
01/29 09:55:18 PM | ==> Loading weights into the model...
01/29 09:55:18 PM | ----------------------------------------
01/29 09:55:18 PM | ResNet(
  (conv1): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (1): BasicBlock(
      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (2): BasicBlock(
      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (3): BasicBlock(
      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (4): BasicBlock(
      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (5): BasicBlock(
      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (6): BasicBlock(
      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (7): BasicBlock(
      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (8): BasicBlock(
      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): LambdaLayer()
    )
    (1): BasicBlock(
      (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (2): BasicBlock(
      (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (3): BasicBlock(
      (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (4): BasicBlock(
      (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (5): BasicBlock(
      (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (6): BasicBlock(
      (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (7): BasicBlock(
      (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (8): BasicBlock(
      (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): LambdaLayer()
    )
    (1): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (2): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (3): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (4): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (5): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (6): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (7): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (8): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
  (linear): Linear(in_features=64, out_features=10, bias=True)
)
01/29 09:55:20 PM | Save modules info...
01/29 09:55:20 PM | FLOPS pruning ratio is 0.56
01/29 09:55:20 PM | Pruning with information flow
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:55:20 PM | cin: None
01/29 09:55:20 PM | cout: None
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:55:20 PM | cin: None
01/29 09:55:20 PM | cout: None
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: ReLU(inplace=True)
01/29 09:55:20 PM | cin: None
01/29 09:55:20 PM | cout: None
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:55:20 PM | cin: None
01/29 09:55:20 PM | cout: [1]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:55:20 PM | cin: [1]
01/29 09:55:20 PM | cout: [1]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: ReLU(inplace=True)
01/29 09:55:20 PM | cin: [1]
01/29 09:55:20 PM | cout: [1]
01/29 09:55:20 PM | active
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:55:20 PM | cin: [1]
01/29 09:55:20 PM | cout: [2]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:55:20 PM | cin: [2]
01/29 09:55:20 PM | cout: [2]
01/29 09:55:20 PM | active
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: ReLU(inplace=True)
01/29 09:55:20 PM | cin: None
01/29 09:55:20 PM | cout: None
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:55:20 PM | cin: None
01/29 09:55:20 PM | cout: [3]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:55:20 PM | cin: [3]
01/29 09:55:20 PM | cout: [3]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: ReLU(inplace=True)
01/29 09:55:20 PM | cin: [3]
01/29 09:55:20 PM | cout: [3]
01/29 09:55:20 PM | active
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:55:20 PM | cin: [3]
01/29 09:55:20 PM | cout: [4]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:55:20 PM | cin: [4]
01/29 09:55:20 PM | cout: [4]
01/29 09:55:20 PM | active
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: ReLU(inplace=True)
01/29 09:55:20 PM | cin: None
01/29 09:55:20 PM | cout: None
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:55:20 PM | cin: None
01/29 09:55:20 PM | cout: [5]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:55:20 PM | cin: [5]
01/29 09:55:20 PM | cout: [5]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: ReLU(inplace=True)
01/29 09:55:20 PM | cin: [5]
01/29 09:55:20 PM | cout: [5]
01/29 09:55:20 PM | active
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:55:20 PM | cin: [5]
01/29 09:55:20 PM | cout: [6]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:55:20 PM | cin: [6]
01/29 09:55:20 PM | cout: [6]
01/29 09:55:20 PM | active
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: ReLU(inplace=True)
01/29 09:55:20 PM | cin: None
01/29 09:55:20 PM | cout: None
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:55:20 PM | cin: None
01/29 09:55:20 PM | cout: [7]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:55:20 PM | cin: [7]
01/29 09:55:20 PM | cout: [7]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: ReLU(inplace=True)
01/29 09:55:20 PM | cin: [7]
01/29 09:55:20 PM | cout: [7]
01/29 09:55:20 PM | active
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:55:20 PM | cin: [7]
01/29 09:55:20 PM | cout: [8]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:55:20 PM | cin: [8]
01/29 09:55:20 PM | cout: [8]
01/29 09:55:20 PM | active
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: ReLU(inplace=True)
01/29 09:55:20 PM | cin: None
01/29 09:55:20 PM | cout: None
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:55:20 PM | cin: None
01/29 09:55:20 PM | cout: [9]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:55:20 PM | cin: [9]
01/29 09:55:20 PM | cout: [9]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: ReLU(inplace=True)
01/29 09:55:20 PM | cin: [9]
01/29 09:55:20 PM | cout: [9]
01/29 09:55:20 PM | active
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:55:20 PM | cin: [9]
01/29 09:55:20 PM | cout: [10]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:55:20 PM | cin: [10]
01/29 09:55:20 PM | cout: [10]
01/29 09:55:20 PM | active
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: ReLU(inplace=True)
01/29 09:55:20 PM | cin: None
01/29 09:55:20 PM | cout: None
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:55:20 PM | cin: None
01/29 09:55:20 PM | cout: [11]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:55:20 PM | cin: [11]
01/29 09:55:20 PM | cout: [11]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: ReLU(inplace=True)
01/29 09:55:20 PM | cin: [11]
01/29 09:55:20 PM | cout: [11]
01/29 09:55:20 PM | active
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:55:20 PM | cin: [11]
01/29 09:55:20 PM | cout: [12]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:55:20 PM | cin: [12]
01/29 09:55:20 PM | cout: [12]
01/29 09:55:20 PM | active
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: ReLU(inplace=True)
01/29 09:55:20 PM | cin: None
01/29 09:55:20 PM | cout: None
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:55:20 PM | cin: None
01/29 09:55:20 PM | cout: [13]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:55:20 PM | cin: [13]
01/29 09:55:20 PM | cout: [13]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: ReLU(inplace=True)
01/29 09:55:20 PM | cin: [13]
01/29 09:55:20 PM | cout: [13]
01/29 09:55:20 PM | active
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:55:20 PM | cin: [13]
01/29 09:55:20 PM | cout: [14]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:55:20 PM | cin: [14]
01/29 09:55:20 PM | cout: [14]
01/29 09:55:20 PM | active
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: ReLU(inplace=True)
01/29 09:55:20 PM | cin: None
01/29 09:55:20 PM | cout: None
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:55:20 PM | cin: None
01/29 09:55:20 PM | cout: [15]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:55:20 PM | cin: [15]
01/29 09:55:20 PM | cout: [15]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: ReLU(inplace=True)
01/29 09:55:20 PM | cin: [15]
01/29 09:55:20 PM | cout: [15]
01/29 09:55:20 PM | active
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:55:20 PM | cin: [15]
01/29 09:55:20 PM | cout: [16]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:55:20 PM | cin: [16]
01/29 09:55:20 PM | cout: [16]
01/29 09:55:20 PM | active
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: ReLU(inplace=True)
01/29 09:55:20 PM | cin: None
01/29 09:55:20 PM | cout: None
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:55:20 PM | cin: None
01/29 09:55:20 PM | cout: [17]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:55:20 PM | cin: [17]
01/29 09:55:20 PM | cout: [17]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: ReLU(inplace=True)
01/29 09:55:20 PM | cin: [17]
01/29 09:55:20 PM | cout: [17]
01/29 09:55:20 PM | active
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:55:20 PM | cin: [17]
01/29 09:55:20 PM | cout: [18]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:55:20 PM | cin: [18]
01/29 09:55:20 PM | cout: [18]
01/29 09:55:20 PM | active
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: ReLU(inplace=True)
01/29 09:55:20 PM | cin: None
01/29 09:55:20 PM | cout: None
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
01/29 09:55:20 PM | cin: None
01/29 09:55:20 PM | cout: [19]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:55:20 PM | cin: [19]
01/29 09:55:20 PM | cout: [19]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: ReLU(inplace=True)
01/29 09:55:20 PM | cin: [19]
01/29 09:55:20 PM | cout: [19]
01/29 09:55:20 PM | active
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:55:20 PM | cin: [19]
01/29 09:55:20 PM | cout: [20]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:55:20 PM | cin: [20]
01/29 09:55:20 PM | cout: [20]
01/29 09:55:20 PM | active
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: ReLU(inplace=True)
01/29 09:55:20 PM | cin: None
01/29 09:55:20 PM | cout: None
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:55:20 PM | cin: None
01/29 09:55:20 PM | cout: [21]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:55:20 PM | cin: [21]
01/29 09:55:20 PM | cout: [21]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: ReLU(inplace=True)
01/29 09:55:20 PM | cin: [21]
01/29 09:55:20 PM | cout: [21]
01/29 09:55:20 PM | active
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:55:20 PM | cin: [21]
01/29 09:55:20 PM | cout: [22]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:55:20 PM | cin: [22]
01/29 09:55:20 PM | cout: [22]
01/29 09:55:20 PM | active
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: ReLU(inplace=True)
01/29 09:55:20 PM | cin: None
01/29 09:55:20 PM | cout: None
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:55:20 PM | cin: None
01/29 09:55:20 PM | cout: [23]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:55:20 PM | cin: [23]
01/29 09:55:20 PM | cout: [23]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: ReLU(inplace=True)
01/29 09:55:20 PM | cin: [23]
01/29 09:55:20 PM | cout: [23]
01/29 09:55:20 PM | active
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:55:20 PM | cin: [23]
01/29 09:55:20 PM | cout: [24]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:55:20 PM | cin: [24]
01/29 09:55:20 PM | cout: [24]
01/29 09:55:20 PM | active
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: ReLU(inplace=True)
01/29 09:55:20 PM | cin: None
01/29 09:55:20 PM | cout: None
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:55:20 PM | cin: None
01/29 09:55:20 PM | cout: [25]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:55:20 PM | cin: [25]
01/29 09:55:20 PM | cout: [25]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: ReLU(inplace=True)
01/29 09:55:20 PM | cin: [25]
01/29 09:55:20 PM | cout: [25]
01/29 09:55:20 PM | active
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:55:20 PM | cin: [25]
01/29 09:55:20 PM | cout: [26]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:55:20 PM | cin: [26]
01/29 09:55:20 PM | cout: [26]
01/29 09:55:20 PM | active
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: ReLU(inplace=True)
01/29 09:55:20 PM | cin: None
01/29 09:55:20 PM | cout: None
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:55:20 PM | cin: None
01/29 09:55:20 PM | cout: [27]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:55:20 PM | cin: [27]
01/29 09:55:20 PM | cout: [27]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: ReLU(inplace=True)
01/29 09:55:20 PM | cin: [27]
01/29 09:55:20 PM | cout: [27]
01/29 09:55:20 PM | active
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:55:20 PM | cin: [27]
01/29 09:55:20 PM | cout: [28]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:55:20 PM | cin: [28]
01/29 09:55:20 PM | cout: [28]
01/29 09:55:20 PM | active
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: ReLU(inplace=True)
01/29 09:55:20 PM | cin: None
01/29 09:55:20 PM | cout: None
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:55:20 PM | cin: None
01/29 09:55:20 PM | cout: [29]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:55:20 PM | cin: [29]
01/29 09:55:20 PM | cout: [29]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: ReLU(inplace=True)
01/29 09:55:20 PM | cin: [29]
01/29 09:55:20 PM | cout: [29]
01/29 09:55:20 PM | active
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:55:20 PM | cin: [29]
01/29 09:55:20 PM | cout: [30]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:55:20 PM | cin: [30]
01/29 09:55:20 PM | cout: [30]
01/29 09:55:20 PM | active
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: ReLU(inplace=True)
01/29 09:55:20 PM | cin: None
01/29 09:55:20 PM | cout: None
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:55:20 PM | cin: None
01/29 09:55:20 PM | cout: [31]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:55:20 PM | cin: [31]
01/29 09:55:20 PM | cout: [31]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: ReLU(inplace=True)
01/29 09:55:20 PM | cin: [31]
01/29 09:55:20 PM | cout: [31]
01/29 09:55:20 PM | active
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:55:20 PM | cin: [31]
01/29 09:55:20 PM | cout: [32]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:55:20 PM | cin: [32]
01/29 09:55:20 PM | cout: [32]
01/29 09:55:20 PM | active
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: ReLU(inplace=True)
01/29 09:55:20 PM | cin: None
01/29 09:55:20 PM | cout: None
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:55:20 PM | cin: None
01/29 09:55:20 PM | cout: [33]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:55:20 PM | cin: [33]
01/29 09:55:20 PM | cout: [33]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: ReLU(inplace=True)
01/29 09:55:20 PM | cin: [33]
01/29 09:55:20 PM | cout: [33]
01/29 09:55:20 PM | active
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:55:20 PM | cin: [33]
01/29 09:55:20 PM | cout: [34]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:55:20 PM | cin: [34]
01/29 09:55:20 PM | cout: [34]
01/29 09:55:20 PM | active
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: ReLU(inplace=True)
01/29 09:55:20 PM | cin: None
01/29 09:55:20 PM | cout: None
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:55:20 PM | cin: None
01/29 09:55:20 PM | cout: [35]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:55:20 PM | cin: [35]
01/29 09:55:20 PM | cout: [35]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: ReLU(inplace=True)
01/29 09:55:20 PM | cin: [35]
01/29 09:55:20 PM | cout: [35]
01/29 09:55:20 PM | active
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:55:20 PM | cin: [35]
01/29 09:55:20 PM | cout: [36]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:55:20 PM | cin: [36]
01/29 09:55:20 PM | cout: [36]
01/29 09:55:20 PM | active
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: ReLU(inplace=True)
01/29 09:55:20 PM | cin: None
01/29 09:55:20 PM | cout: None
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
01/29 09:55:20 PM | cin: None
01/29 09:55:20 PM | cout: [37]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:55:20 PM | cin: [37]
01/29 09:55:20 PM | cout: [37]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: ReLU(inplace=True)
01/29 09:55:20 PM | cin: [37]
01/29 09:55:20 PM | cout: [37]
01/29 09:55:20 PM | active
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:55:20 PM | cin: [37]
01/29 09:55:20 PM | cout: [38]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:55:20 PM | cin: [38]
01/29 09:55:20 PM | cout: [38]
01/29 09:55:20 PM | active
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: ReLU(inplace=True)
01/29 09:55:20 PM | cin: None
01/29 09:55:20 PM | cout: None
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:55:20 PM | cin: None
01/29 09:55:20 PM | cout: [39]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:55:20 PM | cin: [39]
01/29 09:55:20 PM | cout: [39]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: ReLU(inplace=True)
01/29 09:55:20 PM | cin: [39]
01/29 09:55:20 PM | cout: [39]
01/29 09:55:20 PM | active
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:55:20 PM | cin: [39]
01/29 09:55:20 PM | cout: [40]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:55:20 PM | cin: [40]
01/29 09:55:20 PM | cout: [40]
01/29 09:55:20 PM | active
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: ReLU(inplace=True)
01/29 09:55:20 PM | cin: None
01/29 09:55:20 PM | cout: None
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:55:20 PM | cin: None
01/29 09:55:20 PM | cout: [41]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:55:20 PM | cin: [41]
01/29 09:55:20 PM | cout: [41]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: ReLU(inplace=True)
01/29 09:55:20 PM | cin: [41]
01/29 09:55:20 PM | cout: [41]
01/29 09:55:20 PM | active
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:55:20 PM | cin: [41]
01/29 09:55:20 PM | cout: [42]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:55:20 PM | cin: [42]
01/29 09:55:20 PM | cout: [42]
01/29 09:55:20 PM | active
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: ReLU(inplace=True)
01/29 09:55:20 PM | cin: None
01/29 09:55:20 PM | cout: None
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:55:20 PM | cin: None
01/29 09:55:20 PM | cout: [43]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:55:20 PM | cin: [43]
01/29 09:55:20 PM | cout: [43]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: ReLU(inplace=True)
01/29 09:55:20 PM | cin: [43]
01/29 09:55:20 PM | cout: [43]
01/29 09:55:20 PM | active
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:55:20 PM | cin: [43]
01/29 09:55:20 PM | cout: [44]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:55:20 PM | cin: [44]
01/29 09:55:20 PM | cout: [44]
01/29 09:55:20 PM | active
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: ReLU(inplace=True)
01/29 09:55:20 PM | cin: None
01/29 09:55:20 PM | cout: None
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:55:20 PM | cin: None
01/29 09:55:20 PM | cout: [45]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:55:20 PM | cin: [45]
01/29 09:55:20 PM | cout: [45]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: ReLU(inplace=True)
01/29 09:55:20 PM | cin: [45]
01/29 09:55:20 PM | cout: [45]
01/29 09:55:20 PM | active
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:55:20 PM | cin: [45]
01/29 09:55:20 PM | cout: [46]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:55:20 PM | cin: [46]
01/29 09:55:20 PM | cout: [46]
01/29 09:55:20 PM | active
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: ReLU(inplace=True)
01/29 09:55:20 PM | cin: None
01/29 09:55:20 PM | cout: None
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:55:20 PM | cin: None
01/29 09:55:20 PM | cout: [47]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:55:20 PM | cin: [47]
01/29 09:55:20 PM | cout: [47]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: ReLU(inplace=True)
01/29 09:55:20 PM | cin: [47]
01/29 09:55:20 PM | cout: [47]
01/29 09:55:20 PM | active
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:55:20 PM | cin: [47]
01/29 09:55:20 PM | cout: [48]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:55:20 PM | cin: [48]
01/29 09:55:20 PM | cout: [48]
01/29 09:55:20 PM | active
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: ReLU(inplace=True)
01/29 09:55:20 PM | cin: None
01/29 09:55:20 PM | cout: None
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:55:20 PM | cin: None
01/29 09:55:20 PM | cout: [49]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:55:20 PM | cin: [49]
01/29 09:55:20 PM | cout: [49]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: ReLU(inplace=True)
01/29 09:55:20 PM | cin: [49]
01/29 09:55:20 PM | cout: [49]
01/29 09:55:20 PM | active
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:55:20 PM | cin: [49]
01/29 09:55:20 PM | cout: [50]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:55:20 PM | cin: [50]
01/29 09:55:20 PM | cout: [50]
01/29 09:55:20 PM | active
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: ReLU(inplace=True)
01/29 09:55:20 PM | cin: None
01/29 09:55:20 PM | cout: None
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:55:20 PM | cin: None
01/29 09:55:20 PM | cout: [51]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:55:20 PM | cin: [51]
01/29 09:55:20 PM | cout: [51]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: ReLU(inplace=True)
01/29 09:55:20 PM | cin: [51]
01/29 09:55:20 PM | cout: [51]
01/29 09:55:20 PM | active
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:55:20 PM | cin: [51]
01/29 09:55:20 PM | cout: [52]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:55:20 PM | cin: [52]
01/29 09:55:20 PM | cout: [52]
01/29 09:55:20 PM | active
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: ReLU(inplace=True)
01/29 09:55:20 PM | cin: None
01/29 09:55:20 PM | cout: None
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:55:20 PM | cin: None
01/29 09:55:20 PM | cout: [53]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:55:20 PM | cin: [53]
01/29 09:55:20 PM | cout: [53]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: ReLU(inplace=True)
01/29 09:55:20 PM | cin: [53]
01/29 09:55:20 PM | cout: [53]
01/29 09:55:20 PM | active
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:55:20 PM | cin: [53]
01/29 09:55:20 PM | cout: [54]
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:55:20 PM | cin: [54]
01/29 09:55:20 PM | cout: [54]
01/29 09:55:20 PM | active
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: ReLU(inplace=True)
01/29 09:55:20 PM | cin: None
01/29 09:55:20 PM | cout: None
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: AdaptiveAvgPool2d(output_size=(1, 1))
01/29 09:55:20 PM | cin: None
01/29 09:55:20 PM | cout: None
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | -----
01/29 09:55:20 PM | module: Linear(in_features=64, out_features=10, bias=True)
01/29 09:55:20 PM | cin: None
01/29 09:55:20 PM | cout: None
01/29 09:55:20 PM | inactive
01/29 09:55:20 PM | Used masks: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54]
01/29 09:55:20 PM | 55 unique masks in total
01/29 09:55:20 PM | === Batch 1/50
01/29 09:55:21 PM | loss = 0.145 + 4.444 + 0.040 = 4.629
01/29 09:55:22 PM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.94  0.83  0.83  0.94  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.94  0.94  0.83  0.83  0.83  0.83  0.94 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.94  0.83  0.83  0.83  0.83 ]
[ 0.83  0.94  0.83  0.83  0.94  0.94  0.94  0.94  0.83  0.83  0.83  0.94 ]
[ 0.83  0.83  0.83  0.83  0.94  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.94  0.83  0.83  0.94  0.94  0.83  0.94  0.83  0.83  0.94 ]
[ 0.83  0.83  0.83  0.83  0.94  0.83  0.83  0.83  0.94  0.83  0.83  0.83 ]
[ 0.83  0.83  0.94  0.83  0.83  0.83  0.94  0.83  0.83  0.83  0.83  0.94 ]
[ 0.83  0.83  0.83  0.83  0.94  0.83  0.83  0.83  0.83  0.83  0.94  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.94  0.83  0.83  0.94  0.83 ]
[ 0.83  0.94  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.94  0.83 ]
[ 0.83  0.94  0.83  0.83  0.83  0.83  0.83  0.83  0.94  0.83  0.83  0.94 ]
[ 0.83  0.83  0.83  0.83  0.94  0.94  0.83  0.94  0.83  0.83  0.94  0.83 ]
[ 0.83  0.94  0.94  0.83  0.83  0.83  0.94  0.83  0.94  0.83  0.83  0.94 ]
[ 0.83  0.83  0.83  0.94  0.83  0.94  0.94  0.83  0.94  0.83  0.83  0.83 ]
[ 0.83  0.94  0.94  0.83  0.94  0.83  0.94  0.83  0.94  0.83  0.83  0.94 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.94  0.94  0.83  0.94  0.83  0.83  0.83  0.83  0.83  0.83  0.94 ]
[ 0.94  0.83  0.94  0.94  0.83  0.83  0.94  0.83  0.94  0.94  0.94  0.94 ]
[ 0.83  0.83  0.94  0.94  0.83  0.83  0.83  0.94  0.83  0.94  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.94  0.83  0.94  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.94  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.94  0.83  0.83  0.83  0.83  0.94  0.83  0.83  0.83  0.83 ]
[ 0.94  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.94  0.83  0.83  0.83  0.83  0.83  0.94  0.83  0.83  0.94 ]
[ 0.83  0.83  0.83  0.83  0.94  0.83  0.94  0.83  0.94  0.83  0.83  0.83 ]
[ 0.83  0.83  0.94  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.94 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.94  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.94 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.94  0.94  0.83  0.94 ]
[ 0.83  0.83  0.94  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.94  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.94 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.94  0.83  0.83  0.94  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.94  0.94  0.83  0.94  0.83  0.83  0.94  0.94  0.94  0.94  0.83  0.94 ]
[ 0.83  0.94  0.83  0.83  0.94  0.83  0.94  0.83  0.94  0.94  0.94  0.94 ]
[ 0.83  0.94  0.83  0.83  0.83  0.83  0.83  0.94  0.94  0.83  0.83  0.83 ]
[ 0.83  0.94  0.83  0.83  0.94  0.94  0.83  0.83  0.83  0.83  0.94  0.94 ]
[ 0.83  0.94  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.94  0.83 ]
[ 0.83  0.83  0.94  0.83  0.94  0.94  0.83  0.83  0.83  0.83  0.94  0.94 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.94  0.94  0.94  0.83  0.83  0.83 ]
[ 0.83  0.83  0.94  0.83  0.83  0.94  0.83  0.94  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.94  0.83  0.83  0.94  0.94 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.94  0.83  0.83  0.94  0.83 ]
[ 0.83  0.83  0.94  0.83  0.83  0.83  0.83  0.94  0.94  0.94  0.83  0.83 ]
[ 0.94  0.83  0.94  0.83  0.94  0.83  0.94  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.94  0.83  0.83  0.83  0.83  0.94  0.83  0.83  0.83 ]
[ 0.94  0.94  0.94  0.83  0.83  0.83  0.94  0.94  0.94  0.83  0.83  0.94 ]
[ 0.83  0.83  0.94  0.83  0.83  0.83  0.83  0.83  0.94  0.94  0.83  0.83 ]
[ 0.94  0.94  0.83  0.83  0.94  0.83  0.83  0.94  0.83  0.83  0.83  0.94 ]
[ 0.94  0.83  0.83  0.94  0.83  0.83  0.94  0.94  0.83  0.83  0.94  0.83 ]
[ 0.83  0.94  0.83  0.83  0.94  0.83  0.83  0.94  0.83  0.83  0.83  0.94 ]

01/29 09:55:22 PM | === Batch 2/50
01/29 09:55:23 PM | loss = 0.222 + 3.844 + 0.055 = 4.121
01/29 09:55:24 PM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.73  0.74  0.73  0.75  0.74  0.74  0.73  0.95  0.73  0.75  0.93  0.73 ]
[ 0.73  0.74  0.73  0.88  0.82  0.91  0.97  0.76  0.73  0.88  0.73  0.96 ]
[ 0.73  0.73  0.73  0.73  0.75  0.74  0.75  0.96  0.74  0.74  0.74  0.75 ]
[ 0.73  0.92  0.74  0.73  0.96  0.96  0.97  0.95  0.74  0.75  0.74  0.95 ]
[ 0.74  0.75  0.73  0.73  0.93  0.73  0.73  0.74  0.73  0.73  0.73  0.75 ]
[ 0.74  0.73  0.93  0.74  0.75  0.91  0.97  0.75  0.97  0.87  0.75  0.96 ]
[ 0.73  0.73  0.73  0.73  0.93  0.73  0.73  0.75  0.92  0.74  0.73  0.81 ]
[ 0.76  0.80  0.93  0.87  0.73  0.73  0.95  0.75  0.73  0.84  0.73  0.96 ]
[ 0.75  0.73  0.73  0.75  0.93  0.73  0.75  0.75  0.73  0.75  0.97  0.73 ]
[ 0.84  0.81  0.75  0.73  0.88  0.73  0.74  0.93  0.88  0.88  0.92  0.73 ]
[ 0.73  0.92  0.73  0.74  0.73  0.73  0.87  0.84  0.73  0.73  0.93  0.73 ]
[ 0.82  0.93  0.73  0.83  0.81  0.73  0.89  0.74  0.97  0.81  0.75  0.95 ]
[ 0.73  0.74  0.86  0.84  0.92  0.93  0.79  0.96  0.74  0.75  0.93  0.74 ]
[ 0.80  0.95  0.96  0.73  0.79  0.76  0.97  0.74  0.97  0.73  0.88  0.96 ]
[ 0.75  0.88  0.73  0.94  0.81  0.93  0.93  0.81  0.94  0.73  0.74  0.75 ]
[ 0.85  0.95  0.93  0.73  0.94  0.73  0.96  0.74  0.97  0.76  0.88  0.96 ]
[ 0.73  0.73  0.74  0.86  0.75  0.73  0.73  0.75  0.73  0.73  0.78  0.75 ]
[ 0.85  0.94  0.93  0.73  0.95  0.73  0.76  0.73  0.88  0.77  0.87  0.92 ]
[ 0.95  0.86  0.95  0.96  0.87  0.86  0.97  0.79  0.96  0.95  0.96  0.97 ]
[ 0.73  0.81  0.96  0.92  0.79  0.73  0.87  0.97  0.85  0.96  0.88  0.85 ]
[ 0.76  0.73  0.73  0.73  0.78  0.73  0.92  0.87  0.92  0.83  0.73  0.75 ]
[ 0.76  0.73  0.76  0.75  0.85  0.74  0.88  0.96  0.83  0.74  0.73  0.74 ]
[ 0.73  0.81  0.73  0.74  0.73  0.73  0.74  0.74  0.75  0.75  0.73  0.73 ]
[ 0.76  0.74  0.94  0.74  0.82  0.75  0.82  0.93  0.84  0.73  0.85  0.74 ]
[ 0.94  0.85  0.79  0.73  0.83  0.73  0.73  0.87  0.73  0.84  0.79  0.73 ]
[ 0.75  0.74  0.92  0.74  0.79  0.74  0.82  0.80  0.93  0.87  0.78  0.93 ]
[ 0.84  0.74  0.73  0.73  0.92  0.76  0.94  0.73  0.96  0.74  0.79  0.73 ]
[ 0.76  0.77  0.94  0.73  0.84  0.75  0.74  0.73  0.74  0.78  0.81  0.92 ]
[ 0.73  0.73  0.73  0.74  0.74  0.73  0.73  0.73  0.76  0.75  0.73  0.73 ]
[ 0.76  0.75  0.94  0.73  0.84  0.73  0.79  0.74  0.73  0.73  0.76  0.95 ]
[ 0.74  0.73  0.88  0.77  0.74  0.74  0.74  0.74  0.94  0.97  0.74  0.95 ]
[ 0.74  0.81  0.93  0.73  0.75  0.74  0.73  0.73  0.81  0.75  0.75  0.73 ]
[ 0.73  0.76  0.75  0.75  0.74  0.73  0.74  0.75  0.76  0.73  0.73  0.73 ]
[ 0.76  0.79  0.92  0.74  0.73  0.73  0.81  0.73  0.74  0.73  0.74  0.94 ]
[ 0.75  0.78  0.75  0.73  0.73  0.81  0.93  0.73  0.75  0.93  0.73  0.73 ]
[ 0.75  0.76  0.73  0.74  0.86  0.74  0.73  0.74  0.74  0.75  0.73  0.73 ]
[ 0.95  0.95  0.76  0.94  0.88  0.86  0.96  0.95  0.93  0.95  0.77  0.94 ]
[ 0.80  0.96  0.79  0.76  0.96  0.73  0.92  0.73  0.95  0.92  0.96  0.96 ]
[ 0.73  0.91  0.87  0.86  0.74  0.73  0.73  0.93  0.96  0.74  0.74  0.74 ]
[ 0.75  0.97  0.74  0.75  0.95  0.93  0.73  0.88  0.76  0.76  0.96  0.92 ]
[ 0.80  0.96  0.73  0.75  0.74  0.74  0.73  0.81  0.74  0.76  0.97  0.88 ]
[ 0.78  0.74  0.95  0.74  0.96  0.95  0.75  0.77  0.79  0.84  0.97  0.96 ]
[ 0.73  0.74  0.73  0.74  0.73  0.76  0.95  0.95  0.96  0.73  0.74  0.74 ]
[ 0.73  0.74  0.94  0.73  0.74  0.92  0.74  0.97  0.84  0.73  0.83  0.73 ]
[ 0.74  0.86  0.73  0.85  0.84  0.73  0.73  0.96  0.81  0.73  0.95  0.92 ]
[ 0.74  0.73  0.75  0.74  0.75  0.84  0.87  0.95  0.74  0.75  0.96  0.73 ]
[ 0.87  0.73  0.92  0.74  0.73  0.77  0.82  0.94  0.94  0.95  0.73  0.78 ]
[ 0.95  0.74  0.94  0.74  0.96  0.75  0.91  0.73  0.76  0.85  0.74  0.73 ]
[ 0.73  0.74  0.73  0.92  0.75  0.80  0.84  0.74  0.95  0.74  0.74  0.73 ]
[ 0.94  0.94  0.95  0.85  0.74  0.73  0.96  0.92  0.96  0.74  0.77  0.96 ]
[ 0.81  0.85  0.95  0.74  0.74  0.81  0.78  0.86  0.96  0.96  0.74  0.88 ]
[ 0.93  0.97  0.74  0.87  0.95  0.74  0.74  0.95  0.73  0.74  0.75  0.95 ]
[ 0.95  0.73  0.75  0.92  0.74  0.85  0.93  0.96  0.77  0.74  0.95  0.74 ]
[ 0.73  0.96  0.73  0.74  0.95  0.73  0.73  0.95  0.74  0.82  0.88  0.96 ]

01/29 09:55:24 PM | === Batch 3/50
01/29 09:55:24 PM | loss = 0.587 + 3.077 + 0.074 = 3.738
01/29 09:55:25 PM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.60  0.72  0.62  0.66  0.62  0.65  0.60  0.94  0.60  0.63  0.91  0.60 ]
[ 0.60  0.62  0.61  0.91  0.86  0.86  0.98  0.75  0.71  0.91  0.64  0.95 ]
[ 0.61  0.62  0.61  0.67  0.66  0.62  0.77  0.97  0.62  0.62  0.63  0.63 ]
[ 0.61  0.91  0.62  0.73  0.98  0.95  0.98  0.95  0.73  0.76  0.68  0.93 ]
[ 0.62  0.63  0.60  0.62  0.89  0.64  0.60  0.62  0.60  0.63  0.60  0.66 ]
[ 0.64  0.60  0.89  0.76  0.71  0.87  0.98  0.63  0.97  0.90  0.70  0.95 ]
[ 0.60  0.60  0.60  0.61  0.89  0.60  0.67  0.64  0.87  0.61  0.61  0.82 ]
[ 0.80  0.83  0.90  0.91  0.72  0.60  0.95  0.64  0.61  0.85  0.60  0.95 ]
[ 0.70  0.60  0.60  0.64  0.90  0.62  0.64  0.64  0.60  0.64  0.98  0.63 ]
[ 0.88  0.83  0.64  0.70  0.92  0.60  0.74  0.91  0.87  0.91  0.88  0.63 ]
[ 0.60  0.87  0.60  0.61  0.60  0.65  0.91  0.88  0.68  0.60  0.91  0.61 ]
[ 0.86  0.90  0.64  0.86  0.86  0.60  0.93  0.61  0.97  0.81  0.65  0.93 ]
[ 0.60  0.61  0.90  0.83  0.88  0.91  0.79  0.98  0.61  0.65  0.92  0.63 ]
[ 0.80  0.95  0.96  0.60  0.70  0.70  0.98  0.62  0.98  0.60  0.91  0.95 ]
[ 0.70  0.92  0.60  0.94  0.86  0.90  0.90  0.85  0.93  0.60  0.63  0.63 ]
[ 0.88  0.95  0.89  0.62  0.91  0.62  0.96  0.63  0.97  0.65  0.91  0.96 ]
[ 0.73  0.60  0.63  0.89  0.64  0.60  0.61  0.63  0.60  0.60  0.70  0.63 ]
[ 0.89  0.92  0.91  0.61  0.94  0.61  0.65  0.60  0.85  0.69  0.90  0.88 ]
[ 0.97  0.89  0.93  0.97  0.88  0.85  0.97  0.74  0.95  0.95  0.95  0.98 ]
[ 0.60  0.85  0.96  0.94  0.74  0.77  0.91  0.97  0.89  0.97  0.92  0.83 ]
[ 0.65  0.61  0.60  0.61  0.83  0.60  0.87  0.89  0.87  0.81  0.61  0.65 ]
[ 0.66  0.77  0.66  0.80  0.87  0.79  0.92  0.94  0.84  0.76  0.60  0.61 ]
[ 0.60  0.75  0.60  0.66  0.70  0.62  0.76  0.64  0.65  0.65  0.70  0.62 ]
[ 0.66  0.75  0.92  0.76  0.83  0.79  0.87  0.90  0.88  0.62  0.88  0.63 ]
[ 0.92  0.90  0.71  0.60  0.80  0.60  0.63  0.86  0.65  0.79  0.71  0.61 ]
[ 0.65  0.78  0.88  0.75  0.71  0.76  0.85  0.73  0.90  0.90  0.73  0.93 ]
[ 0.84  0.64  0.61  0.61  0.87  0.65  0.92  0.60  0.95  0.62  0.73  0.60 ]
[ 0.66  0.82  0.93  0.75  0.87  0.80  0.72  0.62  0.63  0.78  0.76  0.89 ]
[ 0.60  0.60  0.60  0.73  0.61  0.60  0.61  0.60  0.65  0.65  0.60  0.60 ]
[ 0.66  0.77  0.92  0.77  0.86  0.76  0.80  0.62  0.62  0.76  0.66  0.95 ]
[ 0.62  0.60  0.93  0.68  0.61  0.62  0.61  0.62  0.92  0.98  0.62  0.94 ]
[ 0.63  0.84  0.90  0.70  0.67  0.67  0.63  0.61  0.75  0.79  0.63  0.72 ]
[ 0.61  0.69  0.64  0.64  0.64  0.61  0.73  0.63  0.73  0.60  0.60  0.61 ]
[ 0.66  0.82  0.89  0.73  0.61  0.76  0.84  0.62  0.63  0.72  0.64  0.94 ]
[ 0.71  0.68  0.67  0.60  0.61  0.78  0.90  0.65  0.63  0.90  0.62  0.60 ]
[ 0.66  0.79  0.61  0.77  0.90  0.67  0.78  0.75  0.62  0.71  0.64  0.61 ]
[ 0.96  0.96  0.67  0.92  0.91  0.88  0.96  0.95  0.95  0.96  0.78  0.94 ]
[ 0.83  0.95  0.75  0.79  0.97  0.60  0.93  0.60  0.96  0.88  0.98  0.96 ]
[ 0.70  0.87  0.91  0.90  0.61  0.60  0.70  0.90  0.96  0.73  0.63  0.70 ]
[ 0.64  0.96  0.76  0.70  0.95  0.90  0.79  0.89  0.80  0.67  0.98  0.89 ]
[ 0.73  0.97  0.60  0.65  0.72  0.65  0.60  0.75  0.63  0.77  0.98  0.90 ]
[ 0.80  0.69  0.96  0.72  0.95  0.95  0.64  0.68  0.81  0.88  0.98  0.97 ]
[ 0.74  0.64  0.60  0.63  0.60  0.66  0.95  0.94  0.95  0.60  0.78  0.72 ]
[ 0.73  0.81  0.92  0.78  0.66  0.89  0.80  0.98  0.79  0.62  0.87  0.62 ]
[ 0.75  0.86  0.66  0.81  0.84  0.60  0.61  0.97  0.83  0.64  0.93  0.92 ]
[ 0.77  0.74  0.63  0.79  0.67  0.86  0.86  0.95  0.73  0.65  0.97  0.78 ]
[ 0.84  0.60  0.92  0.65  0.62  0.69  0.82  0.95  0.92  0.96  0.62  0.69 ]
[ 0.95  0.78  0.93  0.64  0.97  0.64  0.91  0.60  0.68  0.80  0.61  0.74 ]
[ 0.60  0.61  0.61  0.89  0.77  0.72  0.86  0.62  0.95  0.61  0.63  0.60 ]
[ 0.92  0.92  0.96  0.89  0.61  0.77  0.97  0.89  0.96  0.65  0.80  0.95 ]
[ 0.80  0.85  0.96  0.77  0.61  0.75  0.73  0.87  0.96  0.97  0.63  0.84 ]
[ 0.91  0.96  0.61  0.88  0.96  0.62  0.70  0.95  0.61  0.64  0.64  0.95 ]
[ 0.94  0.63  0.63  0.88  0.79  0.83  0.92  0.97  0.68  0.65  0.95  0.63 ]
[ 0.77  0.95  0.70  0.76  0.96  0.60  0.67  0.93  0.79  0.76  0.91  0.95 ]

01/29 09:55:25 PM | === Batch 4/50
01/29 09:55:25 PM | loss = 0.720 + 2.288 + 0.094 = 3.102
01/29 09:55:26 PM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.46  0.76  0.51  0.69  0.50  0.65  0.46  0.96  0.46  0.65  0.90  0.47 ]
[ 0.55  0.52  0.50  0.94  0.84  0.79  0.98  0.81  0.73  0.92  0.67  0.95 ]
[ 0.49  0.51  0.47  0.71  0.70  0.52  0.81  0.98  0.65  0.60  0.51  0.65 ]
[ 0.55  0.87  0.68  0.78  0.99  0.95  0.98  0.97  0.79  0.81  0.61  0.93 ]
[ 0.49  0.62  0.48  0.51  0.89  0.65  0.46  0.63  0.46  0.66  0.47  0.71 ]
[ 0.52  0.47  0.87  0.82  0.65  0.81  0.97  0.66  0.96  0.90  0.72  0.96 ]
[ 0.53  0.47  0.47  0.49  0.88  0.45  0.73  0.52  0.84  0.47  0.47  0.77 ]
[ 0.81  0.81  0.92  0.94  0.76  0.46  0.96  0.65  0.64  0.81  0.51  0.96 ]
[ 0.73  0.61  0.46  0.51  0.89  0.49  0.54  0.63  0.46  0.66  0.97  0.51 ]
[ 0.86  0.79  0.68  0.74  0.93  0.46  0.67  0.90  0.83  0.91  0.82  0.58 ]
[ 0.49  0.81  0.46  0.47  0.64  0.63  0.91  0.92  0.74  0.46  0.91  0.50 ]
[ 0.83  0.86  0.67  0.90  0.88  0.49  0.92  0.56  0.96  0.75  0.66  0.90 ]
[ 0.46  0.49  0.93  0.77  0.91  0.92  0.73  0.98  0.47  0.54  0.93  0.52 ]
[ 0.74  0.94  0.97  0.45  0.61  0.61  0.98  0.51  0.98  0.46  0.90  0.96 ]
[ 0.74  0.92  0.46  0.95  0.90  0.86  0.86  0.89  0.91  0.46  0.51  0.50 ]
[ 0.86  0.96  0.91  0.48  0.92  0.48  0.97  0.54  0.96  0.55  0.91  0.97 ]
[ 0.78  0.46  0.54  0.92  0.51  0.45  0.46  0.51  0.46  0.46  0.60  0.51 ]
[ 0.88  0.90  0.93  0.46  0.96  0.47  0.57  0.46  0.80  0.59  0.90  0.90 ]
[ 0.96  0.89  0.94  0.97  0.87  0.87  0.98  0.66  0.94  0.94  0.93  0.99 ]
[ 0.46  0.89  0.97  0.96  0.66  0.77  0.92  0.96  0.85  0.97  0.95  0.79 ]
[ 0.54  0.46  0.45  0.47  0.79  0.45  0.82  0.86  0.89  0.75  0.48  0.53 ]
[ 0.69  0.83  0.65  0.86  0.86  0.79  0.93  0.93  0.80  0.82  0.46  0.61 ]
[ 0.55  0.66  0.62  0.72  0.74  0.49  0.73  0.51  0.51  0.68  0.76  0.51 ]
[ 0.70  0.81  0.90  0.82  0.80  0.75  0.91  0.89  0.87  0.49  0.90  0.59 ]
[ 0.92  0.89  0.61  0.61  0.83  0.46  0.51  0.82  0.57  0.71  0.62  0.47 ]
[ 0.69  0.84  0.88  0.81  0.63  0.70  0.84  0.63  0.91  0.88  0.65  0.94 ]
[ 0.78  0.51  0.52  0.47  0.88  0.67  0.92  0.45  0.92  0.52  0.64  0.46 ]
[ 0.68  0.87  0.91  0.80  0.86  0.78  0.65  0.52  0.59  0.82  0.68  0.83 ]
[ 0.46  0.48  0.47  0.67  0.49  0.60  0.50  0.46  0.52  0.53  0.47  0.46 ]
[ 0.67  0.82  0.92  0.83  0.87  0.72  0.80  0.64  0.60  0.82  0.53  0.94 ]
[ 0.56  0.46  0.94  0.57  0.46  0.48  0.62  0.49  0.92  0.98  0.48  0.92 ]
[ 0.58  0.88  0.86  0.65  0.72  0.59  0.55  0.60  0.80  0.85  0.49  0.65 ]
[ 0.50  0.59  0.55  0.62  0.69  0.46  0.75  0.59  0.77  0.52  0.45  0.61 ]
[ 0.69  0.87  0.86  0.78  0.53  0.75  0.87  0.49  0.51  0.78  0.54  0.93 ]
[ 0.77  0.57  0.71  0.50  0.47  0.72  0.92  0.68  0.56  0.85  0.52  0.57 ]
[ 0.69  0.85  0.47  0.82  0.93  0.58  0.79  0.69  0.47  0.63  0.54  0.54 ]
[ 0.96  0.96  0.58  0.93  0.90  0.88  0.95  0.94  0.96  0.97  0.82  0.92 ]
[ 0.83  0.93  0.78  0.84  0.98  0.46  0.95  0.46  0.95  0.85  0.98  0.97 ]
[ 0.62  0.80  0.90  0.91  0.49  0.47  0.72  0.90  0.95  0.78  0.67  0.75 ]
[ 0.64  0.94  0.82  0.76  0.96  0.91  0.85  0.86  0.76  0.60  0.99  0.91 ]
[ 0.75  0.97  0.46  0.54  0.77  0.62  0.46  0.67  0.53  0.71  0.98  0.91 ]
[ 0.84  0.76  0.97  0.78  0.93  0.96  0.51  0.57  0.86  0.92  0.98  0.98 ]
[ 0.77  0.67  0.60  0.50  0.57  0.54  0.95  0.93  0.93  0.49  0.79  0.77 ]
[ 0.79  0.87  0.94  0.84  0.55  0.90  0.85  0.97  0.84  0.49  0.90  0.51 ]
[ 0.81  0.81  0.72  0.78  0.88  0.46  0.51  0.97  0.85  0.52  0.93  0.93 ]
[ 0.84  0.81  0.65  0.85  0.72  0.83  0.83  0.96  0.78  0.65  0.96  0.84 ]
[ 0.78  0.46  0.93  0.63  0.51  0.65  0.82  0.94  0.88  0.96  0.51  0.59 ]
[ 0.95  0.84  0.92  0.53  0.97  0.70  0.92  0.61  0.72  0.83  0.46  0.69 ]
[ 0.46  0.57  0.47  0.90  0.82  0.63  0.87  0.48  0.96  0.50  0.60  0.46 ]
[ 0.94  0.88  0.96  0.91  0.60  0.71  0.97  0.91  0.97  0.54  0.78  0.96 ]
[ 0.83  0.81  0.95  0.83  0.63  0.67  0.65  0.89  0.96  0.98  0.55  0.77 ]
[ 0.89  0.95  0.49  0.85  0.97  0.63  0.76  0.95  0.67  0.56  0.66  0.96 ]
[ 0.95  0.68  0.61  0.86  0.77  0.87  0.94  0.97  0.71  0.57  0.95  0.66 ]
[ 0.78  0.93  0.76  0.81  0.97  0.47  0.73  0.90  0.74  0.78  0.88  0.96 ]

01/29 09:55:26 PM | === Batch 5/50
01/29 09:55:27 PM | loss = 0.698 + 1.709 + 0.104 = 2.512
01/29 09:55:28 PM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.31  0.77  0.42  0.70  0.38  0.60  0.31  0.96  0.31  0.64  0.91  0.34 ]
[ 0.47  0.41  0.39  0.96  0.86  0.68  0.98  0.84  0.70  0.91  0.70  0.96 ]
[ 0.35  0.40  0.33  0.69  0.71  0.44  0.79  0.98  0.67  0.54  0.39  0.62 ]
[ 0.57  0.89  0.72  0.83  0.99  0.94  0.98  0.97  0.81  0.85  0.51  0.93 ]
[ 0.39  0.57  0.41  0.41  0.88  0.69  0.32  0.61  0.32  0.65  0.37  0.72 ]
[ 0.48  0.35  0.88  0.87  0.71  0.74  0.97  0.64  0.96  0.89  0.76  0.96 ]
[ 0.44  0.42  0.34  0.39  0.87  0.31  0.75  0.51  0.86  0.39  0.34  0.72 ]
[ 0.78  0.79  0.93  0.96  0.77  0.33  0.97  0.64  0.65  0.75  0.40  0.96 ]
[ 0.69  0.62  0.32  0.38  0.86  0.37  0.44  0.57  0.32  0.65  0.98  0.39 ]
[ 0.82  0.74  0.72  0.79  0.94  0.32  0.64  0.88  0.80  0.90  0.77  0.49 ]
[ 0.38  0.81  0.32  0.33  0.62  0.58  0.91  0.95  0.75  0.32  0.91  0.40 ]
[ 0.77  0.88  0.69  0.93  0.91  0.37  0.92  0.47  0.95  0.67  0.68  0.84 ]
[ 0.46  0.36  0.95  0.68  0.92  0.93  0.64  0.98  0.33  0.44  0.93  0.43 ]
[ 0.65  0.95  0.98  0.31  0.49  0.50  0.98  0.38  0.98  0.32  0.89  0.96 ]
[ 0.79  0.92  0.35  0.96  0.92  0.87  0.86  0.90  0.93  0.33  0.48  0.37 ]
[ 0.81  0.97  0.92  0.36  0.92  0.35  0.98  0.44  0.95  0.43  0.90  0.97 ]
[ 0.78  0.32  0.42  0.92  0.37  0.32  0.33  0.38  0.31  0.31  0.48  0.39 ]
[ 0.84  0.91  0.94  0.33  0.96  0.34  0.49  0.33  0.75  0.49  0.89  0.89 ]
[ 0.95  0.91  0.95  0.98  0.86  0.90  0.98  0.55  0.92  0.94  0.92  0.99 ]
[ 0.32  0.92  0.97  0.98  0.59  0.71  0.94  0.95  0.81  0.97  0.97  0.77 ]
[ 0.42  0.34  0.31  0.33  0.74  0.34  0.76  0.85  0.91  0.67  0.35  0.41 ]
[ 0.74  0.87  0.59  0.90  0.87  0.76  0.95  0.90  0.74  0.82  0.32  0.64 ]
[ 0.52  0.59  0.62  0.79  0.71  0.38  0.68  0.39  0.47  0.70  0.79  0.39 ]
[ 0.76  0.85  0.86  0.86  0.78  0.68  0.94  0.88  0.86  0.37  0.91  0.63 ]
[ 0.90  0.88  0.59  0.56  0.88  0.31  0.38  0.76  0.47  0.63  0.56  0.37 ]
[ 0.75  0.89  0.85  0.86  0.53  0.63  0.84  0.52  0.91  0.84  0.56  0.95 ]
[ 0.71  0.39  0.42  0.34  0.91  0.69  0.92  0.31  0.89  0.43  0.55  0.32 ]
[ 0.73  0.91  0.88  0.85  0.88  0.73  0.61  0.42  0.56  0.81  0.63  0.81 ]
[ 0.32  0.36  0.35  0.62  0.37  0.59  0.44  0.32  0.48  0.42  0.33  0.31 ]
[ 0.71  0.87  0.91  0.88  0.90  0.66  0.83  0.61  0.55  0.83  0.53  0.94 ]
[ 0.46  0.31  0.95  0.48  0.33  0.36  0.65  0.40  0.90  0.98  0.35  0.92 ]
[ 0.56  0.91  0.81  0.61  0.74  0.50  0.46  0.56  0.82  0.87  0.46  0.56 ]
[ 0.38  0.47  0.53  0.58  0.76  0.32  0.72  0.60  0.83  0.42  0.31  0.55 ]
[ 0.75  0.90  0.80  0.83  0.44  0.70  0.91  0.39  0.38  0.82  0.48  0.94 ]
[ 0.75  0.44  0.76  0.40  0.34  0.62  0.93  0.69  0.48  0.82  0.40  0.58 ]
[ 0.75  0.89  0.33  0.87  0.95  0.46  0.82  0.61  0.34  0.61  0.49  0.59 ]
[ 0.96  0.96  0.47  0.94  0.89  0.87  0.94  0.92  0.96  0.98  0.84  0.92 ]
[ 0.83  0.91  0.83  0.87  0.99  0.32  0.96  0.32  0.96  0.81  0.98  0.97 ]
[ 0.53  0.80  0.91  0.91  0.53  0.36  0.78  0.90  0.93  0.80  0.71  0.77 ]
[ 0.64  0.92  0.88  0.77  0.96  0.92  0.89  0.82  0.78  0.50  0.99  0.91 ]
[ 0.73  0.98  0.32  0.55  0.79  0.56  0.32  0.62  0.58  0.68  0.97  0.91 ]
[ 0.88  0.80  0.98  0.80  0.91  0.96  0.46  0.45  0.87  0.95  0.98  0.98 ]
[ 0.75  0.69  0.61  0.46  0.49  0.57  0.95  0.90  0.93  0.42  0.80  0.80 ]
[ 0.84  0.90  0.95  0.86  0.54  0.91  0.89  0.97  0.85  0.36  0.91  0.50 ]
[ 0.84  0.77  0.75  0.78  0.91  0.32  0.40  0.97  0.85  0.48  0.92  0.93 ]
[ 0.89  0.84  0.63  0.87  0.73  0.84  0.80  0.96  0.77  0.66  0.96  0.88 ]
[ 0.73  0.31  0.95  0.58  0.40  0.56  0.76  0.95  0.83  0.96  0.39  0.47 ]
[ 0.95  0.87  0.92  0.49  0.98  0.76  0.93  0.68  0.79  0.86  0.33  0.74 ]
[ 0.33  0.56  0.35  0.91  0.80  0.54  0.87  0.34  0.95  0.47  0.66  0.32 ]
[ 0.95  0.84  0.95  0.93  0.53  0.65  0.96  0.93  0.97  0.42  0.74  0.96 ]
[ 0.79  0.77  0.95  0.86  0.66  0.56  0.55  0.90  0.96  0.98  0.53  0.68 ]
[ 0.91  0.93  0.36  0.83  0.97  0.70  0.77  0.95  0.68  0.56  0.62  0.96 ]
[ 0.95  0.71  0.53  0.83  0.79  0.86  0.94  0.96  0.78  0.48  0.95  0.63 ]
[ 0.73  0.91  0.82  0.83  0.97  0.35  0.71  0.85  0.72  0.82  0.85  0.96 ]

01/29 09:55:28 PM | === Batch 6/50
01/29 09:55:28 PM | loss = 0.566 + 1.159 + 0.097 = 1.821
01/29 09:55:29 PM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.20  0.76  0.32  0.69  0.29  0.59  0.20  0.97  0.20  0.61  0.89  0.22 ]
[ 0.46  0.30  0.27  0.97  0.89  0.55  0.97  0.85  0.68  0.89  0.74  0.96 ]
[ 0.25  0.31  0.22  0.64  0.70  0.35  0.74  0.99  0.66  0.45  0.29  0.57 ]
[ 0.62  0.90  0.73  0.84  0.99  0.94  0.98  0.98  0.83  0.85  0.39  0.92 ]
[ 0.29  0.50  0.36  0.33  0.84  0.74  0.20  0.56  0.20  0.64  0.28  0.72 ]
[ 0.41  0.24  0.86  0.89  0.74  0.65  0.97  0.57  0.96  0.87  0.80  0.96 ]
[ 0.33  0.37  0.23  0.32  0.84  0.20  0.77  0.50  0.86  0.29  0.25  0.72 ]
[ 0.77  0.83  0.93  0.98  0.80  0.23  0.97  0.59  0.62  0.67  0.28  0.97 ]
[ 0.62  0.64  0.20  0.27  0.81  0.27  0.35  0.48  0.21  0.61  0.98  0.27 ]
[ 0.80  0.75  0.72  0.81  0.96  0.21  0.62  0.83  0.78  0.90  0.69  0.39 ]
[ 0.27  0.78  0.20  0.21  0.58  0.50  0.92  0.96  0.76  0.20  0.89  0.31 ]
[ 0.74  0.88  0.68  0.95  0.93  0.29  0.92  0.36  0.95  0.61  0.66  0.80 ]
[ 0.53  0.27  0.96  0.64  0.92  0.91  0.59  0.99  0.22  0.41  0.91  0.34 ]
[ 0.59  0.94  0.98  0.20  0.46  0.48  0.98  0.27  0.98  0.21  0.89  0.96 ]
[ 0.77  0.92  0.25  0.96  0.94  0.85  0.84  0.92  0.93  0.22  0.42  0.26 ]
[ 0.76  0.97  0.92  0.25  0.90  0.24  0.98  0.33  0.95  0.33  0.91  0.97 ]
[ 0.81  0.21  0.31  0.92  0.25  0.21  0.21  0.28  0.20  0.20  0.37  0.27 ]
[ 0.83  0.89  0.94  0.22  0.96  0.28  0.39  0.24  0.73  0.39  0.89  0.89 ]
[ 0.93  0.93  0.95  0.98  0.87  0.93  0.98  0.56  0.90  0.93  0.92  0.99 ]
[ 0.20  0.95  0.97  0.98  0.55  0.66  0.94  0.94  0.79  0.97  0.98  0.80 ]
[ 0.31  0.23  0.20  0.29  0.70  0.24  0.68  0.85  0.91  0.65  0.24  0.30 ]
[ 0.77  0.91  0.52  0.93  0.89  0.73  0.96  0.85  0.70  0.83  0.22  0.65 ]
[ 0.48  0.54  0.59  0.84  0.66  0.28  0.61  0.29  0.43  0.69  0.81  0.28 ]
[ 0.78  0.90  0.81  0.89  0.81  0.62  0.96  0.83  0.86  0.26  0.91  0.69 ]
[ 0.87  0.88  0.54  0.58  0.90  0.20  0.26  0.74  0.36  0.58  0.50  0.27 ]
[ 0.77  0.92  0.83  0.90  0.45  0.56  0.84  0.40  0.89  0.80  0.50  0.95 ]
[ 0.62  0.27  0.31  0.23  0.91  0.67  0.91  0.20  0.83  0.35  0.45  0.21 ]
[ 0.74  0.94  0.83  0.89  0.90  0.68  0.54  0.34  0.53  0.84  0.60  0.84 ]
[ 0.21  0.26  0.24  0.53  0.28  0.56  0.41  0.22  0.45  0.30  0.23  0.20 ]
[ 0.72  0.90  0.88  0.92  0.92  0.59  0.85  0.55  0.49  0.85  0.55  0.95 ]
[ 0.36  0.20  0.94  0.38  0.22  0.27  0.63  0.31  0.87  0.97  0.27  0.92 ]
[ 0.51  0.93  0.73  0.63  0.75  0.41  0.37  0.48  0.85  0.90  0.39  0.50 ]
[ 0.28  0.38  0.51  0.52  0.80  0.20  0.71  0.63  0.87  0.31  0.20  0.48 ]
[ 0.76  0.93  0.73  0.86  0.36  0.64  0.94  0.34  0.31  0.86  0.41  0.94 ]
[ 0.75  0.37  0.79  0.30  0.23  0.56  0.92  0.70  0.37  0.78  0.30  0.57 ]
[ 0.77  0.92  0.21  0.91  0.96  0.35  0.83  0.59  0.23  0.59  0.43  0.64 ]
[ 0.96  0.95  0.48  0.94  0.88  0.89  0.95  0.90  0.97  0.98  0.87  0.90 ]
[ 0.86  0.89  0.87  0.89  0.99  0.20  0.96  0.20  0.96  0.84  0.99  0.97 ]
[ 0.46  0.79  0.92  0.92  0.55  0.26  0.81  0.87  0.91  0.79  0.71  0.78 ]
[ 0.65  0.89  0.91  0.79  0.96  0.93  0.91  0.76  0.79  0.52  0.99  0.91 ]
[ 0.77  0.97  0.20  0.54  0.79  0.47  0.20  0.56  0.53  0.69  0.97  0.92 ]
[ 0.91  0.84  0.98  0.82  0.91  0.96  0.42  0.33  0.87  0.96  0.98  0.98 ]
[ 0.75  0.71  0.63  0.40  0.43  0.54  0.95  0.85  0.91  0.35  0.82  0.81 ]
[ 0.88  0.92  0.94  0.87  0.59  0.90  0.90  0.97  0.86  0.26  0.91  0.48 ]
[ 0.86  0.73  0.74  0.80  0.92  0.20  0.30  0.98  0.86  0.44  0.90  0.91 ]
[ 0.92  0.86  0.69  0.89  0.73  0.86  0.82  0.96  0.74  0.69  0.95  0.90 ]
[ 0.75  0.20  0.95  0.50  0.31  0.49  0.74  0.96  0.76  0.95  0.32  0.35 ]
[ 0.95  0.90  0.94  0.46  0.98  0.78  0.93  0.75  0.78  0.89  0.26  0.79 ]
[ 0.23  0.49  0.25  0.91  0.79  0.45  0.88  0.22  0.93  0.43  0.67  0.20 ]
[ 0.95  0.78  0.94  0.95  0.52  0.58  0.96  0.95  0.97  0.30  0.74  0.96 ]
[ 0.79  0.78  0.94  0.87  0.68  0.47  0.43  0.91  0.96  0.99  0.47  0.58 ]
[ 0.92  0.91  0.31  0.80  0.97  0.71  0.77  0.93  0.68  0.54  0.60  0.96 ]
[ 0.95  0.74  0.42  0.77  0.80  0.88  0.94  0.96  0.83  0.37  0.93  0.57 ]
[ 0.68  0.88  0.84  0.85  0.96  0.24  0.69  0.77  0.68  0.86  0.83  0.96 ]

01/29 09:55:29 PM | === Batch 7/50
01/29 09:55:30 PM | loss = 0.847 + 0.667 + 0.087 = 1.601
01/29 09:55:31 PM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.12  0.77  0.28  0.67  0.21  0.60  0.12  0.97  0.12  0.57  0.90  0.15 ]
[ 0.40  0.21  0.19  0.98  0.91  0.57  0.98  0.87  0.69  0.90  0.78  0.97 ]
[ 0.17  0.25  0.14  0.57  0.68  0.29  0.68  0.99  0.66  0.40  0.21  0.51 ]
[ 0.68  0.90  0.76  0.88  1.00  0.94  0.98  0.98  0.84  0.84  0.29  0.93 ]
[ 0.28  0.47  0.37  0.26  0.85  0.78  0.12  0.53  0.12  0.62  0.19  0.71 ]
[ 0.32  0.15  0.89  0.91  0.77  0.69  0.97  0.53  0.96  0.88  0.83  0.97 ]
[ 0.24  0.32  0.15  0.29  0.83  0.12  0.78  0.47  0.86  0.26  0.18  0.71 ]
[ 0.72  0.86  0.94  0.98  0.82  0.15  0.98  0.55  0.59  0.68  0.20  0.97 ]
[ 0.59  0.66  0.12  0.19  0.79  0.18  0.26  0.43  0.12  0.56  0.98  0.27 ]
[ 0.75  0.77  0.76  0.84  0.97  0.13  0.61  0.85  0.78  0.91  0.59  0.32 ]
[ 0.18  0.76  0.12  0.13  0.55  0.40  0.92  0.97  0.76  0.12  0.88  0.24 ]
[ 0.68  0.90  0.72  0.96  0.95  0.21  0.93  0.27  0.95  0.56  0.61  0.82 ]
[ 0.53  0.19  0.96  0.61  0.93  0.91  0.52  0.99  0.14  0.36  0.90  0.24 ]
[ 0.50  0.93  0.98  0.14  0.48  0.40  0.98  0.17  0.98  0.13  0.90  0.97 ]
[ 0.75  0.92  0.20  0.97  0.94  0.83  0.82  0.93  0.93  0.14  0.36  0.17 ]
[ 0.69  0.97  0.93  0.19  0.89  0.16  0.98  0.24  0.95  0.24  0.91  0.98 ]
[ 0.81  0.14  0.22  0.93  0.17  0.14  0.15  0.21  0.12  0.12  0.29  0.19 ]
[ 0.79  0.87  0.94  0.14  0.96  0.21  0.32  0.17  0.71  0.32  0.90  0.89 ]
[ 0.93  0.94  0.96  0.98  0.90  0.94  0.98  0.57  0.91  0.94  0.94  0.99 ]
[ 0.12  0.96  0.97  0.99  0.52  0.61  0.95  0.95  0.75  0.97  0.98  0.84 ]
[ 0.23  0.15  0.12  0.28  0.63  0.17  0.66  0.85  0.91  0.69  0.19  0.23 ]
[ 0.80  0.93  0.50  0.94  0.90  0.67  0.97  0.86  0.63  0.82  0.14  0.68 ]
[ 0.42  0.48  0.54  0.88  0.62  0.22  0.52  0.21  0.38  0.68  0.81  0.20 ]
[ 0.81  0.92  0.81  0.91  0.84  0.52  0.97  0.86  0.84  0.19  0.91  0.71 ]
[ 0.86  0.90  0.47  0.64  0.90  0.12  0.23  0.75  0.26  0.54  0.45  0.18 ]
[ 0.78  0.94  0.86  0.92  0.45  0.47  0.87  0.30  0.88  0.74  0.41  0.95 ]
[ 0.57  0.19  0.22  0.15  0.91  0.64  0.92  0.12  0.77  0.28  0.36  0.13 ]
[ 0.75  0.95  0.81  0.90  0.91  0.61  0.52  0.27  0.55  0.84  0.53  0.88 ]
[ 0.15  0.18  0.16  0.44  0.20  0.52  0.37  0.15  0.40  0.21  0.15  0.12 ]
[ 0.72  0.93  0.87  0.94  0.94  0.50  0.88  0.54  0.43  0.85  0.50  0.95 ]
[ 0.26  0.12  0.95  0.29  0.14  0.21  0.59  0.25  0.83  0.97  0.20  0.92 ]
[ 0.48  0.94  0.70  0.66  0.78  0.31  0.28  0.43  0.85  0.91  0.30  0.42 ]
[ 0.19  0.27  0.48  0.48  0.83  0.12  0.67  0.62  0.90  0.25  0.12  0.38 ]
[ 0.76  0.94  0.72  0.88  0.32  0.56  0.95  0.27  0.24  0.88  0.32  0.94 ]
[ 0.75  0.28  0.77  0.21  0.15  0.47  0.91  0.70  0.27  0.73  0.22  0.61 ]
[ 0.79  0.93  0.14  0.93  0.97  0.25  0.84  0.51  0.16  0.60  0.37  0.62 ]
[ 0.97  0.96  0.54  0.95  0.87  0.90  0.95  0.88  0.96  0.98  0.89  0.87 ]
[ 0.86  0.89  0.90  0.90  0.99  0.12  0.95  0.12  0.96  0.88  0.99  0.96 ]
[ 0.38  0.81  0.93  0.92  0.56  0.18  0.81  0.82  0.90  0.73  0.70  0.81 ]
[ 0.69  0.89  0.93  0.79  0.94  0.93  0.90  0.72  0.78  0.51  0.99  0.91 ]
[ 0.78  0.97  0.12  0.52  0.77  0.37  0.12  0.52  0.47  0.68  0.98  0.93 ]
[ 0.93  0.86  0.99  0.82  0.91  0.95  0.39  0.27  0.88  0.97  0.99  0.99 ]
[ 0.73  0.69  0.61  0.32  0.35  0.52  0.95  0.78  0.91  0.27  0.83  0.78 ]
[ 0.92  0.93  0.93  0.87  0.59  0.88  0.89  0.97  0.86  0.18  0.91  0.44 ]
[ 0.87  0.71  0.71  0.81  0.93  0.12  0.21  0.98  0.84  0.39  0.90  0.89 ]
[ 0.94  0.87  0.75  0.91  0.74  0.90  0.87  0.96  0.67  0.70  0.95  0.92 ]
[ 0.76  0.12  0.96  0.39  0.24  0.44  0.74  0.96  0.74  0.95  0.29  0.24 ]
[ 0.94  0.92  0.96  0.48  0.98  0.79  0.94  0.81  0.77  0.91  0.21  0.82 ]
[ 0.15  0.43  0.16  0.89  0.76  0.39  0.89  0.15  0.90  0.38  0.66  0.12 ]
[ 0.96  0.71  0.95  0.97  0.59  0.53  0.96  0.95  0.97  0.21  0.73  0.97 ]
[ 0.80  0.80  0.94  0.88  0.68  0.40  0.35  0.91  0.96  0.99  0.39  0.56 ]
[ 0.94  0.92  0.27  0.80  0.96  0.68  0.76  0.91  0.68  0.52  0.53  0.97 ]
[ 0.94  0.76  0.31  0.77  0.81  0.90  0.93  0.95  0.87  0.31  0.91  0.48 ]
[ 0.61  0.86  0.83  0.83  0.96  0.15  0.63  0.74  0.65  0.90  0.80  0.95 ]

01/29 09:55:31 PM | === Batch 8/50
01/29 09:55:31 PM | loss = 0.939 + 0.290 + 0.080 = 1.308
01/29 09:55:32 PM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.07  0.79  0.24  0.65  0.15  0.58  0.07  0.97  0.07  0.50  0.92  0.10 ]
[ 0.32  0.15  0.12  0.99  0.93  0.65  0.98  0.88  0.66  0.93  0.83  0.97 ]
[ 0.13  0.27  0.09  0.48  0.66  0.30  0.61  0.99  0.66  0.37  0.16  0.49 ]
[ 0.75  0.89  0.81  0.91  1.00  0.96  0.98  0.98  0.84  0.80  0.26  0.94 ]
[ 0.30  0.47  0.43  0.22  0.87  0.83  0.07  0.49  0.07  0.56  0.13  0.69 ]
[ 0.24  0.10  0.92  0.94  0.79  0.75  0.97  0.52  0.97  0.90  0.84  0.97 ]
[ 0.15  0.32  0.11  0.29  0.86  0.08  0.77  0.46  0.86  0.27  0.15  0.70 ]
[ 0.63  0.87  0.95  0.99  0.83  0.10  0.98  0.54  0.53  0.72  0.13  0.98 ]
[ 0.57  0.68  0.07  0.21  0.83  0.13  0.18  0.42  0.07  0.48  0.98  0.28 ]
[ 0.67  0.77  0.81  0.88  0.98  0.08  0.62  0.88  0.80  0.93  0.47  0.27 ]
[ 0.11  0.77  0.07  0.08  0.50  0.30  0.92  0.98  0.75  0.07  0.89  0.19 ]
[ 0.58  0.92  0.77  0.98  0.96  0.15  0.93  0.21  0.96  0.55  0.54  0.85 ]
[ 0.49  0.12  0.97  0.56  0.93  0.92  0.43  0.99  0.09  0.31  0.91  0.19 ]
[ 0.39  0.94  0.99  0.11  0.50  0.31  0.98  0.11  0.98  0.08  0.91  0.97 ]
[ 0.72  0.91  0.14  0.97  0.94  0.85  0.84  0.93  0.94  0.09  0.32  0.12 ]
[ 0.59  0.98  0.95  0.15  0.87  0.11  0.99  0.19  0.95  0.18  0.92  0.98 ]
[ 0.78  0.10  0.16  0.92  0.13  0.09  0.11  0.16  0.07  0.07  0.21  0.13 ]
[ 0.72  0.88  0.95  0.09  0.96  0.15  0.28  0.11  0.73  0.27  0.90  0.89 ]
[ 0.94  0.95  0.97  0.99  0.93  0.94  0.99  0.61  0.92  0.95  0.96  1.00 ]
[ 0.07  0.96  0.97  0.99  0.52  0.60  0.96  0.97  0.68  0.98  0.99  0.89 ]
[ 0.17  0.09  0.07  0.32  0.56  0.11  0.68  0.88  0.90  0.74  0.16  0.20 ]
[ 0.81  0.93  0.51  0.95  0.92  0.61  0.98  0.89  0.53  0.77  0.09  0.69 ]
[ 0.43  0.46  0.46  0.92  0.65  0.16  0.42  0.16  0.36  0.63  0.78  0.16 ]
[ 0.81  0.93  0.84  0.92  0.88  0.45  0.98  0.89  0.80  0.15  0.91  0.73 ]
[ 0.86  0.92  0.39  0.68  0.88  0.07  0.22  0.79  0.18  0.53  0.40  0.11 ]
[ 0.78  0.95  0.88  0.93  0.50  0.39  0.90  0.20  0.90  0.70  0.31  0.94 ]
[ 0.59  0.13  0.14  0.11  0.92  0.58  0.93  0.07  0.70  0.24  0.28  0.08 ]
[ 0.72  0.96  0.84  0.89  0.93  0.54  0.58  0.21  0.60  0.81  0.43  0.89 ]
[ 0.11  0.12  0.11  0.39  0.14  0.44  0.33  0.11  0.35  0.14  0.10  0.07 ]
[ 0.68  0.93  0.89  0.94  0.95  0.42  0.92  0.57  0.37  0.81  0.41  0.94 ]
[ 0.18  0.07  0.95  0.24  0.09  0.18  0.52  0.22  0.77  0.98  0.15  0.93 ]
[ 0.43  0.95  0.70  0.73  0.81  0.24  0.19  0.36  0.85  0.90  0.21  0.38 ]
[ 0.13  0.19  0.40  0.52  0.88  0.07  0.62  0.56  0.93  0.19  0.07  0.29 ]
[ 0.74  0.94  0.76  0.88  0.28  0.48  0.97  0.20  0.17  0.88  0.24  0.95 ]
[ 0.73  0.21  0.72  0.14  0.09  0.39  0.87  0.67  0.18  0.64  0.16  0.68 ]
[ 0.78  0.93  0.09  0.95  0.98  0.17  0.87  0.42  0.11  0.65  0.29  0.61 ]
[ 0.97  0.97  0.62  0.95  0.87  0.92  0.95  0.86  0.96  0.98  0.89  0.83 ]
[ 0.84  0.91  0.92  0.91  0.99  0.07  0.93  0.07  0.97  0.92  0.99  0.95 ]
[ 0.29  0.80  0.94  0.91  0.58  0.13  0.76  0.74  0.88  0.65  0.67  0.82 ]
[ 0.69  0.90  0.94  0.78  0.95  0.91  0.88  0.72  0.79  0.55  1.00  0.90 ]
[ 0.77  0.97  0.07  0.48  0.73  0.31  0.07  0.51  0.39  0.71  0.98  0.94 ]
[ 0.93  0.87  0.99  0.80  0.90  0.94  0.39  0.26  0.87  0.98  0.99  0.99 ]
[ 0.74  0.63  0.54  0.25  0.28  0.50  0.95  0.68  0.91  0.20  0.83  0.73 ]
[ 0.93  0.94  0.90  0.85  0.54  0.84  0.88  0.97  0.87  0.13  0.89  0.48 ]
[ 0.87  0.67  0.67  0.83  0.95  0.07  0.15  0.97  0.80  0.37  0.90  0.86 ]
[ 0.94  0.87  0.81  0.92  0.78  0.93  0.90  0.97  0.58  0.72  0.95  0.93 ]
[ 0.75  0.07  0.96  0.30  0.19  0.41  0.76  0.97  0.68  0.96  0.31  0.17 ]
[ 0.94  0.92  0.97  0.51  0.98  0.79  0.96  0.84  0.73  0.92  0.18  0.86 ]
[ 0.10  0.38  0.10  0.86  0.71  0.34  0.91  0.11  0.84  0.30  0.59  0.07 ]
[ 0.96  0.70  0.97  0.97  0.66  0.60  0.97  0.95  0.97  0.16  0.70  0.96 ]
[ 0.83  0.82  0.95  0.89  0.62  0.38  0.31  0.92  0.95  0.99  0.34  0.51 ]
[ 0.96  0.93  0.25  0.80  0.97  0.71  0.75  0.90  0.67  0.46  0.46  0.96 ]
[ 0.93  0.77  0.23  0.79  0.81  0.89  0.91  0.95  0.90  0.25  0.88  0.39 ]
[ 0.50  0.85  0.81  0.79  0.97  0.09  0.53  0.76  0.66  0.91  0.78  0.94 ]

01/29 09:55:32 PM | === Batch 9/50
01/29 09:55:33 PM | loss = 0.969 + 0.025 + 0.074 = 1.068
01/29 09:55:33 PM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.04  0.80  0.18  0.63  0.11  0.60  0.04  0.97  0.04  0.43  0.93  0.07 ]
[ 0.27  0.10  0.08  0.99  0.94  0.71  0.98  0.89  0.63  0.95  0.87  0.98 ]
[ 0.09  0.26  0.06  0.40  0.63  0.28  0.53  0.99  0.66  0.33  0.11  0.44 ]
[ 0.80  0.88  0.85  0.93  1.00  0.97  0.99  0.99  0.84  0.76  0.25  0.94 ]
[ 0.33  0.44  0.49  0.18  0.88  0.87  0.04  0.43  0.04  0.51  0.09  0.67 ]
[ 0.18  0.07  0.94  0.95  0.80  0.80  0.97  0.51  0.97  0.92  0.87  0.98 ]
[ 0.10  0.31  0.07  0.27  0.88  0.05  0.77  0.44  0.85  0.26  0.13  0.70 ]
[ 0.54  0.88  0.97  0.99  0.84  0.07  0.98  0.52  0.48  0.77  0.09  0.98 ]
[ 0.56  0.72  0.04  0.22  0.86  0.09  0.12  0.40  0.05  0.38  0.98  0.32 ]
[ 0.60  0.78  0.86  0.90  0.98  0.05  0.64  0.91  0.82  0.94  0.34  0.21 ]
[ 0.07  0.76  0.04  0.05  0.44  0.26  0.92  0.98  0.75  0.04  0.89  0.15 ]
[ 0.49  0.94  0.82  0.98  0.96  0.10  0.94  0.16  0.97  0.54  0.46  0.88 ]
[ 0.46  0.08  0.97  0.51  0.94  0.92  0.36  0.99  0.05  0.25  0.92  0.15 ]
[ 0.29  0.94  0.99  0.08  0.53  0.23  0.98  0.07  0.99  0.05  0.92  0.98 ]
[ 0.65  0.91  0.10  0.98  0.93  0.85  0.84  0.93  0.95  0.06  0.28  0.08 ]
[ 0.49  0.98  0.96  0.11  0.85  0.08  0.99  0.14  0.96  0.14  0.92  0.99 ]
[ 0.76  0.08  0.11  0.91  0.10  0.06  0.08  0.12  0.04  0.04  0.16  0.09 ]
[ 0.64  0.88  0.96  0.06  0.97  0.10  0.25  0.08  0.75  0.23  0.91  0.89 ]
[ 0.95  0.96  0.97  0.99  0.95  0.94  0.99  0.64  0.92  0.96  0.97  1.00 ]
[ 0.04  0.97  0.98  0.99  0.53  0.57  0.97  0.97  0.61  0.98  0.99  0.92 ]
[ 0.13  0.06  0.04  0.37  0.51  0.08  0.67  0.90  0.88  0.80  0.15  0.17 ]
[ 0.81  0.94  0.51  0.95  0.93  0.56  0.98  0.91  0.43  0.73  0.06  0.70 ]
[ 0.38  0.41  0.38  0.94  0.66  0.12  0.32  0.13  0.32  0.56  0.74  0.12 ]
[ 0.81  0.94  0.86  0.93  0.90  0.38  0.99  0.91  0.76  0.12  0.89  0.74 ]
[ 0.86  0.93  0.30  0.74  0.86  0.04  0.21  0.82  0.12  0.51  0.34  0.07 ]
[ 0.77  0.96  0.90  0.93  0.54  0.31  0.92  0.14  0.91  0.69  0.23  0.93 ]
[ 0.58  0.08  0.09  0.08  0.92  0.51  0.93  0.04  0.63  0.21  0.21  0.04 ]
[ 0.68  0.97  0.86  0.89  0.94  0.46  0.63  0.16  0.65  0.79  0.34  0.91 ]
[ 0.07  0.08  0.07  0.33  0.09  0.35  0.29  0.08  0.28  0.10  0.06  0.04 ]
[ 0.63  0.94  0.89  0.95  0.96  0.34  0.94  0.59  0.31  0.77  0.34  0.94 ]
[ 0.12  0.04  0.95  0.19  0.06  0.14  0.43  0.18  0.70  0.98  0.11  0.93 ]
[ 0.39  0.95  0.69  0.76  0.85  0.17  0.14  0.28  0.84  0.90  0.15  0.36 ]
[ 0.08  0.13  0.32  0.56  0.90  0.04  0.55  0.50  0.95  0.15  0.04  0.21 ]
[ 0.70  0.95  0.77  0.89  0.24  0.40  0.97  0.16  0.12  0.87  0.18  0.95 ]
[ 0.71  0.15  0.66  0.09  0.06  0.33  0.83  0.64  0.12  0.55  0.12  0.72 ]
[ 0.77  0.93  0.06  0.96  0.99  0.12  0.89  0.34  0.07  0.68  0.25  0.57 ]
[ 0.98  0.97  0.70  0.95  0.86  0.93  0.95  0.84  0.96  0.98  0.90  0.78 ]
[ 0.82  0.92  0.93  0.91  0.99  0.04  0.91  0.04  0.97  0.94  0.99  0.95 ]
[ 0.21  0.77  0.94  0.91  0.62  0.09  0.72  0.64  0.87  0.56  0.63  0.81 ]
[ 0.73  0.91  0.95  0.77  0.96  0.89  0.85  0.72  0.78  0.55  1.00  0.88 ]
[ 0.76  0.97  0.04  0.43  0.68  0.26  0.04  0.48  0.30  0.71  0.98  0.95 ]
[ 0.93  0.88  0.99  0.78  0.89  0.92  0.36  0.26  0.87  0.98  0.99  0.99 ]
[ 0.76  0.55  0.46  0.19  0.20  0.47  0.95  0.63  0.89  0.14  0.84  0.67 ]
[ 0.94  0.94  0.86  0.83  0.50  0.79  0.86  0.97  0.87  0.09  0.87  0.51 ]
[ 0.88  0.64  0.59  0.82  0.96  0.04  0.11  0.97  0.75  0.35  0.89  0.83 ]
[ 0.94  0.87  0.85  0.93  0.82  0.95  0.93  0.97  0.49  0.73  0.96  0.94 ]
[ 0.73  0.04  0.96  0.22  0.14  0.38  0.78  0.97  0.60  0.97  0.34  0.12 ]
[ 0.93  0.93  0.98  0.53  0.98  0.78  0.97  0.86  0.68  0.93  0.18  0.89 ]
[ 0.07  0.30  0.06  0.83  0.65  0.30  0.92  0.07  0.81  0.24  0.51  0.04 ]
[ 0.96  0.71  0.98  0.98  0.72  0.66  0.98  0.95  0.97  0.12  0.65  0.95 ]
[ 0.85  0.84  0.95  0.89  0.55  0.37  0.27  0.92  0.94  0.99  0.27  0.48 ]
[ 0.97  0.94  0.26  0.80  0.97  0.74  0.73  0.91  0.66  0.38  0.37  0.96 ]
[ 0.92  0.76  0.16  0.80  0.81  0.90  0.89  0.95  0.90  0.20  0.85  0.29 ]
[ 0.41  0.82  0.75  0.74  0.97  0.05  0.44  0.79  0.66  0.92  0.76  0.93 ]

01/29 09:55:33 PM | === Batch 10/50
01/29 09:55:34 PM | loss = 1.427 + 0.267 + 0.069 = 1.763
01/29 09:55:35 PM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.03  0.84  0.14  0.63  0.08  0.67  0.03  0.97  0.03  0.40  0.95  0.05 ]
[ 0.21  0.08  0.07  1.00  0.95  0.77  0.98  0.91  0.63  0.96  0.90  0.98 ]
[ 0.07  0.26  0.04  0.35  0.61  0.27  0.53  0.99  0.71  0.34  0.09  0.45 ]
[ 0.85  0.88  0.88  0.95  1.00  0.97  0.99  0.99  0.83  0.71  0.27  0.94 ]
[ 0.35  0.44  0.58  0.16  0.88  0.91  0.03  0.40  0.03  0.51  0.07  0.65 ]
[ 0.15  0.05  0.95  0.97  0.82  0.83  0.98  0.51  0.98  0.94  0.90  0.98 ]
[ 0.07  0.36  0.06  0.28  0.91  0.04  0.78  0.48  0.86  0.25  0.13  0.72 ]
[ 0.43  0.89  0.97  1.00  0.84  0.05  0.98  0.54  0.44  0.82  0.07  0.99 ]
[ 0.62  0.78  0.03  0.25  0.89  0.07  0.10  0.44  0.03  0.35  0.98  0.37 ]
[ 0.50  0.78  0.89  0.92  0.99  0.03  0.68  0.93  0.85  0.95  0.28  0.18 ]
[ 0.05  0.78  0.03  0.04  0.42  0.30  0.93  0.98  0.75  0.03  0.89  0.12 ]
[ 0.38  0.95  0.86  0.99  0.97  0.07  0.95  0.13  0.97  0.57  0.41  0.89 ]
[ 0.46  0.06  0.97  0.47  0.94  0.93  0.35  0.99  0.04  0.22  0.94  0.13 ]
[ 0.21  0.94  0.99  0.06  0.55  0.19  0.99  0.04  0.99  0.03  0.93  0.98 ]
[ 0.67  0.91  0.08  0.98  0.93  0.87  0.86  0.93  0.95  0.04  0.28  0.06 ]
[ 0.39  0.99  0.96  0.10  0.86  0.06  0.99  0.12  0.96  0.11  0.93  0.99 ]
[ 0.74  0.06  0.08  0.92  0.08  0.04  0.07  0.10  0.03  0.03  0.14  0.07 ]
[ 0.54  0.89  0.97  0.04  0.97  0.08  0.24  0.05  0.76  0.20  0.91  0.88 ]
[ 0.96  0.97  0.98  0.99  0.96  0.94  0.99  0.67  0.93  0.97  0.98  1.00 ]
[ 0.03  0.97  0.98  0.99  0.52  0.57  0.97  0.98  0.51  0.99  0.99  0.94 ]
[ 0.10  0.04  0.03  0.45  0.53  0.06  0.72  0.91  0.88  0.84  0.14  0.17 ]
[ 0.82  0.94  0.49  0.96  0.94  0.53  0.99  0.92  0.33  0.70  0.04  0.74 ]
[ 0.32  0.39  0.33  0.95  0.67  0.10  0.31  0.12  0.28  0.50  0.71  0.10 ]
[ 0.81  0.95  0.86  0.94  0.92  0.32  0.99  0.93  0.72  0.09  0.86  0.78 ]
[ 0.86  0.95  0.26  0.81  0.83  0.03  0.22  0.85  0.10  0.50  0.32  0.05 ]
[ 0.75  0.96  0.91  0.94  0.58  0.26  0.94  0.10  0.92  0.72  0.19  0.93 ]
[ 0.62  0.06  0.06  0.06  0.93  0.49  0.93  0.03  0.67  0.19  0.17  0.03 ]
[ 0.64  0.97  0.86  0.89  0.94  0.40  0.65  0.14  0.69  0.77  0.31  0.93 ]
[ 0.05  0.06  0.05  0.31  0.07  0.32  0.28  0.06  0.28  0.08  0.04  0.03 ]
[ 0.59  0.94  0.87  0.95  0.97  0.27  0.95  0.60  0.27  0.74  0.33  0.92 ]
[ 0.09  0.03  0.96  0.18  0.04  0.12  0.37  0.16  0.71  0.98  0.09  0.94 ]
[ 0.36  0.95  0.66  0.78  0.89  0.14  0.11  0.20  0.83  0.89  0.11  0.31 ]
[ 0.06  0.09  0.29  0.62  0.92  0.03  0.51  0.47  0.97  0.12  0.03  0.17 ]
[ 0.67  0.95  0.76  0.90  0.21  0.33  0.98  0.15  0.09  0.88  0.17  0.96 ]
[ 0.67  0.11  0.59  0.06  0.04  0.29  0.83  0.68  0.08  0.59  0.09  0.77 ]
[ 0.76  0.93  0.04  0.97  0.99  0.08  0.91  0.33  0.05  0.73  0.25  0.55 ]
[ 0.98  0.98  0.75  0.95  0.86  0.94  0.94  0.85  0.96  0.98  0.90  0.80 ]
[ 0.82  0.93  0.94  0.91  0.99  0.03  0.92  0.03  0.97  0.94  0.99  0.94 ]
[ 0.19  0.74  0.95  0.93  0.65  0.07  0.70  0.63  0.87  0.51  0.65  0.81 ]
[ 0.76  0.93  0.95  0.76  0.96  0.89  0.86  0.76  0.78  0.52  1.00  0.87 ]
[ 0.71  0.97  0.03  0.39  0.63  0.24  0.03  0.46  0.25  0.71  0.99  0.95 ]
[ 0.94  0.89  0.99  0.77  0.91  0.92  0.36  0.30  0.87  0.98  0.99  0.99 ]
[ 0.78  0.55  0.41  0.17  0.16  0.52  0.93  0.63  0.89  0.12  0.85  0.57 ]
[ 0.95  0.94  0.83  0.80  0.48  0.79  0.87  0.98  0.89  0.07  0.84  0.55 ]
[ 0.89  0.66  0.50  0.80  0.97  0.03  0.08  0.96  0.72  0.34  0.87  0.84 ]
[ 0.95  0.87  0.87  0.94  0.85  0.96  0.94  0.98  0.47  0.75  0.96  0.95 ]
[ 0.70  0.03  0.96  0.17  0.11  0.36  0.77  0.98  0.64  0.97  0.39  0.09 ]
[ 0.94  0.93  0.98  0.56  0.99  0.79  0.97  0.88  0.67  0.93  0.20  0.92 ]
[ 0.07  0.24  0.04  0.85  0.60  0.27  0.93  0.06  0.84  0.21  0.46  0.03 ]
[ 0.96  0.73  0.98  0.98  0.79  0.69  0.99  0.94  0.97  0.11  0.57  0.94 ]
[ 0.85  0.85  0.96  0.90  0.49  0.39  0.23  0.93  0.94  0.99  0.21  0.48 ]
[ 0.97  0.95  0.31  0.79  0.97  0.75  0.71  0.92  0.67  0.34  0.28  0.96 ]
[ 0.92  0.73  0.13  0.82  0.80  0.89  0.89  0.96  0.90  0.17  0.85  0.24 ]
[ 0.34  0.82  0.69  0.70  0.97  0.04  0.36  0.81  0.64  0.91  0.74  0.92 ]

01/29 09:55:35 PM | === Batch 11/50
01/29 09:55:35 PM | loss = 0.766 + 0.342 + 0.064 = 1.173
01/29 09:55:36 PM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.02  0.87  0.12  0.65  0.07  0.74  0.02  0.98  0.02  0.39  0.97  0.04 ]
[ 0.18  0.06  0.06  1.00  0.96  0.82  0.98  0.92  0.67  0.97  0.93  0.98 ]
[ 0.07  0.31  0.03  0.36  0.62  0.28  0.58  0.99  0.76  0.37  0.09  0.47 ]
[ 0.88  0.90  0.90  0.97  1.00  0.98  0.99  0.99  0.83  0.67  0.31  0.94 ]
[ 0.36  0.47  0.68  0.16  0.88  0.94  0.02  0.37  0.02  0.54  0.06  0.65 ]
[ 0.14  0.04  0.96  0.98  0.84  0.85  0.98  0.52  0.98  0.96  0.92  0.98 ]
[ 0.05  0.43  0.05  0.30  0.93  0.03  0.80  0.56  0.88  0.27  0.14  0.77 ]
[ 0.38  0.91  0.98  1.00  0.86  0.03  0.99  0.57  0.42  0.86  0.05  0.99 ]
[ 0.70  0.84  0.02  0.30  0.92  0.06  0.09  0.49  0.02  0.34  0.99  0.40 ]
[ 0.48  0.80  0.92  0.94  0.99  0.02  0.73  0.95  0.87  0.97  0.25  0.15 ]
[ 0.04  0.81  0.02  0.03  0.43  0.36  0.95  0.99  0.76  0.02  0.90  0.10 ]
[ 0.33  0.96  0.89  0.99  0.98  0.05  0.96  0.10  0.97  0.63  0.37  0.90 ]
[ 0.51  0.05  0.97  0.46  0.94  0.93  0.38  0.99  0.03  0.20  0.95  0.12 ]
[ 0.17  0.94  1.00  0.05  0.58  0.16  0.99  0.03  0.99  0.02  0.93  0.98 ]
[ 0.72  0.93  0.07  0.98  0.93  0.89  0.88  0.93  0.96  0.03  0.30  0.05 ]
[ 0.34  0.99  0.97  0.10  0.87  0.05  0.99  0.10  0.96  0.10  0.94  0.99 ]
[ 0.76  0.05  0.07  0.93  0.07  0.03  0.06  0.09  0.02  0.02  0.14  0.06 ]
[ 0.50  0.89  0.97  0.03  0.97  0.06  0.24  0.04  0.77  0.19  0.92  0.85 ]
[ 0.97  0.98  0.98  0.99  0.97  0.94  0.99  0.70  0.94  0.97  0.98  1.00 ]
[ 0.02  0.98  0.98  1.00  0.53  0.61  0.97  0.98  0.50  0.99  0.99  0.96 ]
[ 0.09  0.03  0.02  0.55  0.58  0.05  0.78  0.92  0.89  0.87  0.14  0.17 ]
[ 0.82  0.94  0.48  0.96  0.94  0.54  0.99  0.92  0.28  0.70  0.03  0.79 ]
[ 0.31  0.39  0.31  0.96  0.69  0.08  0.31  0.12  0.27  0.44  0.69  0.09 ]
[ 0.81  0.95  0.86  0.95  0.93  0.30  0.99  0.94  0.72  0.08  0.84  0.83 ]
[ 0.86  0.96  0.24  0.87  0.82  0.02  0.23  0.87  0.09  0.52  0.32  0.03 ]
[ 0.74  0.97  0.92  0.95  0.64  0.24  0.95  0.09  0.94  0.77  0.17  0.92 ]
[ 0.69  0.05  0.05  0.05  0.94  0.49  0.94  0.02  0.73  0.18  0.14  0.02 ]
[ 0.60  0.97  0.86  0.89  0.95  0.40  0.67  0.13  0.73  0.77  0.30  0.95 ]
[ 0.04  0.04  0.04  0.32  0.07  0.31  0.28  0.05  0.32  0.07  0.03  0.02 ]
[ 0.54  0.94  0.84  0.96  0.98  0.25  0.96  0.59  0.24  0.74  0.33  0.90 ]
[ 0.07  0.02  0.97  0.18  0.03  0.11  0.31  0.16  0.76  0.99  0.07  0.94 ]
[ 0.33  0.95  0.65  0.81  0.93  0.12  0.09  0.16  0.83  0.90  0.09  0.25 ]
[ 0.04  0.07  0.29  0.70  0.93  0.02  0.49  0.47  0.98  0.11  0.02  0.15 ]
[ 0.63  0.95  0.74  0.91  0.19  0.30  0.98  0.14  0.07  0.88  0.16  0.97 ]
[ 0.66  0.08  0.55  0.05  0.03  0.29  0.86  0.73  0.06  0.65  0.07  0.82 ]
[ 0.74  0.92  0.03  0.98  0.99  0.06  0.92  0.36  0.04  0.76  0.28  0.50 ]
[ 0.98  0.99  0.80  0.95  0.86  0.95  0.94  0.87  0.96  0.98  0.91  0.83 ]
[ 0.83  0.94  0.95  0.92  1.00  0.02  0.93  0.02  0.97  0.95  1.00  0.95 ]
[ 0.19  0.71  0.96  0.94  0.70  0.06  0.70  0.64  0.89  0.50  0.69  0.82 ]
[ 0.80  0.93  0.96  0.78  0.96  0.90  0.87  0.80  0.77  0.53  1.00  0.87 ]
[ 0.66  0.97  0.02  0.39  0.63  0.22  0.02  0.47  0.22  0.71  0.99  0.96 ]
[ 0.94  0.90  0.99  0.77  0.93  0.93  0.37  0.34  0.88  0.99  0.99  0.99 ]
[ 0.81  0.58  0.40  0.16  0.15  0.58  0.92  0.66  0.89  0.11  0.88  0.47 ]
[ 0.96  0.94  0.81  0.79  0.49  0.79  0.88  0.98  0.91  0.05  0.79  0.59 ]
[ 0.90  0.71  0.44  0.76  0.98  0.02  0.07  0.96  0.71  0.36  0.87  0.87 ]
[ 0.96  0.88  0.89  0.95  0.88  0.97  0.95  0.98  0.49  0.79  0.97  0.95 ]
[ 0.66  0.02  0.96  0.15  0.09  0.36  0.77  0.98  0.69  0.98  0.44  0.08 ]
[ 0.95  0.94  0.99  0.56  0.99  0.80  0.98  0.90  0.65  0.93  0.23  0.93 ]
[ 0.07  0.21  0.03  0.88  0.57  0.26  0.94  0.05  0.87  0.19  0.44  0.02 ]
[ 0.96  0.76  0.99  0.98  0.84  0.72  0.99  0.93  0.98  0.12  0.47  0.94 ]
[ 0.85  0.85  0.97  0.91  0.43  0.44  0.20  0.94  0.93  0.99  0.18  0.49 ]
[ 0.96  0.96  0.37  0.78  0.97  0.76  0.68  0.94  0.70  0.33  0.21  0.96 ]
[ 0.92  0.68  0.11  0.81  0.80  0.89  0.89  0.97  0.88  0.15  0.86  0.22 ]
[ 0.28  0.79  0.61  0.70  0.97  0.02  0.30  0.83  0.62  0.88  0.74  0.91 ]

01/29 09:55:36 PM | === Batch 12/50
01/29 09:55:37 PM | loss = 0.817 + 0.280 + 0.060 = 1.158
01/29 09:55:38 PM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.01  0.90  0.12  0.71  0.06  0.81  0.01  0.98  0.01  0.39  0.98  0.04 ]
[ 0.17  0.05  0.06  1.00  0.97  0.86  0.99  0.93  0.73  0.98  0.95  0.99 ]
[ 0.06  0.38  0.02  0.41  0.65  0.29  0.64  1.00  0.82  0.42  0.08  0.52 ]
[ 0.91  0.92  0.92  0.98  1.00  0.98  0.99  0.99  0.83  0.64  0.38  0.94 ]
[ 0.40  0.54  0.78  0.17  0.88  0.96  0.01  0.38  0.01  0.60  0.06  0.69 ]
[ 0.15  0.03  0.96  0.98  0.87  0.87  0.98  0.52  0.98  0.97  0.94  0.98 ]
[ 0.04  0.52  0.04  0.34  0.95  0.02  0.83  0.64  0.89  0.30  0.18  0.81 ]
[ 0.35  0.92  0.98  1.00  0.89  0.03  0.99  0.60  0.41  0.89  0.04  0.99 ]
[ 0.78  0.89  0.01  0.37  0.94  0.05  0.08  0.56  0.02  0.36  0.99  0.43 ]
[ 0.49  0.81  0.94  0.96  0.99  0.02  0.77  0.96  0.89  0.97  0.23  0.13 ]
[ 0.03  0.84  0.01  0.02  0.47  0.44  0.96  0.99  0.79  0.01  0.90  0.09 ]
[ 0.29  0.97  0.92  0.99  0.98  0.04  0.97  0.09  0.98  0.68  0.35  0.91 ]
[ 0.58  0.04  0.97  0.49  0.95  0.93  0.45  0.99  0.02  0.20  0.96  0.12 ]
[ 0.13  0.94  1.00  0.05  0.61  0.15  0.99  0.02  0.99  0.02  0.93  0.98 ]
[ 0.78  0.94  0.06  0.99  0.95  0.90  0.90  0.95  0.97  0.02  0.32  0.04 ]
[ 0.32  0.99  0.97  0.12  0.87  0.04  0.99  0.10  0.97  0.09  0.94  0.99 ]
[ 0.80  0.04  0.06  0.94  0.06  0.03  0.05  0.09  0.01  0.01  0.14  0.05 ]
[ 0.48  0.88  0.98  0.02  0.98  0.05  0.24  0.03  0.76  0.17  0.94  0.82 ]
[ 0.98  0.98  0.99  0.99  0.97  0.93  0.99  0.74  0.95  0.98  0.98  1.00 ]
[ 0.01  0.98  0.98  1.00  0.57  0.67  0.98  0.98  0.51  0.99  0.99  0.97 ]
[ 0.09  0.02  0.01  0.65  0.65  0.04  0.83  0.93  0.91  0.90  0.16  0.19 ]
[ 0.82  0.94  0.47  0.96  0.95  0.56  0.99  0.93  0.24  0.73  0.02  0.83 ]
[ 0.31  0.41  0.31  0.97  0.70  0.08  0.32  0.13  0.29  0.42  0.70  0.08 ]
[ 0.81  0.95  0.86  0.96  0.94  0.30  0.99  0.94  0.74  0.06  0.83  0.87 ]
[ 0.88  0.97  0.24  0.91  0.83  0.01  0.26  0.89  0.08  0.57  0.34  0.03 ]
[ 0.74  0.97  0.93  0.95  0.70  0.23  0.96  0.09  0.95  0.80  0.17  0.91 ]
[ 0.75  0.05  0.04  0.04  0.95  0.51  0.94  0.01  0.79  0.18  0.13  0.01 ]
[ 0.59  0.97  0.85  0.90  0.95  0.41  0.67  0.12  0.75  0.79  0.31  0.96 ]
[ 0.03  0.04  0.03  0.36  0.06  0.33  0.29  0.04  0.36  0.06  0.02  0.01 ]
[ 0.52  0.95  0.80  0.96  0.98  0.24  0.97  0.57  0.21  0.77  0.36  0.86 ]
[ 0.06  0.01  0.98  0.19  0.02  0.10  0.27  0.16  0.81  0.99  0.06  0.95 ]
[ 0.33  0.95  0.66  0.84  0.95  0.11  0.07  0.13  0.83  0.91  0.07  0.19 ]
[ 0.03  0.05  0.30  0.77  0.94  0.01  0.51  0.50  0.99  0.10  0.01  0.14 ]
[ 0.61  0.95  0.71  0.92  0.19  0.30  0.99  0.15  0.06  0.89  0.17  0.97 ]
[ 0.67  0.06  0.53  0.04  0.02  0.33  0.88  0.79  0.05  0.72  0.06  0.86 ]
[ 0.74  0.92  0.02  0.98  0.99  0.05  0.93  0.41  0.03  0.78  0.32  0.46 ]
[ 0.98  0.99  0.84  0.95  0.86  0.96  0.94  0.91  0.96  0.98  0.92  0.86 ]
[ 0.84  0.95  0.96  0.93  1.00  0.01  0.94  0.01  0.97  0.95  1.00  0.95 ]
[ 0.20  0.70  0.96  0.95  0.70  0.05  0.71  0.67  0.91  0.51  0.74  0.84 ]
[ 0.83  0.94  0.97  0.79  0.97  0.91  0.89  0.83  0.76  0.56  1.00  0.88 ]
[ 0.61  0.97  0.01  0.43  0.64  0.22  0.01  0.51  0.22  0.70  0.99  0.97 ]
[ 0.95  0.91  0.99  0.77  0.94  0.94  0.38  0.40  0.90  0.99  1.00  0.99 ]
[ 0.85  0.63  0.41  0.17  0.14  0.65  0.90  0.72  0.90  0.10  0.90  0.39 ]
[ 0.97  0.94  0.80  0.79  0.52  0.81  0.90  0.99  0.92  0.04  0.75  0.60 ]
[ 0.92  0.76  0.41  0.68  0.98  0.01  0.06  0.96  0.75  0.40  0.88  0.90 ]
[ 0.96  0.88  0.90  0.95  0.90  0.97  0.96  0.99  0.51  0.83  0.98  0.96 ]
[ 0.66  0.01  0.96  0.14  0.08  0.39  0.77  0.99  0.76  0.98  0.49  0.07 ]
[ 0.96  0.94  0.99  0.57  0.99  0.82  0.98  0.92  0.61  0.93  0.28  0.94 ]
[ 0.08  0.19  0.02  0.91  0.57  0.26  0.95  0.04  0.89  0.18  0.42  0.01 ]
[ 0.96  0.78  0.99  0.98  0.88  0.72  0.99  0.92  0.98  0.13  0.38  0.94 ]
[ 0.86  0.86  0.97  0.92  0.39  0.50  0.19  0.95  0.94  0.99  0.18  0.54 ]
[ 0.96  0.96  0.45  0.77  0.97  0.76  0.64  0.95  0.75  0.33  0.16  0.96 ]
[ 0.93  0.64  0.09  0.79  0.78  0.89  0.89  0.98  0.86  0.14  0.88  0.21 ]
[ 0.24  0.74  0.54  0.70  0.97  0.02  0.26  0.85  0.56  0.85  0.75  0.92 ]

01/29 09:55:38 PM | === Batch 13/50
01/29 09:55:38 PM | loss = 0.947 + 0.129 + 0.057 = 1.132
01/29 09:55:39 PM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.01  0.93  0.12  0.76  0.06  0.86  0.01  0.98  0.01  0.42  0.98  0.03 ]
[ 0.16  0.04  0.06  1.00  0.97  0.89  0.99  0.94  0.78  0.98  0.96  0.99 ]
[ 0.06  0.49  0.02  0.46  0.71  0.32  0.71  1.00  0.87  0.49  0.09  0.59 ]
[ 0.93  0.94  0.94  0.98  1.00  0.98  0.99  0.99  0.84  0.62  0.47  0.95 ]
[ 0.47  0.62  0.85  0.18  0.89  0.97  0.01  0.41  0.01  0.66  0.06  0.72 ]
[ 0.17  0.02  0.97  0.99  0.89  0.89  0.98  0.55  0.99  0.97  0.96  0.98 ]
[ 0.03  0.61  0.04  0.38  0.96  0.02  0.86  0.71  0.91  0.35  0.22  0.85 ]
[ 0.35  0.93  0.98  1.00  0.91  0.02  0.99  0.64  0.42  0.92  0.04  0.99 ]
[ 0.85  0.92  0.01  0.44  0.95  0.05  0.08  0.65  0.01  0.40  0.99  0.49 ]
[ 0.52  0.82  0.95  0.97  0.99  0.01  0.81  0.97  0.91  0.98  0.23  0.12 ]
[ 0.02  0.87  0.01  0.02  0.53  0.55  0.97  0.99  0.82  0.01  0.91  0.08 ]
[ 0.27  0.97  0.94  1.00  0.99  0.03  0.97  0.08  0.98  0.74  0.35  0.92 ]
[ 0.66  0.03  0.98  0.54  0.95  0.94  0.54  0.99  0.02  0.21  0.97  0.13 ]
[ 0.11  0.94  1.00  0.04  0.67  0.13  0.99  0.02  0.99  0.01  0.94  0.98 ]
[ 0.84  0.95  0.06  0.99  0.96  0.92  0.92  0.96  0.97  0.02  0.36  0.04 ]
[ 0.32  0.99  0.97  0.13  0.89  0.03  0.99  0.09  0.97  0.08  0.95  0.99 ]
[ 0.85  0.04  0.05  0.96  0.05  0.02  0.05  0.10  0.01  0.01  0.16  0.04 ]
[ 0.48  0.88  0.98  0.01  0.98  0.04  0.25  0.02  0.75  0.17  0.95  0.81 ]
[ 0.98  0.99  0.99  0.99  0.98  0.93  1.00  0.78  0.96  0.98  0.99  1.00 ]
[ 0.01  0.98  0.98  1.00  0.60  0.73  0.98  0.99  0.55  0.99  0.99  0.98 ]
[ 0.08  0.02  0.01  0.74  0.71  0.03  0.88  0.94  0.92  0.92  0.19  0.21 ]
[ 0.84  0.94  0.47  0.96  0.95  0.58  0.99  0.93  0.22  0.77  0.02  0.87 ]
[ 0.34  0.46  0.31  0.98  0.73  0.07  0.35  0.14  0.35  0.41  0.71  0.08 ]
[ 0.82  0.95  0.86  0.97  0.95  0.29  1.00  0.95  0.77  0.05  0.84  0.90 ]
[ 0.89  0.98  0.25  0.94  0.85  0.01  0.31  0.91  0.08  0.64  0.36  0.02 ]
[ 0.75  0.97  0.94  0.96  0.76  0.22  0.96  0.09  0.96  0.83  0.17  0.92 ]
[ 0.81  0.05  0.03  0.04  0.96  0.55  0.95  0.01  0.84  0.18  0.12  0.01 ]
[ 0.59  0.98  0.83  0.89  0.96  0.42  0.66  0.12  0.78  0.82  0.31  0.97 ]
[ 0.03  0.03  0.02  0.43  0.07  0.36  0.31  0.03  0.43  0.06  0.02  0.01 ]
[ 0.52  0.95  0.77  0.97  0.98  0.23  0.97  0.57  0.20  0.80  0.40  0.87 ]
[ 0.05  0.01  0.99  0.21  0.02  0.10  0.25  0.17  0.85  0.99  0.06  0.96 ]
[ 0.34  0.96  0.67  0.86  0.96  0.10  0.07  0.12  0.84  0.92  0.06  0.16 ]
[ 0.03  0.04  0.33  0.84  0.94  0.01  0.54  0.55  0.99  0.10  0.01  0.15 ]
[ 0.62  0.95  0.68  0.93  0.20  0.29  0.99  0.16  0.05  0.90  0.18  0.98 ]
[ 0.69  0.05  0.53  0.03  0.02  0.38  0.90  0.85  0.05  0.78  0.05  0.90 ]
[ 0.75  0.92  0.01  0.99  0.99  0.04  0.93  0.47  0.03  0.78  0.37  0.50 ]
[ 0.98  0.99  0.88  0.96  0.87  0.97  0.95  0.93  0.97  0.99  0.92  0.88 ]
[ 0.86  0.96  0.97  0.94  1.00  0.01  0.95  0.01  0.96  0.95  1.00  0.97 ]
[ 0.22  0.69  0.97  0.96  0.72  0.05  0.75  0.72  0.93  0.55  0.80  0.88 ]
[ 0.87  0.94  0.97  0.80  0.97  0.93  0.90  0.87  0.74  0.60  1.00  0.90 ]
[ 0.59  0.97  0.01  0.48  0.67  0.23  0.01  0.56  0.23  0.67  0.99  0.97 ]
[ 0.96  0.91  0.99  0.79  0.96  0.95  0.41  0.43  0.92  0.99  1.00  0.99 ]
[ 0.89  0.68  0.46  0.19  0.14  0.71  0.88  0.79  0.91  0.10  0.93  0.33 ]
[ 0.98  0.95  0.78  0.79  0.57  0.84  0.91  0.99  0.93  0.04  0.74  0.59 ]
[ 0.93  0.81  0.39  0.67  0.99  0.01  0.06  0.97  0.78  0.45  0.91  0.92 ]
[ 0.97  0.89  0.91  0.96  0.91  0.98  0.97  0.99  0.57  0.85  0.98  0.96 ]
[ 0.65  0.01  0.96  0.13  0.07  0.43  0.77  0.99  0.82  0.99  0.55  0.06 ]
[ 0.97  0.95  1.00  0.57  0.99  0.84  0.99  0.93  0.58  0.93  0.35  0.95 ]
[ 0.09  0.18  0.02  0.93  0.56  0.26  0.96  0.04  0.91  0.18  0.42  0.01 ]
[ 0.95  0.78  0.99  0.98  0.92  0.71  0.99  0.92  0.98  0.12  0.30  0.94 ]
[ 0.87  0.87  0.98  0.93  0.36  0.57  0.17  0.96  0.94  0.99  0.18  0.61 ]
[ 0.95  0.96  0.52  0.74  0.97  0.76  0.61  0.96  0.80  0.31  0.12  0.96 ]
[ 0.93  0.61  0.08  0.79  0.76  0.90  0.90  0.98  0.84  0.14  0.90  0.21 ]
[ 0.22  0.66  0.48  0.71  0.97  0.01  0.23  0.87  0.48  0.83  0.75  0.93 ]

01/29 09:55:39 PM | === Batch 14/50
01/29 09:55:40 PM | loss = 1.075 + 0.063 + 0.054 = 1.192
01/29 09:55:41 PM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.01  0.95  0.12  0.80  0.05  0.89  0.01  0.99  0.01  0.47  0.99  0.03 ]
[ 0.16  0.03  0.07  1.00  0.98  0.92  0.99  0.95  0.82  0.99  0.97  0.99 ]
[ 0.06  0.56  0.02  0.51  0.76  0.32  0.76  1.00  0.90  0.58  0.08  0.66 ]
[ 0.94  0.95  0.95  0.99  1.00  0.99  0.99  0.99  0.85  0.63  0.53  0.96 ]
[ 0.52  0.69  0.89  0.19  0.90  0.98  0.01  0.45  0.01  0.73  0.06  0.75 ]
[ 0.19  0.02  0.97  0.99  0.91  0.90  0.99  0.60  0.99  0.98  0.97  0.98 ]
[ 0.03  0.63  0.03  0.41  0.97  0.01  0.89  0.73  0.92  0.37  0.24  0.85 ]
[ 0.35  0.94  0.99  1.00  0.93  0.02  0.99  0.69  0.43  0.93  0.03  0.99 ]
[ 0.89  0.95  0.01  0.48  0.96  0.04  0.08  0.73  0.01  0.44  1.00  0.54 ]
[ 0.57  0.83  0.96  0.97  0.99  0.01  0.82  0.98  0.92  0.98  0.20  0.12 ]
[ 0.02  0.88  0.01  0.01  0.59  0.66  0.97  0.99  0.85  0.01  0.91  0.07 ]
[ 0.26  0.98  0.95  1.00  0.99  0.03  0.97  0.07  0.98  0.76  0.32  0.92 ]
[ 0.72  0.03  0.98  0.56  0.96  0.94  0.58  1.00  0.01  0.21  0.98  0.13 ]
[ 0.10  0.94  1.00  0.04  0.73  0.12  0.99  0.01  0.99  0.01  0.94  0.98 ]
[ 0.86  0.96  0.06  0.99  0.96  0.92  0.92  0.97  0.97  0.01  0.38  0.03 ]
[ 0.31  0.99  0.98  0.12  0.91  0.03  0.99  0.09  0.96  0.07  0.96  0.99 ]
[ 0.87  0.03  0.05  0.97  0.05  0.02  0.05  0.10  0.01  0.01  0.17  0.04 ]
[ 0.48  0.87  0.98  0.01  0.98  0.04  0.27  0.02  0.73  0.15  0.95  0.81 ]
[ 0.99  0.99  0.99  1.00  0.98  0.94  1.00  0.78  0.97  0.99  0.99  1.00 ]
[ 0.01  0.98  0.98  1.00  0.63  0.77  0.98  0.99  0.57  0.99  0.99  0.98 ]
[ 0.08  0.01  0.01  0.78  0.73  0.03  0.90  0.95  0.94  0.94  0.23  0.24 ]
[ 0.86  0.95  0.45  0.96  0.95  0.58  0.99  0.93  0.19  0.80  0.02  0.90 ]
[ 0.36  0.48  0.28  0.98  0.75  0.07  0.35  0.14  0.40  0.43  0.73  0.07 ]
[ 0.83  0.96  0.87  0.97  0.95  0.27  1.00  0.95  0.79  0.05  0.84  0.93 ]
[ 0.90  0.98  0.24  0.96  0.89  0.01  0.36  0.92  0.08  0.69  0.38  0.02 ]
[ 0.78  0.97  0.94  0.96  0.80  0.21  0.96  0.08  0.97  0.85  0.16  0.94 ]
[ 0.86  0.05  0.03  0.04  0.96  0.60  0.95  0.01  0.88  0.18  0.11  0.01 ]
[ 0.63  0.98  0.82  0.88  0.96  0.42  0.62  0.12  0.79  0.84  0.31  0.98 ]
[ 0.03  0.03  0.02  0.48  0.07  0.40  0.32  0.02  0.48  0.05  0.02  0.01 ]
[ 0.56  0.95  0.73  0.97  0.98  0.21  0.97  0.56  0.18  0.84  0.42  0.90 ]
[ 0.05  0.01  0.99  0.21  0.01  0.09  0.25  0.17  0.89  0.99  0.05  0.96 ]
[ 0.37  0.96  0.63  0.88  0.98  0.09  0.06  0.10  0.84  0.93  0.05  0.15 ]
[ 0.02  0.04  0.35  0.88  0.95  0.01  0.56  0.59  0.99  0.12  0.01  0.14 ]
[ 0.65  0.96  0.68  0.93  0.21  0.28  0.99  0.17  0.04  0.92  0.19  0.98 ]
[ 0.71  0.05  0.55  0.03  0.02  0.46  0.91  0.89  0.04  0.81  0.04  0.92 ]
[ 0.78  0.92  0.01  0.99  1.00  0.03  0.93  0.52  0.02  0.79  0.41  0.57 ]
[ 0.99  0.99  0.91  0.96  0.87  0.97  0.95  0.95  0.97  0.99  0.93  0.89 ]
[ 0.88  0.96  0.98  0.95  1.00  0.01  0.96  0.01  0.96  0.96  1.00  0.98 ]
[ 0.24  0.68  0.97  0.97  0.69  0.04  0.78  0.78  0.94  0.58  0.83  0.90 ]
[ 0.90  0.95  0.97  0.81  0.97  0.94  0.91  0.89  0.71  0.64  1.00  0.92 ]
[ 0.58  0.97  0.01  0.53  0.72  0.24  0.01  0.58  0.25  0.61  1.00  0.97 ]
[ 0.97  0.92  0.99  0.82  0.97  0.96  0.42  0.44  0.94  0.99  1.00  0.99 ]
[ 0.92  0.71  0.51  0.20  0.14  0.75  0.87  0.83  0.91  0.10  0.94  0.32 ]
[ 0.98  0.95  0.76  0.81  0.63  0.86  0.92  0.99  0.94  0.03  0.78  0.55 ]
[ 0.94  0.83  0.38  0.71  0.99  0.01  0.05  0.98  0.80  0.48  0.94  0.94 ]
[ 0.97  0.90  0.91  0.96  0.92  0.98  0.97  0.99  0.63  0.85  0.98  0.96 ]
[ 0.69  0.01  0.95  0.13  0.06  0.49  0.76  0.99  0.86  0.99  0.54  0.05 ]
[ 0.97  0.95  1.00  0.55  0.99  0.87  0.99  0.94  0.54  0.94  0.43  0.96 ]
[ 0.09  0.19  0.01  0.94  0.53  0.26  0.96  0.03  0.93  0.18  0.45  0.01 ]
[ 0.95  0.74  1.00  0.98  0.94  0.67  0.99  0.92  0.99  0.10  0.28  0.94 ]
[ 0.87  0.87  0.98  0.94  0.37  0.59  0.15  0.97  0.96  1.00  0.17  0.70 ]
[ 0.94  0.96  0.50  0.71  0.97  0.74  0.56  0.97  0.84  0.26  0.09  0.97 ]
[ 0.94  0.60  0.07  0.80  0.72  0.91  0.91  0.98  0.83  0.15  0.92  0.21 ]
[ 0.21  0.55  0.47  0.73  0.96  0.01  0.20  0.89  0.39  0.83  0.72  0.94 ]

01/29 09:55:41 PM | === Batch 15/50
01/29 09:55:41 PM | loss = 0.622 + 0.176 + 0.051 = 0.849
01/29 09:55:42 PM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.01  0.96  0.12  0.84  0.05  0.92  0.01  0.99  0.01  0.52  0.99  0.02 ]
[ 0.17  0.03  0.07  1.00  0.98  0.93  0.99  0.95  0.85  0.99  0.98  0.99 ]
[ 0.06  0.62  0.01  0.55  0.80  0.31  0.81  1.00  0.92  0.65  0.07  0.71 ]
[ 0.95  0.96  0.96  0.99  1.00  0.99  0.99  0.99  0.87  0.64  0.55  0.96 ]
[ 0.55  0.74  0.92  0.18  0.91  0.99  0.01  0.50  0.01  0.78  0.05  0.78 ]
[ 0.21  0.02  0.98  0.99  0.92  0.91  0.99  0.65  0.99  0.98  0.98  0.98 ]
[ 0.02  0.62  0.03  0.42  0.97  0.01  0.91  0.74  0.92  0.39  0.24  0.85 ]
[ 0.37  0.94  0.99  1.00  0.94  0.02  0.99  0.73  0.43  0.94  0.03  0.99 ]
[ 0.92  0.96  0.01  0.51  0.97  0.03  0.08  0.79  0.01  0.48  1.00  0.56 ]
[ 0.62  0.82  0.97  0.98  1.00  0.01  0.82  0.98  0.92  0.99  0.17  0.11 ]
[ 0.02  0.88  0.01  0.01  0.64  0.75  0.98  0.99  0.88  0.01  0.92  0.06 ]
[ 0.27  0.98  0.96  1.00  0.99  0.02  0.98  0.07  0.98  0.76  0.30  0.93 ]
[ 0.77  0.03  0.98  0.58  0.96  0.93  0.60  1.00  0.01  0.21  0.98  0.12 ]
[ 0.09  0.95  1.00  0.03  0.78  0.12  0.99  0.01  0.99  0.01  0.95  0.98 ]
[ 0.87  0.96  0.05  0.99  0.97  0.93  0.93  0.97  0.98  0.01  0.37  0.03 ]
[ 0.31  0.99  0.98  0.10  0.92  0.02  0.99  0.09  0.96  0.07  0.96  0.99 ]
[ 0.90  0.03  0.04  0.97  0.05  0.02  0.04  0.10  0.01  0.01  0.17  0.03 ]
[ 0.51  0.87  0.99  0.01  0.99  0.03  0.28  0.01  0.70  0.14  0.96  0.82 ]
[ 0.99  0.99  0.99  1.00  0.98  0.95  1.00  0.77  0.98  0.99  0.99  1.00 ]
[ 0.01  0.98  0.98  1.00  0.64  0.80  0.98  0.99  0.59  0.99  1.00  0.98 ]
[ 0.07  0.01  0.01  0.80  0.75  0.03  0.91  0.95  0.95  0.94  0.28  0.26 ]
[ 0.88  0.95  0.44  0.96  0.95  0.59  0.99  0.93  0.17  0.82  0.01  0.91 ]
[ 0.38  0.48  0.26  0.98  0.77  0.06  0.33  0.13  0.44  0.46  0.75  0.07 ]
[ 0.85  0.96  0.89  0.98  0.96  0.26  1.00  0.95  0.81  0.04  0.85  0.95 ]
[ 0.92  0.98  0.21  0.97  0.92  0.01  0.39  0.93  0.08  0.72  0.39  0.01 ]
[ 0.82  0.97  0.94  0.96  0.85  0.21  0.97  0.08  0.97  0.87  0.15  0.96 ]
[ 0.88  0.04  0.03  0.03  0.97  0.65  0.95  0.01  0.90  0.17  0.09  0.01 ]
[ 0.67  0.98  0.82  0.87  0.97  0.44  0.56  0.11  0.80  0.87  0.31  0.99 ]
[ 0.03  0.02  0.02  0.50  0.07  0.41  0.34  0.02  0.49  0.05  0.01  0.01 ]
[ 0.61  0.96  0.71  0.97  0.99  0.20  0.98  0.55  0.17  0.86  0.44  0.93 ]
[ 0.05  0.01  0.99  0.21  0.01  0.08  0.24  0.17  0.92  0.99  0.05  0.97 ]
[ 0.39  0.96  0.59  0.90  0.98  0.08  0.06  0.09  0.85  0.94  0.05  0.15 ]
[ 0.02  0.03  0.36  0.90  0.95  0.01  0.59  0.61  1.00  0.13  0.01  0.13 ]
[ 0.70  0.96  0.70  0.93  0.22  0.27  0.99  0.18  0.03  0.93  0.19  0.99 ]
[ 0.75  0.04  0.57  0.02  0.01  0.53  0.93  0.91  0.03  0.84  0.03  0.94 ]
[ 0.81  0.92  0.01  0.99  1.00  0.03  0.93  0.58  0.02  0.78  0.44  0.65 ]
[ 0.99  1.00  0.93  0.97  0.88  0.97  0.95  0.96  0.98  0.99  0.94  0.90 ]
[ 0.89  0.96  0.98  0.95  1.00  0.01  0.96  0.01  0.95  0.96  1.00  0.98 ]
[ 0.24  0.69  0.98  0.97  0.66  0.04  0.82  0.81  0.95  0.60  0.86  0.92 ]
[ 0.92  0.95  0.98  0.81  0.97  0.95  0.92  0.91  0.69  0.68  1.00  0.93 ]
[ 0.60  0.97  0.01  0.59  0.77  0.24  0.01  0.59  0.24  0.54  1.00  0.98 ]
[ 0.97  0.93  0.99  0.85  0.97  0.97  0.45  0.41  0.96  0.99  1.00  0.99 ]
[ 0.94  0.74  0.59  0.19  0.15  0.77  0.88  0.86  0.91  0.09  0.95  0.32 ]
[ 0.98  0.96  0.73  0.82  0.68  0.88  0.93  0.99  0.95  0.03  0.83  0.51 ]
[ 0.95  0.83  0.39  0.74  0.99  0.01  0.05  0.98  0.83  0.47  0.96  0.95 ]
[ 0.97  0.90  0.91  0.97  0.93  0.98  0.97  0.99  0.69  0.85  0.99  0.97 ]
[ 0.71  0.01  0.94  0.13  0.05  0.55  0.76  0.99  0.89  0.99  0.51  0.05 ]
[ 0.98  0.95  1.00  0.51  0.99  0.89  0.99  0.94  0.49  0.95  0.53  0.96 ]
[ 0.08  0.20  0.01  0.96  0.52  0.24  0.97  0.03  0.94  0.18  0.48  0.01 ]
[ 0.94  0.69  1.00  0.98  0.95  0.63  0.99  0.92  0.99  0.08  0.29  0.94 ]
[ 0.87  0.87  0.98  0.94  0.38  0.60  0.13  0.97  0.96  1.00  0.17  0.77 ]
[ 0.93  0.96  0.46  0.64  0.97  0.72  0.51  0.97  0.87  0.22  0.08  0.97 ]
[ 0.94  0.60  0.06  0.80  0.67  0.92  0.92  0.99  0.83  0.16  0.93  0.21 ]
[ 0.19  0.43  0.46  0.76  0.96  0.01  0.19  0.90  0.31  0.83  0.65  0.96 ]

01/29 09:55:42 PM | === Batch 16/50
01/29 09:55:43 PM | loss = 0.599 + 0.248 + 0.048 = 0.895
01/29 09:55:44 PM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.00  0.96  0.12  0.87  0.04  0.94  0.00  0.99  0.00  0.56  0.99  0.02 ]
[ 0.17  0.02  0.08  1.00  0.98  0.94  0.99  0.96  0.87  0.99  0.98  0.99 ]
[ 0.06  0.69  0.01  0.60  0.84  0.27  0.85  1.00  0.93  0.69  0.06  0.75 ]
[ 0.96  0.97  0.97  0.99  1.00  0.99  0.99  0.99  0.88  0.66  0.54  0.97 ]
[ 0.55  0.78  0.94  0.18  0.91  0.99  0.00  0.54  0.00  0.82  0.05  0.81 ]
[ 0.22  0.01  0.98  0.99  0.93  0.92  0.99  0.67  0.99  0.98  0.98  0.99 ]
[ 0.02  0.59  0.02  0.42  0.98  0.01  0.92  0.75  0.93  0.38  0.22  0.84 ]
[ 0.41  0.94  0.99  1.00  0.95  0.01  0.99  0.75  0.43  0.95  0.03  0.99 ]
[ 0.94  0.97  0.00  0.52  0.98  0.03  0.07  0.83  0.01  0.50  1.00  0.56 ]
[ 0.69  0.81  0.97  0.98  1.00  0.01  0.82  0.99  0.93  0.99  0.13  0.10 ]
[ 0.01  0.87  0.00  0.01  0.69  0.82  0.98  0.99  0.90  0.00  0.92  0.06 ]
[ 0.29  0.98  0.97  1.00  0.99  0.02  0.98  0.06  0.99  0.75  0.26  0.93 ]
[ 0.82  0.02  0.99  0.59  0.96  0.93  0.62  1.00  0.01  0.20  0.99  0.12 ]
[ 0.08  0.95  1.00  0.03  0.83  0.11  0.99  0.01  0.99  0.01  0.95  0.98 ]
[ 0.88  0.96  0.05  0.99  0.97  0.93  0.93  0.98  0.98  0.01  0.36  0.02 ]
[ 0.33  0.99  0.98  0.08  0.93  0.02  0.99  0.08  0.96  0.06  0.96  0.99 ]
[ 0.92  0.03  0.04  0.98  0.04  0.01  0.04  0.10  0.00  0.00  0.16  0.03 ]
[ 0.56  0.87  0.99  0.01  0.99  0.03  0.30  0.01  0.67  0.12  0.97  0.84 ]
[ 0.99  0.99  0.99  1.00  0.99  0.96  1.00  0.74  0.98  0.99  0.99  1.00 ]
[ 0.00  0.98  0.98  1.00  0.65  0.83  0.98  0.99  0.63  1.00  1.00  0.99 ]
[ 0.07  0.01  0.00  0.79  0.75  0.02  0.91  0.95  0.96  0.95  0.34  0.27 ]
[ 0.90  0.95  0.42  0.96  0.96  0.60  1.00  0.93  0.16  0.84  0.01  0.93 ]
[ 0.39  0.47  0.22  0.99  0.79  0.06  0.30  0.11  0.46  0.50  0.78  0.06 ]
[ 0.87  0.97  0.90  0.98  0.96  0.27  1.00  0.96  0.85  0.04  0.86  0.96 ]
[ 0.93  0.98  0.18  0.98  0.94  0.00  0.42  0.94  0.07  0.74  0.41  0.01 ]
[ 0.85  0.98  0.95  0.96  0.88  0.21  0.97  0.08  0.97  0.89  0.14  0.97 ]
[ 0.90  0.04  0.02  0.03  0.97  0.69  0.96  0.01  0.91  0.15  0.08  0.01 ]
[ 0.72  0.98  0.84  0.85  0.97  0.47  0.49  0.11  0.80  0.89  0.31  0.99 ]
[ 0.02  0.02  0.01  0.49  0.06  0.41  0.35  0.02  0.47  0.04  0.01  0.00 ]
[ 0.65  0.96  0.72  0.96  0.99  0.20  0.98  0.55  0.15  0.88  0.46  0.95 ]
[ 0.04  0.00  0.99  0.21  0.01  0.08  0.23  0.16  0.93  0.99  0.04  0.97 ]
[ 0.43  0.97  0.54  0.91  0.99  0.07  0.06  0.08  0.84  0.95  0.04  0.16 ]
[ 0.02  0.02  0.37  0.92  0.96  0.00  0.63  0.63  1.00  0.14  0.00  0.12 ]
[ 0.74  0.96  0.72  0.93  0.23  0.26  0.99  0.19  0.03  0.93  0.20  0.99 ]
[ 0.80  0.04  0.59  0.02  0.01  0.62  0.94  0.93  0.03  0.85  0.03  0.95 ]
[ 0.84  0.92  0.01  0.99  1.00  0.02  0.93  0.63  0.02  0.77  0.46  0.73 ]
[ 0.99  1.00  0.94  0.97  0.88  0.98  0.96  0.97  0.98  0.99  0.95  0.91 ]
[ 0.91  0.96  0.98  0.96  1.00  0.00  0.97  0.00  0.93  0.97  1.00  0.99 ]
[ 0.22  0.70  0.98  0.97  0.61  0.03  0.86  0.84  0.96  0.62  0.89  0.94 ]
[ 0.93  0.95  0.98  0.82  0.97  0.96  0.93  0.92  0.66  0.72  1.00  0.94 ]
[ 0.63  0.96  0.00  0.66  0.81  0.23  0.00  0.57  0.22  0.46  1.00  0.98 ]
[ 0.97  0.93  1.00  0.88  0.98  0.97  0.49  0.35  0.97  0.99  1.00  0.99 ]
[ 0.96  0.76  0.64  0.19  0.14  0.78  0.89  0.87  0.89  0.09  0.96  0.34 ]
[ 0.99  0.96  0.73  0.83  0.73  0.90  0.94  0.99  0.95  0.02  0.87  0.46 ]
[ 0.95  0.82  0.41  0.77  0.99  0.00  0.04  0.99  0.87  0.44  0.97  0.95 ]
[ 0.97  0.91  0.91  0.97  0.94  0.98  0.98  0.99  0.74  0.84  0.99  0.97 ]
[ 0.72  0.00  0.92  0.12  0.05  0.62  0.76  0.99  0.90  0.99  0.47  0.04 ]
[ 0.98  0.96  1.00  0.48  0.99  0.91  0.99  0.95  0.46  0.96  0.58  0.96 ]
[ 0.07  0.21  0.01  0.96  0.52  0.23  0.97  0.03  0.95  0.17  0.50  0.00 ]
[ 0.94  0.63  1.00  0.98  0.96  0.59  0.99  0.93  0.99  0.06  0.32  0.94 ]
[ 0.87  0.87  0.99  0.95  0.39  0.60  0.11  0.98  0.97  1.00  0.17  0.81 ]
[ 0.92  0.95  0.41  0.60  0.97  0.70  0.48  0.98  0.89  0.18  0.08  0.97 ]
[ 0.95  0.61  0.05  0.80  0.62  0.93  0.93  0.99  0.82  0.16  0.94  0.20 ]
[ 0.18  0.32  0.47  0.78  0.96  0.01  0.18  0.90  0.24  0.84  0.56  0.97 ]

01/29 09:55:44 PM | === Batch 17/50
01/29 09:55:44 PM | loss = 0.499 + 0.288 + 0.046 = 0.832
01/29 09:55:45 PM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.00  0.97  0.11  0.89  0.04  0.95  0.00  0.99  0.00  0.58  0.99  0.02 ]
[ 0.18  0.02  0.08  1.00  0.98  0.95  0.98  0.96  0.89  0.99  0.99  0.99 ]
[ 0.05  0.74  0.01  0.63  0.87  0.22  0.87  1.00  0.94  0.71  0.06  0.77 ]
[ 0.97  0.97  0.97  0.99  1.00  0.99  0.99  0.99  0.89  0.67  0.51  0.97 ]
[ 0.54  0.81  0.95  0.17  0.91  0.99  0.00  0.56  0.00  0.85  0.04  0.83 ]
[ 0.22  0.01  0.98  0.99  0.94  0.93  0.99  0.67  0.99  0.98  0.99  0.99 ]
[ 0.02  0.56  0.02  0.41  0.98  0.01  0.94  0.75  0.93  0.36  0.19  0.83 ]
[ 0.48  0.95  0.99  1.00  0.96  0.01  0.99  0.75  0.41  0.95  0.02  0.99 ]
[ 0.95  0.98  0.00  0.51  0.98  0.03  0.07  0.85  0.00  0.52  1.00  0.53 ]
[ 0.76  0.80  0.98  0.98  1.00  0.01  0.82  0.99  0.93  0.99  0.10  0.09 ]
[ 0.01  0.86  0.00  0.01  0.72  0.86  0.98  1.00  0.91  0.00  0.91  0.05 ]
[ 0.32  0.99  0.98  1.00  0.99  0.02  0.98  0.05  0.99  0.74  0.22  0.93 ]
[ 0.85  0.02  0.99  0.60  0.96  0.92  0.63  1.00  0.01  0.19  0.99  0.11 ]
[ 0.08  0.95  1.00  0.02  0.86  0.11  0.99  0.01  0.99  0.01  0.96  0.98 ]
[ 0.88  0.96  0.04  0.99  0.98  0.93  0.93  0.98  0.98  0.01  0.34  0.02 ]
[ 0.35  0.99  0.98  0.06  0.94  0.02  0.99  0.07  0.95  0.05  0.97  0.99 ]
[ 0.93  0.02  0.03  0.98  0.04  0.01  0.04  0.09  0.00  0.00  0.16  0.02 ]
[ 0.63  0.86  0.99  0.01  0.99  0.03  0.29  0.01  0.63  0.10  0.97  0.84 ]
[ 0.99  0.99  1.00  1.00  0.99  0.97  1.00  0.73  0.98  0.99  0.99  1.00 ]
[ 0.00  0.99  0.98  1.00  0.67  0.85  0.98  0.99  0.67  1.00  1.00  0.99 ]
[ 0.06  0.01  0.00  0.78  0.76  0.02  0.91  0.95  0.96  0.96  0.37  0.28 ]
[ 0.92  0.96  0.39  0.96  0.96  0.63  1.00  0.93  0.16  0.85  0.01  0.94 ]
[ 0.41  0.46  0.19  0.99  0.80  0.05  0.27  0.10  0.47  0.53  0.79  0.06 ]
[ 0.88  0.97  0.90  0.98  0.97  0.29  1.00  0.96  0.88  0.03  0.87  0.97 ]
[ 0.94  0.98  0.15  0.98  0.96  0.00  0.42  0.94  0.06  0.75  0.42  0.01 ]
[ 0.87  0.98  0.95  0.96  0.90  0.22  0.97  0.08  0.97  0.90  0.13  0.98 ]
[ 0.91  0.04  0.02  0.03  0.98  0.71  0.95  0.00  0.92  0.14  0.07  0.00 ]
[ 0.75  0.98  0.85  0.83  0.97  0.51  0.44  0.11  0.78  0.91  0.32  0.99 ]
[ 0.02  0.02  0.01  0.48  0.05  0.38  0.36  0.01  0.45  0.03  0.01  0.00 ]
[ 0.68  0.96  0.72  0.96  0.99  0.20  0.98  0.53  0.14  0.90  0.49  0.96 ]
[ 0.04  0.00  0.99  0.21  0.01  0.07  0.20  0.15  0.94  1.00  0.04  0.98 ]
[ 0.45  0.97  0.49  0.93  0.99  0.06  0.06  0.07  0.83  0.95  0.04  0.17 ]
[ 0.02  0.02  0.38  0.93  0.96  0.00  0.64  0.63  1.00  0.14  0.00  0.10 ]
[ 0.77  0.97  0.73  0.93  0.24  0.26  0.99  0.20  0.03  0.94  0.21  0.99 ]
[ 0.83  0.03  0.61  0.02  0.01  0.70  0.95  0.94  0.03  0.86  0.03  0.95 ]
[ 0.86  0.92  0.01  0.99  1.00  0.02  0.92  0.68  0.01  0.76  0.48  0.80 ]
[ 0.99  1.00  0.95  0.98  0.89  0.98  0.96  0.98  0.99  0.99  0.96  0.92 ]
[ 0.92  0.96  0.99  0.96  1.00  0.00  0.97  0.00  0.92  0.97  1.00  0.99 ]
[ 0.20  0.71  0.98  0.98  0.55  0.03  0.88  0.86  0.96  0.62  0.90  0.94 ]
[ 0.95  0.95  0.98  0.83  0.96  0.96  0.93  0.93  0.65  0.76  1.00  0.95 ]
[ 0.67  0.96  0.00  0.69  0.83  0.22  0.00  0.55  0.20  0.39  1.00  0.98 ]
[ 0.98  0.94  1.00  0.90  0.98  0.98  0.55  0.31  0.97  1.00  1.00  0.99 ]
[ 0.97  0.76  0.69  0.19  0.14  0.79  0.90  0.88  0.87  0.08  0.96  0.39 ]
[ 0.99  0.96  0.72  0.84  0.77  0.91  0.94  0.99  0.96  0.02  0.90  0.42 ]
[ 0.96  0.81  0.44  0.80  0.99  0.00  0.04  0.99  0.89  0.40  0.98  0.96 ]
[ 0.98  0.92  0.90  0.97  0.94  0.99  0.98  0.99  0.77  0.82  0.99  0.97 ]
[ 0.74  0.00  0.90  0.12  0.04  0.66  0.78  0.99  0.92  0.99  0.42  0.04 ]
[ 0.98  0.96  1.00  0.47  0.99  0.92  0.99  0.95  0.42  0.96  0.62  0.96 ]
[ 0.06  0.20  0.01  0.97  0.53  0.21  0.97  0.03  0.96  0.15  0.51  0.00 ]
[ 0.93  0.56  1.00  0.99  0.97  0.56  0.99  0.93  0.99  0.05  0.36  0.94 ]
[ 0.88  0.86  0.99  0.95  0.40  0.61  0.10  0.98  0.98  1.00  0.16  0.84 ]
[ 0.89  0.95  0.35  0.60  0.97  0.68  0.45  0.98  0.91  0.15  0.07  0.98 ]
[ 0.95  0.61  0.05  0.79  0.58  0.93  0.93  0.99  0.83  0.16  0.94  0.19 ]
[ 0.18  0.24  0.48  0.81  0.96  0.00  0.17  0.91  0.19  0.84  0.47  0.97 ]

01/29 09:55:45 PM | === Batch 18/50
01/29 09:55:46 PM | loss = 0.618 + 0.299 + 0.044 = 0.962
01/29 09:55:46 PM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.00  0.97  0.10  0.90  0.03  0.96  0.00  0.99  0.00  0.59  0.99  0.02 ]
[ 0.20  0.02  0.08  1.00  0.99  0.95  0.98  0.96  0.90  0.99  0.99  0.99 ]
[ 0.05  0.77  0.01  0.66  0.89  0.18  0.89  1.00  0.95  0.72  0.05  0.77 ]
[ 0.97  0.97  0.97  0.99  1.00  0.99  0.99  0.99  0.89  0.68  0.47  0.97 ]
[ 0.50  0.82  0.96  0.16  0.90  0.99  0.00  0.55  0.00  0.88  0.04  0.84 ]
[ 0.23  0.01  0.98  0.99  0.95  0.93  0.99  0.64  0.99  0.99  0.99  0.99 ]
[ 0.01  0.51  0.02  0.39  0.98  0.01  0.94  0.75  0.93  0.33  0.16  0.83 ]
[ 0.53  0.95  0.99  1.00  0.97  0.01  0.99  0.75  0.38  0.96  0.02  0.99 ]
[ 0.96  0.98  0.00  0.48  0.98  0.02  0.06  0.87  0.00  0.52  1.00  0.49 ]
[ 0.81  0.79  0.98  0.98  1.00  0.00  0.82  0.99  0.94  0.99  0.07  0.07 ]
[ 0.01  0.85  0.00  0.01  0.73  0.89  0.99  1.00  0.92  0.00  0.91  0.04 ]
[ 0.36  0.99  0.98  1.00  0.99  0.02  0.98  0.04  0.99  0.73  0.18  0.94 ]
[ 0.87  0.02  0.99  0.60  0.96  0.91  0.63  1.00  0.01  0.18  0.99  0.10 ]
[ 0.07  0.96  1.00  0.02  0.88  0.11  0.99  0.01  0.99  0.00  0.96  0.98 ]
[ 0.87  0.97  0.04  0.99  0.98  0.93  0.94  0.98  0.98  0.01  0.31  0.02 ]
[ 0.38  0.99  0.98  0.05  0.94  0.02  0.99  0.06  0.95  0.05  0.97  0.99 ]
[ 0.94  0.02  0.03  0.99  0.03  0.01  0.03  0.09  0.00  0.00  0.15  0.02 ]
[ 0.69  0.85  0.99  0.00  0.99  0.03  0.28  0.01  0.60  0.09  0.98  0.84 ]
[ 0.99  0.99  1.00  1.00  0.99  0.97  1.00  0.71  0.98  0.99  0.99  1.00 ]
[ 0.00  0.99  0.98  1.00  0.68  0.86  0.98  0.99  0.70  1.00  1.00  0.99 ]
[ 0.05  0.01  0.00  0.76  0.76  0.02  0.90  0.96  0.97  0.96  0.37  0.28 ]
[ 0.93  0.96  0.35  0.96  0.96  0.65  1.00  0.93  0.16  0.86  0.01  0.94 ]
[ 0.40  0.45  0.17  0.99  0.81  0.04  0.24  0.09  0.46  0.54  0.80  0.05 ]
[ 0.89  0.97  0.91  0.98  0.97  0.30  1.00  0.96  0.91  0.03  0.88  0.97 ]
[ 0.94  0.99  0.12  0.99  0.97  0.00  0.41  0.95  0.06  0.76  0.43  0.01 ]
[ 0.89  0.98  0.95  0.96  0.92  0.22  0.97  0.08  0.98  0.91  0.12  0.98 ]
[ 0.92  0.04  0.02  0.02  0.98  0.72  0.95  0.00  0.93  0.12  0.06  0.00 ]
[ 0.77  0.98  0.85  0.81  0.98  0.55  0.41  0.11  0.76  0.92  0.32  0.99 ]
[ 0.02  0.01  0.01  0.46  0.05  0.35  0.37  0.01  0.42  0.03  0.01  0.00 ]
[ 0.71  0.97  0.70  0.96  0.99  0.20  0.98  0.52  0.12  0.91  0.52  0.97 ]
[ 0.04  0.00  0.99  0.21  0.01  0.06  0.17  0.14  0.95  1.00  0.04  0.98 ]
[ 0.46  0.97  0.42  0.93  0.99  0.05  0.06  0.06  0.82  0.96  0.03  0.19 ]
[ 0.01  0.02  0.39  0.94  0.97  0.00  0.66  0.63  1.00  0.15  0.00  0.09 ]
[ 0.79  0.97  0.73  0.93  0.24  0.27  0.99  0.21  0.02  0.94  0.21  0.99 ]
[ 0.86  0.03  0.63  0.01  0.01  0.76  0.95  0.95  0.02  0.86  0.02  0.96 ]
[ 0.88  0.92  0.00  0.99  1.00  0.02  0.92  0.72  0.01  0.75  0.51  0.84 ]
[ 0.99  1.00  0.96  0.98  0.89  0.98  0.96  0.98  0.99  0.99  0.97  0.92 ]
[ 0.93  0.97  0.99  0.97  1.00  0.00  0.97  0.00  0.92  0.97  1.00  0.99 ]
[ 0.17  0.71  0.98  0.98  0.50  0.03  0.90  0.87  0.96  0.62  0.92  0.95 ]
[ 0.96  0.95  0.98  0.83  0.96  0.96  0.94  0.94  0.64  0.78  1.00  0.95 ]
[ 0.69  0.95  0.00  0.72  0.85  0.22  0.00  0.52  0.16  0.32  1.00  0.98 ]
[ 0.98  0.94  1.00  0.92  0.98  0.98  0.63  0.27  0.98  1.00  1.00  1.00 ]
[ 0.98  0.77  0.74  0.18  0.13  0.79  0.90  0.89  0.85  0.07  0.97  0.43 ]
[ 0.99  0.96  0.73  0.84  0.81  0.92  0.95  0.99  0.96  0.02  0.92  0.41 ]
[ 0.96  0.80  0.46  0.82  0.99  0.00  0.03  0.99  0.91  0.35  0.99  0.96 ]
[ 0.98  0.92  0.90  0.97  0.95  0.99  0.98  0.99  0.78  0.79  0.99  0.97 ]
[ 0.75  0.00  0.89  0.11  0.04  0.69  0.81  0.99  0.92  0.99  0.36  0.03 ]
[ 0.98  0.96  1.00  0.45  0.99  0.93  0.99  0.95  0.38  0.97  0.62  0.97 ]
[ 0.05  0.19  0.01  0.98  0.52  0.19  0.97  0.02  0.96  0.14  0.52  0.00 ]
[ 0.92  0.50  1.00  0.99  0.97  0.54  0.99  0.94  0.99  0.04  0.38  0.94 ]
[ 0.88  0.86  0.99  0.95  0.40  0.60  0.09  0.98  0.98  1.00  0.15  0.86 ]
[ 0.85  0.94  0.29  0.59  0.97  0.68  0.41  0.98  0.92  0.13  0.07  0.98 ]
[ 0.94  0.60  0.04  0.77  0.58  0.93  0.94  0.99  0.85  0.15  0.94  0.18 ]
[ 0.17  0.18  0.50  0.83  0.96  0.00  0.16  0.92  0.16  0.84  0.38  0.98 ]

01/29 09:55:46 PM | === Batch 19/50
01/29 09:55:47 PM | loss = 0.576 + 0.289 + 0.042 = 0.907
01/29 09:55:48 PM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.00  0.98  0.09  0.91  0.03  0.96  0.00  0.99  0.00  0.58  1.00  0.01 ]
[ 0.22  0.01  0.07  1.00  0.99  0.96  0.98  0.96  0.91  0.99  0.99  1.00 ]
[ 0.04  0.79  0.01  0.68  0.90  0.14  0.90  1.00  0.95  0.70  0.04  0.77 ]
[ 0.97  0.98  0.98  0.99  1.00  0.99  0.99  1.00  0.90  0.66  0.42  0.98 ]
[ 0.45  0.82  0.96  0.15  0.89  1.00  0.00  0.53  0.00  0.89  0.03  0.85 ]
[ 0.23  0.01  0.98  0.99  0.96  0.93  0.99  0.60  0.99  0.99  0.99  0.99 ]
[ 0.01  0.47  0.02  0.38  0.98  0.01  0.95  0.75  0.93  0.28  0.14  0.83 ]
[ 0.59  0.95  0.99  1.00  0.97  0.01  0.99  0.73  0.33  0.96  0.02  0.99 ]
[ 0.97  0.99  0.00  0.43  0.99  0.02  0.06  0.87  0.00  0.52  1.00  0.43 ]
[ 0.86  0.78  0.98  0.99  1.00  0.00  0.82  0.99  0.94  0.99  0.06  0.06 ]
[ 0.01  0.84  0.00  0.00  0.73  0.91  0.99  1.00  0.93  0.00  0.89  0.04 ]
[ 0.39  0.99  0.98  1.00  1.00  0.01  0.98  0.04  0.99  0.73  0.15  0.93 ]
[ 0.89  0.02  0.99  0.60  0.96  0.89  0.62  1.00  0.01  0.17  0.99  0.09 ]
[ 0.07  0.96  1.00  0.02  0.90  0.11  0.99  0.00  1.00  0.00  0.97  0.98 ]
[ 0.86  0.97  0.03  0.99  0.98  0.93  0.94  0.99  0.98  0.01  0.29  0.01 ]
[ 0.41  0.99  0.98  0.04  0.94  0.02  0.99  0.06  0.95  0.04  0.97  0.99 ]
[ 0.95  0.02  0.03  0.99  0.03  0.01  0.03  0.08  0.00  0.00  0.14  0.02 ]
[ 0.74  0.84  0.99  0.00  0.99  0.02  0.25  0.01  0.59  0.08  0.98  0.83 ]
[ 0.99  0.99  1.00  1.00  0.99  0.98  1.00  0.70  0.99  0.99  0.99  1.00 ]
[ 0.00  0.99  0.98  1.00  0.67  0.87  0.98  0.99  0.74  1.00  1.00  0.99 ]
[ 0.05  0.01  0.00  0.73  0.76  0.02  0.90  0.96  0.97  0.96  0.36  0.28 ]
[ 0.94  0.96  0.32  0.96  0.96  0.67  1.00  0.93  0.16  0.86  0.01  0.95 ]
[ 0.38  0.43  0.14  0.99  0.81  0.04  0.21  0.08  0.44  0.54  0.80  0.05 ]
[ 0.90  0.98  0.90  0.99  0.97  0.33  1.00  0.96  0.93  0.03  0.89  0.98 ]
[ 0.94  0.99  0.11  0.99  0.98  0.00  0.39  0.95  0.05  0.76  0.44  0.01 ]
[ 0.90  0.98  0.95  0.96  0.94  0.23  0.97  0.08  0.98  0.92  0.11  0.99 ]
[ 0.93  0.03  0.02  0.02  0.98  0.72  0.95  0.00  0.93  0.11  0.06  0.00 ]
[ 0.79  0.99  0.84  0.80  0.98  0.59  0.38  0.11  0.74  0.93  0.32  1.00 ]
[ 0.02  0.01  0.01  0.42  0.04  0.32  0.38  0.01  0.40  0.03  0.01  0.00 ]
[ 0.73  0.97  0.68  0.96  0.99  0.20  0.98  0.50  0.10  0.92  0.55  0.98 ]
[ 0.03  0.00  0.99  0.21  0.01  0.05  0.15  0.13  0.96  1.00  0.03  0.98 ]
[ 0.46  0.97  0.39  0.94  0.99  0.05  0.05  0.06  0.80  0.96  0.03  0.20 ]
[ 0.01  0.01  0.41  0.95  0.97  0.00  0.66  0.63  1.00  0.14  0.00  0.08 ]
[ 0.81  0.97  0.72  0.93  0.22  0.27  0.99  0.22  0.02  0.95  0.22  0.99 ]
[ 0.88  0.03  0.64  0.01  0.01  0.80  0.95  0.96  0.02  0.87  0.02  0.96 ]
[ 0.89  0.92  0.00  0.99  1.00  0.01  0.92  0.75  0.01  0.74  0.53  0.88 ]
[ 0.99  1.00  0.97  0.98  0.89  0.98  0.96  0.99  0.99  1.00  0.97  0.94 ]
[ 0.93  0.97  0.99  0.97  1.00  0.00  0.98  0.00  0.93  0.98  1.00  0.99 ]
[ 0.14  0.73  0.98  0.98  0.51  0.02  0.91  0.88  0.95  0.60  0.93  0.96 ]
[ 0.97  0.95  0.99  0.84  0.96  0.96  0.95  0.94  0.67  0.79  1.00  0.96 ]
[ 0.70  0.94  0.00  0.76  0.86  0.21  0.00  0.49  0.13  0.29  1.00  0.98 ]
[ 0.98  0.94  1.00  0.93  0.99  0.98  0.72  0.23  0.98  1.00  1.00  1.00 ]
[ 0.98  0.77  0.78  0.16  0.11  0.80  0.90  0.89  0.84  0.07  0.97  0.48 ]
[ 0.99  0.97  0.72  0.85  0.84  0.93  0.95  1.00  0.97  0.02  0.94  0.43 ]
[ 0.96  0.78  0.47  0.84  0.99  0.00  0.03  0.99  0.93  0.30  0.99  0.97 ]
[ 0.98  0.93  0.90  0.98  0.95  0.99  0.98  0.99  0.77  0.75  0.99  0.97 ]
[ 0.76  0.00  0.90  0.09  0.03  0.69  0.82  0.99  0.93  0.99  0.29  0.03 ]
[ 0.98  0.96  1.00  0.44  0.99  0.94  0.99  0.96  0.35  0.97  0.63  0.97 ]
[ 0.05  0.19  0.01  0.98  0.50  0.17  0.97  0.02  0.97  0.12  0.52  0.00 ]
[ 0.90  0.45  1.00  0.99  0.98  0.54  0.99  0.94  0.99  0.04  0.41  0.94 ]
[ 0.88  0.86  0.99  0.96  0.41  0.60  0.08  0.98  0.98  1.00  0.14  0.87 ]
[ 0.80  0.93  0.24  0.57  0.97  0.69  0.38  0.98  0.93  0.11  0.07  0.98 ]
[ 0.93  0.58  0.04  0.73  0.60  0.94  0.94  0.99  0.87  0.14  0.94  0.16 ]
[ 0.17  0.14  0.53  0.86  0.95  0.00  0.15  0.92  0.13  0.85  0.32  0.98 ]

01/29 09:55:48 PM | === Batch 20/50
01/29 09:55:48 PM | loss = 0.548 + 0.264 + 0.041 = 0.853
01/29 09:55:49 PM | === Batch 21/50
01/29 09:55:50 PM | loss = 0.630 + 0.228 + 0.039 = 0.898
01/29 09:55:51 PM | === Batch 22/50
01/29 09:55:51 PM | loss = 0.522 + 0.181 + 0.038 = 0.741
01/29 09:55:52 PM | === Batch 23/50
01/29 09:55:53 PM | loss = 0.650 + 0.125 + 0.036 = 0.811
01/29 09:55:54 PM | === Batch 24/50
01/29 09:55:54 PM | loss = 0.295 + 0.070 + 0.035 = 0.400
01/29 09:55:55 PM | === Batch 25/50
01/29 09:55:56 PM | loss = 0.631 + 0.007 + 0.034 = 0.672
01/29 09:55:56 PM | === Batch 26/50
01/29 09:55:57 PM | loss = 0.683 + 0.078 + 0.033 = 0.794
01/29 09:55:58 PM | === Batch 27/50
01/29 09:55:58 PM | loss = 0.652 + 0.113 + 0.032 = 0.797
01/29 09:55:59 PM | === Batch 28/50
01/29 09:56:00 PM | loss = 0.428 + 0.103 + 0.031 = 0.563
01/29 09:56:01 PM | === Batch 29/50
01/29 09:56:01 PM | loss = 0.721 + 0.062 + 0.030 = 0.813
01/29 09:56:02 PM | === Batch 30/50
01/29 09:56:03 PM | loss = 0.377 + 0.002 + 0.029 = 0.409
01/29 09:56:03 PM | === Batch 31/50
01/29 09:56:04 PM | loss = 0.459 + 0.032 + 0.029 = 0.519
01/29 09:56:05 PM | === Batch 32/50
01/29 09:56:05 PM | loss = 0.566 + 0.044 + 0.028 = 0.639
01/29 09:56:06 PM | === Batch 33/50
01/29 09:56:07 PM | loss = 0.369 + 0.041 + 0.027 = 0.437
01/29 09:56:08 PM | === Batch 34/50
01/29 09:56:08 PM | loss = 0.350 + 0.026 + 0.027 = 0.403
01/29 09:56:09 PM | === Batch 35/50
01/29 09:56:10 PM | loss = 0.603 + 0.001 + 0.026 = 0.630
01/29 09:56:10 PM | === Batch 36/50
01/29 09:56:11 PM | loss = 0.232 + 0.037 + 0.025 = 0.294
01/29 09:56:12 PM | === Batch 37/50
01/29 09:56:12 PM | loss = 0.409 + 0.044 + 0.025 = 0.477
01/29 09:56:13 PM | === Batch 38/50
01/29 09:56:14 PM | loss = 0.334 + 0.021 + 0.024 = 0.378
01/29 09:56:15 PM | === Batch 39/50
01/29 09:56:15 PM | loss = 0.376 + 0.020 + 0.023 = 0.420
01/29 09:56:16 PM | === Batch 40/50
01/29 09:56:17 PM | loss = 0.279 + 0.044 + 0.023 = 0.346
01/29 09:56:17 PM | === Batch 41/50
01/29 09:56:18 PM | loss = 0.314 + 0.055 + 0.023 = 0.392
01/29 09:56:19 PM | === Batch 42/50
01/29 09:56:19 PM | loss = 0.261 + 0.056 + 0.022 = 0.339
01/29 09:56:20 PM | === Batch 43/50
01/29 09:56:21 PM | loss = 0.340 + 0.047 + 0.022 = 0.408
01/29 09:56:22 PM | === Batch 44/50
01/29 09:56:22 PM | loss = 0.308 + 0.030 + 0.021 = 0.359
01/29 09:56:23 PM | === Batch 45/50
01/29 09:56:24 PM | loss = 0.365 + 0.006 + 0.021 = 0.392
01/29 09:56:24 PM | === Batch 46/50
01/29 09:56:25 PM | loss = 0.300 + 0.031 + 0.021 = 0.351
01/29 09:56:26 PM | === Batch 47/50
01/29 09:56:26 PM | loss = 0.451 + 0.043 + 0.020 = 0.514
01/29 09:56:27 PM | === Batch 48/50
01/29 09:56:28 PM | loss = 0.464 + 0.028 + 0.020 = 0.512
01/29 09:56:29 PM | === Batch 49/50
01/29 09:56:29 PM | loss = 0.353 + 0.004 + 0.020 = 0.377
01/29 09:56:30 PM | === Batch 50/50
01/29 09:56:31 PM | loss = 0.333 + 0.020 + 0.019 = 0.372
01/29 09:56:32 PM | ===
Best loss was 0.29 at iteration 36

01/29 09:56:32 PM | Looking for optimal threshold...
01/29 09:56:32 PM | Testing threshold 0.5
01/29 09:56:32 PM | Distance to target: 435,840
01/29 09:56:32 PM | Testing threshold 0.75
01/29 09:56:32 PM | Distance to target: 5,846,528
01/29 09:56:32 PM | Testing threshold 0.625
01/29 09:56:32 PM | Distance to target: 1,942,656
01/29 09:56:32 PM | Testing threshold 0.5625
01/29 09:56:32 PM | Distance to target: 588,672
01/29 09:56:32 PM | Testing threshold 0.53125
01/29 09:56:32 PM | Distance to target: 104,000
01/29 09:56:32 PM | Testing threshold 0.515625
01/29 09:56:32 PM | Distance to target: 272,256
01/29 09:56:32 PM | Testing threshold 0.5234375
01/29 09:56:32 PM | Distance to target: 10,432
01/29 09:56:35 PM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.00  1.00  0.00  1.00  0.00  1.00  0.00  1.00  0.00  0.00  1.00  0.00 ]
[ 1.00  0.00  0.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.00  1.00  0.00  0.00  1.00  0.00  1.00  1.00  1.00  1.00  0.00  1.00 ]
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  0.00  0.00  1.00 ]
[ 0.00  1.00  1.00  0.00  1.00  1.00  0.00  0.00  0.00  1.00  0.00  1.00 ]
[ 0.00  0.00  1.00  1.00  1.00  1.00  1.00  0.00  1.00  1.00  1.00  1.00 ]
[ 0.00  0.00  0.00  0.00  1.00  0.00  1.00  1.00  1.00  0.00  0.00  1.00 ]
[ 1.00  1.00  1.00  1.00  1.00  0.00  1.00  1.00  0.00  1.00  0.00  1.00 ]
[ 1.00  1.00  0.00  0.00  1.00  0.00  0.00  1.00  0.00  0.00  1.00  0.00 ]
[ 1.00  1.00  1.00  1.00  1.00  0.00  1.00  1.00  1.00  1.00  0.00  0.00 ]
[ 0.00  0.00  0.00  0.00  1.00  1.00  1.00  1.00  1.00  0.00  1.00  0.00 ]
[ 1.00  1.00  1.00  1.00  1.00  0.00  1.00  0.00  1.00  1.00  0.00  1.00 ]
[ 1.00  0.00  1.00  0.00  1.00  1.00  0.00  1.00  0.00  0.00  1.00  0.00 ]
[ 0.00  1.00  1.00  0.00  1.00  0.00  1.00  0.00  1.00  0.00  1.00  1.00 ]
[ 1.00  1.00  0.00  1.00  1.00  1.00  1.00  1.00  1.00  0.00  0.00  0.00 ]
[ 1.00  1.00  1.00  0.00  1.00  0.00  1.00  0.00  1.00  0.00  1.00  1.00 ]
[ 1.00  0.00  0.00  1.00  0.00  0.00  0.00  0.00  0.00  0.00  0.00  0.00 ]
[ 1.00  0.00  1.00  0.00  1.00  0.00  0.00  0.00  1.00  0.00  1.00  1.00 ]
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.00  0.00  0.00  0.00  1.00  0.00  1.00  1.00  1.00  1.00  0.00  0.00 ]
[ 1.00  1.00  0.00  1.00  1.00  1.00  1.00  1.00  0.00  1.00  0.00  1.00 ]
[ 0.00  0.00  0.00  1.00  1.00  0.00  0.00  0.00  0.00  0.00  0.00  0.00 ]
[ 1.00  1.00  1.00  1.00  1.00  0.00  1.00  1.00  1.00  0.00  1.00  1.00 ]
[ 1.00  1.00  0.00  1.00  1.00  0.00  0.00  1.00  0.00  1.00  1.00  0.00 ]
[ 1.00  1.00  1.00  1.00  1.00  0.00  1.00  0.00  1.00  1.00  0.00  1.00 ]
[ 1.00  0.00  0.00  0.00  1.00  0.00  1.00  0.00  1.00  0.00  0.00  0.00 ]
[ 1.00  1.00  1.00  0.00  1.00  1.00  1.00  0.00  0.00  1.00  0.00  1.00 ]
[ 0.00  0.00  0.00  0.00  0.00  0.00  0.00  0.00  0.00  0.00  0.00  0.00 ]
[ 1.00  1.00  1.00  1.00  1.00  0.00  1.00  1.00  0.00  1.00  1.00  1.00 ]
[ 0.00  0.00  1.00  0.00  0.00  0.00  0.00  0.00  1.00  1.00  0.00  1.00 ]
[ 0.00  1.00  1.00  1.00  1.00  0.00  0.00  0.00  0.00  1.00  0.00  0.00 ]
[ 0.00  0.00  0.00  1.00  1.00  0.00  0.00  1.00  1.00  0.00  0.00  0.00 ]
[ 1.00  1.00  1.00  1.00  0.00  0.00  1.00  0.00  0.00  1.00  0.00  1.00 ]
[ 1.00  0.00  0.00  0.00  0.00  1.00  1.00  1.00  0.00  1.00  0.00  1.00 ]
[ 1.00  1.00  0.00  1.00  1.00  0.00  1.00  1.00  0.00  1.00  1.00  1.00 ]
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 1.00  1.00  1.00  1.00  1.00  0.00  1.00  0.00  1.00  1.00  1.00  1.00 ]
[ 0.00  0.00  1.00  1.00  1.00  0.00  1.00  1.00  1.00  0.00  1.00  1.00 ]
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.00  1.00  0.00  1.00  1.00  0.00  0.00  0.00  0.00  0.00  1.00  1.00 ]
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 1.00  1.00  1.00  0.00  0.00  1.00  1.00  1.00  1.00  0.00  1.00  1.00 ]
[ 1.00  1.00  0.00  1.00  1.00  1.00  1.00  1.00  1.00  0.00  1.00  1.00 ]
[ 1.00  1.00  1.00  1.00  1.00  0.00  0.00  1.00  1.00  0.00  1.00  1.00 ]
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 1.00  0.00  1.00  0.00  0.00  1.00  0.00  1.00  1.00  1.00  0.00  0.00 ]
[ 1.00  1.00  1.00  0.00  1.00  1.00  1.00  1.00  0.00  1.00  1.00  1.00 ]
[ 0.00  0.00  0.00  1.00  0.00  0.00  1.00  0.00  1.00  0.00  0.00  0.00 ]
[ 1.00  0.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  0.00  0.00  0.00 ]
[ 1.00  1.00  1.00  1.00  0.00  0.00  0.00  1.00  1.00  1.00  0.00  1.00 ]
[ 1.00  1.00  0.00  1.00  1.00  1.00  1.00  1.00  1.00  0.00  0.00  1.00 ]
[ 1.00  0.00  0.00  1.00  1.00  1.00  1.00  1.00  1.00  0.00  1.00  0.00 ]
[ 0.00  0.00  1.00  1.00  1.00  0.00  0.00  1.00  0.00  1.00  0.00  1.00 ]

01/29 09:56:35 PM | ResNet(
  (conv1): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(16, 7, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(7, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(7, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (1): BasicBlock(
      (conv1): Conv2d(16, 9, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(9, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(9, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (2): BasicBlock(
      (conv1): Conv2d(16, 7, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(7, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(7, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (3): BasicBlock(
      (conv1): Conv2d(16, 5, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(5, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (4): BasicBlock(
      (conv1): Conv2d(16, 6, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(6, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(6, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (5): BasicBlock(
      (conv1): Conv2d(16, 6, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(6, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(6, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (6): BasicBlock(
      (conv1): Conv2d(16, 9, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(9, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(9, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (7): BasicBlock(
      (conv1): Conv2d(16, 9, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(9, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(9, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (8): BasicBlock(
      (conv1): Conv2d(16, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(4, 9, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(9, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(16, 31, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(31, 31, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(31, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): LambdaLayer()
    )
    (1): BasicBlock(
      (conv1): Conv2d(32, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(10, 19, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(19, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (2): BasicBlock(
      (conv1): Conv2d(32, 11, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(11, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(11, 23, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(23, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (3): BasicBlock(
      (conv1): Conv2d(32, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(13, 25, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(25, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (4): BasicBlock(
      (conv1): Conv2d(32, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(12, 23, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(23, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (5): BasicBlock(
      (conv1): Conv2d(32, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(8, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (6): BasicBlock(
      (conv1): Conv2d(32, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(12, 21, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(21, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (7): BasicBlock(
      (conv1): Conv2d(32, 7, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(7, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(7, 21, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(21, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (8): BasicBlock(
      (conv1): Conv2d(32, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(13, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(32, 59, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(59, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(59, 59, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(59, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): LambdaLayer()
    )
    (1): BasicBlock(
      (conv1): Conv2d(64, 39, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(39, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(39, 56, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(56, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (2): BasicBlock(
      (conv1): Conv2d(64, 38, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(38, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(38, 53, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(53, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (3): BasicBlock(
      (conv1): Conv2d(64, 40, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(40, 53, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(53, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (4): BasicBlock(
      (conv1): Conv2d(64, 46, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(46, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(46, 59, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(59, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (5): BasicBlock(
      (conv1): Conv2d(64, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(36, 49, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(49, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (6): BasicBlock(
      (conv1): Conv2d(64, 40, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(40, 50, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(50, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (7): BasicBlock(
      (conv1): Conv2d(64, 47, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(47, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(47, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (8): BasicBlock(
      (conv1): Conv2d(64, 45, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(45, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(45, 23, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(23, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
  (linear): Linear(in_features=64, out_features=10, bias=True)
)
01/29 09:56:39 PM | ----------------------------------------
01/29 09:56:39 PM | Performances input model:
01/29 09:56:39 PM |  - flops: 126,554,816
01/29 09:56:39 PM |  - params: 853,018
01/29 09:56:39 PM |  - accuracy: 93.2699966430664
01/29 09:56:39 PM | ----------------------------------------
01/29 09:56:39 PM | Performances pseudo-pruned model:
01/29 09:56:39 PM |  - flops: 126,554,816
01/29 09:56:39 PM |  - params: 853,018
01/29 09:56:39 PM |  - accuracy: 78.37999725341797
01/29 09:56:39 PM | ----------------------------------------
01/29 09:56:39 PM | Performances pruned model:
01/29 09:56:39 PM |  - flops: 55,850,432
01/29 09:56:39 PM |  - params: 456,988
01/29 09:56:39 PM |  - accuracy: 78.37999725341797
01/29 09:56:39 PM | ----------------------------------------
01/29 09:56:39 PM | Total time: 92.70s
