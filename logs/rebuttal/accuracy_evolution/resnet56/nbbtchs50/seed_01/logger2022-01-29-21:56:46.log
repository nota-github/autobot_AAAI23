01/29 09:56:46 PM | args = Namespace(output_dir='result/rebuttal/nb_epoch/resnet56/nbbtchs50/seed_01', loaded_model_path='./checkpoints/cifar10/resnet_56.pt', resume=False, test_only=False, mode='prune', batch_size=64, nb_batches=50, Mflops_target=None, lr=0.6, momentum=0.9, beta=6, gamma=0.4, gpu='0', num_workers=4, dataset='cifar10', arch='resnet_56', save_plot=False, seed=1, lr_finetuning=0.02, epoch_finetuning=200, wd=0.002, data_dir='./data/cifar10/', print_freq=200, num_classes=10, device_ids=[0], device=device(type='cuda', index=0), name_base='')
01/29 09:56:52 PM | ----------------------------------------
01/29 09:56:52 PM | ==> Building model...
01/29 09:56:52 PM | ----------------------------------------
01/29 09:56:52 PM | ==> Loading weights into the model...
01/29 09:56:52 PM | ----------------------------------------
01/29 09:56:52 PM | ResNet(
  (conv1): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (1): BasicBlock(
      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (2): BasicBlock(
      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (3): BasicBlock(
      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (4): BasicBlock(
      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (5): BasicBlock(
      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (6): BasicBlock(
      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (7): BasicBlock(
      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (8): BasicBlock(
      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): LambdaLayer()
    )
    (1): BasicBlock(
      (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (2): BasicBlock(
      (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (3): BasicBlock(
      (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (4): BasicBlock(
      (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (5): BasicBlock(
      (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (6): BasicBlock(
      (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (7): BasicBlock(
      (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (8): BasicBlock(
      (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): LambdaLayer()
    )
    (1): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (2): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (3): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (4): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (5): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (6): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (7): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (8): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
  (linear): Linear(in_features=64, out_features=10, bias=True)
)
01/29 09:56:54 PM | Save modules info...
01/29 09:56:54 PM | FLOPS pruning ratio is 0.56
01/29 09:56:54 PM | Pruning with information flow
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:56:54 PM | cin: None
01/29 09:56:54 PM | cout: None
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:56:54 PM | cin: None
01/29 09:56:54 PM | cout: None
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: ReLU(inplace=True)
01/29 09:56:54 PM | cin: None
01/29 09:56:54 PM | cout: None
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:56:54 PM | cin: None
01/29 09:56:54 PM | cout: [1]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:56:54 PM | cin: [1]
01/29 09:56:54 PM | cout: [1]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: ReLU(inplace=True)
01/29 09:56:54 PM | cin: [1]
01/29 09:56:54 PM | cout: [1]
01/29 09:56:54 PM | active
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:56:54 PM | cin: [1]
01/29 09:56:54 PM | cout: [2]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:56:54 PM | cin: [2]
01/29 09:56:54 PM | cout: [2]
01/29 09:56:54 PM | active
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: ReLU(inplace=True)
01/29 09:56:54 PM | cin: None
01/29 09:56:54 PM | cout: None
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:56:54 PM | cin: None
01/29 09:56:54 PM | cout: [3]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:56:54 PM | cin: [3]
01/29 09:56:54 PM | cout: [3]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: ReLU(inplace=True)
01/29 09:56:54 PM | cin: [3]
01/29 09:56:54 PM | cout: [3]
01/29 09:56:54 PM | active
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:56:54 PM | cin: [3]
01/29 09:56:54 PM | cout: [4]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:56:54 PM | cin: [4]
01/29 09:56:54 PM | cout: [4]
01/29 09:56:54 PM | active
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: ReLU(inplace=True)
01/29 09:56:54 PM | cin: None
01/29 09:56:54 PM | cout: None
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:56:54 PM | cin: None
01/29 09:56:54 PM | cout: [5]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:56:54 PM | cin: [5]
01/29 09:56:54 PM | cout: [5]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: ReLU(inplace=True)
01/29 09:56:54 PM | cin: [5]
01/29 09:56:54 PM | cout: [5]
01/29 09:56:54 PM | active
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:56:54 PM | cin: [5]
01/29 09:56:54 PM | cout: [6]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:56:54 PM | cin: [6]
01/29 09:56:54 PM | cout: [6]
01/29 09:56:54 PM | active
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: ReLU(inplace=True)
01/29 09:56:54 PM | cin: None
01/29 09:56:54 PM | cout: None
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:56:54 PM | cin: None
01/29 09:56:54 PM | cout: [7]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:56:54 PM | cin: [7]
01/29 09:56:54 PM | cout: [7]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: ReLU(inplace=True)
01/29 09:56:54 PM | cin: [7]
01/29 09:56:54 PM | cout: [7]
01/29 09:56:54 PM | active
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:56:54 PM | cin: [7]
01/29 09:56:54 PM | cout: [8]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:56:54 PM | cin: [8]
01/29 09:56:54 PM | cout: [8]
01/29 09:56:54 PM | active
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: ReLU(inplace=True)
01/29 09:56:54 PM | cin: None
01/29 09:56:54 PM | cout: None
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:56:54 PM | cin: None
01/29 09:56:54 PM | cout: [9]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:56:54 PM | cin: [9]
01/29 09:56:54 PM | cout: [9]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: ReLU(inplace=True)
01/29 09:56:54 PM | cin: [9]
01/29 09:56:54 PM | cout: [9]
01/29 09:56:54 PM | active
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:56:54 PM | cin: [9]
01/29 09:56:54 PM | cout: [10]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:56:54 PM | cin: [10]
01/29 09:56:54 PM | cout: [10]
01/29 09:56:54 PM | active
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: ReLU(inplace=True)
01/29 09:56:54 PM | cin: None
01/29 09:56:54 PM | cout: None
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:56:54 PM | cin: None
01/29 09:56:54 PM | cout: [11]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:56:54 PM | cin: [11]
01/29 09:56:54 PM | cout: [11]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: ReLU(inplace=True)
01/29 09:56:54 PM | cin: [11]
01/29 09:56:54 PM | cout: [11]
01/29 09:56:54 PM | active
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:56:54 PM | cin: [11]
01/29 09:56:54 PM | cout: [12]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:56:54 PM | cin: [12]
01/29 09:56:54 PM | cout: [12]
01/29 09:56:54 PM | active
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: ReLU(inplace=True)
01/29 09:56:54 PM | cin: None
01/29 09:56:54 PM | cout: None
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:56:54 PM | cin: None
01/29 09:56:54 PM | cout: [13]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:56:54 PM | cin: [13]
01/29 09:56:54 PM | cout: [13]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: ReLU(inplace=True)
01/29 09:56:54 PM | cin: [13]
01/29 09:56:54 PM | cout: [13]
01/29 09:56:54 PM | active
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:56:54 PM | cin: [13]
01/29 09:56:54 PM | cout: [14]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:56:54 PM | cin: [14]
01/29 09:56:54 PM | cout: [14]
01/29 09:56:54 PM | active
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: ReLU(inplace=True)
01/29 09:56:54 PM | cin: None
01/29 09:56:54 PM | cout: None
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:56:54 PM | cin: None
01/29 09:56:54 PM | cout: [15]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:56:54 PM | cin: [15]
01/29 09:56:54 PM | cout: [15]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: ReLU(inplace=True)
01/29 09:56:54 PM | cin: [15]
01/29 09:56:54 PM | cout: [15]
01/29 09:56:54 PM | active
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:56:54 PM | cin: [15]
01/29 09:56:54 PM | cout: [16]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:56:54 PM | cin: [16]
01/29 09:56:54 PM | cout: [16]
01/29 09:56:54 PM | active
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: ReLU(inplace=True)
01/29 09:56:54 PM | cin: None
01/29 09:56:54 PM | cout: None
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:56:54 PM | cin: None
01/29 09:56:54 PM | cout: [17]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:56:54 PM | cin: [17]
01/29 09:56:54 PM | cout: [17]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: ReLU(inplace=True)
01/29 09:56:54 PM | cin: [17]
01/29 09:56:54 PM | cout: [17]
01/29 09:56:54 PM | active
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:56:54 PM | cin: [17]
01/29 09:56:54 PM | cout: [18]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:56:54 PM | cin: [18]
01/29 09:56:54 PM | cout: [18]
01/29 09:56:54 PM | active
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: ReLU(inplace=True)
01/29 09:56:54 PM | cin: None
01/29 09:56:54 PM | cout: None
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
01/29 09:56:54 PM | cin: None
01/29 09:56:54 PM | cout: [19]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:56:54 PM | cin: [19]
01/29 09:56:54 PM | cout: [19]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: ReLU(inplace=True)
01/29 09:56:54 PM | cin: [19]
01/29 09:56:54 PM | cout: [19]
01/29 09:56:54 PM | active
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:56:54 PM | cin: [19]
01/29 09:56:54 PM | cout: [20]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:56:54 PM | cin: [20]
01/29 09:56:54 PM | cout: [20]
01/29 09:56:54 PM | active
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: ReLU(inplace=True)
01/29 09:56:54 PM | cin: None
01/29 09:56:54 PM | cout: None
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:56:54 PM | cin: None
01/29 09:56:54 PM | cout: [21]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:56:54 PM | cin: [21]
01/29 09:56:54 PM | cout: [21]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: ReLU(inplace=True)
01/29 09:56:54 PM | cin: [21]
01/29 09:56:54 PM | cout: [21]
01/29 09:56:54 PM | active
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:56:54 PM | cin: [21]
01/29 09:56:54 PM | cout: [22]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:56:54 PM | cin: [22]
01/29 09:56:54 PM | cout: [22]
01/29 09:56:54 PM | active
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: ReLU(inplace=True)
01/29 09:56:54 PM | cin: None
01/29 09:56:54 PM | cout: None
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:56:54 PM | cin: None
01/29 09:56:54 PM | cout: [23]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:56:54 PM | cin: [23]
01/29 09:56:54 PM | cout: [23]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: ReLU(inplace=True)
01/29 09:56:54 PM | cin: [23]
01/29 09:56:54 PM | cout: [23]
01/29 09:56:54 PM | active
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:56:54 PM | cin: [23]
01/29 09:56:54 PM | cout: [24]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:56:54 PM | cin: [24]
01/29 09:56:54 PM | cout: [24]
01/29 09:56:54 PM | active
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: ReLU(inplace=True)
01/29 09:56:54 PM | cin: None
01/29 09:56:54 PM | cout: None
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:56:54 PM | cin: None
01/29 09:56:54 PM | cout: [25]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:56:54 PM | cin: [25]
01/29 09:56:54 PM | cout: [25]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: ReLU(inplace=True)
01/29 09:56:54 PM | cin: [25]
01/29 09:56:54 PM | cout: [25]
01/29 09:56:54 PM | active
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:56:54 PM | cin: [25]
01/29 09:56:54 PM | cout: [26]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:56:54 PM | cin: [26]
01/29 09:56:54 PM | cout: [26]
01/29 09:56:54 PM | active
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: ReLU(inplace=True)
01/29 09:56:54 PM | cin: None
01/29 09:56:54 PM | cout: None
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:56:54 PM | cin: None
01/29 09:56:54 PM | cout: [27]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:56:54 PM | cin: [27]
01/29 09:56:54 PM | cout: [27]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: ReLU(inplace=True)
01/29 09:56:54 PM | cin: [27]
01/29 09:56:54 PM | cout: [27]
01/29 09:56:54 PM | active
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:56:54 PM | cin: [27]
01/29 09:56:54 PM | cout: [28]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:56:54 PM | cin: [28]
01/29 09:56:54 PM | cout: [28]
01/29 09:56:54 PM | active
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: ReLU(inplace=True)
01/29 09:56:54 PM | cin: None
01/29 09:56:54 PM | cout: None
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:56:54 PM | cin: None
01/29 09:56:54 PM | cout: [29]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:56:54 PM | cin: [29]
01/29 09:56:54 PM | cout: [29]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: ReLU(inplace=True)
01/29 09:56:54 PM | cin: [29]
01/29 09:56:54 PM | cout: [29]
01/29 09:56:54 PM | active
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:56:54 PM | cin: [29]
01/29 09:56:54 PM | cout: [30]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:56:54 PM | cin: [30]
01/29 09:56:54 PM | cout: [30]
01/29 09:56:54 PM | active
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: ReLU(inplace=True)
01/29 09:56:54 PM | cin: None
01/29 09:56:54 PM | cout: None
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:56:54 PM | cin: None
01/29 09:56:54 PM | cout: [31]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:56:54 PM | cin: [31]
01/29 09:56:54 PM | cout: [31]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: ReLU(inplace=True)
01/29 09:56:54 PM | cin: [31]
01/29 09:56:54 PM | cout: [31]
01/29 09:56:54 PM | active
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:56:54 PM | cin: [31]
01/29 09:56:54 PM | cout: [32]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:56:54 PM | cin: [32]
01/29 09:56:54 PM | cout: [32]
01/29 09:56:54 PM | active
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: ReLU(inplace=True)
01/29 09:56:54 PM | cin: None
01/29 09:56:54 PM | cout: None
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:56:54 PM | cin: None
01/29 09:56:54 PM | cout: [33]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:56:54 PM | cin: [33]
01/29 09:56:54 PM | cout: [33]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: ReLU(inplace=True)
01/29 09:56:54 PM | cin: [33]
01/29 09:56:54 PM | cout: [33]
01/29 09:56:54 PM | active
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:56:54 PM | cin: [33]
01/29 09:56:54 PM | cout: [34]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:56:54 PM | cin: [34]
01/29 09:56:54 PM | cout: [34]
01/29 09:56:54 PM | active
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: ReLU(inplace=True)
01/29 09:56:54 PM | cin: None
01/29 09:56:54 PM | cout: None
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:56:54 PM | cin: None
01/29 09:56:54 PM | cout: [35]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:56:54 PM | cin: [35]
01/29 09:56:54 PM | cout: [35]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: ReLU(inplace=True)
01/29 09:56:54 PM | cin: [35]
01/29 09:56:54 PM | cout: [35]
01/29 09:56:54 PM | active
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:56:54 PM | cin: [35]
01/29 09:56:54 PM | cout: [36]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:56:54 PM | cin: [36]
01/29 09:56:54 PM | cout: [36]
01/29 09:56:54 PM | active
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: ReLU(inplace=True)
01/29 09:56:54 PM | cin: None
01/29 09:56:54 PM | cout: None
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
01/29 09:56:54 PM | cin: None
01/29 09:56:54 PM | cout: [37]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:56:54 PM | cin: [37]
01/29 09:56:54 PM | cout: [37]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: ReLU(inplace=True)
01/29 09:56:54 PM | cin: [37]
01/29 09:56:54 PM | cout: [37]
01/29 09:56:54 PM | active
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:56:54 PM | cin: [37]
01/29 09:56:54 PM | cout: [38]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:56:54 PM | cin: [38]
01/29 09:56:54 PM | cout: [38]
01/29 09:56:54 PM | active
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: ReLU(inplace=True)
01/29 09:56:54 PM | cin: None
01/29 09:56:54 PM | cout: None
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:56:54 PM | cin: None
01/29 09:56:54 PM | cout: [39]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:56:54 PM | cin: [39]
01/29 09:56:54 PM | cout: [39]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: ReLU(inplace=True)
01/29 09:56:54 PM | cin: [39]
01/29 09:56:54 PM | cout: [39]
01/29 09:56:54 PM | active
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:56:54 PM | cin: [39]
01/29 09:56:54 PM | cout: [40]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:56:54 PM | cin: [40]
01/29 09:56:54 PM | cout: [40]
01/29 09:56:54 PM | active
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: ReLU(inplace=True)
01/29 09:56:54 PM | cin: None
01/29 09:56:54 PM | cout: None
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:56:54 PM | cin: None
01/29 09:56:54 PM | cout: [41]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:56:54 PM | cin: [41]
01/29 09:56:54 PM | cout: [41]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: ReLU(inplace=True)
01/29 09:56:54 PM | cin: [41]
01/29 09:56:54 PM | cout: [41]
01/29 09:56:54 PM | active
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:56:54 PM | cin: [41]
01/29 09:56:54 PM | cout: [42]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:56:54 PM | cin: [42]
01/29 09:56:54 PM | cout: [42]
01/29 09:56:54 PM | active
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: ReLU(inplace=True)
01/29 09:56:54 PM | cin: None
01/29 09:56:54 PM | cout: None
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:56:54 PM | cin: None
01/29 09:56:54 PM | cout: [43]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:56:54 PM | cin: [43]
01/29 09:56:54 PM | cout: [43]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: ReLU(inplace=True)
01/29 09:56:54 PM | cin: [43]
01/29 09:56:54 PM | cout: [43]
01/29 09:56:54 PM | active
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:56:54 PM | cin: [43]
01/29 09:56:54 PM | cout: [44]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:56:54 PM | cin: [44]
01/29 09:56:54 PM | cout: [44]
01/29 09:56:54 PM | active
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: ReLU(inplace=True)
01/29 09:56:54 PM | cin: None
01/29 09:56:54 PM | cout: None
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:56:54 PM | cin: None
01/29 09:56:54 PM | cout: [45]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:56:54 PM | cin: [45]
01/29 09:56:54 PM | cout: [45]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: ReLU(inplace=True)
01/29 09:56:54 PM | cin: [45]
01/29 09:56:54 PM | cout: [45]
01/29 09:56:54 PM | active
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:56:54 PM | cin: [45]
01/29 09:56:54 PM | cout: [46]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:56:54 PM | cin: [46]
01/29 09:56:54 PM | cout: [46]
01/29 09:56:54 PM | active
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: ReLU(inplace=True)
01/29 09:56:54 PM | cin: None
01/29 09:56:54 PM | cout: None
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:56:54 PM | cin: None
01/29 09:56:54 PM | cout: [47]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:56:54 PM | cin: [47]
01/29 09:56:54 PM | cout: [47]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: ReLU(inplace=True)
01/29 09:56:54 PM | cin: [47]
01/29 09:56:54 PM | cout: [47]
01/29 09:56:54 PM | active
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:56:54 PM | cin: [47]
01/29 09:56:54 PM | cout: [48]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:56:54 PM | cin: [48]
01/29 09:56:54 PM | cout: [48]
01/29 09:56:54 PM | active
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: ReLU(inplace=True)
01/29 09:56:54 PM | cin: None
01/29 09:56:54 PM | cout: None
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:56:54 PM | cin: None
01/29 09:56:54 PM | cout: [49]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:56:54 PM | cin: [49]
01/29 09:56:54 PM | cout: [49]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: ReLU(inplace=True)
01/29 09:56:54 PM | cin: [49]
01/29 09:56:54 PM | cout: [49]
01/29 09:56:54 PM | active
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:56:54 PM | cin: [49]
01/29 09:56:54 PM | cout: [50]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:56:54 PM | cin: [50]
01/29 09:56:54 PM | cout: [50]
01/29 09:56:54 PM | active
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: ReLU(inplace=True)
01/29 09:56:54 PM | cin: None
01/29 09:56:54 PM | cout: None
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:56:54 PM | cin: None
01/29 09:56:54 PM | cout: [51]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:56:54 PM | cin: [51]
01/29 09:56:54 PM | cout: [51]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: ReLU(inplace=True)
01/29 09:56:54 PM | cin: [51]
01/29 09:56:54 PM | cout: [51]
01/29 09:56:54 PM | active
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:56:54 PM | cin: [51]
01/29 09:56:54 PM | cout: [52]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:56:54 PM | cin: [52]
01/29 09:56:54 PM | cout: [52]
01/29 09:56:54 PM | active
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: ReLU(inplace=True)
01/29 09:56:54 PM | cin: None
01/29 09:56:54 PM | cout: None
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:56:54 PM | cin: None
01/29 09:56:54 PM | cout: [53]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:56:54 PM | cin: [53]
01/29 09:56:54 PM | cout: [53]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: ReLU(inplace=True)
01/29 09:56:54 PM | cin: [53]
01/29 09:56:54 PM | cout: [53]
01/29 09:56:54 PM | active
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
01/29 09:56:54 PM | cin: [53]
01/29 09:56:54 PM | cout: [54]
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
01/29 09:56:54 PM | cin: [54]
01/29 09:56:54 PM | cout: [54]
01/29 09:56:54 PM | active
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: ReLU(inplace=True)
01/29 09:56:54 PM | cin: None
01/29 09:56:54 PM | cout: None
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: AdaptiveAvgPool2d(output_size=(1, 1))
01/29 09:56:54 PM | cin: None
01/29 09:56:54 PM | cout: None
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | -----
01/29 09:56:54 PM | module: Linear(in_features=64, out_features=10, bias=True)
01/29 09:56:54 PM | cin: None
01/29 09:56:54 PM | cout: None
01/29 09:56:54 PM | inactive
01/29 09:56:54 PM | Used masks: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54]
01/29 09:56:54 PM | 55 unique masks in total
01/29 09:56:55 PM | === Batch 1/50
01/29 09:56:55 PM | loss = 0.046 + 4.444 + 0.040 = 4.530
01/29 09:56:56 PM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.83  0.94  0.83  0.83  0.83  0.83  0.83  0.94  0.83  0.83  0.83  0.83 ]
[ 0.94  0.83  0.83  0.94  0.94  0.94  0.83  0.83  0.83  0.94  0.94  0.94 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.94  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.94  0.94  0.83  0.83  0.94  0.83  0.83  0.83  0.94 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.94  0.94  0.83  0.83  0.94  0.83  0.83  0.83  0.94 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.94  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.94  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.94  0.83  0.83  0.94  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.94  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.94 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.94  0.83  0.83  0.94  0.83  0.83  0.83  0.94  0.83  0.83  0.83 ]
[ 0.94  0.83  0.83  0.94  0.83  0.83  0.83  0.94  0.94  0.83  0.83  0.83 ]
[ 0.83  0.94  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.94  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.94  0.83  0.83  0.94  0.94  0.83  0.94  0.83  0.94  0.83  0.83  0.94 ]
[ 0.83  0.83  0.83  0.94  0.83  0.83  0.83  0.83  0.83  0.94  0.94  0.94 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.94  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.94  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.94  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.94  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.94 ]
[ 0.83  0.83  0.94  0.83  0.83  0.83  0.83  0.83  0.83  0.94  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.94  0.83  0.83  0.83  0.83  0.83  0.94  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.94  0.94  0.83  0.94  0.83  0.83  0.83  0.94  0.94  0.83  0.83  0.83 ]
[ 0.83  0.83  0.94  0.94  0.83  0.83  0.94  0.83  0.83  0.94  0.94  0.94 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.94  0.83  0.83 ]
[ 0.84  0.83  0.83  0.83  0.83  0.83  0.94  0.83  0.83  0.83  0.83  0.94 ]
[ 0.83  0.83  0.83  0.83  0.94  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.94  0.83  0.83  0.94  0.83  0.94  0.83  0.83  0.83  0.83  0.94 ]
[ 0.83  0.94  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.94  0.83  0.94  0.83  0.83  0.94  0.83  0.83  0.83  0.83  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.94 ]
[ 0.83  0.94  0.83  0.94  0.83  0.83  0.83  0.83  0.83  0.83  0.94  0.83 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.94  0.83  0.83  0.83  0.83 ]
[ 0.83  0.94  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.94  0.83  0.83 ]
[ 0.83  0.83  0.83  0.94  0.83  0.83  0.83  0.83  0.94  0.83  0.94  0.83 ]
[ 0.83  0.83  0.94  0.83  0.83  0.94  0.83  0.83  0.83  0.83  0.83  0.94 ]
[ 0.83  0.83  0.83  0.83  0.94  0.83  0.83  0.83  0.83  0.83  0.83  0.94 ]
[ 0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.83  0.94  0.83  0.94 ]
[ 0.94  0.83  0.83  0.83  0.94  0.83  0.94  0.83  0.83  0.83  0.94  0.83 ]
[ 0.94  0.83  0.94  0.94  0.83  0.83  0.94  0.83  0.83  0.94  0.83  0.94 ]

01/29 09:56:56 PM | === Batch 2/50
01/29 09:56:57 PM | loss = 0.803 + 3.668 + 0.060 = 4.530
01/29 09:56:58 PM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.73  0.97  0.75  0.75  0.77  0.82  0.73  0.97  0.73  0.74  0.88  0.84 ]
[ 0.92  0.74  0.75  0.97  0.96  0.96  0.88  0.87  0.73  0.97  0.93  0.96 ]
[ 0.78  0.78  0.73  0.74  0.75  0.73  0.77  0.97  0.74  0.73  0.86  0.74 ]
[ 0.75  0.86  0.75  0.96  0.97  0.88  0.88  0.97  0.76  0.74  0.88  0.96 ]
[ 0.87  0.87  0.86  0.85  0.88  0.73  0.73  0.73  0.73  0.75  0.73  0.75 ]
[ 0.87  0.80  0.88  0.97  0.94  0.88  0.88  0.97  0.88  0.88  0.74  0.96 ]
[ 0.74  0.83  0.78  0.86  0.86  0.73  0.75  0.73  0.92  0.87  0.73  0.80 ]
[ 0.75  0.82  0.89  0.97  0.75  0.73  0.88  0.73  0.74  0.87  0.74  0.88 ]
[ 0.74  0.74  0.73  0.73  0.84  0.74  0.74  0.75  0.73  0.74  0.73  0.77 ]
[ 0.75  0.83  0.88  0.75  0.97  0.74  0.87  0.97  0.88  0.88  0.73  0.81 ]
[ 0.74  0.78  0.73  0.73  0.74  0.74  0.87  0.74  0.75  0.73  0.86  0.79 ]
[ 0.75  0.88  0.87  0.97  0.74  0.74  0.88  0.73  0.88  0.87  0.74  0.97 ]
[ 0.76  0.78  0.79  0.78  0.73  0.77  0.73  0.80  0.73  0.73  0.87  0.75 ]
[ 0.75  0.95  0.88  0.79  0.97  0.75  0.88  0.74  0.96  0.73  0.88  0.87 ]
[ 0.93  0.84  0.74  0.97  0.76  0.87  0.87  0.94  0.96  0.73  0.81  0.80 ]
[ 0.76  0.97  0.88  0.73  0.75  0.75  0.88  0.74  0.88  0.84  0.88  0.88 ]
[ 0.75  0.80  0.73  0.85  0.86  0.73  0.84  0.73  0.73  0.73  0.85  0.75 ]
[ 0.75  0.93  0.88  0.79  0.88  0.74  0.83  0.73  0.88  0.84  0.87  0.81 ]
[ 0.97  0.88  0.88  0.97  0.96  0.74  0.96  0.81  0.96  0.89  0.89  0.97 ]
[ 0.73  0.76  0.88  0.92  0.86  0.74  0.88  0.88  0.73  0.97  0.95  0.96 ]
[ 0.73  0.74  0.73  0.82  0.80  0.73  0.87  0.73  0.75  0.86  0.84  0.83 ]
[ 0.74  0.76  0.86  0.93  0.88  0.75  0.76  0.88  0.74  0.73  0.73  0.74 ]
[ 0.74  0.87  0.75  0.75  0.75  0.80  0.79  0.87  0.73  0.91  0.75  0.85 ]
[ 0.74  0.75  0.88  0.74  0.88  0.75  0.76  0.88  0.83  0.83  0.73  0.75 ]
[ 0.87  0.88  0.73  0.74  0.73  0.73  0.83  0.88  0.75  0.82  0.87  0.74 ]
[ 0.73  0.75  0.88  0.74  0.83  0.75  0.76  0.73  0.87  0.87  0.74  0.88 ]
[ 0.83  0.73  0.74  0.74  0.74  0.74  0.85  0.73  0.88  0.81  0.85  0.74 ]
[ 0.75  0.75  0.86  0.94  0.88  0.75  0.74  0.87  0.87  0.74  0.73  0.88 ]
[ 0.74  0.73  0.73  0.78  0.73  0.75  0.87  0.74  0.76  0.73  0.76  0.73 ]
[ 0.75  0.75  0.88  0.92  0.88  0.75  0.73  0.88  0.73  0.74  0.74  0.97 ]
[ 0.73  0.73  0.94  0.85  0.73  0.81  0.74  0.86  0.86  0.97  0.76  0.86 ]
[ 0.74  0.74  0.86  0.75  0.88  0.74  0.86  0.73  0.77  0.74  0.75  0.87 ]
[ 0.73  0.74  0.75  0.87  0.73  0.73  0.74  0.73  0.87  0.76  0.73  0.74 ]
[ 0.75  0.74  0.87  0.75  0.74  0.74  0.74  0.73  0.74  0.74  0.74  0.73 ]
[ 0.97  0.83  0.75  0.73  0.75  0.77  0.93  0.73  0.73  0.86  0.87  0.74 ]
[ 0.74  0.75  0.73  0.73  0.88  0.74  0.74  0.74  0.76  0.88  0.75  0.87 ]
[ 0.97  0.97  0.88  0.96  0.87  0.88  0.88  0.97  0.97  0.75  0.76  0.75 ]
[ 0.76  0.88  0.92  0.94  0.79  0.73  0.92  0.73  0.88  0.97  0.97  0.97 ]
[ 0.80  0.86  0.86  0.87  0.88  0.78  0.77  0.87  0.88  0.93  0.75  0.74 ]
[ 0.77  0.88  0.76  0.75  0.85  0.88  0.92  0.87  0.88  0.74  0.73  0.96 ]
[ 0.78  0.88  0.73  0.74  0.94  0.73  0.73  0.87  0.74  0.78  0.86  0.89 ]
[ 0.76  0.93  0.75  0.75  0.93  0.79  0.97  0.88  0.73  0.73  0.88  0.97 ]
[ 0.83  0.95  0.82  0.85  0.73  0.87  0.77  0.84  0.88  0.85  0.75  0.75 ]
[ 0.76  0.92  0.76  0.91  0.73  0.87  0.92  0.81  0.85  0.73  0.83  0.74 ]
[ 0.75  0.88  0.75  0.81  0.86  0.73  0.74  0.74  0.74  0.75  0.86  0.93 ]
[ 0.75  0.92  0.76  0.92  0.84  0.74  0.88  0.87  0.87  0.76  0.96  0.75 ]
[ 0.88  0.73  0.74  0.75  0.74  0.73  0.77  0.96  0.88  0.87  0.87  0.74 ]
[ 0.79  0.92  0.88  0.84  0.81  0.87  0.73  0.76  0.84  0.94  0.76  0.74 ]
[ 0.73  0.75  0.73  0.92  0.73  0.74  0.83  0.74  0.92  0.74  0.93  0.73 ]
[ 0.87  0.73  0.97  0.85  0.87  0.94  0.88  0.86  0.88  0.74  0.85  0.92 ]
[ 0.75  0.87  0.88  0.74  0.92  0.80  0.87  0.82  0.76  0.88  0.73  0.97 ]
[ 0.88  0.88  0.73  0.86  0.88  0.76  0.76  0.87  0.73  0.95  0.74  0.97 ]
[ 0.97  0.75  0.75  0.88  0.92  0.75  0.92  0.87  0.85  0.77  0.91  0.75 ]
[ 0.91  0.86  0.92  0.92  0.88  0.73  0.91  0.88  0.88  0.94  0.88  0.97 ]

01/29 09:56:58 PM | === Batch 3/50
01/29 09:56:58 PM | loss = 0.586 + 3.152 + 0.072 = 3.811
01/29 09:56:59 PM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.60  0.96  0.64  0.78  0.67  0.79  0.60  0.98  0.60  0.64  0.91  0.79 ]
[ 0.89  0.67  0.64  0.98  0.98  0.97  0.88  0.91  0.65  0.98  0.94  0.97 ]
[ 0.70  0.81  0.61  0.76  0.76  0.62  0.76  0.98  0.61  0.61  0.85  0.64 ]
[ 0.66  0.84  0.72  0.97  0.98  0.91  0.90  0.98  0.71  0.65  0.91  0.97 ]
[ 0.87  0.87  0.84  0.81  0.91  0.63  0.60  0.63  0.60  0.64  0.60  0.78 ]
[ 0.91  0.74  0.92  0.98  0.95  0.89  0.89  0.96  0.90  0.90  0.63  0.97 ]
[ 0.62  0.79  0.74  0.83  0.90  0.60  0.70  0.72  0.92  0.89  0.62  0.73 ]
[ 0.70  0.76  0.92  0.98  0.71  0.61  0.92  0.70  0.63  0.85  0.62  0.90 ]
[ 0.63  0.62  0.60  0.62  0.84  0.63  0.71  0.63  0.60  0.72  0.61  0.71 ]
[ 0.67  0.77  0.92  0.64  0.98  0.63  0.90  0.97  0.89  0.88  0.61  0.75 ]
[ 0.61  0.69  0.60  0.61  0.70  0.63  0.89  0.74  0.70  0.60  0.90  0.71 ]
[ 0.67  0.89  0.91  0.98  0.75  0.62  0.89  0.61  0.90  0.85  0.67  0.97 ]
[ 0.66  0.75  0.83  0.68  0.79  0.83  0.63  0.84  0.61  0.62  0.91  0.66 ]
[ 0.66  0.96  0.92  0.72  0.96  0.65  0.88  0.66  0.97  0.61  0.91  0.89 ]
[ 0.90  0.86  0.61  0.98  0.67  0.90  0.89  0.93  0.98  0.60  0.75  0.75 ]
[ 0.68  0.98  0.92  0.63  0.79  0.64  0.90  0.62  0.88  0.78  0.90  0.91 ]
[ 0.63  0.75  0.61  0.88  0.87  0.62  0.81  0.65  0.60  0.60  0.83  0.63 ]
[ 0.68  0.93  0.91  0.71  0.92  0.63  0.79  0.60  0.88  0.79  0.87  0.74 ]
[ 0.97  0.87  0.92  0.98  0.97  0.78  0.97  0.74  0.96  0.90  0.92  0.97 ]
[ 0.60  0.76  0.92  0.93  0.88  0.65  0.92  0.91  0.76  0.97  0.96  0.98 ]
[ 0.62  0.62  0.60  0.76  0.76  0.60  0.87  0.60  0.71  0.84  0.80  0.82 ]
[ 0.76  0.77  0.89  0.93  0.91  0.71  0.79  0.91  0.64  0.62  0.60  0.61 ]
[ 0.70  0.86  0.73  0.72  0.76  0.73  0.71  0.86  0.63  0.89  0.72  0.82 ]
[ 0.72  0.77  0.92  0.78  0.89  0.72  0.80  0.91  0.85  0.78  0.71  0.68 ]
[ 0.92  0.88  0.62  0.63  0.67  0.60  0.77  0.89  0.67  0.76  0.88  0.63 ]
[ 0.73  0.77  0.92  0.70  0.82  0.71  0.70  0.67  0.89  0.83  0.64  0.90 ]
[ 0.76  0.62  0.65  0.62  0.65  0.73  0.89  0.60  0.88  0.75  0.82  0.63 ]
[ 0.71  0.79  0.91  0.94  0.89  0.73  0.69  0.89  0.86  0.75  0.61  0.91 ]
[ 0.63  0.63  0.61  0.70  0.66  0.64  0.87  0.61  0.67  0.64  0.66  0.60 ]
[ 0.71  0.75  0.92  0.94  0.91  0.70  0.76  0.92  0.60  0.74  0.68  0.97 ]
[ 0.60  0.60  0.92  0.82  0.60  0.74  0.61  0.84  0.89  0.96  0.67  0.83 ]
[ 0.66  0.77  0.89  0.73  0.91  0.63  0.84  0.67  0.67  0.77  0.72  0.86 ]
[ 0.60  0.62  0.70  0.90  0.76  0.61  0.67  0.60  0.88  0.65  0.60  0.65 ]
[ 0.73  0.74  0.91  0.76  0.67  0.72  0.77  0.75  0.64  0.72  0.61  0.62 ]
[ 0.98  0.84  0.73  0.61  0.64  0.78  0.90  0.60  0.62  0.86  0.88  0.63 ]
[ 0.73  0.75  0.60  0.75  0.92  0.65  0.73  0.62  0.65  0.89  0.64  0.90 ]
[ 0.98  0.97  0.91  0.98  0.87  0.92  0.91  0.96  0.98  0.78  0.77  0.65 ]
[ 0.70  0.91  0.91  0.93  0.84  0.60  0.90  0.60  0.90  0.98  0.97  0.97 ]
[ 0.76  0.90  0.91  0.85  0.89  0.69  0.68  0.89  0.90  0.91  0.63  0.73 ]
[ 0.75  0.91  0.71  0.70  0.88  0.87  0.89  0.84  0.89  0.62  0.77  0.96 ]
[ 0.70  0.90  0.60  0.74  0.93  0.70  0.60  0.86  0.62  0.79  0.87  0.91 ]
[ 0.73  0.92  0.66  0.68  0.89  0.84  0.98  0.91  0.79  0.61  0.90  0.98 ]
[ 0.87  0.94  0.77  0.85  0.60  0.90  0.68  0.86  0.86  0.80  0.68  0.71 ]
[ 0.78  0.89  0.72  0.88  0.60  0.91  0.90  0.75  0.83  0.64  0.77  0.68 ]
[ 0.74  0.90  0.76  0.78  0.90  0.60  0.77  0.61  0.68  0.65  0.88  0.93 ]
[ 0.64  0.89  0.81  0.88  0.85  0.79  0.90  0.89  0.88  0.79  0.97  0.67 ]
[ 0.86  0.60  0.77  0.65  0.66  0.62  0.75  0.96  0.88  0.87  0.90  0.61 ]
[ 0.71  0.90  0.90  0.88  0.74  0.91  0.79  0.66  0.78  0.92  0.65  0.70 ]
[ 0.61  0.64  0.60  0.90  0.79  0.62  0.80  0.61  0.89  0.62  0.90  0.60 ]
[ 0.87  0.79  0.98  0.86  0.89  0.95  0.91  0.84  0.89  0.79  0.80  0.88 ]
[ 0.67  0.91  0.91  0.77  0.89  0.73  0.91  0.79  0.72  0.92  0.77  0.96 ]
[ 0.90  0.90  0.61  0.89  0.92  0.81  0.73  0.90  0.77  0.94  0.74  0.97 ]
[ 0.98  0.64  0.65  0.88  0.89  0.79  0.89  0.90  0.89  0.69  0.87  0.71 ]
[ 0.88  0.84  0.94  0.90  0.92  0.61  0.88  0.89  0.86  0.92  0.87  0.97 ]

01/29 09:56:59 PM | === Batch 4/50
01/29 09:57:00 PM | loss = 0.586 + 2.596 + 0.086 = 3.267
01/29 09:57:01 PM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.46  0.95  0.51  0.78  0.55  0.83  0.46  0.99  0.46  0.57  0.92  0.70 ]
[ 0.91  0.56  0.63  0.98  0.99  0.97  0.86  0.90  0.68  0.98  0.96  0.98 ]
[ 0.59  0.80  0.46  0.77  0.81  0.48  0.75  0.99  0.57  0.48  0.81  0.52 ]
[ 0.58  0.81  0.64  0.97  0.99  0.91  0.90  0.99  0.71  0.53  0.93  0.97 ]
[ 0.84  0.85  0.82  0.75  0.93  0.54  0.46  0.50  0.46  0.69  0.46  0.82 ]
[ 0.94  0.63  0.93  0.98  0.95  0.89  0.88  0.95  0.91  0.91  0.55  0.97 ]
[ 0.51  0.71  0.66  0.78  0.92  0.45  0.74  0.65  0.90  0.88  0.50  0.63 ]
[ 0.70  0.71  0.94  0.98  0.70  0.49  0.93  0.63  0.50  0.83  0.55  0.91 ]
[ 0.60  0.53  0.46  0.50  0.81  0.50  0.63  0.49  0.45  0.68  0.48  0.69 ]
[ 0.68  0.73  0.94  0.51  0.99  0.53  0.90  0.98  0.89  0.87  0.49  0.65 ]
[ 0.48  0.59  0.46  0.47  0.74  0.64  0.91  0.80  0.67  0.46  0.91  0.60 ]
[ 0.68  0.88  0.92  0.98  0.81  0.55  0.88  0.48  0.91  0.81  0.57  0.96 ]
[ 0.61  0.77  0.89  0.65  0.81  0.84  0.52  0.88  0.46  0.50  0.94  0.55 ]
[ 0.66  0.96  0.94  0.61  0.95  0.64  0.87  0.58  0.97  0.46  0.93  0.89 ]
[ 0.84  0.89  0.47  0.98  0.71  0.89  0.89  0.94  0.98  0.45  0.67  0.66 ]
[ 0.68  0.98  0.94  0.50  0.81  0.53  0.91  0.47  0.86  0.71  0.92  0.92 ]
[ 0.58  0.66  0.48  0.92  0.84  0.49  0.74  0.55  0.46  0.46  0.80  0.52 ]
[ 0.69  0.91  0.92  0.60  0.94  0.60  0.71  0.46  0.86  0.71  0.90  0.66 ]
[ 0.97  0.87  0.94  0.98  0.98  0.83  0.96  0.64  0.95  0.91  0.94  0.97 ]
[ 0.46  0.79  0.95  0.93  0.89  0.56  0.94  0.91  0.82  0.98  0.98  0.98 ]
[ 0.49  0.48  0.45  0.67  0.79  0.46  0.83  0.46  0.66  0.81  0.72  0.78 ]
[ 0.76  0.81  0.91  0.93  0.93  0.73  0.80  0.91  0.59  0.61  0.45  0.47 ]
[ 0.66  0.83  0.70  0.69  0.79  0.63  0.66  0.83  0.51  0.85  0.72  0.75 ]
[ 0.69  0.81  0.93  0.83  0.88  0.73  0.84  0.93  0.89  0.71  0.75  0.59 ]
[ 0.94  0.87  0.50  0.65  0.65  0.46  0.69  0.89  0.61  0.67  0.87  0.50 ]
[ 0.70  0.81  0.94  0.64  0.85  0.71  0.61  0.57  0.87  0.85  0.57  0.90 ]
[ 0.68  0.49  0.55  0.49  0.53  0.74  0.89  0.47  0.85  0.64  0.76  0.50 ]
[ 0.65  0.83  0.91  0.93  0.88  0.74  0.60  0.90  0.82  0.80  0.54  0.93 ]
[ 0.49  0.50  0.47  0.60  0.58  0.52  0.87  0.48  0.54  0.52  0.53  0.46 ]
[ 0.69  0.80  0.93  0.94  0.93  0.68  0.76  0.93  0.46  0.80  0.65  0.98 ]
[ 0.46  0.45  0.89  0.75  0.46  0.64  0.47  0.81  0.89  0.96  0.55  0.76 ]
[ 0.58  0.80  0.91  0.73  0.94  0.50  0.81  0.65  0.55  0.82  0.71  0.83 ]
[ 0.46  0.48  0.61  0.92  0.80  0.46  0.58  0.46  0.88  0.52  0.45  0.55 ]
[ 0.70  0.77  0.93  0.71  0.59  0.75  0.80  0.72  0.66  0.76  0.47  0.49 ]
[ 0.99  0.85  0.72  0.48  0.51  0.83  0.88  0.49  0.48  0.84  0.87  0.51 ]
[ 0.69  0.76  0.46  0.72  0.94  0.58  0.67  0.62  0.54  0.87  0.51  0.93 ]
[ 0.98  0.96  0.93  0.98  0.84  0.95  0.92  0.95  0.98  0.78  0.82  0.54 ]
[ 0.73  0.92  0.90  0.95  0.87  0.46  0.88  0.46  0.88  0.98  0.98  0.98 ]
[ 0.68  0.90  0.92  0.82  0.89  0.58  0.73  0.89  0.90  0.88  0.65  0.71 ]
[ 0.80  0.92  0.72  0.74  0.87  0.88  0.87  0.79  0.87  0.49  0.83  0.97 ]
[ 0.62  0.91  0.46  0.67  0.93  0.62  0.46  0.86  0.53  0.78  0.87  0.92 ]
[ 0.75  0.92  0.61  0.72  0.88  0.89  0.99  0.92  0.85  0.62  0.92  0.99 ]
[ 0.92  0.94  0.78  0.83  0.46  0.92  0.57  0.90  0.81  0.72  0.68  0.68 ]
[ 0.83  0.88  0.70  0.89  0.47  0.94  0.89  0.66  0.79  0.63  0.79  0.59 ]
[ 0.76  0.92  0.76  0.71  0.93  0.46  0.80  0.55  0.62  0.53  0.90  0.93 ]
[ 0.52  0.88  0.78  0.87  0.84  0.82  0.91  0.91  0.89  0.85  0.98  0.57 ]
[ 0.83  0.46  0.74  0.63  0.71  0.60  0.77  0.95  0.88  0.85  0.92  0.60 ]
[ 0.60  0.92  0.90  0.88  0.73  0.94  0.84  0.54  0.70  0.89  0.64  0.63 ]
[ 0.50  0.52  0.47  0.88  0.84  0.63  0.83  0.47  0.84  0.52  0.85  0.46 ]
[ 0.84  0.75  0.98  0.89  0.91  0.94  0.92  0.82  0.89  0.80  0.79  0.86 ]
[ 0.65  0.92  0.91  0.81  0.85  0.75  0.94  0.80  0.77  0.95  0.75  0.96 ]
[ 0.89  0.91  0.48  0.89  0.95  0.84  0.75  0.91  0.82  0.92  0.76  0.98 ]
[ 0.98  0.51  0.56  0.87  0.83  0.85  0.89  0.93  0.90  0.60  0.81  0.63 ]
[ 0.87  0.79  0.92  0.88  0.94  0.46  0.86  0.90  0.81  0.90  0.86  0.97 ]

01/29 09:57:01 PM | === Batch 5/50
01/29 09:57:01 PM | loss = 1.442 + 2.014 + 0.096 = 3.553
01/29 09:57:02 PM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.32  0.93  0.37  0.77  0.42  0.88  0.32  0.99  0.32  0.52  0.90  0.59 ]
[ 0.92  0.44  0.60  0.99  0.99  0.96  0.83  0.86  0.75  0.98  0.97  0.98 ]
[ 0.46  0.75  0.32  0.75  0.80  0.34  0.69  0.99  0.62  0.34  0.75  0.41 ]
[ 0.48  0.82  0.53  0.97  0.99  0.90  0.91  0.99  0.75  0.49  0.94  0.97 ]
[ 0.80  0.79  0.78  0.66  0.92  0.59  0.32  0.41  0.32  0.74  0.36  0.83 ]
[ 0.96  0.55  0.93  0.98  0.96  0.88  0.87  0.92  0.91  0.90  0.59  0.98 ]
[ 0.42  0.67  0.55  0.70  0.92  0.31  0.75  0.68  0.89  0.86  0.38  0.58 ]
[ 0.71  0.72  0.94  0.99  0.72  0.37  0.94  0.53  0.48  0.77  0.46  0.92 ]
[ 0.62  0.58  0.32  0.37  0.74  0.36  0.52  0.35  0.31  0.60  0.55  0.75 ]
[ 0.73  0.71  0.94  0.37  0.99  0.49  0.92  0.98  0.88  0.84  0.39  0.54 ]
[ 0.35  0.51  0.32  0.33  0.72  0.69  0.94  0.86  0.67  0.32  0.90  0.47 ]
[ 0.72  0.88  0.93  0.98  0.86  0.58  0.89  0.35  0.90  0.75  0.50  0.96 ]
[ 0.66  0.76  0.92  0.56  0.78  0.81  0.53  0.91  0.32  0.43  0.94  0.45 ]
[ 0.67  0.95  0.95  0.49  0.94  0.69  0.85  0.49  0.97  0.33  0.94  0.87 ]
[ 0.77  0.91  0.36  0.98  0.76  0.88  0.89  0.96  0.98  0.32  0.55  0.55 ]
[ 0.70  0.99  0.95  0.37  0.77  0.40  0.92  0.36  0.83  0.61  0.93  0.93 ]
[ 0.52  0.56  0.35  0.94  0.78  0.35  0.65  0.47  0.32  0.32  0.74  0.39 ]
[ 0.74  0.88  0.92  0.47  0.95  0.63  0.62  0.33  0.83  0.60  0.90  0.57 ]
[ 0.96  0.90  0.95  0.98  0.98  0.88  0.95  0.52  0.93  0.91  0.96  0.97 ]
[ 0.32  0.82  0.96  0.94  0.90  0.44  0.95  0.91  0.87  0.98  0.98  0.99 ]
[ 0.38  0.35  0.31  0.56  0.77  0.35  0.78  0.38  0.69  0.76  0.67  0.71 ]
[ 0.78  0.84  0.92  0.94  0.95  0.79  0.83  0.91  0.59  0.59  0.38  0.33 ]
[ 0.63  0.84  0.67  0.71  0.82  0.51  0.57  0.78  0.41  0.79  0.71  0.66 ]
[ 0.72  0.85  0.94  0.88  0.89  0.77  0.87  0.93  0.92  0.60  0.81  0.50 ]
[ 0.95  0.86  0.43  0.72  0.68  0.31  0.63  0.88  0.64  0.55  0.84  0.45 ]
[ 0.72  0.84  0.95  0.64  0.89  0.71  0.52  0.57  0.87  0.87  0.57  0.88 ]
[ 0.65  0.38  0.52  0.35  0.40  0.76  0.86  0.33  0.81  0.53  0.69  0.37 ]
[ 0.62  0.87  0.90  0.94  0.89  0.77  0.52  0.90  0.75  0.85  0.55  0.95 ]
[ 0.41  0.39  0.34  0.58  0.58  0.40  0.85  0.37  0.48  0.40  0.39  0.32 ]
[ 0.66  0.83  0.94  0.95  0.95  0.70  0.76  0.94  0.33  0.85  0.70  0.99 ]
[ 0.32  0.31  0.88  0.75  0.32  0.53  0.33  0.77  0.88  0.94  0.42  0.74 ]
[ 0.48  0.84  0.92  0.73  0.95  0.44  0.77  0.64  0.43  0.87  0.75  0.85 ]
[ 0.32  0.43  0.54  0.94  0.85  0.33  0.49  0.33  0.90  0.42  0.31  0.52 ]
[ 0.68  0.80  0.94  0.72  0.62  0.79  0.84  0.75  0.72  0.82  0.50  0.47 ]
[ 0.99  0.84  0.74  0.34  0.38  0.86  0.85  0.54  0.36  0.87  0.83  0.40 ]
[ 0.69  0.78  0.32  0.73  0.96  0.51  0.63  0.67  0.50  0.85  0.57  0.95 ]
[ 0.99  0.96  0.95  0.98  0.83  0.96  0.92  0.94  0.98  0.82  0.86  0.58 ]
[ 0.77  0.92  0.91  0.95  0.89  0.32  0.89  0.32  0.88  0.98  0.98  0.98 ]
[ 0.67  0.89  0.93  0.84  0.87  0.45  0.80  0.91  0.88  0.85  0.71  0.70 ]
[ 0.85  0.93  0.76  0.74  0.86  0.88  0.89  0.79  0.88  0.39  0.85  0.97 ]
[ 0.51  0.91  0.32  0.64  0.93  0.62  0.32  0.84  0.45  0.79  0.84  0.93 ]
[ 0.77  0.91  0.60  0.75  0.87  0.90  0.99  0.94  0.85  0.63  0.93  0.99 ]
[ 0.94  0.95  0.77  0.81  0.35  0.91  0.47  0.90  0.78  0.63  0.67  0.63 ]
[ 0.87  0.90  0.67  0.90  0.46  0.95  0.90  0.58  0.72  0.62  0.83  0.65 ]
[ 0.76  0.93  0.73  0.65  0.94  0.32  0.82  0.56  0.63  0.41  0.90  0.94 ]
[ 0.41  0.90  0.79  0.83  0.86  0.86  0.91  0.93  0.91  0.81  0.98  0.63 ]
[ 0.80  0.31  0.73  0.66  0.68  0.62  0.78  0.95  0.86  0.82  0.93  0.67 ]
[ 0.53  0.94  0.90  0.88  0.76  0.96  0.89  0.41  0.62  0.84  0.67  0.69 ]
[ 0.39  0.41  0.35  0.88  0.85  0.55  0.86  0.33  0.79  0.47  0.77  0.32 ]
[ 0.77  0.67  0.98  0.90  0.93  0.95  0.93  0.76  0.86  0.78  0.82  0.81 ]
[ 0.57  0.94  0.92  0.79  0.87  0.74  0.94  0.79  0.82  0.97  0.68  0.95 ]
[ 0.88  0.90  0.37  0.88  0.96  0.85  0.79  0.91  0.81  0.88  0.81  0.97 ]
[ 0.98  0.53  0.48  0.83  0.76  0.82  0.89  0.93  0.89  0.50  0.80  0.54 ]
[ 0.87  0.71  0.92  0.85  0.95  0.34  0.85  0.91  0.79  0.85  0.83  0.96 ]

01/29 09:57:02 PM | === Batch 6/50
01/29 09:57:03 PM | loss = 0.455 + 1.512 + 0.091 = 2.057
01/29 09:57:04 PM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.20  0.90  0.25  0.73  0.30  0.90  0.20  0.99  0.20  0.46  0.89  0.47 ]
[ 0.94  0.32  0.54  0.99  0.99  0.95  0.82  0.81  0.79  0.98  0.97  0.98 ]
[ 0.33  0.68  0.21  0.70  0.79  0.23  0.59  0.99  0.68  0.22  0.68  0.30 ]
[ 0.53  0.84  0.42  0.97  1.00  0.89  0.92  0.99  0.78  0.49  0.94  0.97 ]
[ 0.74  0.71  0.76  0.54  0.90  0.62  0.20  0.32  0.20  0.78  0.26  0.82 ]
[ 0.97  0.45  0.92  0.98  0.97  0.86  0.87  0.88  0.90  0.87  0.65  0.98 ]
[ 0.32  0.64  0.43  0.60  0.92  0.20  0.73  0.73  0.90  0.81  0.26  0.59 ]
[ 0.74  0.73  0.94  0.99  0.68  0.27  0.95  0.41  0.46  0.68  0.35  0.92 ]
[ 0.57  0.65  0.20  0.25  0.65  0.25  0.42  0.23  0.20  0.56  0.63  0.79 ]
[ 0.77  0.68  0.95  0.26  1.00  0.46  0.93  0.98  0.87  0.78  0.32  0.42 ]
[ 0.23  0.45  0.20  0.22  0.66  0.75  0.96  0.90  0.64  0.20  0.89  0.34 ]
[ 0.75  0.88  0.94  0.99  0.91  0.60  0.91  0.24  0.90  0.66  0.48  0.97 ]
[ 0.69  0.72  0.93  0.45  0.73  0.77  0.51  0.94  0.21  0.36  0.95  0.35 ]
[ 0.69  0.95  0.96  0.37  0.93  0.73  0.83  0.39  0.97  0.21  0.95  0.84 ]
[ 0.71  0.92  0.26  0.99  0.79  0.88  0.90  0.96  0.98  0.21  0.45  0.42 ]
[ 0.72  0.99  0.96  0.25  0.70  0.28  0.92  0.25  0.80  0.49  0.93  0.93 ]
[ 0.43  0.44  0.23  0.95  0.69  0.23  0.53  0.39  0.20  0.20  0.64  0.27 ]
[ 0.77  0.86  0.92  0.34  0.95  0.66  0.53  0.22  0.80  0.48  0.89  0.45 ]
[ 0.96  0.92  0.95  0.98  0.98  0.91  0.95  0.39  0.93  0.92  0.96  0.97 ]
[ 0.20  0.82  0.97  0.96  0.89  0.39  0.96  0.90  0.91  0.98  0.99  0.99 ]
[ 0.28  0.24  0.20  0.46  0.72  0.25  0.71  0.35  0.74  0.71  0.59  0.62 ]
[ 0.82  0.85  0.91  0.95  0.96  0.84  0.85  0.91  0.59  0.53  0.30  0.23 ]
[ 0.58  0.82  0.67  0.72  0.84  0.39  0.57  0.69  0.30  0.73  0.66  0.54 ]
[ 0.77  0.87  0.93  0.92  0.90  0.82  0.89  0.93  0.94  0.50  0.85  0.46 ]
[ 0.96  0.84  0.39  0.76  0.74  0.20  0.60  0.85  0.69  0.42  0.82  0.46 ]
[ 0.78  0.86  0.96  0.66  0.91  0.73  0.42  0.57  0.85  0.87  0.57  0.89 ]
[ 0.57  0.33  0.53  0.23  0.34  0.79  0.82  0.23  0.74  0.40  0.62  0.26 ]
[ 0.65  0.88  0.87  0.94  0.90  0.80  0.43  0.90  0.66  0.87  0.55  0.96 ]
[ 0.35  0.29  0.23  0.53  0.59  0.28  0.82  0.26  0.39  0.29  0.27  0.20 ]
[ 0.70  0.85  0.94  0.96  0.96  0.73  0.77  0.94  0.22  0.87  0.76  0.99 ]
[ 0.23  0.20  0.89  0.74  0.21  0.41  0.22  0.73  0.86  0.94  0.30  0.77 ]
[ 0.43  0.85  0.92  0.70  0.96  0.37  0.73  0.57  0.33  0.90  0.80  0.88 ]
[ 0.20  0.38  0.54  0.95  0.88  0.21  0.38  0.22  0.92  0.34  0.20  0.47 ]
[ 0.71  0.80  0.94  0.77  0.67  0.82  0.88  0.80  0.74  0.85  0.55  0.50 ]
[ 0.99  0.81  0.73  0.22  0.26  0.87  0.79  0.62  0.25  0.91  0.76  0.31 ]
[ 0.74  0.77  0.21  0.75  0.97  0.43  0.58  0.73  0.42  0.82  0.65  0.96 ]
[ 0.99  0.94  0.96  0.99  0.84  0.97  0.92  0.94  0.98  0.87  0.88  0.65 ]
[ 0.78  0.91  0.93  0.96  0.89  0.20  0.92  0.20  0.89  0.98  0.98  0.98 ]
[ 0.61  0.89  0.93  0.84  0.85  0.32  0.86  0.94  0.87  0.83  0.71  0.70 ]
[ 0.89  0.93  0.82  0.77  0.84  0.87  0.91  0.80  0.89  0.31  0.86  0.97 ]
[ 0.41  0.91  0.20  0.61  0.92  0.63  0.20  0.81  0.36  0.78  0.79  0.92 ]
[ 0.77  0.91  0.60  0.76  0.89  0.90  1.00  0.96  0.85  0.63  0.93  0.98 ]
[ 0.95  0.96  0.73  0.76  0.26  0.88  0.44  0.90  0.78  0.55  0.66  0.57 ]
[ 0.91  0.93  0.64  0.90  0.50  0.95  0.92  0.55  0.67  0.60  0.83  0.72 ]
[ 0.73  0.93  0.66  0.60  0.95  0.20  0.82  0.61  0.60  0.30  0.92  0.95 ]
[ 0.33  0.93  0.81  0.76  0.86  0.88  0.90  0.94  0.92  0.79  0.98  0.68 ]
[ 0.79  0.20  0.75  0.67  0.63  0.63  0.76  0.95  0.83  0.78  0.93  0.74 ]
[ 0.43  0.95  0.90  0.88  0.79  0.97  0.93  0.31  0.52  0.82  0.70  0.75 ]
[ 0.28  0.36  0.26  0.89  0.83  0.47  0.89  0.23  0.79  0.50  0.67  0.20 ]
[ 0.70  0.57  0.98  0.93  0.95  0.96  0.93  0.67  0.81  0.74  0.84  0.74 ]
[ 0.47  0.94  0.92  0.74  0.90  0.69  0.93  0.73  0.87  0.98  0.59  0.95 ]
[ 0.87  0.88  0.28  0.85  0.97  0.86  0.82  0.91  0.78  0.85  0.85  0.96 ]
[ 0.98  0.57  0.40  0.80  0.70  0.77  0.89  0.92  0.89  0.39  0.79  0.43 ]
[ 0.89  0.62  0.92  0.79  0.95  0.22  0.82  0.93  0.81  0.81  0.79  0.95 ]

01/29 09:57:04 PM | === Batch 7/50
01/29 09:57:04 PM | loss = 0.353 + 1.033 + 0.083 = 1.469
01/29 09:57:05 PM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.12  0.87  0.17  0.69  0.20  0.90  0.12  0.99  0.12  0.37  0.88  0.35 ]
[ 0.95  0.22  0.46  0.99  1.00  0.94  0.80  0.78  0.82  0.98  0.97  0.98 ]
[ 0.22  0.59  0.13  0.63  0.76  0.15  0.49  1.00  0.72  0.14  0.61  0.22 ]
[ 0.60  0.85  0.34  0.96  1.00  0.88  0.93  0.99  0.79  0.44  0.94  0.97 ]
[ 0.66  0.62  0.75  0.43  0.88  0.65  0.12  0.23  0.12  0.81  0.18  0.80 ]
[ 0.98  0.35  0.93  0.99  0.97  0.84  0.86  0.82  0.90  0.86  0.69  0.98 ]
[ 0.22  0.61  0.32  0.52  0.92  0.12  0.71  0.74  0.90  0.76  0.19  0.59 ]
[ 0.73  0.74  0.95  0.99  0.61  0.18  0.96  0.32  0.43  0.62  0.27  0.93 ]
[ 0.49  0.69  0.12  0.17  0.57  0.16  0.32  0.15  0.12  0.49  0.68  0.80 ]
[ 0.79  0.64  0.96  0.19  1.00  0.39  0.94  0.98  0.87  0.75  0.25  0.33 ]
[ 0.14  0.39  0.12  0.14  0.58  0.77  0.97  0.92  0.58  0.12  0.88  0.24 ]
[ 0.75  0.88  0.94  0.99  0.93  0.59  0.92  0.16  0.91  0.59  0.42  0.97 ]
[ 0.69  0.65  0.94  0.35  0.68  0.74  0.45  0.95  0.13  0.28  0.95  0.26 ]
[ 0.66  0.95  0.96  0.27  0.91  0.75  0.81  0.28  0.97  0.13  0.95  0.82 ]
[ 0.61  0.91  0.18  0.99  0.80  0.89  0.90  0.97  0.99  0.13  0.34  0.30 ]
[ 0.70  0.99  0.96  0.17  0.63  0.19  0.93  0.17  0.79  0.39  0.94  0.93 ]
[ 0.33  0.32  0.15  0.95  0.59  0.15  0.41  0.30  0.12  0.12  0.55  0.19 ]
[ 0.77  0.85  0.93  0.23  0.95  0.66  0.42  0.14  0.78  0.38  0.87  0.37 ]
[ 0.96  0.94  0.96  0.99  0.98  0.93  0.95  0.29  0.94  0.93  0.97  0.97 ]
[ 0.12  0.82  0.97  0.97  0.88  0.31  0.96  0.90  0.93  0.98  0.99  0.99 ]
[ 0.19  0.15  0.12  0.36  0.65  0.17  0.63  0.36  0.78  0.64  0.50  0.54 ]
[ 0.86  0.86  0.91  0.96  0.97  0.86  0.88  0.90  0.54  0.44  0.23  0.16 ]
[ 0.53  0.81  0.67  0.73  0.84  0.28  0.60  0.64  0.22  0.71  0.58  0.42 ]
[ 0.82  0.88  0.93  0.95  0.91  0.84  0.91  0.92  0.96  0.39  0.87  0.46 ]
[ 0.96  0.82  0.36  0.77  0.79  0.12  0.56  0.83  0.73  0.31  0.78  0.44 ]
[ 0.83  0.87  0.97  0.67  0.93  0.72  0.38  0.59  0.84  0.85  0.52  0.89 ]
[ 0.51  0.27  0.50  0.15  0.31  0.79  0.77  0.14  0.69  0.30  0.53  0.16 ]
[ 0.67  0.89  0.83  0.95  0.91  0.81  0.35  0.88  0.58  0.88  0.50  0.97 ]
[ 0.27  0.20  0.15  0.46  0.56  0.19  0.76  0.19  0.30  0.19  0.17  0.12 ]
[ 0.72  0.86  0.93  0.97  0.97  0.73  0.80  0.94  0.14  0.88  0.77  0.99 ]
[ 0.15  0.12  0.88  0.72  0.13  0.37  0.14  0.67  0.84  0.92  0.20  0.78 ]
[ 0.36  0.86  0.91  0.66  0.96  0.29  0.66  0.48  0.24  0.91  0.83  0.90 ]
[ 0.12  0.31  0.53  0.95  0.91  0.13  0.27  0.13  0.93  0.26  0.12  0.40 ]
[ 0.74  0.79  0.95  0.80  0.70  0.83  0.91  0.83  0.72  0.86  0.55  0.53 ]
[ 0.99  0.76  0.69  0.14  0.16  0.86  0.70  0.68  0.17  0.92  0.68  0.26 ]
[ 0.80  0.75  0.13  0.76  0.98  0.33  0.52  0.78  0.33  0.80  0.69  0.97 ]
[ 0.99  0.94  0.97  0.99  0.85  0.97  0.92  0.94  0.99  0.90  0.89  0.72 ]
[ 0.79  0.91  0.95  0.96  0.89  0.12  0.93  0.12  0.91  0.99  0.99  0.98 ]
[ 0.52  0.89  0.93  0.81  0.84  0.23  0.89  0.95  0.85  0.80  0.69  0.67 ]
[ 0.92  0.93  0.86  0.81  0.82  0.85  0.93  0.82  0.90  0.26  0.86  0.97 ]
[ 0.32  0.90  0.12  0.60  0.92  0.62  0.12  0.77  0.27  0.80  0.74  0.92 ]
[ 0.77  0.90  0.56  0.78  0.91  0.88  1.00  0.97  0.84  0.60  0.94  0.98 ]
[ 0.96  0.96  0.67  0.68  0.18  0.85  0.41  0.88  0.79  0.46  0.67  0.53 ]
[ 0.93  0.94  0.59  0.91  0.50  0.94  0.93  0.52  0.67  0.59  0.83  0.78 ]
[ 0.70  0.94  0.60  0.61  0.96  0.12  0.82  0.61  0.54  0.21  0.93  0.96 ]
[ 0.28  0.94  0.83  0.73  0.87  0.91  0.90  0.95  0.93  0.78  0.98  0.73 ]
[ 0.76  0.12  0.77  0.67  0.55  0.64  0.75  0.95  0.79  0.72  0.93  0.78 ]
[ 0.35  0.96  0.89  0.86  0.80  0.97  0.95  0.24  0.48  0.84  0.75  0.80 ]
[ 0.19  0.33  0.19  0.88  0.80  0.39  0.91  0.15  0.79  0.50  0.55  0.12 ]
[ 0.64  0.50  0.99  0.94  0.96  0.97  0.93  0.59  0.83  0.68  0.85  0.63 ]
[ 0.39  0.95  0.92  0.67  0.92  0.66  0.92  0.70  0.88  0.98  0.51  0.94 ]
[ 0.87  0.86  0.20  0.81  0.98  0.87  0.84  0.91  0.75  0.82  0.87  0.95 ]
[ 0.97  0.58  0.31  0.76  0.72  0.72  0.88  0.90  0.91  0.30  0.76  0.33 ]
[ 0.89  0.55  0.93  0.77  0.96  0.14  0.77  0.94  0.84  0.79  0.74  0.93 ]

01/29 09:57:05 PM | === Batch 8/50
01/29 09:57:06 PM | loss = 0.916 + 0.595 + 0.076 = 1.588
01/29 09:57:06 PM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.07  0.89  0.11  0.67  0.13  0.91  0.07  0.99  0.07  0.27  0.89  0.27 ]
[ 0.96  0.15  0.37  0.99  1.00  0.95  0.80  0.79  0.84  0.98  0.98  0.99 ]
[ 0.15  0.51  0.07  0.53  0.77  0.10  0.37  1.00  0.72  0.10  0.57  0.18 ]
[ 0.68  0.84  0.29  0.97  1.00  0.88  0.93  0.99  0.81  0.36  0.95  0.97 ]
[ 0.57  0.61  0.79  0.31  0.86  0.67  0.07  0.17  0.07  0.82  0.11  0.79 ]
[ 0.99  0.24  0.93  0.99  0.97  0.82  0.86  0.80  0.91  0.85  0.70  0.98 ]
[ 0.15  0.60  0.22  0.41  0.91  0.07  0.72  0.73  0.89  0.70  0.13  0.58 ]
[ 0.70  0.74  0.95  0.99  0.52  0.12  0.96  0.26  0.41  0.57  0.21  0.95 ]
[ 0.46  0.72  0.07  0.11  0.54  0.10  0.27  0.10  0.07  0.46  0.70  0.80 ]
[ 0.80  0.59  0.96  0.17  1.00  0.32  0.95  0.98  0.87  0.74  0.19  0.31 ]
[ 0.09  0.31  0.07  0.08  0.57  0.78  0.98  0.93  0.51  0.07  0.88  0.16 ]
[ 0.73  0.89  0.95  0.99  0.95  0.54  0.93  0.10  0.91  0.56  0.33  0.98 ]
[ 0.68  0.61  0.96  0.31  0.62  0.71  0.38  0.97  0.08  0.21  0.96  0.18 ]
[ 0.61  0.95  0.97  0.22  0.92  0.75  0.81  0.19  0.97  0.09  0.96  0.83 ]
[ 0.60  0.92  0.15  0.99  0.80  0.88  0.89  0.97  0.99  0.08  0.25  0.20 ]
[ 0.66  0.99  0.97  0.13  0.63  0.12  0.93  0.12  0.78  0.30  0.95  0.95 ]
[ 0.25  0.23  0.09  0.95  0.51  0.10  0.31  0.23  0.07  0.07  0.48  0.13 ]
[ 0.75  0.81  0.93  0.15  0.96  0.62  0.32  0.09  0.77  0.30  0.88  0.37 ]
[ 0.96  0.95  0.96  0.99  0.99  0.94  0.95  0.25  0.95  0.94  0.98  0.98 ]
[ 0.07  0.81  0.98  0.97  0.84  0.22  0.97  0.90  0.94  0.98  0.99  0.99 ]
[ 0.13  0.11  0.07  0.34  0.55  0.11  0.67  0.37  0.82  0.56  0.52  0.52 ]
[ 0.88  0.86  0.90  0.96  0.97  0.85  0.90  0.89  0.47  0.36  0.17  0.12 ]
[ 0.48  0.82  0.66  0.76  0.83  0.20  0.64  0.65  0.16  0.77  0.50  0.35 ]
[ 0.85  0.89  0.93  0.96  0.91  0.81  0.93  0.92  0.96  0.28  0.88  0.50 ]
[ 0.96  0.82  0.34  0.77  0.76  0.07  0.58  0.83  0.78  0.23  0.73  0.39 ]
[ 0.85  0.87  0.97  0.66  0.93  0.67  0.31  0.64  0.85  0.82  0.46  0.88 ]
[ 0.51  0.21  0.47  0.10  0.34  0.78  0.73  0.09  0.69  0.24  0.44  0.10 ]
[ 0.66  0.90  0.80  0.95  0.91  0.77  0.26  0.86  0.56  0.89  0.44  0.97 ]
[ 0.21  0.13  0.09  0.37  0.51  0.14  0.67  0.13  0.26  0.14  0.11  0.07 ]
[ 0.72  0.87  0.93  0.97  0.97  0.67  0.81  0.94  0.09  0.89  0.77  0.99 ]
[ 0.10  0.07  0.89  0.68  0.08  0.35  0.09  0.59  0.81  0.91  0.13  0.79 ]
[ 0.28  0.85  0.90  0.61  0.97  0.21  0.59  0.37  0.21  0.92  0.83  0.90 ]
[ 0.07  0.24  0.56  0.96  0.91  0.08  0.18  0.08  0.94  0.20  0.07  0.36 ]
[ 0.73  0.78  0.95  0.82  0.71  0.79  0.93  0.86  0.70  0.88  0.52  0.57 ]
[ 0.99  0.68  0.64  0.09  0.11  0.84  0.60  0.74  0.11  0.93  0.63  0.22 ]
[ 0.81  0.71  0.08  0.80  0.98  0.23  0.44  0.81  0.25  0.78  0.71  0.97 ]
[ 0.99  0.94  0.97  0.99  0.86  0.98  0.93  0.94  0.99  0.92  0.91  0.78 ]
[ 0.78  0.90  0.96  0.96  0.90  0.07  0.94  0.07  0.91  0.99  0.99  0.99 ]
[ 0.42  0.88  0.94  0.75  0.86  0.16  0.89  0.96  0.84  0.77  0.66  0.65 ]
[ 0.94  0.92  0.88  0.85  0.76  0.81  0.93  0.82  0.91  0.21  0.86  0.97 ]
[ 0.23  0.90  0.07  0.62  0.90  0.64  0.07  0.77  0.19  0.83  0.76  0.93 ]
[ 0.74  0.92  0.49  0.80  0.92  0.84  1.00  0.97  0.83  0.59  0.94  0.98 ]
[ 0.97  0.97  0.58  0.58  0.12  0.79  0.34  0.84  0.82  0.41  0.67  0.46 ]
[ 0.94  0.96  0.54  0.91  0.50  0.94  0.94  0.48  0.69  0.56  0.83  0.79 ]
[ 0.69  0.94  0.52  0.67  0.96  0.07  0.80  0.58  0.45  0.15  0.92  0.97 ]
[ 0.23  0.95  0.85  0.75  0.86  0.93  0.90  0.95  0.94  0.80  0.99  0.77 ]
[ 0.72  0.07  0.80  0.64  0.45  0.71  0.70  0.96  0.80  0.67  0.93  0.81 ]
[ 0.33  0.97  0.89  0.83  0.82  0.98  0.96  0.23  0.50  0.88  0.76  0.83 ]
[ 0.13  0.33  0.13  0.87  0.74  0.32  0.91  0.09  0.83  0.43  0.59  0.07 ]
[ 0.66  0.46  0.99  0.96  0.96  0.98  0.94  0.64  0.85  0.58  0.86  0.61 ]
[ 0.35  0.95  0.93  0.59  0.93  0.58  0.91  0.70  0.88  0.99  0.43  0.96 ]
[ 0.88  0.85  0.14  0.76  0.98  0.86  0.85  0.92  0.76  0.85  0.87  0.95 ]
[ 0.97  0.56  0.23  0.74  0.77  0.69  0.87  0.86  0.92  0.23  0.75  0.26 ]
[ 0.87  0.46  0.94  0.79  0.96  0.08  0.70  0.94  0.85  0.83  0.71  0.93 ]

01/29 09:57:06 PM | === Batch 9/50
01/29 09:57:07 PM | loss = 0.684 + 0.281 + 0.070 = 1.035
01/29 09:57:08 PM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.04  0.92  0.08  0.66  0.08  0.91  0.04  0.99  0.04  0.19  0.91  0.20 ]
[ 0.96  0.10  0.30  0.99  1.00  0.96  0.79  0.83  0.85  0.98  0.98  0.99 ]
[ 0.10  0.42  0.04  0.42  0.78  0.07  0.28  1.00  0.70  0.07  0.49  0.15 ]
[ 0.76  0.83  0.25  0.98  1.00  0.88  0.94  0.99  0.82  0.27  0.95  0.97 ]
[ 0.48  0.64  0.83  0.21  0.85  0.67  0.04  0.12  0.04  0.83  0.07  0.79 ]
[ 0.99  0.16  0.94  0.99  0.98  0.81  0.86  0.82  0.91  0.86  0.70  0.99 ]
[ 0.09  0.53  0.15  0.31  0.90  0.05  0.75  0.68  0.88  0.65  0.10  0.54 ]
[ 0.63  0.74  0.95  0.99  0.42  0.08  0.97  0.23  0.40  0.56  0.16  0.96 ]
[ 0.45  0.72  0.04  0.07  0.56  0.06  0.21  0.07  0.04  0.40  0.70  0.78 ]
[ 0.79  0.53  0.97  0.16  1.00  0.24  0.95  0.99  0.88  0.76  0.14  0.32 ]
[ 0.05  0.24  0.04  0.05  0.56  0.77  0.98  0.94  0.49  0.04  0.90  0.11 ]
[ 0.67  0.91  0.95  0.99  0.96  0.46  0.93  0.07  0.92  0.57  0.26  0.98 ]
[ 0.64  0.53  0.96  0.28  0.61  0.70  0.29  0.97  0.05  0.16  0.96  0.13 ]
[ 0.53  0.95  0.97  0.18  0.93  0.74  0.79  0.13  0.98  0.06  0.97  0.86 ]
[ 0.61  0.92  0.12  0.99  0.80  0.87  0.86  0.97  0.99  0.05  0.17  0.13 ]
[ 0.58  1.00  0.97  0.09  0.65  0.07  0.94  0.09  0.79  0.24  0.95  0.96 ]
[ 0.19  0.16  0.06  0.96  0.45  0.07  0.24  0.19  0.04  0.04  0.40  0.09 ]
[ 0.70  0.75  0.94  0.10  0.96  0.57  0.23  0.05  0.76  0.25  0.90  0.40 ]
[ 0.96  0.96  0.97  0.99  0.99  0.95  0.96  0.23  0.96  0.95  0.98  0.98 ]
[ 0.04  0.83  0.98  0.97  0.79  0.16  0.97  0.91  0.94  0.99  1.00  0.99 ]
[ 0.08  0.08  0.04  0.32  0.43  0.07  0.70  0.38  0.84  0.49  0.55  0.51 ]
[ 0.90  0.87  0.90  0.96  0.98  0.83  0.92  0.89  0.37  0.28  0.12  0.09 ]
[ 0.40  0.84  0.61  0.78  0.81  0.13  0.62  0.65  0.11  0.81  0.42  0.30 ]
[ 0.87  0.90  0.94  0.97  0.91  0.78  0.94  0.93  0.97  0.20  0.89  0.53 ]
[ 0.97  0.83  0.29  0.76  0.70  0.04  0.59  0.83  0.81  0.17  0.67  0.33 ]
[ 0.86  0.88  0.98  0.59  0.93  0.59  0.27  0.66  0.87  0.77  0.38  0.87 ]
[ 0.49  0.15  0.40  0.08  0.36  0.75  0.71  0.06  0.71  0.19  0.34  0.06 ]
[ 0.63  0.90  0.81  0.94  0.91  0.72  0.19  0.83  0.58  0.89  0.36  0.98 ]
[ 0.15  0.08  0.06  0.27  0.47  0.10  0.59  0.09  0.21  0.09  0.07  0.04 ]
[ 0.70  0.87  0.92  0.97  0.98  0.60  0.83  0.94  0.06  0.89  0.76  1.00 ]
[ 0.07  0.04  0.87  0.63  0.05  0.33  0.06  0.48  0.75  0.89  0.08  0.79 ]
[ 0.21  0.85  0.89  0.58  0.97  0.14  0.51  0.31  0.18  0.93  0.81  0.91 ]
[ 0.04  0.17  0.53  0.96  0.92  0.05  0.12  0.05  0.96  0.17  0.04  0.31 ]
[ 0.70  0.77  0.96  0.81  0.74  0.75  0.94  0.88  0.65  0.88  0.48  0.60 ]
[ 0.99  0.59  0.59  0.05  0.07  0.82  0.50  0.77  0.07  0.93  0.59  0.19 ]
[ 0.81  0.67  0.05  0.80  0.98  0.16  0.37  0.82  0.21  0.75  0.72  0.97 ]
[ 0.99  0.94  0.97  0.99  0.86  0.98  0.93  0.94  0.99  0.93  0.91  0.82 ]
[ 0.75  0.89  0.97  0.97  0.91  0.04  0.94  0.04  0.92  0.99  0.99  0.99 ]
[ 0.32  0.87  0.94  0.70  0.88  0.11  0.88  0.97  0.82  0.71  0.62  0.69 ]
[ 0.95  0.91  0.91  0.88  0.76  0.74  0.94  0.84  0.91  0.18  0.86  0.98 ]
[ 0.16  0.91  0.04  0.61  0.88  0.64  0.04  0.77  0.13  0.86  0.77  0.94 ]
[ 0.70  0.94  0.42  0.81  0.93  0.79  1.00  0.97  0.82  0.59  0.95  0.98 ]
[ 0.98  0.97  0.57  0.48  0.08  0.71  0.27  0.78  0.85  0.33  0.65  0.40 ]
[ 0.95  0.97  0.49  0.92  0.47  0.93  0.94  0.43  0.70  0.51  0.86  0.79 ]
[ 0.67  0.94  0.47  0.71  0.97  0.04  0.77  0.55  0.38  0.11  0.92  0.97 ]
[ 0.21  0.96  0.87  0.79  0.86  0.94  0.90  0.95  0.95  0.80  0.99  0.81 ]
[ 0.64  0.04  0.80  0.59  0.36  0.77  0.65  0.96  0.81  0.60  0.93  0.82 ]
[ 0.34  0.98  0.87  0.80  0.83  0.98  0.97  0.24  0.50  0.91  0.78  0.85 ]
[ 0.09  0.32  0.09  0.85  0.67  0.27  0.92  0.06  0.84  0.36  0.61  0.04 ]
[ 0.71  0.44  0.99  0.97  0.97  0.98  0.95  0.67  0.87  0.47  0.85  0.60 ]
[ 0.32  0.95  0.94  0.50  0.94  0.49  0.90  0.74  0.88  0.99  0.37  0.96 ]
[ 0.89  0.85  0.10  0.69  0.99  0.84  0.87  0.93  0.78  0.87  0.86  0.95 ]
[ 0.97  0.52  0.17  0.74  0.81  0.67  0.86  0.82  0.93  0.18  0.73  0.21 ]
[ 0.82  0.40  0.94  0.82  0.96  0.05  0.59  0.94  0.85  0.86  0.68  0.93 ]

01/29 09:57:08 PM | === Batch 10/50
01/29 09:57:08 PM | loss = 0.802 + 0.018 + 0.066 = 0.886
01/29 09:57:09 PM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.03  0.94  0.05  0.67  0.05  0.92  0.03  1.00  0.03  0.13  0.92  0.16 ]
[ 0.96  0.07  0.30  1.00  1.00  0.97  0.77  0.86  0.85  0.98  0.99  0.99 ]
[ 0.08  0.36  0.03  0.32  0.80  0.05  0.20  1.00  0.69  0.05  0.41  0.13 ]
[ 0.81  0.81  0.21  0.98  1.00  0.89  0.94  0.99  0.83  0.19  0.96  0.98 ]
[ 0.39  0.67  0.86  0.14  0.85  0.70  0.03  0.09  0.03  0.85  0.04  0.80 ]
[ 0.99  0.10  0.94  0.99  0.97  0.81  0.84  0.86  0.91  0.87  0.74  0.99 ]
[ 0.06  0.44  0.09  0.22  0.90  0.03  0.78  0.62  0.85  0.57  0.07  0.51 ]
[ 0.55  0.77  0.96  0.99  0.35  0.05  0.97  0.20  0.40  0.59  0.12  0.97 ]
[ 0.44  0.74  0.03  0.05  0.58  0.04  0.15  0.05  0.03  0.34  0.68  0.75 ]
[ 0.78  0.53  0.97  0.17  1.00  0.18  0.95  0.99  0.89  0.80  0.10  0.34 ]
[ 0.03  0.18  0.03  0.03  0.53  0.77  0.98  0.94  0.49  0.03  0.90  0.07 ]
[ 0.61  0.91  0.96  0.99  0.96  0.38  0.93  0.05  0.92  0.61  0.20  0.99 ]
[ 0.60  0.49  0.97  0.28  0.59  0.66  0.23  0.98  0.03  0.12  0.97  0.09 ]
[ 0.45  0.94  0.98  0.16  0.95  0.71  0.77  0.08  0.98  0.04  0.97  0.88 ]
[ 0.58  0.92  0.10  0.99  0.81  0.84  0.82  0.98  0.99  0.03  0.11  0.08 ]
[ 0.50  1.00  0.98  0.07  0.67  0.05  0.94  0.07  0.78  0.20  0.96  0.97 ]
[ 0.15  0.11  0.04  0.96  0.38  0.05  0.19  0.15  0.03  0.03  0.37  0.06 ]
[ 0.65  0.67  0.94  0.06  0.97  0.52  0.16  0.03  0.75  0.22  0.92  0.45 ]
[ 0.95  0.97  0.97  0.99  0.99  0.95  0.96  0.23  0.97  0.96  0.98  0.98 ]
[ 0.03  0.86  0.98  0.97  0.77  0.11  0.98  0.92  0.94  0.99  1.00  0.99 ]
[ 0.05  0.06  0.03  0.29  0.32  0.05  0.73  0.38  0.83  0.45  0.58  0.45 ]
[ 0.91  0.88  0.90  0.95  0.98  0.79  0.94  0.88  0.28  0.24  0.09  0.08 ]
[ 0.31  0.86  0.54  0.81  0.77  0.09  0.62  0.65  0.08  0.83  0.37  0.25 ]
[ 0.89  0.92  0.94  0.98  0.92  0.73  0.95  0.93  0.97  0.13  0.90  0.56 ]
[ 0.97  0.84  0.24  0.77  0.63  0.03  0.53  0.84  0.82  0.13  0.60  0.25 ]
[ 0.87  0.89  0.98  0.52  0.94  0.50  0.23  0.64  0.89  0.73  0.29  0.85 ]
[ 0.46  0.11  0.32  0.06  0.37  0.72  0.69  0.04  0.70  0.14  0.24  0.04 ]
[ 0.59  0.91  0.83  0.93  0.91  0.65  0.14  0.80  0.61  0.90  0.28  0.98 ]
[ 0.11  0.05  0.04  0.21  0.47  0.07  0.50  0.06  0.16  0.07  0.04  0.03 ]
[ 0.66  0.89  0.92  0.97  0.98  0.51  0.83  0.95  0.05  0.90  0.72  1.00 ]
[ 0.05  0.03  0.84  0.57  0.03  0.27  0.04  0.36  0.68  0.86  0.05  0.78 ]
[ 0.16  0.85  0.88  0.58  0.98  0.10  0.48  0.24  0.15  0.94  0.79  0.91 ]
[ 0.03  0.12  0.46  0.97  0.92  0.03  0.08  0.04  0.97  0.20  0.03  0.24 ]
[ 0.67  0.77  0.96  0.79  0.77  0.69  0.95  0.88  0.59  0.90  0.40  0.62 ]
[ 0.99  0.48  0.53  0.03  0.05  0.80  0.40  0.80  0.04  0.93  0.53  0.18 ]
[ 0.82  0.67  0.03  0.79  0.99  0.11  0.30  0.83  0.17  0.73  0.69  0.98 ]
[ 0.99  0.95  0.98  0.99  0.85  0.98  0.94  0.94  0.99  0.93  0.93  0.82 ]
[ 0.75  0.88  0.98  0.98  0.92  0.03  0.93  0.03  0.92  0.99  0.99  0.99 ]
[ 0.23  0.85  0.95  0.70  0.88  0.07  0.86  0.98  0.82  0.62  0.63  0.76 ]
[ 0.96  0.91  0.92  0.92  0.72  0.69  0.93  0.86  0.91  0.15  0.85  0.98 ]
[ 0.12  0.92  0.03  0.57  0.85  0.60  0.03  0.78  0.10  0.88  0.80  0.95 ]
[ 0.67  0.94  0.42  0.83  0.94  0.75  1.00  0.98  0.83  0.56  0.95  0.99 ]
[ 0.98  0.97  0.60  0.39  0.06  0.66  0.21  0.69  0.86  0.26  0.61  0.32 ]
[ 0.96  0.97  0.44  0.93  0.44  0.93  0.94  0.38  0.70  0.45  0.89  0.79 ]
[ 0.66  0.93  0.48  0.71  0.97  0.03  0.74  0.50  0.32  0.08  0.92  0.98 ]
[ 0.19  0.97  0.87  0.82  0.85  0.95  0.91  0.95  0.95  0.79  0.99  0.84 ]
[ 0.56  0.03  0.79  0.52  0.28  0.81  0.60  0.96  0.82  0.53  0.94  0.82 ]
[ 0.32  0.98  0.84  0.76  0.85  0.98  0.97  0.25  0.51  0.93  0.79  0.86 ]
[ 0.07  0.30  0.06  0.81  0.62  0.23  0.93  0.03  0.83  0.29  0.62  0.03 ]
[ 0.76  0.43  0.99  0.97  0.98  0.99  0.95  0.71  0.88  0.39  0.83  0.61 ]
[ 0.32  0.96  0.94  0.43  0.94  0.43  0.90  0.78  0.88  0.99  0.31  0.97 ]
[ 0.90  0.85  0.06  0.59  0.99  0.82  0.88  0.94  0.82  0.88  0.83  0.96 ]
[ 0.98  0.48  0.12  0.74  0.82  0.66  0.85  0.76  0.94  0.14  0.68  0.18 ]
[ 0.76  0.36  0.94  0.84  0.96  0.03  0.49  0.94  0.81  0.88  0.63  0.94 ]

01/29 09:57:09 PM | === Batch 11/50
01/29 09:57:10 PM | loss = 1.051 + 0.256 + 0.062 = 1.368
01/29 09:57:11 PM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.02  0.95  0.04  0.71  0.03  0.93  0.02  1.00  0.02  0.10  0.93  0.13 ]
[ 0.96  0.05  0.32  1.00  1.00  0.97  0.76  0.90  0.86  0.99  0.99  0.99 ]
[ 0.06  0.34  0.02  0.29  0.80  0.04  0.15  1.00  0.71  0.04  0.36  0.12 ]
[ 0.87  0.83  0.19  0.99  1.00  0.89  0.94  0.99  0.84  0.15  0.96  0.98 ]
[ 0.38  0.73  0.89  0.10  0.84  0.75  0.02  0.08  0.02  0.87  0.03  0.81 ]
[ 0.99  0.06  0.95  0.99  0.98  0.82  0.83  0.89  0.91  0.88  0.79  0.99 ]
[ 0.04  0.42  0.07  0.21  0.90  0.02  0.83  0.62  0.82  0.57  0.06  0.53 ]
[ 0.44  0.81  0.96  1.00  0.38  0.03  0.97  0.18  0.40  0.61  0.10  0.98 ]
[ 0.51  0.78  0.02  0.04  0.64  0.03  0.12  0.04  0.02  0.28  0.71  0.74 ]
[ 0.76  0.57  0.98  0.17  1.00  0.13  0.96  0.99  0.90  0.82  0.08  0.34 ]
[ 0.02  0.15  0.02  0.02  0.55  0.79  0.98  0.95  0.55  0.02  0.90  0.05 ]
[ 0.53  0.92  0.96  1.00  0.97  0.31  0.93  0.04  0.93  0.63  0.19  0.99 ]
[ 0.63  0.48  0.98  0.28  0.61  0.66  0.22  0.98  0.02  0.11  0.97  0.07 ]
[ 0.37  0.92  0.98  0.14  0.96  0.69  0.76  0.05  0.98  0.03  0.98  0.89 ]
[ 0.61  0.91  0.09  0.99  0.83  0.81  0.80  0.98  0.99  0.02  0.08  0.05 ]
[ 0.40  1.00  0.98  0.06  0.67  0.03  0.94  0.05  0.79  0.17  0.97  0.97 ]
[ 0.15  0.09  0.03  0.97  0.37  0.03  0.17  0.15  0.02  0.02  0.35  0.04 ]
[ 0.58  0.56  0.95  0.05  0.97  0.48  0.11  0.02  0.75  0.19  0.93  0.47 ]
[ 0.95  0.97  0.98  0.99  0.99  0.96  0.96  0.25  0.97  0.97  0.99  0.98 ]
[ 0.02  0.88  0.99  0.97  0.80  0.08  0.98  0.92  0.95  0.99  1.00  1.00 ]
[ 0.04  0.04  0.02  0.30  0.28  0.03  0.77  0.41  0.82  0.46  0.63  0.45 ]
[ 0.91  0.90  0.92  0.95  0.98  0.79  0.95  0.88  0.20  0.21  0.06  0.07 ]
[ 0.27  0.89  0.54  0.84  0.76  0.06  0.66  0.66  0.06  0.85  0.35  0.23 ]
[ 0.90  0.93  0.95  0.98  0.94  0.71  0.96  0.94  0.97  0.09  0.90  0.61 ]
[ 0.97  0.85  0.21  0.80  0.57  0.02  0.52  0.86  0.82  0.12  0.58  0.19 ]
[ 0.88  0.91  0.98  0.49  0.95  0.46  0.22  0.67  0.90  0.71  0.23  0.86 ]
[ 0.48  0.08  0.28  0.05  0.34  0.72  0.73  0.02  0.69  0.12  0.20  0.03 ]
[ 0.54  0.92  0.85  0.92  0.92  0.63  0.10  0.79  0.67  0.91  0.23  0.98 ]
[ 0.09  0.03  0.03  0.21  0.54  0.06  0.50  0.05  0.14  0.05  0.03  0.02 ]
[ 0.60  0.90  0.92  0.98  0.99  0.48  0.84  0.95  0.04  0.91  0.71  1.00 ]
[ 0.04  0.02  0.82  0.58  0.02  0.23  0.03  0.36  0.63  0.86  0.04  0.80 ]
[ 0.12  0.85  0.89  0.63  0.98  0.07  0.48  0.19  0.13  0.95  0.75  0.92 ]
[ 0.02  0.08  0.41  0.97  0.93  0.02  0.06  0.03  0.98  0.21  0.02  0.22 ]
[ 0.62  0.78  0.96  0.78  0.81  0.68  0.96  0.89  0.52  0.91  0.36  0.67 ]
[ 0.99  0.44  0.52  0.02  0.03  0.81  0.43  0.84  0.03  0.93  0.51  0.18 ]
[ 0.81  0.68  0.02  0.79  0.99  0.08  0.26  0.84  0.15  0.73  0.70  0.98 ]
[ 0.99  0.96  0.98  1.00  0.84  0.99  0.94  0.94  0.99  0.93  0.94  0.83 ]
[ 0.76  0.88  0.99  0.98  0.92  0.02  0.93  0.02  0.92  1.00  0.99  0.99 ]
[ 0.18  0.85  0.96  0.73  0.88  0.06  0.84  0.98  0.81  0.53  0.67  0.82 ]
[ 0.97  0.91  0.93  0.94  0.72  0.67  0.93  0.89  0.90  0.14  0.83  0.99 ]
[ 0.09  0.92  0.02  0.56  0.83  0.57  0.02  0.80  0.07  0.89  0.84  0.96 ]
[ 0.66  0.95  0.37  0.85  0.95  0.74  1.00  0.98  0.85  0.58  0.96  0.99 ]
[ 0.98  0.97  0.65  0.36  0.04  0.67  0.19  0.72  0.86  0.21  0.60  0.28 ]
[ 0.97  0.98  0.42  0.93  0.46  0.93  0.94  0.38  0.74  0.45  0.91  0.79 ]
[ 0.67  0.93  0.49  0.68  0.98  0.02  0.75  0.49  0.31  0.06  0.93  0.98 ]
[ 0.19  0.97  0.88  0.84  0.84  0.96  0.92  0.96  0.96  0.80  0.99  0.86 ]
[ 0.45  0.02  0.79  0.44  0.26  0.85  0.60  0.97  0.83  0.51  0.95  0.82 ]
[ 0.35  0.99  0.83  0.76  0.87  0.99  0.98  0.24  0.56  0.94  0.80  0.88 ]
[ 0.06  0.27  0.04  0.76  0.63  0.21  0.94  0.02  0.78  0.24  0.57  0.02 ]
[ 0.79  0.43  0.99  0.98  0.98  0.99  0.96  0.71  0.90  0.39  0.80  0.61 ]
[ 0.33  0.96  0.95  0.37  0.94  0.43  0.90  0.82  0.89  0.99  0.29  0.97 ]
[ 0.91  0.85  0.05  0.56  0.99  0.80  0.89  0.94  0.86  0.87  0.81  0.96 ]
[ 0.98  0.41  0.07  0.72  0.81  0.67  0.81  0.78  0.94  0.11  0.61  0.15 ]
[ 0.71  0.33  0.93  0.84  0.96  0.02  0.42  0.94  0.76  0.88  0.61  0.93 ]

01/29 09:57:11 PM | === Batch 12/50
01/29 09:57:11 PM | loss = 0.828 + 0.316 + 0.058 = 1.202
01/29 09:57:12 PM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.01  0.97  0.03  0.75  0.02  0.94  0.01  1.00  0.01  0.08  0.95  0.12 ]
[ 0.96  0.04  0.33  1.00  1.00  0.98  0.75  0.92  0.86  0.99  0.99  0.99 ]
[ 0.05  0.34  0.01  0.30  0.79  0.03  0.13  1.00  0.75  0.03  0.34  0.11 ]
[ 0.91  0.86  0.18  0.99  1.00  0.90  0.95  1.00  0.84  0.13  0.97  0.98 ]
[ 0.42  0.79  0.93  0.08  0.83  0.81  0.01  0.07  0.01  0.88  0.02  0.84 ]
[ 1.00  0.04  0.95  1.00  0.98  0.84  0.81  0.92  0.92  0.89  0.84  0.99 ]
[ 0.03  0.44  0.05  0.21  0.92  0.01  0.87  0.65  0.83  0.59  0.06  0.58 ]
[ 0.34  0.85  0.97  1.00  0.44  0.02  0.97  0.17  0.40  0.63  0.09  0.98 ]
[ 0.60  0.82  0.01  0.03  0.72  0.02  0.11  0.04  0.01  0.22  0.76  0.76 ]
[ 0.73  0.61  0.98  0.19  1.00  0.11  0.96  0.99  0.91  0.83  0.06  0.33 ]
[ 0.01  0.13  0.01  0.02  0.60  0.83  0.98  0.96  0.63  0.01  0.91  0.03 ]
[ 0.44  0.93  0.97  1.00  0.98  0.27  0.94  0.03  0.93  0.63  0.19  0.99 ]
[ 0.68  0.48  0.98  0.27  0.67  0.69  0.25  0.98  0.01  0.11  0.97  0.05 ]
[ 0.29  0.89  0.98  0.13  0.96  0.68  0.76  0.04  0.98  0.02  0.98  0.90 ]
[ 0.68  0.90  0.07  1.00  0.86  0.80  0.79  0.99  0.99  0.02  0.06  0.04 ]
[ 0.32  1.00  0.98  0.05  0.68  0.02  0.95  0.04  0.80  0.14  0.97  0.98 ]
[ 0.17  0.08  0.02  0.97  0.41  0.03  0.16  0.17  0.01  0.01  0.35  0.03 ]
[ 0.50  0.45  0.95  0.03  0.97  0.45  0.08  0.02  0.76  0.16  0.94  0.47 ]
[ 0.96  0.98  0.98  1.00  0.99  0.96  0.96  0.28  0.97  0.97  0.99  0.99 ]
[ 0.01  0.90  0.99  0.97  0.82  0.06  0.98  0.93  0.95  0.99  1.00  1.00 ]
[ 0.03  0.03  0.01  0.32  0.27  0.03  0.82  0.48  0.83  0.47  0.69  0.48 ]
[ 0.92  0.91  0.93  0.95  0.99  0.78  0.96  0.88  0.15  0.21  0.05  0.06 ]
[ 0.27  0.92  0.58  0.87  0.77  0.05  0.71  0.67  0.05  0.87  0.36  0.24 ]
[ 0.92  0.94  0.96  0.99  0.95  0.70  0.97  0.94  0.97  0.06  0.91  0.68 ]
[ 0.98  0.87  0.19  0.84  0.57  0.01  0.54  0.88  0.83  0.13  0.60  0.15 ]
[ 0.89  0.92  0.99  0.50  0.96  0.45  0.23  0.70  0.92  0.73  0.21  0.86 ]
[ 0.53  0.07  0.27  0.04  0.31  0.75  0.79  0.02  0.69  0.10  0.17  0.02 ]
[ 0.51  0.93  0.86  0.92  0.93  0.63  0.08  0.79  0.73  0.92  0.21  0.99 ]
[ 0.07  0.02  0.02  0.23  0.62  0.05  0.50  0.04  0.13  0.04  0.02  0.01 ]
[ 0.57  0.92  0.92  0.98  0.99  0.46  0.85  0.95  0.03  0.92  0.72  1.00 ]
[ 0.03  0.01  0.83  0.63  0.02  0.21  0.02  0.40  0.64  0.87  0.03  0.83 ]
[ 0.10  0.85  0.89  0.69  0.98  0.06  0.47  0.15  0.12  0.96  0.74  0.92 ]
[ 0.01  0.07  0.39  0.98  0.93  0.01  0.04  0.03  0.98  0.20  0.01  0.23 ]
[ 0.59  0.79  0.97  0.79  0.85  0.68  0.96  0.89  0.47  0.93  0.36  0.73 ]
[ 1.00  0.43  0.53  0.02  0.02  0.83  0.49  0.88  0.02  0.93  0.51  0.19 ]
[ 0.81  0.70  0.02  0.81  0.99  0.06  0.24  0.86  0.15  0.73  0.73  0.98 ]
[ 0.99  0.97  0.98  1.00  0.85  0.99  0.94  0.94  1.00  0.94  0.94  0.84 ]
[ 0.75  0.89  0.99  0.98  0.93  0.01  0.92  0.01  0.92  1.00  0.99  0.99 ]
[ 0.15  0.85  0.96  0.78  0.90  0.05  0.85  0.98  0.82  0.48  0.71  0.87 ]
[ 0.97  0.92  0.93  0.95  0.73  0.66  0.93  0.92  0.89  0.15  0.82  0.99 ]
[ 0.07  0.93  0.01  0.59  0.83  0.58  0.01  0.82  0.06  0.90  0.87  0.96 ]
[ 0.64  0.95  0.31  0.86  0.96  0.75  1.00  0.98  0.88  0.63  0.96  0.99 ]
[ 0.99  0.97  0.71  0.34  0.03  0.70  0.19  0.76  0.88  0.17  0.61  0.26 ]
[ 0.97  0.98  0.41  0.93  0.47  0.93  0.95  0.41  0.78  0.49  0.93  0.80 ]
[ 0.72  0.93  0.51  0.66  0.98  0.01  0.77  0.52  0.31  0.05  0.93  0.98 ]
[ 0.19  0.97  0.88  0.85  0.86  0.97  0.93  0.96  0.96  0.79  0.99  0.89 ]
[ 0.35  0.01  0.80  0.41  0.25  0.88  0.60  0.97  0.84  0.52  0.96  0.84 ]
[ 0.40  0.99  0.85  0.79  0.88  0.99  0.98  0.23  0.62  0.95  0.82  0.89 ]
[ 0.05  0.24  0.03  0.74  0.65  0.19  0.95  0.02  0.74  0.21  0.52  0.01 ]
[ 0.83  0.43  0.99  0.98  0.98  0.99  0.97  0.69  0.92  0.42  0.78  0.61 ]
[ 0.33  0.96  0.96  0.34  0.94  0.48  0.90  0.86  0.90  0.99  0.29  0.98 ]
[ 0.92  0.86  0.04  0.53  0.99  0.79  0.90  0.95  0.89  0.86  0.80  0.96 ]
[ 0.98  0.34  0.05  0.71  0.79  0.67  0.77  0.82  0.94  0.10  0.59  0.12 ]
[ 0.67  0.30  0.92  0.84  0.96  0.01  0.38  0.94  0.70  0.86  0.60  0.92 ]

01/29 09:57:12 PM | === Batch 13/50
01/29 09:57:13 PM | loss = 0.490 + 0.258 + 0.054 = 0.802
01/29 09:57:13 PM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.01  0.98  0.03  0.80  0.02  0.95  0.01  1.00  0.01  0.07  0.96  0.11 ]
[ 0.95  0.03  0.36  1.00  1.00  0.98  0.75  0.95  0.87  0.99  0.99  1.00 ]
[ 0.05  0.37  0.01  0.33  0.80  0.03  0.13  1.00  0.79  0.02  0.34  0.11 ]
[ 0.94  0.89  0.18  0.99  1.00  0.91  0.95  1.00  0.84  0.11  0.97  0.98 ]
[ 0.46  0.85  0.95  0.07  0.83  0.85  0.01  0.06  0.01  0.90  0.02  0.87 ]
[ 1.00  0.03  0.96  1.00  0.98  0.85  0.80  0.94  0.93  0.90  0.87  0.99 ]
[ 0.02  0.49  0.04  0.24  0.94  0.01  0.91  0.69  0.84  0.64  0.06  0.64 ]
[ 0.27  0.88  0.97  1.00  0.53  0.02  0.97  0.17  0.43  0.64  0.08  0.98 ]
[ 0.69  0.86  0.01  0.03  0.79  0.02  0.11  0.04  0.01  0.18  0.80  0.78 ]
[ 0.72  0.66  0.98  0.23  1.00  0.09  0.97  0.99  0.92  0.84  0.06  0.33 ]
[ 0.01  0.12  0.01  0.01  0.67  0.86  0.98  0.97  0.71  0.01  0.92  0.03 ]
[ 0.37  0.93  0.97  1.00  0.98  0.22  0.94  0.02  0.94  0.63  0.22  0.99 ]
[ 0.74  0.50  0.98  0.25  0.74  0.74  0.29  0.98  0.01  0.11  0.97  0.05 ]
[ 0.23  0.85  0.98  0.13  0.97  0.66  0.78  0.03  0.98  0.01  0.98  0.91 ]
[ 0.76  0.89  0.07  1.00  0.89  0.79  0.79  0.99  0.99  0.01  0.05  0.03 ]
[ 0.26  1.00  0.98  0.04  0.69  0.02  0.95  0.04  0.81  0.12  0.97  0.98 ]
[ 0.20  0.07  0.01  0.97  0.47  0.02  0.16  0.20  0.01  0.01  0.36  0.03 ]
[ 0.43  0.36  0.96  0.02  0.97  0.41  0.06  0.01  0.76  0.13  0.94  0.47 ]
[ 0.97  0.98  0.99  1.00  0.99  0.97  0.96  0.33  0.97  0.98  0.99  0.99 ]
[ 0.01  0.92  0.99  0.97  0.86  0.05  0.99  0.94  0.95  0.99  1.00  1.00 ]
[ 0.02  0.03  0.01  0.36  0.27  0.02  0.87  0.57  0.85  0.51  0.74  0.53 ]
[ 0.93  0.92  0.94  0.95  0.99  0.79  0.97  0.88  0.11  0.21  0.04  0.05 ]
[ 0.29  0.94  0.63  0.91  0.79  0.04  0.77  0.70  0.05  0.89  0.39  0.27 ]
[ 0.93  0.94  0.96  0.99  0.96  0.70  0.97  0.94  0.97  0.05  0.92  0.76 ]
[ 0.98  0.89  0.19  0.87  0.59  0.01  0.58  0.90  0.84  0.15  0.62  0.13 ]
[ 0.90  0.93  0.99  0.53  0.97  0.45  0.25  0.75  0.93  0.76  0.20  0.86 ]
[ 0.59  0.06  0.28  0.04  0.31  0.79  0.85  0.01  0.70  0.09  0.16  0.01 ]
[ 0.50  0.94  0.87  0.91  0.94  0.64  0.07  0.80  0.78  0.93  0.20  0.99 ]
[ 0.07  0.02  0.01  0.29  0.71  0.04  0.49  0.03  0.13  0.03  0.01  0.01 ]
[ 0.56  0.93  0.92  0.98  0.99  0.46  0.87  0.95  0.03  0.94  0.75  1.00 ]
[ 0.03  0.01  0.86  0.70  0.01  0.21  0.01  0.44  0.68  0.90  0.03  0.87 ]
[ 0.08  0.86  0.91  0.75  0.98  0.05  0.43  0.12  0.11  0.96  0.72  0.93 ]
[ 0.01  0.05  0.38  0.98  0.94  0.01  0.03  0.02  0.99  0.21  0.01  0.24 ]
[ 0.57  0.81  0.97  0.80  0.89  0.68  0.97  0.90  0.43  0.94  0.37  0.79 ]
[ 1.00  0.44  0.56  0.01  0.02  0.86  0.58  0.91  0.01  0.93  0.52  0.21 ]
[ 0.81  0.72  0.01  0.84  0.99  0.04  0.24  0.88  0.14  0.75  0.77  0.98 ]
[ 1.00  0.98  0.99  1.00  0.85  0.99  0.94  0.94  1.00  0.94  0.95  0.85 ]
[ 0.75  0.89  0.99  0.98  0.94  0.01  0.91  0.01  0.93  1.00  0.99  0.99 ]
[ 0.15  0.86  0.97  0.82  0.91  0.04  0.85  0.98  0.83  0.45  0.75  0.92 ]
[ 0.98  0.93  0.94  0.96  0.77  0.67  0.93  0.94  0.89  0.17  0.81  0.99 ]
[ 0.05  0.94  0.01  0.64  0.85  0.62  0.01  0.85  0.05  0.91  0.90  0.97 ]
[ 0.62  0.96  0.27  0.88  0.97  0.77  1.00  0.99  0.89  0.69  0.97  0.99 ]
[ 0.99  0.98  0.77  0.36  0.02  0.71  0.20  0.80  0.90  0.14  0.67  0.26 ]
[ 0.98  0.98  0.42  0.93  0.46  0.93  0.95  0.45  0.82  0.53  0.94  0.82 ]
[ 0.77  0.93  0.55  0.60  0.98  0.01  0.80  0.57  0.34  0.04  0.95  0.98 ]
[ 0.19  0.98  0.89  0.86  0.89  0.97  0.94  0.96  0.97  0.79  0.99  0.90 ]
[ 0.27  0.01  0.82  0.40  0.26  0.91  0.63  0.98  0.85  0.54  0.96  0.86 ]
[ 0.47  0.99  0.86  0.83  0.89  0.99  0.98  0.21  0.67  0.95  0.84  0.90 ]
[ 0.04  0.21  0.03  0.74  0.68  0.18  0.96  0.01  0.70  0.19  0.44  0.01 ]
[ 0.86  0.43  0.99  0.98  0.99  0.99  0.97  0.68  0.93  0.46  0.79  0.60 ]
[ 0.34  0.97  0.97  0.34  0.93  0.54  0.90  0.89  0.92  1.00  0.30  0.98 ]
[ 0.93  0.87  0.04  0.51  0.99  0.78  0.92  0.96  0.92  0.85  0.80  0.96 ]
[ 0.98  0.29  0.04  0.73  0.77  0.67  0.75  0.85  0.94  0.08  0.61  0.11 ]
[ 0.64  0.29  0.90  0.84  0.96  0.01  0.36  0.95  0.64  0.84  0.59  0.92 ]

01/29 09:57:13 PM | === Batch 14/50
01/29 09:57:14 PM | loss = 0.469 + 0.130 + 0.051 = 0.650
01/29 09:57:15 PM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.01  0.98  0.03  0.85  0.01  0.96  0.01  1.00  0.01  0.06  0.97  0.11 ]
[ 0.96  0.02  0.38  1.00  1.00  0.99  0.76  0.96  0.88  0.99  0.99  1.00 ]
[ 0.05  0.43  0.01  0.37  0.83  0.03  0.13  1.00  0.83  0.02  0.36  0.12 ]
[ 0.96  0.91  0.18  0.99  1.00  0.91  0.96  1.00  0.85  0.10  0.97  0.98 ]
[ 0.52  0.90  0.97  0.07  0.85  0.89  0.01  0.06  0.01  0.91  0.02  0.90 ]
[ 1.00  0.02  0.96  1.00  0.98  0.86  0.80  0.96  0.93  0.90  0.90  0.99 ]
[ 0.02  0.56  0.03  0.28  0.95  0.01  0.94  0.75  0.86  0.71  0.06  0.71 ]
[ 0.24  0.90  0.97  1.00  0.62  0.01  0.98  0.18  0.48  0.66  0.07  0.99 ]
[ 0.78  0.90  0.01  0.03  0.85  0.01  0.12  0.04  0.01  0.17  0.85  0.80 ]
[ 0.73  0.70  0.99  0.28  1.00  0.07  0.97  0.99  0.93  0.85  0.06  0.33 ]
[ 0.01  0.11  0.01  0.01  0.75  0.89  0.99  0.97  0.79  0.01  0.93  0.02 ]
[ 0.32  0.94  0.98  1.00  0.98  0.18  0.95  0.02  0.94  0.63  0.26  1.00 ]
[ 0.80  0.56  0.99  0.24  0.80  0.79  0.34  0.99  0.01  0.13  0.98  0.04 ]
[ 0.19  0.80  0.99  0.13  0.97  0.65  0.79  0.02  0.99  0.01  0.98  0.92 ]
[ 0.82  0.88  0.06  1.00  0.91  0.80  0.80  0.99  0.99  0.01  0.04  0.02 ]
[ 0.22  1.00  0.99  0.04  0.70  0.01  0.95  0.03  0.81  0.10  0.98  0.98 ]
[ 0.24  0.06  0.01  0.98  0.54  0.02  0.17  0.25  0.01  0.01  0.41  0.02 ]
[ 0.39  0.28  0.96  0.02  0.98  0.37  0.05  0.01  0.75  0.11  0.94  0.47 ]
[ 0.98  0.98  0.99  1.00  1.00  0.97  0.96  0.38  0.97  0.98  0.99  0.99 ]
[ 0.01  0.93  0.99  0.97  0.89  0.04  0.99  0.94  0.96  0.99  1.00  1.00 ]
[ 0.02  0.02  0.01  0.40  0.27  0.02  0.90  0.66  0.87  0.58  0.79  0.59 ]
[ 0.94  0.93  0.95  0.95  0.99  0.79  0.97  0.88  0.08  0.22  0.03  0.05 ]
[ 0.33  0.96  0.70  0.93  0.81  0.03  0.83  0.72  0.04  0.91  0.43  0.32 ]
[ 0.94  0.95  0.97  0.99  0.97  0.70  0.98  0.95  0.97  0.04  0.93  0.83 ]
[ 0.98  0.90  0.20  0.90  0.64  0.01  0.63  0.92  0.85  0.18  0.67  0.11 ]
[ 0.91  0.93  0.99  0.57  0.98  0.45  0.27  0.80  0.95  0.79  0.19  0.87 ]
[ 0.67  0.06  0.31  0.03  0.33  0.83  0.89  0.01  0.72  0.09  0.16  0.01 ]
[ 0.53  0.94  0.89  0.92  0.95  0.64  0.06  0.82  0.81  0.94  0.20  0.99 ]
[ 0.07  0.01  0.01  0.36  0.79  0.04  0.48  0.03  0.14  0.02  0.01  0.01 ]
[ 0.59  0.94  0.92  0.98  0.99  0.45  0.88  0.96  0.02  0.95  0.77  1.00 ]
[ 0.03  0.01  0.89  0.77  0.01  0.23  0.01  0.51  0.73  0.92  0.02  0.90 ]
[ 0.06  0.87  0.92  0.81  0.99  0.04  0.41  0.10  0.11  0.97  0.72  0.93 ]
[ 0.01  0.05  0.39  0.98  0.95  0.01  0.03  0.02  0.99  0.23  0.01  0.27 ]
[ 0.60  0.82  0.98  0.83  0.91  0.69  0.97  0.91  0.42  0.95  0.37  0.84 ]
[ 1.00  0.46  0.60  0.01  0.01  0.89  0.67  0.93  0.01  0.94  0.55  0.26 ]
[ 0.82  0.74  0.01  0.87  0.99  0.04  0.25  0.89  0.15  0.77  0.79  0.99 ]
[ 1.00  0.98  0.99  1.00  0.86  0.99  0.94  0.95  1.00  0.95  0.96  0.86 ]
[ 0.74  0.90  0.99  0.98  0.94  0.01  0.91  0.01  0.93  1.00  0.99  0.99 ]
[ 0.15  0.89  0.97  0.86  0.92  0.04  0.87  0.99  0.84  0.47  0.80  0.95 ]
[ 0.98  0.93  0.94  0.97  0.81  0.69  0.93  0.96  0.89  0.20  0.81  0.99 ]
[ 0.04  0.95  0.01  0.70  0.86  0.67  0.01  0.88  0.04  0.92  0.92  0.97 ]
[ 0.62  0.96  0.25  0.90  0.98  0.79  1.00  0.99  0.91  0.74  0.97  0.99 ]
[ 0.99  0.98  0.82  0.39  0.02  0.73  0.21  0.83  0.92  0.12  0.73  0.28 ]
[ 0.98  0.98  0.43  0.94  0.48  0.94  0.95  0.48  0.86  0.58  0.95  0.83 ]
[ 0.82  0.94  0.59  0.58  0.99  0.01  0.84  0.62  0.41  0.03  0.96  0.98 ]
[ 0.21  0.98  0.90  0.87  0.92  0.98  0.94  0.97  0.97  0.80  0.99  0.92 ]
[ 0.23  0.01  0.84  0.41  0.27  0.93  0.64  0.98  0.86  0.57  0.97  0.88 ]
[ 0.53  0.99  0.88  0.86  0.90  0.99  0.99  0.20  0.71  0.95  0.86  0.91 ]
[ 0.04  0.19  0.02  0.76  0.70  0.17  0.97  0.01  0.65  0.18  0.40  0.01 ]
[ 0.88  0.43  0.99  0.98  0.99  0.99  0.97  0.68  0.94  0.50  0.79  0.61 ]
[ 0.34  0.97  0.97  0.36  0.93  0.60  0.90  0.92  0.93  1.00  0.32  0.98 ]
[ 0.94  0.87  0.03  0.50  0.99  0.77  0.93  0.97  0.94  0.84  0.82  0.96 ]
[ 0.99  0.25  0.03  0.75  0.75  0.67  0.73  0.87  0.94  0.08  0.62  0.10 ]
[ 0.66  0.28  0.89  0.84  0.96  0.01  0.37  0.96  0.58  0.82  0.56  0.91 ]

01/29 09:57:15 PM | === Batch 15/50
01/29 09:57:15 PM | loss = 0.319 + 0.037 + 0.047 = 0.403
01/29 09:57:16 PM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.00  0.99  0.02  0.87  0.01  0.96  0.00  1.00  0.00  0.05  0.98  0.11 ]
[ 0.96  0.02  0.34  1.00  1.00  0.99  0.78  0.97  0.89  0.99  1.00  1.00 ]
[ 0.05  0.49  0.00  0.41  0.84  0.02  0.13  1.00  0.86  0.02  0.36  0.13 ]
[ 0.97  0.93  0.17  1.00  1.00  0.92  0.96  1.00  0.84  0.09  0.98  0.99 ]
[ 0.56  0.93  0.98  0.06  0.84  0.91  0.00  0.06  0.00  0.92  0.01  0.91 ]
[ 1.00  0.02  0.96  1.00  0.99  0.87  0.81  0.97  0.94  0.91  0.92  1.00 ]
[ 0.01  0.61  0.03  0.32  0.96  0.01  0.95  0.79  0.88  0.75  0.06  0.77 ]
[ 0.22  0.92  0.97  1.00  0.70  0.01  0.98  0.18  0.50  0.67  0.07  0.99 ]
[ 0.84  0.92  0.00  0.03  0.88  0.01  0.12  0.04  0.01  0.15  0.88  0.79 ]
[ 0.75  0.74  0.99  0.32  1.00  0.06  0.98  0.99  0.93  0.86  0.05  0.31 ]
[ 0.01  0.11  0.00  0.01  0.79  0.91  0.99  0.98  0.83  0.00  0.93  0.02 ]
[ 0.31  0.94  0.98  1.00  0.99  0.15  0.95  0.02  0.95  0.63  0.30  1.00 ]
[ 0.85  0.59  0.99  0.23  0.83  0.82  0.40  0.99  0.01  0.14  0.98  0.04 ]
[ 0.17  0.72  0.99  0.13  0.98  0.64  0.82  0.02  0.99  0.01  0.99  0.93 ]
[ 0.87  0.87  0.06  1.00  0.93  0.80  0.82  0.99  0.99  0.01  0.04  0.02 ]
[ 0.20  1.00  0.99  0.04  0.68  0.01  0.95  0.03  0.82  0.09  0.98  0.99 ]
[ 0.28  0.05  0.01  0.98  0.58  0.01  0.17  0.31  0.01  0.01  0.42  0.02 ]
[ 0.38  0.22  0.97  0.01  0.98  0.35  0.04  0.01  0.76  0.09  0.94  0.45 ]
[ 0.98  0.99  0.99  1.00  1.00  0.97  0.97  0.41  0.97  0.98  0.99  0.99 ]
[ 0.00  0.94  0.99  0.97  0.92  0.04  0.99  0.95  0.96  0.99  1.00  1.00 ]
[ 0.02  0.02  0.00  0.42  0.28  0.01  0.92  0.74  0.89  0.61  0.82  0.62 ]
[ 0.95  0.93  0.96  0.95  0.99  0.79  0.98  0.88  0.07  0.23  0.03  0.05 ]
[ 0.36  0.97  0.75  0.95  0.83  0.02  0.87  0.73  0.04  0.92  0.47  0.34 ]
[ 0.95  0.95  0.97  0.99  0.97  0.70  0.98  0.95  0.97  0.03  0.93  0.88 ]
[ 0.99  0.91  0.22  0.92  0.69  0.00  0.68  0.93  0.86  0.22  0.70  0.10 ]
[ 0.92  0.94  0.99  0.61  0.98  0.45  0.30  0.83  0.95  0.82  0.19  0.87 ]
[ 0.72  0.06  0.33  0.03  0.35  0.86  0.92  0.01  0.74  0.08  0.16  0.01 ]
[ 0.56  0.95  0.89  0.92  0.96  0.65  0.05  0.84  0.84  0.95  0.19  0.99 ]
[ 0.07  0.01  0.01  0.43  0.84  0.04  0.46  0.02  0.15  0.02  0.01  0.00 ]
[ 0.63  0.94  0.92  0.98  0.99  0.45  0.89  0.96  0.02  0.95  0.80  1.00 ]
[ 0.02  0.00  0.91  0.81  0.01  0.24  0.01  0.56  0.76  0.93  0.02  0.92 ]
[ 0.05  0.87  0.92  0.84  0.99  0.04  0.38  0.08  0.10  0.97  0.73  0.93 ]
[ 0.01  0.04  0.40  0.98  0.96  0.01  0.02  0.02  0.99  0.23  0.00  0.27 ]
[ 0.63  0.83  0.98  0.85  0.93  0.70  0.97  0.92  0.42  0.95  0.39  0.87 ]
[ 1.00  0.45  0.62  0.01  0.01  0.91  0.74  0.94  0.01  0.95  0.57  0.28 ]
[ 0.84  0.76  0.01  0.89  0.99  0.03  0.26  0.90  0.15  0.77  0.82  0.99 ]
[ 1.00  0.99  0.99  1.00  0.86  0.99  0.94  0.95  1.00  0.95  0.96  0.87 ]
[ 0.74  0.90  0.99  0.98  0.95  0.00  0.91  0.00  0.93  1.00  0.99  0.99 ]
[ 0.14  0.91  0.97  0.88  0.93  0.04  0.88  0.99  0.85  0.48  0.84  0.96 ]
[ 0.98  0.94  0.94  0.98  0.83  0.71  0.93  0.97  0.90  0.22  0.83  0.99 ]
[ 0.03  0.96  0.00  0.75  0.87  0.72  0.00  0.89  0.03  0.93  0.94  0.98 ]
[ 0.63  0.96  0.23  0.91  0.98  0.82  1.00  0.99  0.92  0.78  0.97  0.99 ]
[ 0.99  0.98  0.86  0.41  0.02  0.74  0.20  0.85  0.93  0.11  0.78  0.29 ]
[ 0.98  0.98  0.44  0.94  0.47  0.94  0.95  0.51  0.89  0.61  0.96  0.85 ]
[ 0.86  0.94  0.62  0.55  0.99  0.00  0.86  0.65  0.47  0.03  0.96  0.98 ]
[ 0.23  0.98  0.91  0.87  0.94  0.98  0.95  0.97  0.97  0.80  1.00  0.93 ]
[ 0.19  0.00  0.86  0.40  0.27  0.94  0.63  0.98  0.86  0.60  0.97  0.89 ]
[ 0.54  0.99  0.89  0.89  0.90  0.99  0.99  0.19  0.74  0.96  0.87  0.92 ]
[ 0.04  0.18  0.02  0.79  0.72  0.16  0.98  0.01  0.60  0.17  0.37  0.00 ]
[ 0.89  0.43  0.99  0.99  0.99  0.99  0.98  0.68  0.95  0.54  0.79  0.61 ]
[ 0.33  0.97  0.98  0.37  0.92  0.64  0.91  0.94  0.94  1.00  0.32  0.98 ]
[ 0.95  0.87  0.03  0.49  0.99  0.76  0.94  0.97  0.95  0.82  0.82  0.96 ]
[ 0.99  0.22  0.02  0.75  0.74  0.65  0.70  0.89  0.94  0.07  0.63  0.09 ]
[ 0.68  0.28  0.88  0.85  0.96  0.01  0.40  0.96  0.54  0.80  0.57  0.89 ]

01/29 09:57:16 PM | === Batch 16/50
01/29 09:57:17 PM | loss = 0.368 + 0.127 + 0.045 = 0.540
01/29 09:57:18 PM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.00  0.99  0.02  0.89  0.01  0.97  0.00  1.00  0.00  0.04  0.98  0.10 ]
[ 0.96  0.01  0.31  1.00  1.00  0.99  0.80  0.98  0.89  0.99  1.00  1.00 ]
[ 0.04  0.55  0.00  0.44  0.86  0.02  0.14  1.00  0.88  0.02  0.33  0.13 ]
[ 0.98  0.94  0.17  1.00  1.00  0.93  0.97  1.00  0.85  0.09  0.98  0.99 ]
[ 0.57  0.94  0.98  0.05  0.84  0.93  0.00  0.05  0.00  0.93  0.01  0.93 ]
[ 1.00  0.02  0.96  1.00  0.99  0.88  0.81  0.98  0.94  0.91  0.94  1.00 ]
[ 0.01  0.63  0.02  0.34  0.97  0.01  0.97  0.82  0.89  0.78  0.06  0.81 ]
[ 0.22  0.93  0.98  1.00  0.77  0.01  0.98  0.18  0.53  0.68  0.06  0.99 ]
[ 0.88  0.93  0.00  0.02  0.91  0.01  0.12  0.04  0.00  0.13  0.91  0.77 ]
[ 0.78  0.76  0.99  0.37  1.00  0.05  0.98  0.99  0.94  0.86  0.05  0.29 ]
[ 0.00  0.10  0.00  0.01  0.82  0.93  0.99  0.98  0.87  0.00  0.93  0.01 ]
[ 0.30  0.95  0.98  1.00  0.99  0.13  0.96  0.01  0.95  0.62  0.34  1.00 ]
[ 0.88  0.60  0.99  0.21  0.86  0.84  0.44  0.99  0.01  0.14  0.98  0.04 ]
[ 0.15  0.67  0.99  0.13  0.98  0.62  0.84  0.02  0.99  0.01  0.99  0.93 ]
[ 0.90  0.86  0.05  1.00  0.94  0.80  0.83  1.00  0.99  0.01  0.03  0.01 ]
[ 0.19  1.00  0.99  0.03  0.66  0.01  0.95  0.02  0.82  0.08  0.98  0.99 ]
[ 0.33  0.05  0.01  0.98  0.61  0.01  0.16  0.35  0.00  0.00  0.41  0.02 ]
[ 0.38  0.18  0.97  0.01  0.98  0.32  0.03  0.00  0.75  0.08  0.94  0.42 ]
[ 0.99  0.99  0.99  1.00  1.00  0.97  0.97  0.42  0.97  0.99  0.99  0.99 ]
[ 0.00  0.95  0.99  0.98  0.93  0.03  0.99  0.95  0.97  0.99  1.00  1.00 ]
[ 0.01  0.02  0.00  0.41  0.28  0.01  0.94  0.79  0.90  0.62  0.84  0.63 ]
[ 0.95  0.94  0.96  0.96  0.99  0.79  0.98  0.88  0.05  0.22  0.02  0.05 ]
[ 0.37  0.98  0.79  0.96  0.84  0.02  0.89  0.72  0.04  0.93  0.49  0.34 ]
[ 0.96  0.96  0.97  1.00  0.98  0.70  0.99  0.95  0.98  0.02  0.94  0.91 ]
[ 0.99  0.92  0.22  0.93  0.73  0.00  0.71  0.93  0.87  0.26  0.74  0.09 ]
[ 0.93  0.95  0.99  0.63  0.99  0.45  0.32  0.86  0.96  0.83  0.18  0.87 ]
[ 0.77  0.05  0.34  0.02  0.36  0.88  0.94  0.01  0.75  0.07  0.14  0.01 ]
[ 0.61  0.95  0.89  0.93  0.96  0.66  0.04  0.84  0.85  0.95  0.19  0.99 ]
[ 0.06  0.01  0.01  0.47  0.87  0.04  0.44  0.02  0.15  0.02  0.01  0.00 ]
[ 0.67  0.95  0.91  0.98  0.99  0.45  0.90  0.96  0.02  0.96  0.81  1.00 ]
[ 0.02  0.00  0.93  0.85  0.01  0.24  0.01  0.59  0.77  0.94  0.02  0.94 ]
[ 0.05  0.87  0.93  0.87  0.99  0.03  0.35  0.06  0.10  0.98  0.73  0.93 ]
[ 0.00  0.03  0.41  0.99  0.96  0.00  0.02  0.02  0.99  0.25  0.00  0.26 ]
[ 0.68  0.84  0.98  0.87  0.95  0.71  0.98  0.92  0.44  0.96  0.40  0.90 ]
[ 1.00  0.43  0.64  0.01  0.01  0.93  0.80  0.95  0.01  0.95  0.58  0.29 ]
[ 0.86  0.78  0.01  0.91  1.00  0.02  0.27  0.91  0.14  0.78  0.84  0.99 ]
[ 1.00  0.99  0.99  1.00  0.87  0.99  0.93  0.96  1.00  0.95  0.97  0.88 ]
[ 0.75  0.90  0.99  0.98  0.96  0.00  0.91  0.00  0.93  1.00  0.99  0.99 ]
[ 0.13  0.92  0.98  0.90  0.93  0.04  0.89  0.99  0.85  0.47  0.86  0.97 ]
[ 0.99  0.94  0.94  0.98  0.86  0.74  0.94  0.98  0.90  0.25  0.84  0.99 ]
[ 0.03  0.96  0.00  0.79  0.87  0.74  0.00  0.90  0.03  0.94  0.95  0.98 ]
[ 0.63  0.96  0.23  0.92  0.99  0.84  1.00  0.99  0.93  0.81  0.97  0.99 ]
[ 0.99  0.98  0.89  0.42  0.01  0.76  0.19  0.87  0.94  0.09  0.82  0.30 ]
[ 0.99  0.99  0.45  0.94  0.45  0.94  0.96  0.54  0.91  0.63  0.96  0.86 ]
[ 0.88  0.95  0.64  0.51  0.99  0.00  0.87  0.66  0.53  0.03  0.97  0.98 ]
[ 0.26  0.98  0.92  0.88  0.95  0.98  0.95  0.97  0.97  0.79  1.00  0.94 ]
[ 0.17  0.00  0.87  0.37  0.27  0.95  0.63  0.99  0.87  0.57  0.98  0.90 ]
[ 0.53  0.99  0.90  0.90  0.90  0.99  0.99  0.18  0.76  0.96  0.88  0.92 ]
[ 0.03  0.17  0.02  0.82  0.74  0.15  0.98  0.01  0.55  0.16  0.33  0.00 ]
[ 0.90  0.43  1.00  0.99  0.99  0.99  0.98  0.67  0.95  0.57  0.79  0.60 ]
[ 0.31  0.98  0.98  0.37  0.92  0.67  0.90  0.95  0.94  1.00  0.31  0.98 ]
[ 0.96  0.86  0.02  0.47  0.99  0.74  0.94  0.98  0.96  0.81  0.83  0.96 ]
[ 0.99  0.19  0.02  0.73  0.74  0.64  0.68  0.90  0.94  0.06  0.64  0.08 ]
[ 0.71  0.27  0.87  0.86  0.96  0.00  0.43  0.97  0.51  0.78  0.55  0.88 ]

01/29 09:57:18 PM | === Batch 17/50
01/29 09:57:18 PM | loss = 0.564 + 0.179 + 0.043 = 0.786
01/29 09:57:19 PM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.00  0.99  0.02  0.90  0.01  0.97  0.00  1.00  0.00  0.04  0.99  0.10 ]
[ 0.97  0.01  0.28  1.00  1.00  0.99  0.82  0.98  0.90  0.99  1.00  1.00 ]
[ 0.04  0.58  0.00  0.46  0.88  0.02  0.13  1.00  0.89  0.01  0.29  0.13 ]
[ 0.98  0.95  0.16  1.00  1.00  0.93  0.97  1.00  0.85  0.08  0.98  0.99 ]
[ 0.54  0.96  0.99  0.05  0.82  0.94  0.00  0.05  0.00  0.94  0.01  0.93 ]
[ 1.00  0.01  0.96  1.00  0.99  0.88  0.82  0.98  0.95  0.91  0.95  1.00 ]
[ 0.01  0.63  0.02  0.35  0.97  0.00  0.97  0.85  0.90  0.80  0.06  0.83 ]
[ 0.22  0.94  0.98  1.00  0.82  0.01  0.98  0.17  0.55  0.69  0.05  0.99 ]
[ 0.90  0.95  0.00  0.02  0.93  0.01  0.12  0.03  0.00  0.11  0.93  0.73 ]
[ 0.81  0.77  0.99  0.40  1.00  0.04  0.98  0.99  0.94  0.87  0.05  0.25 ]
[ 0.00  0.10  0.00  0.00  0.84  0.94  0.99  0.98  0.89  0.00  0.93  0.01 ]
[ 0.30  0.95  0.98  1.00  0.99  0.12  0.96  0.01  0.95  0.61  0.37  1.00 ]
[ 0.90  0.59  0.99  0.19  0.88  0.85  0.48  0.99  0.00  0.14  0.98  0.04 ]
[ 0.14  0.61  0.99  0.12  0.98  0.64  0.85  0.01  0.99  0.01  0.99  0.93 ]
[ 0.92  0.85  0.05  1.00  0.95  0.78  0.84  1.00  0.99  0.00  0.03  0.01 ]
[ 0.18  1.00  0.99  0.03  0.63  0.01  0.96  0.02  0.82  0.07  0.98  0.99 ]
[ 0.36  0.04  0.01  0.98  0.61  0.01  0.15  0.38  0.00  0.00  0.38  0.01 ]
[ 0.39  0.14  0.97  0.01  0.98  0.32  0.03  0.00  0.74  0.07  0.94  0.39 ]
[ 0.99  0.99  0.99  1.00  1.00  0.97  0.97  0.43  0.97  0.99  0.99  0.99 ]
[ 0.00  0.96  0.99  0.98  0.94  0.03  0.99  0.95  0.97  0.99  1.00  1.00 ]
[ 0.01  0.02  0.00  0.37  0.27  0.01  0.95  0.83  0.90  0.62  0.84  0.61 ]
[ 0.96  0.95  0.97  0.96  0.99  0.80  0.98  0.87  0.04  0.21  0.02  0.05 ]
[ 0.37  0.98  0.81  0.97  0.85  0.02  0.91  0.69  0.03  0.94  0.51  0.32 ]
[ 0.97  0.96  0.97  1.00  0.98  0.71  0.99  0.95  0.98  0.02  0.94  0.94 ]
[ 0.99  0.92  0.22  0.94  0.78  0.00  0.73  0.94  0.87  0.29  0.76  0.08 ]
[ 0.94  0.95  0.99  0.65  0.99  0.45  0.34  0.88  0.96  0.84  0.17  0.89 ]
[ 0.81  0.05  0.35  0.02  0.35  0.90  0.95  0.01  0.73  0.06  0.13  0.01 ]
[ 0.63  0.96  0.89  0.93  0.97  0.67  0.04  0.84  0.85  0.95  0.19  0.99 ]
[ 0.06  0.01  0.01  0.49  0.89  0.03  0.43  0.02  0.13  0.02  0.01  0.00 ]
[ 0.70  0.95  0.91  0.99  0.99  0.45  0.91  0.96  0.02  0.96  0.83  1.00 ]
[ 0.02  0.00  0.94  0.88  0.00  0.24  0.01  0.60  0.77  0.95  0.02  0.95 ]
[ 0.04  0.88  0.93  0.89  0.99  0.03  0.29  0.05  0.09  0.98  0.73  0.94 ]
[ 0.00  0.03  0.40  0.99  0.96  0.00  0.02  0.02  1.00  0.26  0.00  0.24 ]
[ 0.71  0.85  0.98  0.88  0.96  0.72  0.98  0.93  0.45  0.96  0.41  0.92 ]
[ 1.00  0.39  0.66  0.00  0.01  0.94  0.83  0.96  0.00  0.95  0.58  0.29 ]
[ 0.87  0.80  0.00  0.92  1.00  0.02  0.28  0.92  0.12  0.78  0.86  0.99 ]
[ 1.00  0.99  0.99  1.00  0.88  0.99  0.93  0.96  1.00  0.96  0.97  0.88 ]
[ 0.77  0.90  0.99  0.99  0.96  0.00  0.91  0.00  0.94  1.00  0.99  0.99 ]
[ 0.12  0.92  0.98  0.91  0.93  0.03  0.90  0.99  0.84  0.45  0.87  0.98 ]
[ 0.99  0.94  0.95  0.99  0.88  0.75  0.94  0.98  0.90  0.27  0.83  0.99 ]
[ 0.02  0.96  0.00  0.82  0.88  0.76  0.00  0.91  0.03  0.95  0.96  0.98 ]
[ 0.64  0.97  0.22  0.94  0.99  0.86  1.00  0.99  0.94  0.84  0.97  0.99 ]
[ 0.99  0.99  0.91  0.42  0.01  0.77  0.17  0.88  0.94  0.08  0.85  0.31 ]
[ 0.99  0.99  0.43  0.94  0.42  0.95  0.96  0.56  0.93  0.64  0.97  0.87 ]
[ 0.90  0.94  0.65  0.48  0.99  0.00  0.88  0.67  0.61  0.02  0.97  0.99 ]
[ 0.30  0.98  0.92  0.89  0.96  0.98  0.96  0.98  0.97  0.78  1.00  0.95 ]
[ 0.15  0.00  0.88  0.35  0.26  0.95  0.62  0.99  0.87  0.53  0.98  0.90 ]
[ 0.52  0.99  0.90  0.91  0.90  0.99  0.99  0.19  0.78  0.96  0.89  0.93 ]
[ 0.03  0.16  0.01  0.84  0.75  0.13  0.98  0.01  0.48  0.15  0.30  0.00 ]
[ 0.91  0.42  1.00  0.99  0.99  0.99  0.98  0.67  0.96  0.58  0.81  0.58 ]
[ 0.29  0.98  0.98  0.35  0.92  0.68  0.90  0.96  0.95  1.00  0.30  0.98 ]
[ 0.96  0.84  0.02  0.42  1.00  0.72  0.95  0.98  0.97  0.79  0.84  0.95 ]
[ 0.99  0.17  0.01  0.70  0.74  0.62  0.66  0.90  0.94  0.05  0.63  0.07 ]
[ 0.74  0.26  0.87  0.86  0.97  0.00  0.46  0.97  0.50  0.76  0.49  0.87 ]

01/29 09:57:19 PM | === Batch 18/50
01/29 09:57:20 PM | loss = 0.336 + 0.198 + 0.041 = 0.574
01/29 09:57:21 PM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.00  0.99  0.02  0.90  0.01  0.97  0.00  1.00  0.00  0.03  0.99  0.09 ]
[ 0.97  0.01  0.23  1.00  1.00  0.99  0.83  0.99  0.90  0.99  1.00  1.00 ]
[ 0.04  0.59  0.00  0.48  0.89  0.02  0.13  1.00  0.90  0.01  0.25  0.12 ]
[ 0.99  0.96  0.16  1.00  1.00  0.93  0.97  1.00  0.84  0.08  0.98  0.99 ]
[ 0.50  0.96  0.99  0.04  0.79  0.95  0.00  0.04  0.00  0.94  0.01  0.94 ]
[ 1.00  0.01  0.96  1.00  0.99  0.88  0.83  0.98  0.95  0.91  0.96  1.00 ]
[ 0.01  0.62  0.02  0.35  0.98  0.00  0.98  0.86  0.91  0.81  0.05  0.85 ]
[ 0.22  0.95  0.98  1.00  0.86  0.01  0.98  0.16  0.56  0.70  0.05  0.99 ]
[ 0.92  0.95  0.00  0.02  0.94  0.01  0.12  0.03  0.00  0.10  0.94  0.68 ]
[ 0.83  0.77  0.99  0.42  1.00  0.04  0.98  0.99  0.95  0.88  0.05  0.22 ]
[ 0.00  0.09  0.00  0.00  0.85  0.95  0.99  0.99  0.91  0.00  0.93  0.01 ]
[ 0.30  0.95  0.98  1.00  0.99  0.12  0.97  0.01  0.95  0.61  0.41  1.00 ]
[ 0.92  0.57  0.99  0.17  0.89  0.86  0.50  0.99  0.00  0.13  0.98  0.03 ]
[ 0.13  0.61  0.99  0.11  0.98  0.65  0.85  0.01  0.99  0.00  0.99  0.94 ]
[ 0.93  0.84  0.04  1.00  0.96  0.77  0.85  1.00  1.00  0.00  0.02  0.01 ]
[ 0.17  1.00  0.99  0.03  0.59  0.01  0.96  0.02  0.82  0.06  0.98  0.99 ]
[ 0.37  0.04  0.00  0.98  0.61  0.01  0.13  0.40  0.00  0.00  0.34  0.01 ]
[ 0.41  0.12  0.97  0.01  0.98  0.32  0.02  0.00  0.73  0.06  0.94  0.36 ]
[ 0.99  0.99  0.99  1.00  1.00  0.97  0.97  0.41  0.97  0.99  0.99  0.99 ]
[ 0.00  0.96  0.99  0.98  0.95  0.03  0.99  0.95  0.97  0.99  1.00  1.00 ]
[ 0.01  0.01  0.00  0.32  0.25  0.01  0.96  0.86  0.91  0.59  0.85  0.59 ]
[ 0.97  0.95  0.97  0.96  0.99  0.80  0.98  0.86  0.04  0.19  0.02  0.04 ]
[ 0.35  0.98  0.82  0.97  0.86  0.01  0.93  0.66  0.03  0.94  0.53  0.29 ]
[ 0.97  0.97  0.97  1.00  0.99  0.71  0.99  0.95  0.98  0.02  0.95  0.95 ]
[ 0.99  0.92  0.22  0.94  0.81  0.00  0.74  0.94  0.87  0.31  0.77  0.07 ]
[ 0.95  0.96  0.99  0.67  0.99  0.44  0.34  0.89  0.96  0.84  0.15  0.90 ]
[ 0.84  0.05  0.35  0.02  0.36  0.91  0.96  0.00  0.72  0.06  0.11  0.00 ]
[ 0.68  0.96  0.87  0.94  0.97  0.68  0.04  0.84  0.85  0.96  0.18  0.99 ]
[ 0.06  0.01  0.00  0.47  0.91  0.03  0.41  0.02  0.12  0.01  0.00  0.00 ]
[ 0.74  0.96  0.90  0.99  0.99  0.44  0.92  0.96  0.01  0.97  0.84  1.00 ]
[ 0.02  0.00  0.95  0.90  0.00  0.24  0.01  0.59  0.76  0.96  0.01  0.95 ]
[ 0.04  0.88  0.93  0.90  0.99  0.02  0.25  0.04  0.07  0.98  0.72  0.94 ]
[ 0.00  0.03  0.39  0.99  0.97  0.00  0.01  0.02  1.00  0.26  0.00  0.20 ]
[ 0.76  0.86  0.98  0.89  0.96  0.72  0.98  0.93  0.48  0.97  0.41  0.94 ]
[ 1.00  0.35  0.68  0.00  0.01  0.94  0.86  0.97  0.00  0.95  0.56  0.27 ]
[ 0.89  0.82  0.00  0.93  1.00  0.02  0.28  0.93  0.10  0.78  0.87  0.99 ]
[ 1.00  0.99  0.99  1.00  0.89  0.99  0.92  0.96  1.00  0.96  0.97  0.88 ]
[ 0.79  0.90  0.99  0.99  0.97  0.00  0.91  0.00  0.94  1.00  0.99  0.99 ]
[ 0.11  0.93  0.98  0.92  0.93  0.03  0.90  0.99  0.82  0.42  0.87  0.98 ]
[ 0.99  0.94  0.95  0.99  0.89  0.77  0.94  0.98  0.91  0.30  0.82  0.99 ]
[ 0.02  0.97  0.00  0.84  0.89  0.77  0.00  0.91  0.02  0.96  0.97  0.98 ]
[ 0.66  0.97  0.22  0.95  0.99  0.87  1.00  0.99  0.94  0.88  0.97  0.99 ]
[ 0.99  0.99  0.93  0.41  0.01  0.78  0.16  0.88  0.95  0.07  0.88  0.33 ]
[ 0.99  0.99  0.40  0.95  0.37  0.95  0.96  0.57  0.94  0.63  0.97  0.88 ]
[ 0.91  0.94  0.67  0.47  0.99  0.00  0.88  0.66  0.68  0.02  0.98  0.99 ]
[ 0.34  0.98  0.93  0.90  0.97  0.99  0.96  0.98  0.97  0.76  1.00  0.96 ]
[ 0.14  0.00  0.88  0.31  0.25  0.96  0.60  0.99  0.87  0.48  0.98  0.91 ]
[ 0.50  0.99  0.91  0.91  0.90  0.99  0.99  0.19  0.80  0.96  0.90  0.94 ]
[ 0.03  0.15  0.01  0.87  0.75  0.12  0.99  0.00  0.42  0.14  0.29  0.00 ]
[ 0.92  0.42  1.00  0.99  0.99  0.99  0.98  0.67  0.96  0.58  0.82  0.56 ]
[ 0.27  0.98  0.99  0.33  0.92  0.66  0.90  0.97  0.95  1.00  0.28  0.98 ]
[ 0.96  0.83  0.02  0.35  1.00  0.70  0.95  0.98  0.97  0.77  0.83  0.95 ]
[ 0.99  0.16  0.01  0.67  0.76  0.58  0.65  0.90  0.95  0.05  0.61  0.06 ]
[ 0.77  0.27  0.88  0.87  0.97  0.00  0.50  0.97  0.52  0.75  0.44  0.86 ]

01/29 09:57:21 PM | === Batch 19/50
01/29 09:57:21 PM | loss = 0.485 + 0.192 + 0.039 = 0.717
01/29 09:57:22 PM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.00  1.00  0.02  0.90  0.01  0.97  0.00  1.00  0.00  0.03  0.99  0.08 ]
[ 0.97  0.01  0.18  1.00  1.00  0.99  0.85  0.99  0.90  0.99  1.00  1.00 ]
[ 0.03  0.59  0.00  0.47  0.90  0.01  0.12  1.00  0.91  0.01  0.20  0.12 ]
[ 0.99  0.96  0.15  1.00  1.00  0.92  0.97  1.00  0.84  0.07  0.98  0.99 ]
[ 0.45  0.97  0.99  0.04  0.76  0.96  0.00  0.04  0.00  0.94  0.01  0.95 ]
[ 1.00  0.01  0.96  1.00  0.99  0.88  0.84  0.99  0.95  0.92  0.97  1.00 ]
[ 0.01  0.60  0.01  0.33  0.98  0.00  0.98  0.88  0.92  0.82  0.05  0.86 ]
[ 0.21  0.95  0.98  1.00  0.88  0.00  0.98  0.15  0.55  0.72  0.04  0.99 ]
[ 0.94  0.96  0.00  0.02  0.95  0.00  0.12  0.03  0.00  0.09  0.95  0.62 ]
[ 0.85  0.76  0.99  0.42  1.00  0.03  0.99  0.99  0.95  0.89  0.05  0.19 ]
[ 0.00  0.08  0.00  0.00  0.85  0.95  0.99  0.99  0.92  0.00  0.93  0.01 ]
[ 0.30  0.96  0.99  1.00  0.99  0.11  0.97  0.01  0.96  0.61  0.44  1.00 ]
[ 0.93  0.54  0.99  0.15  0.90  0.86  0.50  0.99  0.00  0.12  0.98  0.03 ]
[ 0.12  0.67  0.99  0.10  0.98  0.64  0.85  0.01  0.99  0.00  0.99  0.94 ]
[ 0.94  0.82  0.04  1.00  0.97  0.78  0.86  1.00  1.00  0.00  0.02  0.01 ]
[ 0.17  1.00  0.99  0.02  0.57  0.01  0.96  0.02  0.82  0.05  0.98  0.99 ]
[ 0.37  0.03  0.00  0.98  0.59  0.01  0.11  0.40  0.00  0.00  0.29  0.01 ]
[ 0.42  0.11  0.97  0.01  0.98  0.31  0.02  0.00  0.72  0.05  0.94  0.34 ]
[ 0.99  0.99  0.99  1.00  1.00  0.97  0.97  0.37  0.97  0.99  0.99  1.00 ]
[ 0.00  0.97  0.99  0.98  0.96  0.02  0.99  0.95  0.98  0.99  1.00  1.00 ]
[ 0.01  0.01  0.00  0.27  0.23  0.01  0.96  0.87  0.91  0.54  0.86  0.57 ]
[ 0.97  0.96  0.97  0.96  0.99  0.80  0.99  0.86  0.03  0.16  0.02  0.04 ]
[ 0.34  0.99  0.83  0.98  0.86  0.01  0.94  0.61  0.03  0.95  0.53  0.24 ]
[ 0.97  0.97  0.97  1.00  0.99  0.70  0.99  0.95  0.98  0.01  0.95  0.96 ]
[ 0.99  0.91  0.21  0.95  0.84  0.00  0.76  0.94  0.87  0.33  0.78  0.07 ]
[ 0.95  0.96  0.99  0.67  0.99  0.43  0.33  0.90  0.96  0.85  0.14  0.91 ]
[ 0.85  0.04  0.36  0.02  0.37  0.91  0.96  0.00  0.70  0.05  0.10  0.00 ]
[ 0.73  0.96  0.86  0.94  0.98  0.69  0.03  0.84  0.85  0.96  0.17  0.99 ]
[ 0.05  0.01  0.00  0.44  0.92  0.03  0.38  0.01  0.10  0.01  0.00  0.00 ]
[ 0.78  0.96  0.88  0.99  1.00  0.43  0.93  0.96  0.01  0.97  0.85  1.00 ]
[ 0.02  0.00  0.95  0.92  0.00  0.23  0.00  0.57  0.75  0.96  0.01  0.96 ]
[ 0.03  0.88  0.93  0.91  0.99  0.02  0.23  0.03  0.06  0.98  0.70  0.94 ]
[ 0.00  0.02  0.38  0.99  0.97  0.00  0.01  0.02  1.00  0.26  0.00  0.17 ]
[ 0.80  0.86  0.98  0.90  0.97  0.72  0.98  0.93  0.48  0.97  0.42  0.95 ]
[ 1.00  0.31  0.69  0.00  0.01  0.95  0.87  0.97  0.00  0.95  0.54  0.24 ]
[ 0.91  0.83  0.00  0.94  1.00  0.01  0.27  0.93  0.08  0.77  0.88  0.99 ]
[ 1.00  0.99  0.99  1.00  0.90  1.00  0.92  0.96  1.00  0.96  0.97  0.89 ]
[ 0.80  0.90  1.00  0.99  0.97  0.00  0.91  0.00  0.95  1.00  0.99  0.99 ]
[ 0.10  0.93  0.98  0.92  0.93  0.03  0.90  0.99  0.81  0.40  0.88  0.99 ]
[ 0.99  0.94  0.95  0.99  0.90  0.78  0.95  0.99  0.92  0.31  0.80  0.99 ]
[ 0.02  0.97  0.00  0.85  0.90  0.79  0.00  0.91  0.02  0.96  0.97  0.98 ]
[ 0.66  0.97  0.21  0.95  0.99  0.88  1.00  1.00  0.95  0.91  0.97  0.99 ]
[ 0.99  0.99  0.95  0.39  0.01  0.80  0.16  0.88  0.95  0.06  0.89  0.34 ]
[ 0.99  0.99  0.37  0.95  0.32  0.95  0.96  0.59  0.95  0.62  0.97  0.88 ]
[ 0.92  0.94  0.68  0.48  0.99  0.00  0.88  0.64  0.72  0.02  0.98  0.99 ]
[ 0.38  0.98  0.94  0.91  0.97  0.99  0.96  0.98  0.97  0.76  1.00  0.96 ]
[ 0.13  0.00  0.87  0.29  0.23  0.96  0.58  0.99  0.87  0.40  0.98  0.91 ]
[ 0.49  1.00  0.91  0.92  0.90  0.99  0.99  0.20  0.82  0.97  0.91  0.94 ]
[ 0.02  0.16  0.01  0.89  0.74  0.11  0.99  0.00  0.38  0.13  0.28  0.00 ]
[ 0.92  0.42  1.00  0.99  0.99  0.99  0.98  0.67  0.97  0.57  0.82  0.53 ]
[ 0.25  0.98  0.99  0.31  0.92  0.62  0.90  0.97  0.95  1.00  0.26  0.98 ]
[ 0.97  0.80  0.01  0.29  1.00  0.69  0.96  0.98  0.97  0.76  0.82  0.95 ]
[ 0.99  0.14  0.01  0.65  0.78  0.55  0.65  0.90  0.96  0.04  0.58  0.06 ]
[ 0.79  0.26  0.90  0.89  0.97  0.00  0.53  0.97  0.55  0.75  0.37  0.86 ]

01/29 09:57:22 PM | === Batch 20/50
01/29 09:57:23 PM | loss = 0.499 + 0.170 + 0.038 = 0.707
01/29 09:57:23 PM | === Batch 21/50
01/29 09:57:24 PM | loss = 0.387 + 0.136 + 0.037 = 0.560
01/29 09:57:25 PM | === Batch 22/50
01/29 09:57:25 PM | loss = 0.372 + 0.091 + 0.036 = 0.499
01/29 09:57:26 PM | === Batch 23/50
01/29 09:57:27 PM | loss = 0.582 + 0.037 + 0.035 = 0.654
01/29 09:57:27 PM | === Batch 24/50
01/29 09:57:28 PM | loss = 0.435 + 0.025 + 0.034 = 0.495
01/29 09:57:29 PM | === Batch 25/50
01/29 09:57:30 PM | loss = 0.708 + 0.039 + 0.033 = 0.780
01/29 09:57:30 PM | === Batch 26/50
01/29 09:57:31 PM | loss = 0.385 + 0.010 + 0.032 = 0.427
01/29 09:57:32 PM | === Batch 27/50
01/29 09:57:32 PM | loss = 0.294 + 0.040 + 0.030 = 0.365
01/29 09:57:33 PM | === Batch 28/50
01/29 09:57:34 PM | loss = 0.373 + 0.067 + 0.029 = 0.469
01/29 09:57:35 PM | === Batch 29/50
01/29 09:57:35 PM | loss = 0.366 + 0.075 + 0.029 = 0.469
01/29 09:57:36 PM | === Batch 30/50
01/29 09:57:36 PM | loss = 0.505 + 0.068 + 0.028 = 0.601
01/29 09:57:37 PM | === Batch 31/50
01/29 09:57:38 PM | loss = 0.210 + 0.048 + 0.027 = 0.285
01/29 09:57:39 PM | === Batch 32/50
01/29 09:57:39 PM | loss = 0.326 + 0.015 + 0.027 = 0.368
01/29 09:57:40 PM | === Batch 33/50
01/29 09:57:41 PM | loss = 0.193 + 0.032 + 0.026 = 0.252
01/29 09:57:41 PM | === Batch 34/50
01/29 09:57:42 PM | loss = 0.458 + 0.051 + 0.026 = 0.534
01/29 09:57:43 PM | === Batch 35/50
01/29 09:57:43 PM | loss = 0.447 + 0.037 + 0.025 = 0.510
01/29 09:57:44 PM | === Batch 36/50
01/29 09:57:45 PM | loss = 0.302 + 0.004 + 0.025 = 0.330
01/29 09:57:45 PM | === Batch 37/50
01/29 09:57:46 PM | loss = 0.483 + 0.020 + 0.024 = 0.528
01/29 09:57:47 PM | === Batch 38/50
01/29 09:57:47 PM | loss = 0.403 + 0.025 + 0.023 = 0.452
01/29 09:57:48 PM | === Batch 39/50
01/29 09:57:49 PM | loss = 0.256 + 0.017 + 0.023 = 0.296
01/29 09:57:50 PM | === Batch 40/50
01/29 09:57:50 PM | loss = 0.215 + 0.000 + 0.023 = 0.238
01/29 09:57:51 PM | === Batch 41/50
01/29 09:57:51 PM | loss = 0.260 + 0.035 + 0.022 = 0.317
01/29 09:57:52 PM | === Batch 42/50
01/29 09:57:53 PM | loss = 0.420 + 0.042 + 0.022 = 0.483
01/29 09:57:54 PM | === Batch 43/50
01/29 09:57:54 PM | loss = 0.501 + 0.026 + 0.022 = 0.549
01/29 09:57:55 PM | === Batch 44/50
01/29 09:57:56 PM | loss = 0.281 + 0.008 + 0.021 = 0.311
01/29 09:57:56 PM | === Batch 45/50
01/29 09:57:57 PM | loss = 0.422 + 0.022 + 0.021 = 0.465
01/29 09:57:58 PM | === Batch 46/50
01/29 09:57:58 PM | loss = 0.376 + 0.025 + 0.021 = 0.421
01/29 09:57:59 PM | === Batch 47/50
01/29 09:58:00 PM | loss = 0.300 + 0.017 + 0.020 = 0.337
01/29 09:58:00 PM | === Batch 48/50
01/29 09:58:01 PM | loss = 0.408 + 0.000 + 0.020 = 0.428
01/29 09:58:02 PM | === Batch 49/50
01/29 09:58:02 PM | loss = 0.381 + 0.003 + 0.020 = 0.403
01/29 09:58:03 PM | === Batch 50/50
01/29 09:58:04 PM | loss = 0.240 + 0.006 + 0.020 = 0.266
01/29 09:58:05 PM | ===
Best loss was 0.24 at iteration 40

01/29 09:58:05 PM | Looking for optimal threshold...
01/29 09:58:05 PM | Testing threshold 0.5
01/29 09:58:05 PM | Distance to target: 1,470,976
01/29 09:58:05 PM | Testing threshold 0.75
01/29 09:58:05 PM | Distance to target: 3,772,288
01/29 09:58:05 PM | Testing threshold 0.625
01/29 09:58:05 PM | Distance to target: 351,424
01/29 09:58:05 PM | Testing threshold 0.5625
01/29 09:58:05 PM | Distance to target: 457,024
01/29 09:58:05 PM | Testing threshold 0.59375
01/29 09:58:05 PM | Distance to target: 103,552
01/29 09:58:05 PM | Testing threshold 0.609375
01/29 09:58:05 PM | Distance to target: 31,168
01/29 09:58:07 PM | attribution_score[0:12]: 
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.00  1.00  0.00  1.00  0.00  1.00  0.00  1.00  0.00  0.00  1.00  0.00 ]
[ 1.00  0.00  0.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.00  1.00  0.00  0.00  1.00  0.00  0.00  1.00  1.00  0.00  0.00  0.00 ]
[ 1.00  1.00  0.00  1.00  1.00  1.00  1.00  1.00  1.00  0.00  1.00  1.00 ]
[ 0.00  1.00  1.00  0.00  1.00  1.00  0.00  0.00  0.00  1.00  0.00  1.00 ]
[ 1.00  0.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.00  0.00  0.00  0.00  1.00  0.00  1.00  1.00  1.00  1.00  0.00  1.00 ]
[ 1.00  1.00  1.00  1.00  1.00  0.00  1.00  0.00  0.00  1.00  0.00  1.00 ]
[ 1.00  1.00  0.00  0.00  1.00  0.00  0.00  0.00  0.00  0.00  1.00  1.00 ]
[ 1.00  0.00  1.00  0.00  1.00  0.00  1.00  1.00  1.00  1.00  0.00  0.00 ]
[ 0.00  0.00  0.00  0.00  1.00  1.00  1.00  1.00  1.00  0.00  1.00  0.00 ]
[ 1.00  1.00  1.00  1.00  1.00  0.00  1.00  0.00  1.00  1.00  0.00  1.00 ]
[ 1.00  0.00  1.00  0.00  1.00  1.00  0.00  1.00  0.00  0.00  1.00  0.00 ]
[ 0.00  1.00  1.00  0.00  1.00  0.00  1.00  0.00  1.00  0.00  1.00  1.00 ]
[ 1.00  1.00  0.00  1.00  1.00  1.00  1.00  1.00  1.00  0.00  0.00  0.00 ]
[ 0.00  1.00  1.00  0.00  1.00  0.00  1.00  0.00  1.00  0.00  1.00  1.00 ]
[ 0.00  0.00  0.00  1.00  0.00  0.00  0.00  0.00  0.00  0.00  0.00  0.00 ]
[ 1.00  0.00  1.00  0.00  1.00  0.00  0.00  0.00  1.00  0.00  1.00  0.00 ]
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  0.00  1.00  1.00  1.00  1.00 ]
[ 0.00  1.00  1.00  1.00  1.00  0.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.00  0.00  0.00  0.00  0.00  0.00  1.00  1.00  1.00  0.00  1.00  0.00 ]
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  0.00  0.00  0.00  0.00 ]
[ 0.00  1.00  1.00  1.00  1.00  0.00  1.00  1.00  0.00  1.00  0.00  0.00 ]
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  0.00  1.00  1.00 ]
[ 1.00  1.00  0.00  1.00  1.00  0.00  1.00  1.00  1.00  0.00  1.00  0.00 ]
[ 1.00  1.00  1.00  1.00  1.00  0.00  0.00  1.00  1.00  1.00  0.00  1.00 ]
[ 1.00  0.00  0.00  0.00  0.00  1.00  1.00  0.00  1.00  0.00  0.00  0.00 ]
[ 1.00  1.00  1.00  1.00  1.00  1.00  0.00  1.00  1.00  1.00  0.00  1.00 ]
[ 0.00  0.00  0.00  0.00  1.00  0.00  0.00  0.00  0.00  0.00  0.00  0.00 ]
[ 1.00  1.00  1.00  1.00  1.00  0.00  1.00  1.00  0.00  1.00  1.00  1.00 ]
[ 0.00  0.00  1.00  1.00  0.00  0.00  0.00  0.00  1.00  1.00  0.00  1.00 ]
[ 0.00  1.00  1.00  1.00  1.00  0.00  0.00  0.00  0.00  1.00  0.00  1.00 ]
[ 0.00  0.00  0.00  1.00  1.00  0.00  0.00  0.00  1.00  0.00  0.00  0.00 ]
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  0.00  1.00  0.00  1.00 ]
[ 1.00  0.00  0.00  0.00  0.00  1.00  1.00  1.00  0.00  1.00  0.00  0.00 ]
[ 1.00  1.00  0.00  1.00  1.00  0.00  0.00  1.00  0.00  1.00  1.00  1.00 ]
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 1.00  1.00  1.00  1.00  1.00  0.00  1.00  0.00  1.00  1.00  1.00  1.00 ]
[ 0.00  1.00  1.00  1.00  1.00  0.00  1.00  1.00  1.00  0.00  1.00  1.00 ]
[ 1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  0.00  0.00  1.00 ]
[ 0.00  1.00  0.00  1.00  1.00  1.00  0.00  1.00  0.00  1.00  1.00  1.00 ]
[ 0.00  1.00  0.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 1.00  1.00  1.00  0.00  0.00  1.00  0.00  1.00  1.00  0.00  1.00  0.00 ]
[ 1.00  1.00  0.00  1.00  0.00  1.00  1.00  1.00  1.00  0.00  1.00  1.00 ]
[ 1.00  1.00  1.00  1.00  1.00  0.00  1.00  0.00  1.00  0.00  1.00  1.00 ]
[ 0.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.00  0.00  0.00  0.00  0.00  1.00  0.00  1.00  1.00  0.00  1.00  1.00 ]
[ 0.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00 ]
[ 0.00  0.00  0.00  1.00  0.00  0.00  1.00  0.00  0.00  0.00  0.00  0.00 ]
[ 1.00  0.00  1.00  1.00  1.00  1.00  1.00  1.00  1.00  0.00  0.00  0.00 ]
[ 0.00  1.00  1.00  0.00  1.00  1.00  1.00  1.00  1.00  1.00  0.00  1.00 ]
[ 1.00  1.00  0.00  0.00  1.00  1.00  1.00  1.00  1.00  0.00  0.00  1.00 ]
[ 1.00  0.00  0.00  0.00  1.00  0.00  1.00  1.00  1.00  0.00  0.00  0.00 ]
[ 1.00  0.00  1.00  1.00  1.00  0.00  0.00  1.00  1.00  1.00  0.00  1.00 ]

01/29 09:58:07 PM | ResNet(
  (conv1): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(16, 7, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(7, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(7, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (1): BasicBlock(
      (conv1): Conv2d(16, 6, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(6, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(6, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (2): BasicBlock(
      (conv1): Conv2d(16, 7, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(7, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(7, 15, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(15, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (3): BasicBlock(
      (conv1): Conv2d(16, 6, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(6, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(6, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (4): BasicBlock(
      (conv1): Conv2d(16, 6, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(6, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(6, 11, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(11, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (5): BasicBlock(
      (conv1): Conv2d(16, 6, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(6, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(6, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (6): BasicBlock(
      (conv1): Conv2d(16, 9, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(9, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(9, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (7): BasicBlock(
      (conv1): Conv2d(16, 9, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(9, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(9, 11, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(11, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (8): BasicBlock(
      (conv1): Conv2d(16, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(2, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(2, 9, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(9, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(16, 30, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(30, 30, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(30, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): LambdaLayer()
    )
    (1): BasicBlock(
      (conv1): Conv2d(32, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(12, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(12, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (2): BasicBlock(
      (conv1): Conv2d(32, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(14, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(26, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (3): BasicBlock(
      (conv1): Conv2d(32, 14, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(14, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(14, 27, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(27, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (4): BasicBlock(
      (conv1): Conv2d(32, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(13, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(26, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (5): BasicBlock(
      (conv1): Conv2d(32, 9, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(9, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(9, 24, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (6): BasicBlock(
      (conv1): Conv2d(32, 11, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(11, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(11, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(18, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (7): BasicBlock(
      (conv1): Conv2d(32, 10, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(10, 23, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(23, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (8): BasicBlock(
      (conv1): Conv2d(32, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(13, 22, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(22, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(32, 60, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(60, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(60, 59, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(59, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): LambdaLayer()
    )
    (1): BasicBlock(
      (conv1): Conv2d(64, 43, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(43, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(43, 49, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(49, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (2): BasicBlock(
      (conv1): Conv2d(64, 42, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(42, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(42, 50, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(50, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (3): BasicBlock(
      (conv1): Conv2d(64, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(36, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(36, 50, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(50, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (4): BasicBlock(
      (conv1): Conv2d(64, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(44, 57, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(57, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (5): BasicBlock(
      (conv1): Conv2d(64, 38, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(38, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(38, 52, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(52, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (6): BasicBlock(
      (conv1): Conv2d(64, 41, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(41, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(41, 47, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(47, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (7): BasicBlock(
      (conv1): Conv2d(64, 43, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(43, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(43, 40, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(40, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
    (8): BasicBlock(
      (conv1): Conv2d(64, 44, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(44, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu1): ReLU(inplace=True)
      (conv2): Conv2d(44, 29, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(29, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu2): ReLU(inplace=True)
      (shortcut): Sequential()
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
  (linear): Linear(in_features=64, out_features=10, bias=True)
)
01/29 09:58:10 PM | ----------------------------------------
01/29 09:58:10 PM | Performances input model:
01/29 09:58:10 PM |  - flops: 126,554,816
01/29 09:58:10 PM |  - params: 853,018
01/29 09:58:10 PM |  - accuracy: 93.2699966430664
01/29 09:58:10 PM | ----------------------------------------
01/29 09:58:10 PM | Performances pseudo-pruned model:
01/29 09:58:10 PM |  - flops: 126,554,816
01/29 09:58:10 PM |  - params: 853,018
01/29 09:58:10 PM |  - accuracy: 77.56999969482422
01/29 09:58:10 PM | ----------------------------------------
01/29 09:58:10 PM | Performances pruned model:
01/29 09:58:10 PM |  - flops: 55,808,832
01/29 09:58:10 PM |  - params: 457,142
01/29 09:58:10 PM |  - accuracy: 77.56999969482422
01/29 09:58:10 PM | ----------------------------------------
01/29 09:58:10 PM | Total time: 83.11s
